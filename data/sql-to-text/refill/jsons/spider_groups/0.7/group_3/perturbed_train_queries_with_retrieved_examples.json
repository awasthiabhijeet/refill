{
    "SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the title, id, and description of the movie with the greatest number of actors?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most number of actors or actresses? List the film name, film id and description.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and nationality of the architect who built most mills?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the manager's first name, last name and id who won the most manager award?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Which 3 players won the most player awards? List their full name and id.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the first name, last name and id for the top three players won the most player awards.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the source for the most number of flight routes.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name, phone number and email address for the customer with the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer last name, id and phone number with most number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id and full name of the customer with the most accounts.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id, first and last name with most number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name , T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and IATA code of the airport that had most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the destination of the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport that the most routes end at?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the ids, types, and details of the organization with the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport from most of the routes start?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Return the id and full name of the customer who has the fewest accounts.",
            "ted": 0.025
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which staff handled least number of payments? List the full name and the id.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the customer id, first and last name with least number of accounts.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the full name and customer id of the customer with the fewest accounts.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the customer first, last name and id with least number of accounts.",
            "ted": 0.025
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the full name and staff id of the staff who has handled the fewest payments.",
            "ted": 0.025
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address , count( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address , count( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 3",
            "question": "What is the name, address, and number of students in the departments that have the 3 most students?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.first_name , T2.last_name , count( T1.reports_to ) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count( T1.reports_to ) DESC LIMIT 1",
            "question": "What are the first and last names of all the employees and how many people report to them?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.first_name , T2.last_name , count( T1.reports_to ) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count( T1.reports_to ) DESC LIMIT 1",
            "question": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , COUNT( * ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT( * ) DESC LIMIT 10",
            "question": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , COUNT( * ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT( * ) DESC LIMIT 10",
            "question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.service_id , T1.service_details , count( * ) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the maximum number that a certain service is provided? List the service id, details and number.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.city , count( * ) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city has the most addresses? List the city name, number of addresses, and city id.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.city , count( * ) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum( amount ) ASC LIMIT 1",
            "question": "What is the full name and id of the customer who has the lowest total amount of payment?",
            "ted": 0.05
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum( amount ) ASC LIMIT 1",
            "question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.",
            "ted": 0.05
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , SUM( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM( T2.total ) DESC LIMIT 10",
            "question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , SUM( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM( T2.total ) DESC LIMIT 10",
            "question": "What are the top 10 customers' first and last names with the highest gross sales, and also what are the sales?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name , T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC",
            "question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.",
            "ted": 0.1
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name , T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC",
            "question": "What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?",
            "ted": 0.1
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and builder of the railway that are associated with the most trains.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has the most problems? Give me the number of problems and the product name.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many problems does the product with the most problems have? List the number of the problems and product name.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and address of the department that has the highest number of students.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "Find the names of the top 10 airlines that operate the most number of routes.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date for the invoice with most number of transactions?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the description and code of the service type that is performed the most times.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the description and code of the type of service that is performed the most often?",
            "ted": 0.1
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and country for the artist with most number of exhibitions?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "For the airline ids with the top 10 most routes operated, what are their names?",
            "ted": 0.1
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and details of the investor that has the largest number of transactions.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
            "question": "Show the id and details for the investors who have the top 3 number of transactions.",
            "ted": 0.1
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and hours for the project which has the most scientists assigned to it?",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the salaray and name of the employee that is certified to fly the most planes?",
            "ted": 0.1
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and hours of project that has the most number of scientists.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
            "ted": 0.1
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the salary and name of the employee who has the most number of aircraft certificates?",
            "ted": 0.1
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the first and last name of the faculty who has the most students?",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name of employee who supported the most number of customers.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description and code of the attraction type most tourist attractions belong to.",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the full name of the employee who has the most customers?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the faculty participating in the most activities?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student participating in the most activities?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Tell me the first and last name of the student who has the most activities.",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
            "ted": 0.1
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student who played the most sports?",
            "ted": 0.1
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first name and last name of the student who have most number of sports?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give me the the first and last name of the faculty who advises the most students.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
            "ted": 0.1
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T1.club_id , T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many gold medals has the club with the most coaches won?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name and id of the college that has the most baseball players.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and max speed of the storm that affected the most regions.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the storm name and max speed which affected the greatest number of regions?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and first name of the student that has the most number of assessment notes?",
            "ted": 0.1
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which student visited restaurant most often? List student's first name and last name.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the student ID and login name of the student with the most course enrollments",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the student ID and login name of the student who are enrolled in the most courses?",
            "ted": 0.1
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.product_name , T1.product_price FROM products AS T1 JOIN regular_order_products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and price of the product that has been ordered the greatest number of times.",
            "ted": 0.1
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the browser that is compatible with the most web accelerators?",
            "ted": 0.1
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that has been reviewed the most?",
            "ted": 0.1
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that is rated by most of times?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the full name and id of the college with the largest number of baseball players?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type and id of the organization that has the most research staff?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and last name of the student that has the most behavior incidents?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details and id of the project with the most outcomes?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the code and description of the most frequent behavior incident type?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and address of the department with the most students?",
            "ted": 0.1
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.booking_id , T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the full names of the 3 instructors who teach the most courses?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the first and last names of the instructors who teach the top 3 number of courses?",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most copies in the inventory? List both title and id.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which project made the most number of outcomes? List the project details and the project id.",
            "ted": 0.1
        }
    ],
    "SELECT Age , Hometown FROM teacher": [
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "List all document type codes and document type names.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "Show the delegate and committee information of elections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "What are the delegate and committee information for each election record?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "Show all calendar dates and day Numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "What are all the calendar dates and day Numbers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "Show the ids and names of all documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "What are the reigns and days held of all wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "What are all the document type codes and document type names?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "What are the ids and details of all statements?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title , Issues FROM book",
            "question": "What are the title and issues of the books?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , Age FROM journalist",
            "question": "What are the nationalities and ages of journalists?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction , share_count FROM TRANSACTIONS",
            "question": "Show all date and share count of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "What are the names and locations of all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "List all location codes and location names.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "What are all the location codes and location names?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "Show the name and location for all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "What are the characters and duration of actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "What are the ids and names for each of the documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "List all statement ids and statement details.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "What are the name and population of each county?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "Show the county name and population of all counties.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT POSITION , Team FROM pilot",
            "question": "What are the positions and teams of pilots?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the type and nationality of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the types and nationalities of every ship?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "What are the authors of submissions and their colleges?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "What are the names and locations of all enzymes listed?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "List the names and the locations that the enzymes can make an effect.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "For each submission, show the author and their affiliated college.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
            "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "What are the themes and locations of parties?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "Give me the theme and location of each party.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , Industry FROM company",
            "question": "What are the headquarters and industries of all companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date , LOCATION FROM performance",
            "question": "What are the dates and locations of performances?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "What are the low and high estimates of film markets?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "Return the low and high estimates for all film markets.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "Show all account ids and account details.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "What are the ids and details of all accounts?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "Return the characters and durations for each actor.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Gender , Occupation FROM player",
            "question": "What are the gender and occupation of players?",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Memory_in_G , Carrier FROM phone",
            "question": "What are the memories and carriers of phones?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT lot_details , investor_id FROM LOTS",
            "question": "Return the lot details and investor ids.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "What are the names and distances for all airplanes?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT cell_mobile_number , email_address FROM STUDENTS",
            "question": "Return the cell phone number and email address for all students.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Leader_Name , College_Location FROM college",
            "question": "Show the leader names and locations of colleges.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name , Country FROM member",
            "question": "What are the names and countries of members?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT local_authority , services FROM station",
            "question": "list the local authorities and services provided by all stations.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Name , Arrival FROM train",
            "question": "What are the names and arrival times of trains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "Show the names and details of all the staff members.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "What is the name and detail of each staff member?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Wheels , LOCATION FROM railway",
            "question": "List the wheels and locations of the railways.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "What are the full names of all students",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "Show first name and last name for all students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "What are the allergies and their types?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "What are the first and last names for all customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "Show all allergies and their types.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "List the first name and last name of all customers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "What are the names and location of the wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "Give the names and locations of all wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "Show name and distance for all aircrafts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "What are the planned delivery date and actual delivery date for each booking?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types and countries of competitions?",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name , Product_Type_Code FROM Products",
            "question": "What are the names and type codes of products?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "What are the title and director of each film?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "Show the title and director for all films.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Date , Venue FROM debate",
            "question": "What are the date and venue of each debate?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "List ids and details for all projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "What are the ids and details for each project?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "List all budget type codes and descriptions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "What are the type codes and descriptions of each budget type?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name , Age FROM editor",
            "question": "What are the names and ages of editors?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "What are the names and buying prices of all the products?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "Return the names and typical buying prices for all products.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name , LOCATION FROM festival_detail",
            "question": "What are the names and locations of festivals?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "List the grapes and appelations of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "What are the grapes and appelations of each wine?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "List the names and scores of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "What are the names and scores of all wines?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "List the area and county of all appelations.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "What are the areas and counties for all appelations?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types of every competition and in which countries are they located?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_id , receipt_date FROM Documents",
            "question": "List all document ids and receipt dates of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "Show the reign and days held of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "Tell me the the claim date and settlement date for each settlement case.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Show the players and the years played.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Who are the different players and how many years has each played?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT service_id , event_details FROM EVENTS",
            "question": "List the service id and details for the events.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "What are the first names and last names of all the guests?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "What are the names and prices of all products in the store?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "Return the first names and last names of all guests",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "Return the dates of ceremony and the results of all music festivals",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "What are the start date and end date of each apartment booking?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "What are the log id and entry description of each problem?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "Show the start dates and end dates of all the apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT LENGTH , Height FROM roller_coaster",
            "question": "What are the lengths and heights of roller coasters?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "List the companies and the investors of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "What are the companies and investors that correspond to each entrepreneur?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What is the team and starting year for each technician?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "List all the log ids and their descriptions from the problem logs.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What are the team and starting year of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "Return the apartment number and the number of rooms for each apartment.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "What are the apartment number and the room count of each apartment?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name , Party FROM representative",
            "question": "What are the names and parties of representatives?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "What are the dates of ceremony and results for each music festival?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "Show the country name and capital of all countries.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "What are the claim dates and settlement dates of all the settlements?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Date , Vote_Percent FROM election",
            "question": "List the dates and vote percents of elections.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "Select the names and the prices of all the products in the store.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "What are the login names and family names of course author and tutors?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "List all the dates of enrollment and completion of students.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "What are all the dates of enrollment and completion in record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "What are the names and capitals of each country?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "List all the login names and family names of course author and tutors.",
            "ted": 0.0
        }
    ],
    "SELECT count( * ) FROM Courses": [
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "Count the number of budget codes.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "How many counties are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "Count the number of statements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "How many statements do we have?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "Count the total number of counties.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists do we have?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM station",
            "question": "How many train stations are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM event",
            "question": "How many events are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "Count the number of companies.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "How many film are there?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM stadium",
            "question": "How many stadiums are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "How many companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "What is the total number of faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games exist?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games do you have?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "How many faculty do we have?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( * ) FROM perpetrator",
            "question": "How many perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "Count the number of bank branches.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "How many bank branches are there?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT count( * ) FROM journalist",
            "question": "How many journalists are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "How many apartment bookings are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "Count the number of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "How many wrestlers are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "Count the total number of apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( * ) FROM election",
            "question": "How many elections are there?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM train",
            "question": "Show the number of trains",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "Count the number of films.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "How many tracks do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "How many cinema do we have?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "How many songs are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Count the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Show the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "How many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "What is the number of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "How many settlements are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "Count the number of songs.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM body_builder",
            "question": "How many body builders are there?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM building",
            "question": "How many buildings are there?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "How many races are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "Count the total number of settlements made.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "How many entrepreneurs are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "Count the number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "Count the number of ships.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts exist in the database?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "Find the total number of catalog contents.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "Count the number of tracks.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "How many products are there in the records?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "Count the number of races.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "How many customer cards are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "Show the number of customer cards.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT count( * ) FROM railway",
            "question": "How many railways are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "How many accounts are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT count( * ) FROM player",
            "question": "How many players are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT count( * ) FROM driver",
            "question": "How many drivers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many employees are there?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT count( * ) FROM editor",
            "question": "How many editors are there?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "How many CSU campuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "Return the total number of distinct customers.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "What is the total number of campuses?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "Count the number of total papers.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "How many candidates are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many staff in total?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM tweets",
            "question": "Find the number of tweets in record.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "Count the number of gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "How many gymnasts are there?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT count( * ) FROM performance",
            "question": "How many performances are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "What is the number of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "How many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "Count how many appointments have been made in total.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "Count the number of candidates.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM follows",
            "question": "How many followers does each user have?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "How many appointments are there?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT count( * ) FROM member",
            "question": "How many members are there?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM user_profiles",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "Count the number of actors.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "How many actors are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "How many papers are published in total?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( * ) FROM customers",
            "question": "Find the number of customers in total.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM review",
            "question": "Find the number of reviews.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "How many authors are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers do we have?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "How many aircrafts are there?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "What is the number of aircraft?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT count( * ) FROM book",
            "question": "How many books are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers in total?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "Count the number of stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "How many stores are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "How many activities do we have?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "Count the number of authors.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "How many institutions are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "How many diffrent dorm amenities are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "Find the number of distinct amenities.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicle in total?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicles exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are in the database?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "Count the number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers are there?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers listed?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "Count the number of cinemas.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "How many students are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "How many bands are there?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "Count the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "Count the total number of clubs.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "Count the number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "How many rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "What is the total number of rooms available in this inn?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "How many counties are there?",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT count( * ) FROM debate",
            "question": "How many debates are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "Count the number of documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "Count the total number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "How many bookings do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT count( * ) FROM premises",
            "question": "How many premises are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "How many devices are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "Count the total number of bookings made.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT count( * ) FROM roller_coaster",
            "question": "How many roller coasters are there?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT count( * ) FROM INVESTORS",
            "question": "Find the number of investors in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "How many documents have expenses?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( * ) FROM rent_arrears",
            "question": "How many council taxes are collected for renting arrears ?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "What is the total number of companies?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "Find the number of bands.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "What is the total number of clubs?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "Count the number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the total number of available services.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "Find the total number of scientists.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "How many transactions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "How many party events do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "Count the number of party events.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "Find the number of activities available.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT count( * ) FROM pilot",
            "question": "How many pilots are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Show the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct courses are enrolled in by students?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "How many airlines are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "What is the total number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "What is the total count of enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "How many kinds of enzymes are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "Find the total number of courses offered.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "Find the total number of employees.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "How many farms are there?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "Count the number of farms.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "What is the total number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "How many available hotels are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct courses that have enrolled students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "Find the total number of available hotels.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "How many employees are there all together?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "How many scientists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Show the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "Find the number of distinct stages in claim processing.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "How many claim processing stages are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "How many invoices do we have?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT count( * ) FROM artwork",
            "question": "How many artworks are there?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "How many gas companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "Count the number of products.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "Count the total number of roles listed.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "How many roles are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "Count the number of invoices.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "How many colors are there?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "How many voting records do we have?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "Count the number of book clubs.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "How many book clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "Find the number of albums.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "How many albums are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many different colleges are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "How many locations are listed in the database?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "How many submissions are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "Show the number of locations.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "Count the number of colors.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "How many characteristics are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "Count the number of characteristics.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "What is the number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM ASSESSMENT_NOTES",
            "question": "How many assessment notes are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "How many climbers are there?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "Count the number of climbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "How many document types are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "Show the number of document types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "Find the number of voting records in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "Count the number of all the calendar items.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "How many calendar items do we have?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many colleges in total?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "how many programs are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the number of services.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "How many projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "Count the number of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "Show the number of projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "How many budget types do we have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "How many countries are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "Find the number of employees we have.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "Count the number of customers recorded.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "How many flights do we have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "What is the number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "How many parties are there?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "Count the number of parties.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "Count the number of programs.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT count( * ) FROM phone",
            "question": "How many phones are there?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT count( * ) FROM Products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "How many customers do we have?",
            "ted": 0.0
        }
    ],
    "SELECT grade , count( * ) FROM Highschooler GROUP BY grade": [
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "For each denomination, return the denomination and the count of schools with that denomination.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "Give the country id and corresponding count of cities in each country.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
            "question": "Show each location and the number of cinemas there.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "How many hosts does each nationality have? List the nationality and the count.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
            "question": "Show the different countries and the number of members from each.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
            "question": "List all directors along with the number of films directed by each director.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "Show different nationalities along with the number of hosts of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "For each type, how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the number of ships of each type.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "What are the allergy types and how many allergies correspond to each one?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "Show all allergy types and the number of allergies in each type.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "What are the number of rooms for each bed type?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "Find the number of rooms for each bed type.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "What are the different budget type codes, and how many documents are there for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "Show budget type codes and the number of documents in each budget type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
            "question": "Show different carriers of phones together with the number of phones with each carrier.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "find the number of medicines offered by each trade.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "How many medicines are offered by each trade name?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "How many counties correspond to each police force?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "Please show the police forces and the number of counties with each police force.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "List all headquarters and the number of companies in each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "display the country ID and number of cities for each country.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "For each advisor, report the total number of students advised by him or her.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "Show all majors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "Show all ages and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "Find all types of store and number of them.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "Show the race class and number of races in each class.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "What are the different classes of races, and how many races correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
            "question": "Show the different headquarters and number of companies at each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "For each classroom, show the classroom number and find how many students are using it.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "Report the number of students in each classroom.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status , COUNT( * ) FROM roller_coaster GROUP BY Status",
            "question": "Show the different statuses and the numbers of roller coasters for each status.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , COUNT( * ) FROM journalist GROUP BY Nationality",
            "question": "Show the different nationalities and the number of journalists of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "Show all the buildings along with the number of faculty members the buildings have.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "How many faculty members does each building have? List the result with the name of the building.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "For each faculty rank, show the number of faculty members who have it.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "How many students have each different allergy?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "Show all allergies with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "How many faculty members do we have for each faculty rank?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "Please show different denominations and the corresponding number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "Show all advisors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "How many students live in each city?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "Show all cities and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , COUNT( * ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the number of transactions for different investors.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "How old is each student and how many students are each age?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "How many students are there for each major?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION , COUNT( * ) FROM performance GROUP BY LOCATION",
            "question": "Show different locations and the number of performances at each location.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "For each election cycle, report the number of voting records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT state_province_county , count( * ) FROM addresses GROUP BY state_province_county",
            "question": "Show each state and the number of addresses in each state.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "Show the booking status code and the corresponding number of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT outcome_code , count( * ) FROM mailshot_customers GROUP BY outcome_code",
            "question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT product_category , count( * ) FROM mailshot_campaigns GROUP BY product_category",
            "question": "Show all distinct product categories along with the number of mailshots in each category.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Please show each industry and the corresponding number of companies in that industry.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Whah are the name of each industry and the number of companies in that industry?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Country , COUNT( * ) FROM perpetrator GROUP BY Country",
            "question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "Please show the countries and the number of climbers from each country.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT premises_type , count( * ) FROM premises GROUP BY premises_type",
            "question": "Show each premise type and the number of premises in that type.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "Show different nominees and the number of musicals they have been nominated.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "How many musicals has each nominee been nominated for?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "How many climbers are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "How many entrepreneurs correspond to each investor?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place , COUNT( * ) FROM people GROUP BY Birth_Place",
            "question": "List each birth place along with the number of people from there.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT party , count( * ) FROM driver GROUP BY party",
            "question": "Show the party and the number of drivers in each party.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE , COUNT( * ) FROM artwork GROUP BY TYPE",
            "question": "Please show different types of artworks with the corresponding number of artworks of each type.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "For each team, how many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "Show different teams of technicians and the number of technicians in each team.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Party , COUNT( * ) FROM representative GROUP BY Party",
            "question": "What are the different parties of representative? Show the party name and the number of representatives in each party.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT LOCATION , COUNT( * ) FROM railway GROUP BY LOCATION",
            "question": "Show different locations of railways along with the corresponding number of railways at each location.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder , COUNT( * ) FROM railway GROUP BY Builder",
            "question": "Show different builders of railways, along with the corresponding number of railways using each builder.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country , count( * ) FROM stadium GROUP BY country",
            "question": "How many stadiums does each country have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "How many players played each position?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "Count the number of voting records for each election cycle.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "For each college, return the college name and the count of authors with submissions from that college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "What are the destinations and number of flights to each one?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "Show different colleges along with the number of authors of submission from each college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "Show all destinations and the number of flights to each destination.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "For each origin, how many flights came from there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "Show all origins and the number of flights from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "How many customers use each payment method?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "How many players enter hall of fame each year?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "Count the number of players who enter hall of fame for each year.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "What are the types of competition and number of competitions for that type?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher , COUNT( * ) FROM publication GROUP BY Publisher",
            "question": "Show different publishers together with the number of publications they have.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "For each payment method, return how many customers use it.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "How many documents are there of each type?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "Find the number of phones for each accreditation type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "How many phones belongs to each accreditation type?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "List document type codes and the number of documents in each code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "How many documents correspond with each project id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "Show project ids and the number of documents in each project.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "What are the different statement ids on accounts, and the number of accounts for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "Show all statement id and the number of accounts for each statement.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "Show the position of players and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality , COUNT( * ) FROM pilot GROUP BY Nationality",
            "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "List the types of competition and the number of competitions of each type.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code , COUNT( * ) FROM Products GROUP BY Product_Type_Code",
            "question": "Show different type codes of products and the number of products with each type code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destroyed by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "List the distinct payment method codes with the number of orders made",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "What are the types of video games and how many are in each type?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "Show all video game types and the number of video games in each type.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "Show all customer ids and the number of cards owned by each customer.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "Show the id of each employee and the number of document destruction authorised by that employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "What are the different customer ids, and how many cards does each one hold?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destruction authorised by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "Show all payment method codes and the number of orders for each code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "Show all card type codes and the number of cards in each type.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "What are the different software platforms for devices, and how many devices have each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT origin , count( * ) FROM train GROUP BY origin",
            "question": "Find the number of trains starting from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "What are the different card types, and how many cards are there of each?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "List all customer status codes and the number of customers having each status code.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "For each customer status code, how many customers are classified that way?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "Show the employee ids and the number of documents destroyed by each employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction type and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party , COUNT( * ) FROM people GROUP BY Party",
            "question": "Show different parties of people along with the number of people in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "How many accounts are there for each customer id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "What is the code of each role and the number of employees in each role?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "Show all role codes and the number of employees in each role.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "For each policy type, return its type code and its count in the record.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "Find the number of records of each policy type and its type code.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "How many students play each sport?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT country , count( * ) FROM people GROUP BY country",
            "question": "Show all countries and the number of people from each country.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "How many books fall into each category?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "Show all publishers and the number of books for each publisher.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "Show all sport name and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "Show the location codes and the number of documents in each location.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "Show all book categories and the number of books in each category.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "How many books are there for each publisher?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "What is the code of each location and the number of documents in that location?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "Show all customer ids and the number of accounts for each customer.",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT open_date , count( * ) FROM church GROUP BY open_date",
            "question": "Show all opening years and the number of churches that opened in that year.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation , COUNT( * ) FROM player GROUP BY Occupation",
            "question": "Show different occupations along with the number of players in each occupation.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "Please show different software platforms and the corresponding number of devices using each.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are the different transaction types, and how many transactions of each have taken place?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age , COUNT( * ) FROM editor GROUP BY Age",
            "question": "What are the different ages of editors? Show each age along with the number of editors of that age.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Return the number of music festivals of each category.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "List the studios of each film and the number of films produced by that studio.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "Show the order ids and the number of items in each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "Show the number of customers for each gender.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "How many order items correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "How films are produced by each studio?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "How many customers are there of each gender?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "List all payment methods and number of payments using each payment methods.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "For each type of store, how many of them are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "How many invoices correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "Show the order ids and the number of invoices for each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "How many transactions correspond to each invoice number?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Please show the categories of the music festivals and the count.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT Operating_system , count( * ) FROM web_client_accelerator GROUP BY Operating_system",
            "question": "Find the number of web accelerators used for each Operating system.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "For each payment method, how many payments were made?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "Show the invoice number and the number of transactions for each invoice.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "Show different teams in eliminations and the number of eliminations from each team.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "Show the account id and the number of transactions for each account",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "How many eliminations did each team have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT preferred_foot , avg( overall_rating ) FROM Player_Attributes GROUP BY preferred_foot",
            "question": "What is the average rating for right-footed players and left-footed players?",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "For each year, return the year and the average number of attendance at home games.",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "What is the average number of attendance at home games for each year?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "Show the average price of hotels for each star rating code.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of different bed type? List bed type and average base price.",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "For each position, what is the average number of points for players in that position?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction types and the total amount of transactions.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "What are the ids of all students and number of hours played?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, what is the highest latitude for its stations?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, return the highest latitude among its stations.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "What are the main indstries and total market value for each industry?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "Show all student ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "What are ids and total number of hours played for each game?",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "What is the average price for each type of product?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "Show all game ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "Return the average price for each product type.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "Please show the different statuses of cities and the average population of cities with each status.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "What are the statuses and average populations of each city?",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "List the position of players and the average number of points of players of each position.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "Show all main industry and total market value in each industry.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "What is the average price range of hotels for each each star rating code?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average base price of different bed type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "What are the different product names? What is the average product price for each of them?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "Show the average price of hotels for different pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "What are the average prices of hotels grouped by their pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average amount of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "display the employee ID for each employee and the date on which he ended his previous job.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "What are the employee ids for each employee and final dates of employment at their last job?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( share_count ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average share count of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Show order ids and the total quantity in each order.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Give the order ids for all orders, as well as the total product quantity in each.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY transaction_type_code",
            "question": "Show the average transaction amount for different transaction types.",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "For each type, what is the average tonnage?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are total transaction amounts for each transaction type?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average room price.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of rooms, for each bed type?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the average tonnage of ships of each type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "For each distinct product name, show its average product price.",
            "ted": 0.0625
        }
    ],
    "SELECT student_id , count( * ) FROM Likes GROUP BY student_id": [
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "For each denomination, return the denomination and the count of schools with that denomination.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "Give the country id and corresponding count of cities in each country.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
            "question": "Show each location and the number of cinemas there.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "How many hosts does each nationality have? List the nationality and the count.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
            "question": "Show the different countries and the number of members from each.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
            "question": "List all directors along with the number of films directed by each director.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "Show different nationalities along with the number of hosts of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "For each type, how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the number of ships of each type.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "What are the allergy types and how many allergies correspond to each one?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "Show all allergy types and the number of allergies in each type.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "What are the number of rooms for each bed type?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "Find the number of rooms for each bed type.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "What are the different budget type codes, and how many documents are there for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "Show budget type codes and the number of documents in each budget type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
            "question": "Show different carriers of phones together with the number of phones with each carrier.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "find the number of medicines offered by each trade.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "How many medicines are offered by each trade name?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "How many counties correspond to each police force?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "Please show the police forces and the number of counties with each police force.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "List all headquarters and the number of companies in each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "display the country ID and number of cities for each country.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "For each advisor, report the total number of students advised by him or her.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "Show all majors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "Show all ages and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "Find all types of store and number of them.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "Show the race class and number of races in each class.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "What are the different classes of races, and how many races correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
            "question": "Show the different headquarters and number of companies at each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "For each classroom, show the classroom number and find how many students are using it.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "Report the number of students in each classroom.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status , COUNT( * ) FROM roller_coaster GROUP BY Status",
            "question": "Show the different statuses and the numbers of roller coasters for each status.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , COUNT( * ) FROM journalist GROUP BY Nationality",
            "question": "Show the different nationalities and the number of journalists of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "Show all the buildings along with the number of faculty members the buildings have.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "How many faculty members does each building have? List the result with the name of the building.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "For each faculty rank, show the number of faculty members who have it.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "How many students have each different allergy?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "Show all allergies with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "How many faculty members do we have for each faculty rank?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "Please show different denominations and the corresponding number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "Show all advisors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "How many students live in each city?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "Show all cities and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , COUNT( * ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the number of transactions for different investors.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "How old is each student and how many students are each age?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "How many students are there for each major?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION , COUNT( * ) FROM performance GROUP BY LOCATION",
            "question": "Show different locations and the number of performances at each location.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "For each election cycle, report the number of voting records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT state_province_county , count( * ) FROM addresses GROUP BY state_province_county",
            "question": "Show each state and the number of addresses in each state.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "Show the booking status code and the corresponding number of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT outcome_code , count( * ) FROM mailshot_customers GROUP BY outcome_code",
            "question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT product_category , count( * ) FROM mailshot_campaigns GROUP BY product_category",
            "question": "Show all distinct product categories along with the number of mailshots in each category.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Please show each industry and the corresponding number of companies in that industry.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Whah are the name of each industry and the number of companies in that industry?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Country , COUNT( * ) FROM perpetrator GROUP BY Country",
            "question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "Please show the countries and the number of climbers from each country.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT premises_type , count( * ) FROM premises GROUP BY premises_type",
            "question": "Show each premise type and the number of premises in that type.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "Show different nominees and the number of musicals they have been nominated.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "How many musicals has each nominee been nominated for?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "How many climbers are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "How many entrepreneurs correspond to each investor?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place , COUNT( * ) FROM people GROUP BY Birth_Place",
            "question": "List each birth place along with the number of people from there.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT party , count( * ) FROM driver GROUP BY party",
            "question": "Show the party and the number of drivers in each party.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE , COUNT( * ) FROM artwork GROUP BY TYPE",
            "question": "Please show different types of artworks with the corresponding number of artworks of each type.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "For each team, how many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "Show different teams of technicians and the number of technicians in each team.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Party , COUNT( * ) FROM representative GROUP BY Party",
            "question": "What are the different parties of representative? Show the party name and the number of representatives in each party.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT LOCATION , COUNT( * ) FROM railway GROUP BY LOCATION",
            "question": "Show different locations of railways along with the corresponding number of railways at each location.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder , COUNT( * ) FROM railway GROUP BY Builder",
            "question": "Show different builders of railways, along with the corresponding number of railways using each builder.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country , count( * ) FROM stadium GROUP BY country",
            "question": "How many stadiums does each country have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "How many players played each position?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "Count the number of voting records for each election cycle.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "For each college, return the college name and the count of authors with submissions from that college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "What are the destinations and number of flights to each one?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "Show different colleges along with the number of authors of submission from each college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "Show all destinations and the number of flights to each destination.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "For each origin, how many flights came from there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "Show all origins and the number of flights from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "How many customers use each payment method?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "How many players enter hall of fame each year?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "Count the number of players who enter hall of fame for each year.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "What are the types of competition and number of competitions for that type?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher , COUNT( * ) FROM publication GROUP BY Publisher",
            "question": "Show different publishers together with the number of publications they have.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "For each payment method, return how many customers use it.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "How many documents are there of each type?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "Find the number of phones for each accreditation type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "How many phones belongs to each accreditation type?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "List document type codes and the number of documents in each code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "How many documents correspond with each project id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "Show project ids and the number of documents in each project.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "What are the different statement ids on accounts, and the number of accounts for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "Show all statement id and the number of accounts for each statement.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "Show the position of players and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality , COUNT( * ) FROM pilot GROUP BY Nationality",
            "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "List the types of competition and the number of competitions of each type.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code , COUNT( * ) FROM Products GROUP BY Product_Type_Code",
            "question": "Show different type codes of products and the number of products with each type code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destroyed by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "List the distinct payment method codes with the number of orders made",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "What are the types of video games and how many are in each type?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "Show all video game types and the number of video games in each type.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "Show all customer ids and the number of cards owned by each customer.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "Show the id of each employee and the number of document destruction authorised by that employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "What are the different customer ids, and how many cards does each one hold?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destruction authorised by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "Show all payment method codes and the number of orders for each code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "Show all card type codes and the number of cards in each type.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "What are the different software platforms for devices, and how many devices have each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT origin , count( * ) FROM train GROUP BY origin",
            "question": "Find the number of trains starting from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "What are the different card types, and how many cards are there of each?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "List all customer status codes and the number of customers having each status code.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "For each customer status code, how many customers are classified that way?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "Show the employee ids and the number of documents destroyed by each employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction type and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party , COUNT( * ) FROM people GROUP BY Party",
            "question": "Show different parties of people along with the number of people in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "How many accounts are there for each customer id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "What is the code of each role and the number of employees in each role?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "Show all role codes and the number of employees in each role.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "For each policy type, return its type code and its count in the record.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "Find the number of records of each policy type and its type code.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "How many students play each sport?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT country , count( * ) FROM people GROUP BY country",
            "question": "Show all countries and the number of people from each country.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "How many books fall into each category?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "Show all publishers and the number of books for each publisher.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "Show all sport name and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "Show the location codes and the number of documents in each location.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "Show all book categories and the number of books in each category.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "How many books are there for each publisher?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "What is the code of each location and the number of documents in that location?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "Show all customer ids and the number of accounts for each customer.",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT open_date , count( * ) FROM church GROUP BY open_date",
            "question": "Show all opening years and the number of churches that opened in that year.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation , COUNT( * ) FROM player GROUP BY Occupation",
            "question": "Show different occupations along with the number of players in each occupation.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "Please show different software platforms and the corresponding number of devices using each.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are the different transaction types, and how many transactions of each have taken place?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age , COUNT( * ) FROM editor GROUP BY Age",
            "question": "What are the different ages of editors? Show each age along with the number of editors of that age.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Return the number of music festivals of each category.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "List the studios of each film and the number of films produced by that studio.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "Show the order ids and the number of items in each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "Show the number of customers for each gender.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "How many order items correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "How films are produced by each studio?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "How many customers are there of each gender?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "List all payment methods and number of payments using each payment methods.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "For each type of store, how many of them are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "How many invoices correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "Show the order ids and the number of invoices for each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "How many transactions correspond to each invoice number?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Please show the categories of the music festivals and the count.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT Operating_system , count( * ) FROM web_client_accelerator GROUP BY Operating_system",
            "question": "Find the number of web accelerators used for each Operating system.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "For each payment method, how many payments were made?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "Show the invoice number and the number of transactions for each invoice.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "Show different teams in eliminations and the number of eliminations from each team.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "Show the account id and the number of transactions for each account",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "How many eliminations did each team have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT preferred_foot , avg( overall_rating ) FROM Player_Attributes GROUP BY preferred_foot",
            "question": "What is the average rating for right-footed players and left-footed players?",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "For each year, return the year and the average number of attendance at home games.",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "What is the average number of attendance at home games for each year?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "Show the average price of hotels for each star rating code.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of different bed type? List bed type and average base price.",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "For each position, what is the average number of points for players in that position?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction types and the total amount of transactions.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "What are the ids of all students and number of hours played?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, what is the highest latitude for its stations?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, return the highest latitude among its stations.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "What are the main indstries and total market value for each industry?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "Show all student ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "What are ids and total number of hours played for each game?",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "What is the average price for each type of product?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "Show all game ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "Return the average price for each product type.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "Please show the different statuses of cities and the average population of cities with each status.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "What are the statuses and average populations of each city?",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "List the position of players and the average number of points of players of each position.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "Show all main industry and total market value in each industry.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "What is the average price range of hotels for each each star rating code?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average base price of different bed type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "What are the different product names? What is the average product price for each of them?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "Show the average price of hotels for different pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "What are the average prices of hotels grouped by their pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average amount of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "display the employee ID for each employee and the date on which he ended his previous job.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "What are the employee ids for each employee and final dates of employment at their last job?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( share_count ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average share count of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Show order ids and the total quantity in each order.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Give the order ids for all orders, as well as the total product quantity in each.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY transaction_type_code",
            "question": "Show the average transaction amount for different transaction types.",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "For each type, what is the average tonnage?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are total transaction amounts for each transaction type?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average room price.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of rooms, for each bed type?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the average tonnage of ships of each type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "For each distinct product name, show its average product price.",
            "ted": 0.0625
        }
    ],
    "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "college_3",
            "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which building does the instructor who teaches the most number of courses live in?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which room has the largest number of reservations?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which program is broadcast most frequently? Give me the program name.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the organization which has the most contact individuals.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details of the student who registered for the most number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is detail of the student who registered the most number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer uses the most policies? Give me the customer name.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of organization that has the greatest number of contact individuals?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the party email that has used party services the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which is the email of the party that has used the services the most number of times?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the program that is broadcast most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the three products that have the most problems?s",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the party form that is most common?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the most popular party form.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the names of the cameras that have taken picture of the most mountains?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the structure of the document with the least number of accesses?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the city that hosted the most events.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city has hosted the most events?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the structure description of the document that has been accessed the fewest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer have the most policies? Give me the customer details.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the document that has the most sections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the party that has the most delegates.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the top 3 products which have the largest number of problems?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the aircraft that has won an award the most?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the course that has the most student enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which course is enrolled in by the most students? Give me the course name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the activity that has the largest number of student participants.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the activity with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which activity has the most faculty members participating in? Find the activity name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the activity that has the most faculty members involved in?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which song has the most vocals?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the song with the most vocals?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the member who is in charge of the most events.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of member in charge of greatest number of events?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the track that has had the greatest number of races?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the denomination of the school that has the most players.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of track with most number of races.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the denomination of the school the most players belong to?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city with the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which artist has the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the artist with the greatest number of albums?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city does has most number of customers?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the station name with greatest number of trains.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the party with the most members.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of party with most number of members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the most common genre in all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the name of the genre that is most frequent across all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation type hires most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of the organization with the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T1.name FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id GROUP BY T2.train_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the train whose route runs through greatest number of stations.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the user who gives the most reviews.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the course with the most registered students?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "which course has most number of registered students?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the document with the most number of sections?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the airline with the most routes?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id of the customer who has the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id of the customer who made the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the shop that has the most different kinds of devices in stock?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of airline which runs the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the names of customers who have the most mailshots.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the shop that has the most kind of devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of amenity that is most common in all dorms.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the order which has the most items?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the nurse has the most appointments?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which order deals with the most items? Return the order id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the customer who made the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the nurse who has the largest number of appointments.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common amenity in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the department that has the biggest number of students minored in?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the department with the most students minoring in it?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description of the transaction type that occurs most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.claim_status_name FROM claims_processing AS T1 JOIN claims_processing_stages AS T2 ON T1.claim_stage_id = T2.claim_stage_id GROUP BY T1.claim_stage_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which claim processing stage has the most claims? Show the claim status name.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.claim_status_name FROM claims_processing AS T1 JOIN claims_processing_stages AS T2 ON T1.claim_stage_id = T2.claim_stage_id GROUP BY T1.claim_stage_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the claim processing stage that most of the claims are on?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the largest number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id GROUP BY T2.swimmer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the swimmer who has the most records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of the customer who has the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer made the most orders? Find the customer name.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the color description that is most common across all products.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM stadium AS T1 JOIN event AS T2 ON T1.id = T2.stadium_id GROUP BY T2.stadium_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the stadium which held the most events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the customer that has been involved in the most policies.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.route_name FROM Delivery_Routes AS T1 JOIN Delivery_Route_Locations AS T2 ON T1.route_id = T2.route_id GROUP BY T1.route_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of route that has the highest number of deliveries.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most frequently ordered product? Tell me the detail of the product",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of aircraft which fewest people have its certificate.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the most policies listed?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the description of the color for most products?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which party has the largest number of delegates?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the names of the aircraft that the least people are certified to fly?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common hometown of gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has been ordered most number of times?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the status of the city that has hosted the most competitions?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the status of the city that has hosted the greatest number of competitions.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the hometown that is most common among gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the name of the department that has the fewest members.",
            "ted": 0.03125
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT T1.sex FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex ORDER BY avg( T2.unsure_rate ) DESC LIMIT 1",
            "question": "What is the sex of the candidate who had the highest unsure rate?",
            "ted": 0.03125
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) LIMIT 1",
            "question": "What country is the artist who made the fewest songs from?",
            "ted": 0.03125
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the name of the department with the fewest members?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.email_address FROM customers AS T1 JOIN complaints AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) LIMIT 1",
            "question": "Find the emails of customers who has filed a complaints of the product with the most complaints.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count( * ) LIMIT 1",
            "question": "Which school has the smallest amount of professors?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.first_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count( * ) LIMIT 5",
            "question": "What is first names of the top 5 staff who have handled the greatest number of complaints?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.first_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count( * ) LIMIT 5",
            "question": "Return the first names of the 5 staff members who have handled the most complaints.",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.email_address FROM customers AS T1 JOIN complaints AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) LIMIT 1",
            "question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?",
            "ted": 0.03125
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) LIMIT 1",
            "question": "Find the country of origin for the artist who made the least number of songs?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count( * ) LIMIT 1",
            "question": "Which school has the fewest professors?",
            "ted": 0.03125
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the color description that is least common across products.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "What is the name of the customer who has greatest total loan amount?",
            "ted": 0.03125
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the description of the color used by least products?",
            "ted": 0.03125
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum( T1.show_times_per_day ) DESC LIMIT 1",
            "question": "Show director with the largest number of show times in total.",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG( Price ) DESC LIMIT 1",
            "question": "Give the color of the grape whose wine products have the highest average price?",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG( Price ) DESC LIMIT 1",
            "question": "What is the color of the grape whose wine products has the highest average price?",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "Find the name of bank branch that provided the greatest total amount of loans.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "What is the name of the bank branch that has lent the greatest amount?",
            "ted": 0.03125
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg( trust ) DESC LIMIT 1",
            "question": "Find the name of the source user with the highest average trust score.",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum( hours_played ) DESC LIMIT 1",
            "question": "Show the game name that has most number of hours played.",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count( T2.decor ) ASC LIMIT 1",
            "question": "What kind of decor has the least number of reservations?",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count( T2.decor ) ASC LIMIT 1",
            "question": "What is the least popular kind of decor?",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum( hours_played ) DESC LIMIT 1",
            "question": "What is the name of the game that has been played the most?",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "Find the name of customer who has the highest amount of loans.",
            "ted": 0.03125
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT T1.sex FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex ORDER BY avg( T2.unsure_rate ) DESC LIMIT 1",
            "question": "which gender got the highest average uncertain ratio.",
            "ted": 0.03125
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which kind of part has the least number of faults? List the part name.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) LIMIT 1",
            "question": "What is the name of the department with the fewest professors?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) LIMIT 1",
            "question": "What is the name of department where has the smallest number of professors?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM( T1.quantity ) DESC LIMIT 1",
            "question": "Show the name of the shop that have the largest quantity of devices in stock.",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.Effective_Date FROM claims AS T1 JOIN settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY sum( T2.settlement_amount ) DESC LIMIT 1",
            "question": "What is the effective date of the claim that has the largest amount of total settlement?",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.Effective_Date FROM claims AS T1 JOIN settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY sum( T2.settlement_amount ) DESC LIMIT 1",
            "question": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "What is the least common media type in all tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM( T1.quantity ) DESC LIMIT 1",
            "question": "What is the name of the shop that has the greatest quantity of devices in stock?",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "What is the name of the media type that is least common across all tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rating ) LIMIT 1",
            "question": "Find the name of the item with the lowest average rating.",
            "ted": 0.0625
        }
    ],
    "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Sports'": [
        {
            "db_id": "college_3",
            "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = 'Computer Science'",
            "question": "Find the last names of faculties who are members of computer science department.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'",
            "question": "Find the name of the instructors who taught C Programming course before.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = 'Robin CV'",
            "question": "What is the location name of the document \"Robin CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = 'Robin CV'",
            "question": "Show the location name for document \"Robin CV\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Binders Unbound'",
            "question": "What are the last names of the author of the paper titled \"Binders Unbound\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Binders Unbound'",
            "question": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'",
            "question": "Show all storm names affecting region \"Denmark\".",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.product_id JOIN store AS T3 ON T2.store_id = T3.store_id WHERE T3.store_name = 'Miramichi'",
            "question": "What products are sold at the store named Miramichi?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'",
            "question": "What are the names of instructors who have taught C Programming courses?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'",
            "question": "What are the names of the storms that affected Denmark?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "What are the names of procedures physician John Wen was trained in?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall'",
            "question": "What are the names of the amenities that Smith Hall has?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.product_id JOIN store AS T3 ON T2.store_id = T3.store_id WHERE T3.store_name = 'Miramichi'",
            "question": "What products are available at store named \"Miramichi\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
            "question": "What are the names of all tracks that are on playlists titled Movies?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson'",
            "question": "What is the code of the course which the student whose last name is Smithson took?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall'",
            "question": "Find the name of amenities Smith Hall dorm have.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
            "question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "Find the names of procedures which physician John Wen was trained in.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
            "question": "Find all the songs produced by artists with first name \"Marianne\".",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
            "question": "What are the names of all employees who have a certificate to fly Boeing 737-800?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
            "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'",
            "question": "What are the result description of the project whose detail is 'sint'?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
            "question": "List the name of all tracks in the playlists of Movies.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'",
            "question": "In which state is the college that Charles attends?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = 'Vincent'",
            "question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = 'Vincent'",
            "question": "Which tourist attractions does the visitor with detail 'Vincent' visit?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
            "question": "Show names for all employees who have certificate of Boeing 737-800.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'",
            "question": "What is the description for the results whose project detail is 'sint'?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "Return the last name for the members of the club named \"Hopkins Student Enterprises\".",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = 'Fail'",
            "question": "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = 'Fail'",
            "question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = 'Computer Science'",
            "question": "What are the last names of faculty who are part of the computer science department?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics'",
            "question": "Find the name of students who took some course offered by Statistics department.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics'",
            "question": "What are the names of students who have taken Statistics courses?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
            "question": "Show names for all aircrafts of which John Williams has certificates.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'",
            "question": "Find the state of the college which player Charles is attending.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.headquartered_city FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.store_name = 'Blackville'",
            "question": "What city is the headquarter of the store Blackville?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson'",
            "question": "What are the course codes for every class that the student with the last name Smithson took?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF'",
            "question": "Return the name of the category to which the film 'HUNGER ROOF' belongs.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF'",
            "question": "What is the genre name of the film HUNGER ROOF?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T3.address_content FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T1.customer_name = 'Maudie Kertzmann'",
            "question": "Return the address content for the customer whose name is \"Maudie Kertzmann\".",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'",
            "question": "What are the first names of all students in Smith Hall?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'",
            "question": "Find the first name of students who are living in the Smith Hall.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "Return the characteristic names of the 'sesame' product.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "What are all the characteristic names of product \"sesame\"?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "What are the names of all the aircrafts associated with London Gatwick airport?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'",
            "question": "What are the first names of all students in course ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = 'A Kiss Before You Go: Live in Hamburg'",
            "question": "What are the songs in album \"A Kiss Before You Go: Live in Hamburg\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'",
            "question": "What is the first name of each student enrolled in class ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = 'A Kiss Before You Go: Live in Hamburg'",
            "question": "What are the song titles on the album \"A Kiss Before You Go: Live in Hamburg\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.label = 'Universal Music Group'",
            "question": "What are all the songs in albums under label \"Universal Music Group\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.label = 'Universal Music Group'",
            "question": "What are the names of all the songs whose album is under the label of \"Universal Music Group\"?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T2.Type = 'Program Talent Show'",
            "question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.state_province_county = 'Colorado'",
            "question": "Find the name of customers who are living in Colorado?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.state_province_county = 'Colorado'",
            "question": "What are the names of customers who live in Colorado state?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.Lastname = 'Heilo'",
            "question": "Find all the songs performed by artist with last name \"Heilo\"",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.store_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_name = 'Khanewal District'",
            "question": "Find the names of all stores in Khanewal District.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Find the last names of the members of the club \"Bootup Baltimore\".",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.Lastname = 'Heilo'",
            "question": "What are the names of the songs by the artist whose last name is \"Heilo\"?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil'",
            "question": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = 'Violin'",
            "question": "Show the dates of performances with attending members whose roles are \"Violin\".",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.store_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_name = 'Khanewal District'",
            "question": "What are the names of all the stores located in Khanewal District?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil'",
            "question": "Show the manager name for gas stations belonging to the ExxonMobil company.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.headquartered_city FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.store_name = 'Blackville'",
            "question": "Which city is the headquarter of the store named \"Blackville\" in?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T3.address_content FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T1.customer_name = 'Maudie Kertzmann'",
            "question": "What is the address content of the customer named \"Maudie Kertzmann\"?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id WHERE T3.cmi_details != 'Schmidt , Kertzmann and Lubowitz'",
            "question": "What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?",
            "ted": 0.025
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT sum( grant_amount ) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'",
            "question": "What is the total grant amount of the organisations described as research?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'laurel'",
            "question": "How many characteristics does the product named \"laurel\" have?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'laurel'",
            "question": "Count the number of characteristics of the product named 'laurel'.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'flax'",
            "question": "Find the number of characteristics that the product \"flax\" has.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "Find the average age of members of the club \"Hopkins Student Enterprises\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T3.order_quantity ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'HOU'",
            "question": "Which clubs have one or more members from the city with code \"HOU\"? Give me the names of the clubs.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "What is the average age of the members of the club \"Bootup Baltimore\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_3",
            "query": "SELECT avg( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = 'Smith'",
            "question": "What is the average gradepoint for students with the last name Smith?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_3",
            "query": "SELECT avg( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = 'Smith'",
            "question": "Find the average grade point of student whose last name is Smith.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Find the average age of the members in the club \"Bootup Baltimore\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "On average, how old are the members in the club \"Hopkins Student Enterprises\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "How many members does the club \"Tennis Club\" has?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Pen and Paper Gaming'",
            "question": "How many people have membership in the club \"Pen and Paper Gaming\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Pen and Paper Gaming'",
            "question": "Find the number of members of club \"Pen and Paper Gaming\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "Retrieve the average age of members of the club \"Tennis Club\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT sum( grant_amount ) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'",
            "question": "What is the total amount of grant money for research?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT DISTINCT T1.product_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'warm'",
            "question": "List the all the distinct names of the products with the characteristic name 'warm'.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT DISTINCT T1.product_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'warm'",
            "question": "What are the different product names for products that have the 'warm' characteristic:?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "document_management",
            "query": "SELECT avg( T1.access_count ) FROM documents AS T1 JOIN document_functional_areas AS T2 ON T1.document_code = T2.document_code JOIN functional_areas AS T3 ON T2.functional_area_code = T3.functional_area_code WHERE T3.functional_area_description = 'Acknowledgement'",
            "question": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'hot'",
            "question": "Count the number of products with the 'hot' charactersitic.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'HOU'",
            "question": "Find the names of the clubs that have at least a member from the city with city code \"HOU\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate = T2.id JOIN songs AS T3 ON T3.songid = T1.songid WHERE T3.Title = 'Flash'",
            "question": "Hom many musicians performed in the song \"Flash\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'",
            "question": "What is the average height of the players from the college named 'Yale University'?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'hot'",
            "question": "How many products have the characteristic named \"hot\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'flax'",
            "question": "Count the number of characteristics of the 'flax' product.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T3.order_quantity ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "What is the total quantity of products purchased by \"Rodrick Heaney\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "document_management",
            "query": "SELECT avg( T1.access_count ) FROM documents AS T1 JOIN document_functional_areas AS T2 ON T1.document_code = T2.document_code JOIN functional_areas AS T3 ON T2.functional_area_code = T3.functional_area_code WHERE T3.functional_area_description = 'Acknowledgement'",
            "question": "Find the average access counts of documents with functional area \"Acknowledgement\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "Compute the average age of the members in the club \"Tennis Club\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'",
            "question": "Find the average height of the players who belong to the college called 'Yale University'.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate = T2.id JOIN songs AS T3 ON T3.songid = T1.songid WHERE T3.Title = 'Flash'",
            "question": "How many musicians play in the song \"Flash\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "Count the members of the club \"Tennis Club\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT avg( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'",
            "question": "What is the average gpa of the students enrolled in the course with code ACCT-211?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'",
            "question": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Google'",
            "question": "Find all the papers published by the institution \"Google\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT avg( T3.cost ) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "Compute the mean price of procedures physician John Wen was trained in.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT avg( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'",
            "question": "What is the average GPA of students taking ACCT-211?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT avg( T3.cost ) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "What is the average cost of procedures that physician John Wen was trained in?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Indiana University'",
            "question": "What are the papers published under the institution \"Indiana University\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'BAL'",
            "question": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'",
            "question": "Find the names of all directors whose movies are rated by Sarah Martinez.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind'",
            "question": "What are the names of all the different reviewers who rates Gone with the Wind?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind'",
            "question": "Find the names of all reviewers who rated Gone with the Wind.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M'",
            "question": "What are the total number of students who are living in a male dorm?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT DISTINCT T3.policy_type_code FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id JOIN available_policies AS T3 ON T2.policy_id = T3.policy_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "What are all the policy types of the customer named \"Dayana Robel\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M'",
            "question": "Find the total number of students living in the male dorm (with gender M).",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.city = 'Lake Geovannyton'",
            "question": "How many customers are living in city \"Lake Geovannyton\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Indiana University'",
            "question": "List the titles of the papers whose authors are from the institution \"Indiana University\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'BAL'",
            "question": "Which clubs have one or more members from the city with code \"BAL\"? Give me the names of the clubs.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.city = 'Lake Geovannyton'",
            "question": "Find the number of customers who live in the city called Lake Geovannyton.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = 'Thesisin'",
            "question": "List the names of all the physicians who prescribe Thesisin as medication.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "department_management",
            "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama'",
            "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT DISTINCT T3.policy_type_code FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id JOIN available_policies AS T3 ON T2.policy_id = T3.policy_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "Tell me the types of the policy used by the customer named \"Dayana Robel\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( T1.SSN ) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = 'John Dorian'",
            "question": "How many patients' prescriptions are made by physician John Dorian?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "aircraft",
            "query": "SELECT avg( T3.Total_Passengers ) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = 'Robinson R-22'",
            "question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "aircraft",
            "query": "SELECT avg( T3.Total_Passengers ) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = 'Robinson R-22'",
            "question": "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = 'Thesisin'",
            "question": "What is the names of the physicians who prescribe medication Thesisin?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( T1.SSN ) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = 'John Dorian'",
            "question": "Find the number of patients' prescriptions physician John Dorian made.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Google'",
            "question": "Which papers were written by authors from the institution \"Google\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Functional%'",
            "question": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.",
            "ted": 0.05
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Monadic%'",
            "question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\".",
            "ted": 0.05
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Monadic%'",
            "question": "Which authors have written a paper with title containing the word \"Monadic\"? Return their last names.",
            "ted": 0.05
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
            "question": "What are the details for the project whose research has been published?",
            "ted": 0.05
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Functional%'",
            "question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".",
            "ted": 0.05
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'",
            "question": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith'?",
            "ted": 0.05
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T2.Rank = 1",
            "question": "Show the names of players coached by the rank 1 coach.",
            "ted": 0.05
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
            "question": "List the project details of the projects with the research outcome described with the substring 'Published'.",
            "ted": 0.05
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'",
            "question": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.",
            "ted": 0.05
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100",
            "question": "Show all locations where a gas station for company with market value greater than 100 is located.",
            "ted": 0.075
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70",
            "question": "What are the names of the technicians that are assigned to repair machines with more point values than 70?",
            "ted": 0.075
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50",
            "question": "What are the lot details of lots associated with transactions with share count smaller than 50?",
            "ted": 0.075
        },
        {
            "db_id": "debate",
            "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200",
            "question": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200.",
            "ted": 0.075
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70",
            "question": "Show names of technicians who are assigned to repair machines with value point more than 70.",
            "ted": 0.075
        },
        {
            "db_id": "company_employee",
            "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200",
            "question": "Show the names of employees that work for companies with sales bigger than 200.",
            "ted": 0.075
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100",
            "question": "What are the locations that have gas stations owned by a company with a market value greater than 100?",
            "ted": 0.075
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",
            "question": "What are the order dates of orders with price higher than 1000?",
            "ted": 0.075
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100",
            "question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.",
            "ted": 0.075
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",
            "question": "Find the order dates of the orders with price above 1000.",
            "ted": 0.075
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID WHERE T2.Num_of_shops > 50",
            "question": "Show the names of phones that are on market with number of shops greater than 50.",
            "ted": 0.075
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance",
            "question": "Find the name of accounts whose checking balance is higher than corresponding saving balance.",
            "ted": 0.075
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34",
            "question": "Show the fleet series of the aircrafts flied by pilots younger than 34",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50",
            "question": "Show the locations of parties with hosts older than 50.",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50",
            "question": "Which parties have hosts of age above 50? Give me the party locations.",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20",
            "question": "Show the host names for parties with number of hosts greater than 20.",
            "ted": 0.075
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100",
            "question": "What are the names of banks that have loaned money to customers with credit scores below 100?",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20",
            "question": "Which parties have more than 20 hosts? Give me the host names for these parties.",
            "ted": 0.075
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance",
            "question": "What are the names of customers with a higher checking balance than savings balance?",
            "ted": 0.075
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000",
            "question": "Show the names of editors that are on the committee of journals with sales bigger than 3000.",
            "ted": 0.075
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000",
            "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
            "ted": 0.075
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10",
            "question": "What are the region names affected by the storm with a number of deaths of least 10?",
            "ted": 0.075
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10",
            "question": "Return the names of the regions affected by storms that had a death count of at least 10.",
            "ted": 0.075
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000",
            "question": "Which physicians are trained in procedures that are more expensive than 5000?",
            "ted": 0.075
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.state_province_county = 'California'",
            "question": "Find the names and phone numbers of customers living in California state.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.name , T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = 'Lewis'",
            "question": "What are the names and years of all races that had a driver with the last name Lewis?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname , T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Nameless , Painless'",
            "question": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Tokohu University'",
            "question": "How many papers are published by the institution \"Tokohu University\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname , T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Nameless , Painless'",
            "question": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Tokohu University'",
            "question": "Find the number of papers published by authors from the institution \"Tokohu University\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( DISTINCT T3.product_id ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "How many types of products have Rodrick Heaney bought in total?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.name , T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = 'Lewis'",
            "question": "Give me a list of names and years of races that had any driver whose forename is Lewis?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( DISTINCT T3.product_id ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "Find the number of distinct products Rodrick Heaney has bought so far.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'University of Pennsylvania'",
            "question": "How many papers are written by authors from the institution \"University of Pennsylvania\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( DISTINCT T3.characteristic_name ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "How many distinct characteristic names does the product \"cumin\" have?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Le Pop'",
            "question": "Who performed the song named \"Le Pop\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.dept_name , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",
            "question": "What is the name of the department and office location for the professor with the last name of Heffington?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Le Pop'",
            "question": "What is the first and last name of artist who performed \"Le Pop\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.dept_name , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",
            "question": "What is department name and office for the professor whose last name is Heffington?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",
            "question": "What are the last name and office of all history professors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",
            "question": "What is the last name and office of the professor from the history department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T3.name , T3.time FROM station AS T1 JOIN route AS T2 ON T1.id = T2.station_id JOIN train AS T3 ON T2.train_id = T3.id WHERE T1.local_authority = 'Chiltern'",
            "question": "Find names and times of trains that run through stations for the local authority Chiltern.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name",
            "question": "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = 'Biology'",
            "question": "What is the first and last name of the professor in biology department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_1",
            "query": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = 'LG-P760'",
            "question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name",
            "question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT T3.title ) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.type = 'Studio'",
            "question": "Find the number of songs in all the studio albums.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT T3.title ) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.type = 'Studio'",
            "question": "How many songs appear in studio albums?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name",
            "question": "What are the amenities in alphabetical order that Anonymous Donor Hall has?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.title , T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",
            "question": "Show the movie titles and book titles for all companies in China.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.title , T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",
            "question": "What are the titles of movies and books corresponding to companies incorporated in China?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = 'Biology'",
            "question": "What are the first and last name of all biology professors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name",
            "question": "What amenities does Smith Hall have in alphabetical order?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",
            "question": "Find the name and salary of the instructors who are advisors of any student from History department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred",
            "question": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands'",
            "question": "Who performed the song named \"Badlands\"? Show the first name and the last name.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands'",
            "question": "What are the first and last names of the artist who perfomed the song \"Badlands\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T3.booking_start_date , T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id = T2.product_id JOIN bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.product_name = 'Book collection A'",
            "question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'University of Pennsylvania'",
            "question": "Find the number of papers published by the institution \"University of Pennsylvania\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",
            "question": "What are the names and salaries of instructors who advises students in the History department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name , T3.characteristic_data_type FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'cumin'",
            "question": "What are the names and data types of the characteristics of the 'cumin' product?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred",
            "question": "Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name , T3.characteristic_data_type FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'cumin'",
            "question": "List all the characteristic names and data types of product \"cumin\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'",
            "question": "Find the name and salary of instructors who are advisors of the students from the Math department.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( DISTINCT T3.characteristic_name ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "Count the number of different characteristic names the product 'cumin' has.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",
            "question": "What are the checking and savings balances in accounts belonging to Brown?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",
            "question": "Find the checking balance and saving balance in the Brown\u2019s account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'",
            "question": "What are the names and salaries of instructors who advise students in the Math department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111",
            "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
            "ted": 0.1
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T3.Year = 2007",
            "question": "Show distinct types of artworks that are nominated in festivals in 2007.",
            "ted": 0.1
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.advisor = 1121",
            "question": "Which clubs have one or more members whose advisor is \"1121\"?",
            "ted": 0.1
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.advisor = 1121",
            "question": "List the clubs that have at least a member with advisor \"1121\".",
            "ted": 0.1
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111",
            "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
            "ted": 0.1
        }
    ],
    "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'economics'": [
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many vocal types are used in the song \"Le Pop\"?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT count( * ) FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'England'",
            "question": "How many leagues are there in England?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "Find the number of routes with destination airports in Italy.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "Count the number of financial transactions that the account with the name 337 has.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "Find the number of vocal types used in song \"Le Pop\"",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "How many characteristics does the product named \"sesame\" have?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "Count the number of characteristics the product 'sesame' has.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lesson does customer with first name Ray took?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "Find the number of professors in accounting department.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lessons did the customer with the first name Ray take?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "How many professors are in the accounting dept?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes are professor whose last name is Graztevski has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes does the professor whose last name is Graztevski teach?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "How many department stores does the store chain South have?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums has Billy Cobam released?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses are offered by the Computer Info. Systems department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses does the department of Computer Information Systmes offer?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "How many students enrolled in class ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "What are the total number of students enrolled in ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "What is the number of routes that end at John F Kennedy International Airport?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "Find the number of routes that have destination John F Kennedy International Airport.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students attend course English?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students are attending English courses?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "Find the number of routes operated by American Airlines.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "How many routes does American Airlines operate?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "Find the number of routes whose destination airports are in Canada.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "How many routes end in a Canadian airport?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS'",
            "question": "How many documents were shipped by USPS?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "What is the number of routes whose destinations are Italian airports?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums does Billy Cobham has?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "Count the number of stores the chain South has.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "How many transaction does account with name 337 have?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Find the number of albums by the artist \"Metallica\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "Count the number of tracks that are of the media type \"AAC audio file\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Hom many albums does the artist \"Metallica\" have?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems did the product called \"voluptatem\" have in record?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "How many cities are in Australia?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "How many tracks are in the AAC audio file media type?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students have a food allergy?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students are affected by food related allergies?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "Count the number of cities in Australia.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems are there for product voluptatem?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "Find the number of vocal types used in song \"Demon Kitty Rag\"?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Count the number of tracks that are part of the rock genre.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "How many tracks belong to rock genre?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "What are the types of vocals used in the song \"Demon Kitty Rag\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "Count the total number of policies used by the customer named \"Dayana Robel\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "How many policies are listed for the customer named \"Dayana Robel\"?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'AIB'",
            "question": "What is the average points of players from club with name \"AIB\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "What is the average unit price of rock tracks?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'AIB'",
            "question": "What is the average number of points for players from the \"AIB\" club?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Find the average unit price of tracks from the Rock genre.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "wine_1",
            "query": "SELECT AVG( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'",
            "question": "Give me the average prices of wines that are produced by appelations in Sonoma County.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( T1.ROM_MiB ) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = 'Nokia Corporation'",
            "question": "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT sum( T1.Order_Quantity ) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = 'photo'",
            "question": "What are the total order quantities of photo products?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT sum( T1.Order_Quantity ) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = 'photo'",
            "question": "Compute the total order quantities of the product \"photo\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "wine_1",
            "query": "SELECT AVG( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'",
            "question": "What is the average price of wines produced in appelations in Sonoma County?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'",
            "question": "What is the average number of hours spent practicing for students who got rejected?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "What is average salary of the players in the team named 'Boston Red Stockings' ?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'",
            "question": "Find the average hours for the students whose tryout decision is no.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = 'Columbus Square'",
            "question": "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = 'Columbus Square'",
            "question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = 'Gym'",
            "question": "Find the total number of rooms in the apartments that have facility code \"Gym\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Jazz'",
            "question": "What is the average unit price of tracks that belong to Jazz genre?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "How many trips did not end in San Francisco?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "Count the number of trips that did not end in San Francisco city.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "What is the average room count of the apartments whose booking status code is \"Provisional\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( T2.rating ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female'",
            "question": "What is the average rating of songs produced by female artists?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Show the average room count of the apartments that have booking status code \"Provisional\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT max( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "What are the maximum scores the team Boston Red Stockings got when the team won in postseason?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT max( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "List the maximum scores of the team Boston Red Stockings when the team won in postseason?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Jazz'",
            "question": "Find the average unit price of jazz tracks.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "election_representative",
            "query": "SELECT avg( T1.Votes ) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Party = 'Republican'",
            "question": "What is the average number of votes of representatives from party \"Republican\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "school_finance",
            "query": "SELECT sum( T1.budgeted ) FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn'",
            "question": "What is the total budget amount for school \"Glenn\" in all years?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "Compute the average salary of the players in the team called 'Boston Red Stockings'.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( T2.rating ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female'",
            "question": "How many songs, on average, are sung by a female artist?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT avg( T1.sales ) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'",
            "question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status = 'Cancelled'",
            "question": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = 'Gym'",
            "question": "Show the total number of rooms of all apartments with facility code \"Gym\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status = 'Cancelled'",
            "question": "What is the total number of products that are in orders with status \"Cancelled\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT max( T2.active_to_date ) FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( T2.amount ) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
            "question": "What is the total amount of money loaned by banks in New York state?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( T2.amount ) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
            "question": "Find the total amount of loans provided by bank branches in the state of New York.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT max( T2.active_to_date ) FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T2.position ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Count the number of different positions in the club \"Bootup Baltimore\".",
            "ted": 0.0625
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT T2.Location_Code ) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.service_details = 'Unsatisfied'",
            "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?",
            "ted": 0.0625
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT T2.camera_lens_id ) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country = 'Ethiopia'",
            "question": "How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.College ) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Columbus Crew'",
            "question": "Count the number of different colleges that players who play for Columbus Crew are from.",
            "ted": 0.0625
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( DISTINCT T1.donator_name ) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn'",
            "question": "How many donors have endowment for school named \"Glenn\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many instruments does the song \"Le Pop\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many different instruments are used in the song \"Le Pop\"?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T2.position ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "How many different roles are there in the club \"Bootup Baltimore\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "How many different instruments does the musician with the last name \"Heilo\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "How many instrument does the musician with last name \"Heilo\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.Official_native_language ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "Count the number of different official languages corresponding to countries that players who play Defender are from.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( DISTINCT dst_apid ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "Find the number of different airports which are the destinations of the American Airlines.",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.Official_native_language ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "How many distinct official languages are there among countries of players whose positions are defenders.",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.College ) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Columbus Crew'",
            "question": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\".",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "How many different instruments are used in the song \"Badlands\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'lead'",
            "question": "How many songs have vocals of type lead?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "How many instruments does the song \"Badlands\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'shared'",
            "question": "How many different songs have shared vocals?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'shared'",
            "question": "How many songs have a shared vocal?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'lead'",
            "question": "How many songs have a lead vocal?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( DISTINCT dst_apid ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "What is the number of different different airports that are destinations for American Airlines?",
            "ted": 0.0625
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
            "question": "What are the different states that had students successfully try out?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Brazil'",
            "question": "Find the first names of all customers that live in Brazil and have an invoice.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'",
            "question": "Find the cities corresponding to employees who help customers with the postal code 70174.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = 'Bosco'",
            "question": "Find the ids of the problems that are reported by the staff whose last name is Bosco.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = 'The Phantom of the Opera'",
            "question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
            "question": "Find the states where have some college students in tryout and their decisions are yes.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = 'West Germany'",
            "question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = 'The Phantom of the Opera'",
            "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Germany'",
            "question": "Find the address of all customers that live in Germany and have invoice.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
            "question": "Find the states of the colleges that have students in the tryout who played in striker position.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
            "question": "What are the states of the colleges where students who tried out for the striker position attend?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic'",
            "question": "Return all the committees that have delegates from Democratic party.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
            "question": "What are the last names for all scholarship students?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Germany'",
            "question": "What are the addresses of customers living in Germany who have had an invoice?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT DISTINCT channel_code FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = 'Appropriations'",
            "question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = 'Bosco'",
            "question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Brazil'",
            "question": "What are the different first names for customers from Brazil who have also had an invoice?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = 'West Germany'",
            "question": "What are the different names of mountains ascended by climbers from the country of West Germany?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'",
            "question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
            "question": "What are the times used by climbers who climbed mountains in the country of Uganda?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk'",
            "question": "What are the details of the shops that can be accessed by walk?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T2.player = 'Walter Samuel'",
            "question": "What is the season of the game which causes the player 'Walter Samuel' to get injured?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = 'Taizhou ( Zhejiang ) '",
            "question": "What is the host year of city \"Taizhou ( Zhejiang )\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = 'Taizhou ( Zhejiang ) '",
            "question": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'AC/DC'",
            "question": "What are the titles of albums by the artist \"AC/DC\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk'",
            "question": "Find the details of the shops that can be reached by walk.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
            "question": "Give the address of the staff member who has the first name Elsa.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
            "question": "Where does the staff member with the first name Elsa live?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = 'US museum'",
            "question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = 'US museum'",
            "question": "Tell me the name of the staff in charge of the attraction called \"US museum\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'",
            "question": "What is the name of the language that the film 'AIRPORT POLLOCK' is in?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'",
            "question": "Which language does the film AIRPORT POLLOCK use? List the language name.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = 'Balls to the Wall'",
            "question": "Which artist does the album \"Balls to the Wall\" belong to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = 'Balls to the Wall'",
            "question": "Find the name of the artist who made the album \"Balls to the Wall\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed'",
            "question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed'",
            "question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'",
            "question": "Tell me the booking status code for the apartment with number \"Suite 634\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
            "question": "Show last names for all student who are on scholarship.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'",
            "question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic'",
            "question": "Which committees have delegates from the Democratic party?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'",
            "question": "What city does the employee who helps the customer with postal code 70174 live in?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
            "question": "Show the times used by climbers to climb mountains in Country Uganda.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = 'Appropriations'",
            "question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = 'Koby'",
            "question": "What is the role of the employee named Koby?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = 'null'",
            "question": "Find the names of all reviewers who have ratings with a NULL value for the date.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'",
            "question": "List the email addresses of the drama workshop groups located in Alaska state.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = 'stop'",
            "question": "What are the names of the workshop groups that have bookings with status code \"stop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = 'stop'",
            "question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = 'Solveig'",
            "question": "Find all the stage positions of the musicians with first name \"Solveig\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = 'Solveig'",
            "question": "What are the different stage positions for all musicians whose first name is \"Solveig\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What instruments does the the song \"Le Pop\" use?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the instruments are used in the song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT T1.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.catalog_level_number = '8'",
            "question": "Find the names of catalog entries with level number 8.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
            "question": "List all company names with a book published by Alyson.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = 'Government'",
            "question": "Give the ids for documents that have the budget description 'Government'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT T1.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.catalog_level_number = '8'",
            "question": "What are the names of catalog entries with level number 8?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = 'Government'",
            "question": "Show ids for all documents with budget types described as 'Government'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "Find all the instruments ever used by the musician with last name \"Heilo\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "What are all the instruments used by the musician with the last name \"Heilo\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the vocal types used in song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the types of vocals used in the song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = 'King Book'",
            "question": "What is the project detail for the project with document \"King Book\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
            "question": "What are all the company names that have a book published by Alyson?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "What are the vocal types used in song \"Badlands\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "What types of vocals are used in the song \"Badlands\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids",
            "question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids",
            "question": "List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = 'King Book'",
            "question": "Give the details of the project with the document name 'King Book'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "department_management",
            "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'",
            "question": "What are the distinct ages of the heads who are acting?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'",
            "question": "What are the email addresses of the drama workshop groups with address in Alaska state?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'",
            "question": "What are the names of the drama workshop groups with address in Feliciaberg city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Ryley Goldner'",
            "question": "Return the positions of players on the team Ryley Goldner.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Ryley Goldner'",
            "question": "Show the positions of the players from the team with name \"Ryley Goldner\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = 'North Coast'",
            "question": "What are the distinct names of wines that have appellations in the North Coast area?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = 'North Coast'",
            "question": "Find the names of all distinct wines that have appellations in North Coast area.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = 'Shanghai'",
            "question": "What is the temperature of \"Shanghai\" city in January?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'Red'",
            "question": "List the names of all distinct wines that are made of red color grape.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = 'Dublin'",
            "question": "Give the different positions of players who play for the country with the capital Dublin.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = 'Dublin'",
            "question": "What are the distinct positions of the players from a country whose capital is Dublin?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = 'Indonesia'",
            "question": "Who are the players from Indonesia?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = 'Indonesia'",
            "question": "Which players are from Indonesia?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'",
            "question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = 'FJA Filming'",
            "question": "Which city is the address of the store named \"FJA Filming\" located in?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = 'CA'",
            "question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = 'CA'",
            "question": "Find the states or counties where the stores with marketing region code \"CA\" are located.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = 'Rob Dinning'",
            "question": "What is the name of the marketing region that the store Rob Dinning belongs to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = 'Rob Dinning'",
            "question": "Return the name of the marketing region the store Rob Dinning is located in.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = 'null'",
            "question": "What are the different names of all reviewers whose ratings do not have a date field?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop'",
            "question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT DISTINCT channel_code FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb , Becker and Wyman'",
            "question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop'",
            "question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax'",
            "question": "what are the details of the cmi masters that have the cross reference code 'Tax'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = 'FJA Filming'",
            "question": "Find the city the store named \"FJA Filming\" is in.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'Red'",
            "question": "What are the names of wines made from red grapes?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = 'Shanghai'",
            "question": "Give me the temperature of Shanghai in January.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
            "question": "What is the total number of purchases for members with level 6?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning'",
            "question": "Which channels are broadcast in the morning? Give me the channel names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'advanced database'",
            "question": "Find the login name of the course author that teaches the course with name \"advanced database\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'advanced database'",
            "question": "Which course author teaches the \"advanced database\" course? Give me his or her login name.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock'",
            "question": "What is the name of tracks whose genre is Rock?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock'",
            "question": "What is the name of all tracks in the Rock genre?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = 'Julio'",
            "question": "Find the names of courses taught by the tutor who has personal name \"Julio\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = 'Julio'",
            "question": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = 'Professor'",
            "question": "Which students have professors as their advisors? Find their student ids.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = 'Professor'",
            "question": "Show the ids of students whose advisors are professors.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = 'Balls to the Wall'",
            "question": "What is title of album which track Balls to the Wall belongs to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = 'Balls to the Wall'",
            "question": "What is the name of the album that has the track Ball to the Wall?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning'",
            "question": "Find the names of the channels that are broadcast in the morning.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'",
            "question": "What is the total balance of savings accounts not belonging to someone with the name Brown?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'Spanish'",
            "question": "What is the date of enrollment of the course named \"Spanish\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'Spanish'",
            "question": "Find the the date of enrollment of the \"Spanish\" course.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Pass'",
            "question": "What are the enrollment dates of all the tests that have result \"Pass\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Pass'",
            "question": "Find the enrollment date for all the tests that have \"Pass\" result.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Fail'",
            "question": "What are the completion dates of all the tests that have result \"Fail\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Fail'",
            "question": "Return the completion date for all the tests that have \"Fail\" result.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'",
            "question": "List name of all tracks in Balls to the Wall.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'",
            "question": "What is the name of all tracks in the album named Balls to the Wall?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeramie'",
            "question": "Find the dates of orders which belong to the customer named \"Jeramie\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "railway",
            "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name = 'Andaman Exp'",
            "question": "Show the builder of railways associated with the trains named \"Andaman Exp\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'AC/DC'",
            "question": "Find the title of all the albums of the artist \"AC/DC\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'",
            "question": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = 'Airbus A340-300'",
            "question": "What are the flight numbers for the aircraft Airbus A340-300?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = 'Airbus A340-300'",
            "question": "Show all flight numbers with aircraft Airbus A340-300.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road'",
            "question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'",
            "question": "What is the first name of students who got grade C in any class?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'",
            "question": "What are the first names of all students who got a grade C in a class?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_date < '2018-03-17 07:13:53'",
            "question": "Find the total amount of products ordered before 2018-03-17 07:13:53.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_date < '2018-03-17 07:13:53'",
            "question": "What is the total amount of products purchased before 2018-03-17 07:13:53?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = 'game1'",
            "question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'",
            "question": "What is the id of the candidate whose email is stanley.monahan@example.org?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = 'game1'",
            "question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = 'l'",
            "question": "Return the lot details of lots that belong to investors with details \"l\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = 'Right Wing'",
            "question": "Show the names of clubs that have players with position \"Right Wing\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'",
            "question": "Find id of the candidate whose email is stanley.monahan@example.org?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
            "question": "How many courses does the student with id 171 actually attend?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = 'Right Wing'",
            "question": "What are the names of the clubs that have players in the position of \"Right Wing\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
            "question": "How many courses do the student whose id is 171 attend?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Aerosmith'",
            "question": "List Aerosmith's albums.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Aerosmith'",
            "question": "What are the titles of all the Aerosmith albums?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "company_1",
            "query": "SELECT T1.dname FROM department AS T1 JOIN dept_locations AS T2 ON T1.dnumber = T2.dnumber WHERE T2.dlocation = 'Houston'",
            "question": "Find the names of departments that are located in Houston.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage'",
            "question": "what are the event details of the services that have the type code 'Marriage'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = 'Nominated'",
            "question": "Please show the songs that have result \"nominated\" at music festivals.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = 'Nominated'",
            "question": "What are the songs in volumes that have resulted in a nomination at music festivals?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'",
            "question": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'",
            "question": "Return the issue dates of volumes that are by the artist named Gorgoroth.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
            "question": "How many events had participants whose details had the substring 'Dr.'",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Packing'",
            "question": "List the name of all the distinct customers who have orders with status \"Packing\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Packing'",
            "question": "Which customers have orders with status \"Packing\"? Give me the customer names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road'",
            "question": "Find the details of all the distinct customers who have orders with status \"On Road\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeramie'",
            "question": "What are the dates of the orders made by the customer named \"Jeramie\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = '918'",
            "question": "What are the email addresses of teachers whose address has zip code \"918\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = 'United States'",
            "question": "Show the distinct fate of missions that involve ships with nationality \"United States\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Win'",
            "question": "Find the names of swimmers who has a result of \"win\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy'",
            "question": "Find the names of the customers who have an deputy policy.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
            "question": "What is the name of the product with the color description 'yellow'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = 'United States'",
            "question": "What are the different fates of the mission that involved ships from the United States?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_details = 'Dayana Robel'",
            "question": "What are the type codes of the policies used by the customer \"Dayana Robel\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_details = 'Dayana Robel'",
            "question": "Find all the policy type codes associated with the customer \"Dayana Robel\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
            "question": "Find the organisation type description of the organisation detailed as 'quo'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
            "question": "What is the type description of the organization whose detail is listed as 'quo'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = 'Spring'",
            "question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = 'Fall'",
            "question": "What are the distinct ages of students who have secretary votes in the fall election cycle?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_2",
            "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
            "question": "Give id of the instructor who advises students in the History department.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy'",
            "question": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_2",
            "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
            "question": "What is the id of the instructor who advises of all students from History department?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = 'Fall'",
            "question": "Find the distinct ages of students who have secretary votes in the fall election cycle.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'",
            "question": "Who are Bob's friends?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
            "question": "Find the name of persons who are friends with Bob.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
            "question": "What are the names of all of Bob's friends?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'",
            "question": "Who has a friend that is from new york city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'",
            "question": "What are the names of all friends who are from New York?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Country = 'Canada'",
            "question": "Show the distinct leader names of colleges associated with members from country \"Canada\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.section_title FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code WHERE T1.document_name = 'David CV'",
            "question": "What are all the section titles of the document named \"David CV\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.section_title FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code WHERE T1.document_name = 'David CV'",
            "question": "Give the section titles of the document with the name \"David CV\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
            "question": "What are the total purchases for members rated at level 6?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'",
            "question": "Who are the friends of Bob?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
            "question": "Give the name of the products that have a color description 'yellow'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = 'Spring'",
            "question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = 'Fanny'",
            "question": "Find the dates of assessment notes for students with first name \"Fanny\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'Lyla'",
            "question": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'white'",
            "question": "What are the names of products with 'white' as their color description?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = 'catnip'",
            "question": "What is the color description of the product with name \"catnip\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.unit_of_measure FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code WHERE T1.product_name = 'cumin'",
            "question": "What is the unit of measurement of product named \"cumin\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = 'How to read a book'",
            "question": "What is the document type name for the document with name \"How to read a book\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE '%a%'",
            "question": "How many lessons taught by staff whose first name has letter 'a' in it?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'white'",
            "question": "List all the product names with the color description \"white\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = 'Texas'",
            "question": "What are the monthly rentals of student addresses in Texas state?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = 'How to read a book'",
            "question": "Find the document type name of the document named \"How to read a book\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Editor'",
            "question": "Find the names of all the employees whose the role name is \"Editor\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.unit_of_measure FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code WHERE T1.product_name = 'cumin'",
            "question": "Give the unit of measure for the product with the name 'cumin'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = 'catnip'",
            "question": "Give the color description for the product 'catnip'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = 'Schuster'",
            "question": "Find the texts of assessment notes for teachers with last name \"Schuster\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Editor'",
            "question": "Show the names of employees with role name Editor.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE '%a%'",
            "question": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != 'Progress Party'",
            "question": "Which member names corresponding to members who are not in the Progress Party?",
            "ted": 0.1
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country != 'China'",
            "question": "What are the names of perpetrators whose country is not \"China\"?",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != 'Rachel Elnaugh'",
            "question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != 'Rachel Elnaugh'",
            "question": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != 'Santo Domingo'",
            "question": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?",
            "ted": 0.1
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != 'Progress Party'",
            "question": "Show member names that are not in the Progress Party.",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != 'Santo Domingo'",
            "question": "Return the names of gymnasts who did not grow up in Santo Domingo.",
            "ted": 0.1
        }
    ],
    "SELECT T2.name , count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id": [
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
            "question": "List the id of students who registered some courses and the number of their registered courses?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "How many members are in each party?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
            "question": "List the name of all products along with the number of complaints that they have received.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
            "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
            "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
            "question": "What are the faculty id and the number of students each faculty has?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
            "question": "Show all the faculty ranks and the number of students advised by each rank.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
            "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
            "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
            "question": "For each user, find their name and the number of reviews written by them.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "Show party names and the number of events for each party.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "How many events are there for each party?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
            "question": "Show all the activity names and the number of faculty involved in each activity.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
            "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
            "question": "For each building, show the name of the building and the number of institutions in it.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
            "question": "Show the names of pilots and the number of records they have.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
            "question": "Show the name of track and the number of races in each track.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
            "question": "Return the name of each physician and the number of patients he or she treats.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
            "question": "How many exhibitions has each artist had?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "Show all party names and the number of members in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
            "question": "What are all the different product names, and how many complains has each received?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
            "question": "Show institution names along with the number of proteins for each institution.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
            "question": "Show the station name and number of trains in each station.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
            "question": "What are the different card types, and how many transactions have been made with each?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
            "question": "Find the name of each user and number of tweets tweeted by each of them.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
            "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
            "question": "For every student who is registered for some course, how many courses are they registered for?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
            "question": "Show the company name with the number of gas station.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
            "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
            "question": "Show all cities along with the number of drama workshop groups in each city.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
            "question": "What is the name of each course and the corresponding number of student enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
            "question": "List the name and the number of enrolled student for each course.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown , COUNT( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
            "question": "How many gymnasts are from each hometown?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown , COUNT( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
            "question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
            "question": "Show aircraft names and number of flights for each aircraft.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
            "question": "What is the name of each aircraft and how many flights does each one complete?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , count( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id",
            "question": "How many games has each stadium held?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
            "question": "For each company id, what are the companies and how many gas stations does each one operate?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
            "question": "Show all artist names and the number of exhibitions for each artist.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
            "question": "Show the card type codes and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
            "question": "What are the department names and how many employees work in each of them?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T2.Name , COUNT( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
            "question": "What are the names of the technicians  and how many machines are they assigned to repair?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
            "question": "What are the names of different tracks, and how many races has each had?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft , COUNT( * ) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
            "question": "List the names of aircrafts and the number of times it won matches.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name , count( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
            "question": "Show the name for regions and the number of storms for each region.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name , count( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
            "question": "How many storms occured in each region?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , COUNT( * ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
            "question": "How many players are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , count( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
            "question": "List the name for storms and the number of affected regions for each storm.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , count( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
            "question": "How many regions were affected by each storm?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.staff_name , count( * ) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name",
            "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party , COUNT( * ) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
            "question": "For each party, return the name of the party and the number of delegates from that party.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT T2.Name , COUNT( * ) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",
            "question": "Show the names of people and the number of times they have been on the affirmative side of debates.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party , COUNT( * ) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
            "question": "Show the name of each party and the corresponding number of delegates from that party.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT T2.type , count( * ) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",
            "question": "Show the type of school and the number of buses for each type.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name , COUNT( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
            "question": "For each county, find the name of the county and the number of delegates from that county.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT T1.Product_Name , COUNT( * ) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name",
            "question": "Show the names of products and the number of events they are in.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name , COUNT( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
            "question": "Show the name of each county along with the corresponding number of delegates from that county.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT T2.allergytype , count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
            "question": "Show all allergy type with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.property_id , count( * ) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id",
            "question": "How many residents does each property have? List property id and resident count.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T2.Name , COUNT( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
            "question": "Show names of technicians and the number of machines they are assigned to repair.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft , COUNT( * ) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
            "question": "For each aircraft that has won an award, what is its name and how many time has it won?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T2.state_province_county , count( * ) FROM customer_addresses AS T1 JOIN addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.state_province_county",
            "question": "List the state names and the number of customers living in each state.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
            "question": "display the department name and number of employees in each of the department.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
            "question": "display the department name and number of employees in each of the department.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT T2.allergytype , count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
            "question": "How many students are affected by each allergy type?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name , COUNT( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
            "question": "How many actors have appeared in each musical?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name , COUNT( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
            "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
            "question": "Give the name of each department and the number of employees in each.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , count( * ) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",
            "question": "How many assets can each parts be used in? List the part name and the number.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , COUNT( * ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
            "question": "Show the country names and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
            "question": "display job title and average salary of employees.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
            "question": "What are the different product names, and what is the sum of quantity ordered for each product?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T1.Name , avg( T2.Speed ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",
            "question": "Show the names of countries and the average speed of roller coasters from each country.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , avg( trust ) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",
            "question": "Find each target user's name and average trust score.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.name , sum( T1.show_times_per_day ) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
            "question": "What is total number of show times per dat for each cinema?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.title , max( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
            "question": "What are the title and maximum price of each film?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.title , max( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
            "question": "Give me the title and highest price for each film.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.line_1 , avg( T2.monthly_rental ) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",
            "question": "What are the line 1 and average monthly rentals of all student addresses?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
            "question": "What is the average salary for each job title?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , avg( T2.rating ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
            "question": "For each user, return the name and the average rating of reviews given by them.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T2.Name , sum( T1.Num_of_stock ) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name",
            "question": "For each phone, show its names and total number of stocks.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.lot_id , avg( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",
            "question": "Show the average amount of transactions for different lots.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
            "question": "What is the average rating star for each reviewer?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
            "question": "What is the average number of stars that each reviewer awards for a movie?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
            "question": "Show all product names and the total quantity ordered for each product name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.product_name , sum( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",
            "question": "Show the product name and total order quantity for each product.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , COUNT( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
            "question": "How many workshops did each author submit to? Return the author name and the number of workshops.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , COUNT( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
            "question": "Show each author and the number of workshops they submitted to.",
            "ted": 0.06666666666666667
        }
    ],
    "SELECT count( * ) FROM Transcripts": [
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "Count the number of budget codes.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "How many counties are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "Count the number of statements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "How many statements do we have?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "Count the total number of counties.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists do we have?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM station",
            "question": "How many train stations are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM event",
            "question": "How many events are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "Count the number of companies.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "How many film are there?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM stadium",
            "question": "How many stadiums are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "How many companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "What is the total number of faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games exist?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games do you have?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "How many faculty do we have?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( * ) FROM perpetrator",
            "question": "How many perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "Count the number of bank branches.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "How many bank branches are there?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT count( * ) FROM journalist",
            "question": "How many journalists are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "How many apartment bookings are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "Count the number of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "How many wrestlers are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "Count the total number of apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( * ) FROM election",
            "question": "How many elections are there?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM train",
            "question": "Show the number of trains",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "Count the number of films.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "How many tracks do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "How many cinema do we have?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "How many songs are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Count the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Show the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "How many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "What is the number of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "How many settlements are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "Count the number of songs.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM body_builder",
            "question": "How many body builders are there?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM building",
            "question": "How many buildings are there?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "How many races are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "Count the total number of settlements made.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "How many entrepreneurs are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "Count the number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "Count the number of ships.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts exist in the database?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "Find the total number of catalog contents.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "Count the number of tracks.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "How many products are there in the records?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "Count the number of races.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "How many customer cards are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "Show the number of customer cards.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT count( * ) FROM railway",
            "question": "How many railways are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "How many accounts are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT count( * ) FROM player",
            "question": "How many players are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT count( * ) FROM driver",
            "question": "How many drivers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many employees are there?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT count( * ) FROM editor",
            "question": "How many editors are there?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "How many CSU campuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "Return the total number of distinct customers.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "What is the total number of campuses?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "Count the number of total papers.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "How many candidates are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many staff in total?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM tweets",
            "question": "Find the number of tweets in record.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "Count the number of gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "How many gymnasts are there?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT count( * ) FROM performance",
            "question": "How many performances are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "What is the number of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "How many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "Count how many appointments have been made in total.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "Count the number of candidates.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM follows",
            "question": "How many followers does each user have?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "How many appointments are there?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT count( * ) FROM member",
            "question": "How many members are there?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM user_profiles",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "Count the number of actors.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "How many actors are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "How many papers are published in total?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( * ) FROM customers",
            "question": "Find the number of customers in total.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM review",
            "question": "Find the number of reviews.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "How many authors are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers do we have?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "How many aircrafts are there?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "What is the number of aircraft?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT count( * ) FROM book",
            "question": "How many books are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers in total?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "Count the number of stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "How many stores are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "How many activities do we have?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "Count the number of authors.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "How many institutions are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "How many diffrent dorm amenities are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "Find the number of distinct amenities.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicle in total?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicles exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are in the database?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "Count the number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers are there?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers listed?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "Count the number of cinemas.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "How many students are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "How many bands are there?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "Count the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "Count the total number of clubs.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "Count the number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "How many rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "What is the total number of rooms available in this inn?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "How many counties are there?",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT count( * ) FROM debate",
            "question": "How many debates are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "Count the number of documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "Count the total number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "How many bookings do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT count( * ) FROM premises",
            "question": "How many premises are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "How many devices are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "Count the total number of bookings made.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT count( * ) FROM roller_coaster",
            "question": "How many roller coasters are there?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT count( * ) FROM INVESTORS",
            "question": "Find the number of investors in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "How many documents have expenses?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( * ) FROM rent_arrears",
            "question": "How many council taxes are collected for renting arrears ?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "What is the total number of companies?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "Find the number of bands.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "What is the total number of clubs?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "Count the number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the total number of available services.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "Find the total number of scientists.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "How many transactions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "How many party events do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "Count the number of party events.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "Find the number of activities available.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT count( * ) FROM pilot",
            "question": "How many pilots are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Show the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct courses are enrolled in by students?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "How many airlines are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "What is the total number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "What is the total count of enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "How many kinds of enzymes are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "Find the total number of courses offered.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "Find the total number of employees.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "How many farms are there?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "Count the number of farms.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "What is the total number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "How many available hotels are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct courses that have enrolled students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "Find the total number of available hotels.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "How many employees are there all together?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "How many scientists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Show the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "Find the number of distinct stages in claim processing.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "How many claim processing stages are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "How many invoices do we have?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT count( * ) FROM artwork",
            "question": "How many artworks are there?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "How many gas companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "Count the number of products.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "Count the total number of roles listed.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "How many roles are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "Count the number of invoices.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "How many colors are there?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "How many voting records do we have?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "Count the number of book clubs.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "How many book clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "Find the number of albums.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "How many albums are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many different colleges are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "How many locations are listed in the database?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "How many submissions are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "Show the number of locations.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "Count the number of colors.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "How many characteristics are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "Count the number of characteristics.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "What is the number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM ASSESSMENT_NOTES",
            "question": "How many assessment notes are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "How many climbers are there?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "Count the number of climbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "How many document types are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "Show the number of document types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "Find the number of voting records in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "Count the number of all the calendar items.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "How many calendar items do we have?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many colleges in total?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "how many programs are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the number of services.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "How many projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "Count the number of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "Show the number of projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "How many budget types do we have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "How many countries are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "Find the number of employees we have.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "Count the number of customers recorded.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "How many flights do we have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "What is the number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "How many parties are there?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "Count the number of parties.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "Count the number of programs.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT count( * ) FROM phone",
            "question": "How many phones are there?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT count( * ) FROM Products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "How many customers do we have?",
            "ted": 0.0
        }
    ],
    "select T2.department_name , T1.department_id from degree_programs as T1 join departments as T2 on T1.department_id = T2.department_id group by T1.department_id order by count( * ) desc limit 1": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the description and code of the type of service that is performed the most often?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and hours for the project which has the most scientists assigned to it?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the description and code of the service type that is performed the most times.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details and id of the project with the most outcomes?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which project made the most number of outcomes? List the project details and the project id.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the student ID and login name of the student with the most course enrollments",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student who played the most sports?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first name and last name of the student who have most number of sports?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "For the airline ids with the top 10 most routes operated, what are their names?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "Find the names of the top 10 airlines that operate the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and country for the artist with most number of exhibitions?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
            "question": "Show the id and details for the investors who have the top 3 number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name and id of the college that has the most baseball players.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most copies in the inventory? List both title and id.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name of employee who supported the most number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type and id of the organization that has the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the first and last name of the faculty who has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give me the the first and last name of the faculty who advises the most students.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the code and description of the most frequent behavior incident type?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and details of the investor that has the largest number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and first name of the student that has the most number of assessment notes?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the faculty participating in the most activities?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and last name of the student that has the most behavior incidents?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student participating in the most activities?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the full name of the employee who has the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description and code of the attraction type most tourist attractions belong to.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and hours of project that has the most number of scientists.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the storm name and max speed which affected the greatest number of regions?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and builder of the railway that are associated with the most trains.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the browser that is compatible with the most web accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the first and last names of the instructors who teach the top 3 number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date for the invoice with most number of transactions?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that has been reviewed the most?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and max speed of the storm that affected the most regions.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the full names of the 3 instructors who teach the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and address of the department with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and address of the department that has the highest number of students.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that is rated by most of times?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the student ID and login name of the student who are enrolled in the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T1.club_id , T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many gold medals has the club with the most coaches won?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the full name and id of the college with the largest number of baseball players?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.booking_id , T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the salary and name of the employee who has the most number of aircraft certificates?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which student visited restaurant most often? List student's first name and last name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Tell me the first and last name of the student who has the most activities.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the salaray and name of the employee that is certified to fly the most planes?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.product_name , T1.product_price FROM products AS T1 JOIN regular_order_products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and price of the product that has been ordered the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What are the name and code of the location with the smallest number of documents?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "Find the name and position of the head of the department with the least employees.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG( monthly_rental ) DESC LIMIT 1",
            "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Show the location name and code with the least documents.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rank ) DESC LIMIT 1",
            "question": "Find the name and id of the good with the highest average rank.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rating ) DESC LIMIT 1",
            "question": "Find the name and id of the item with the highest average rating.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "what is the name and position of the head whose department has least number of employees?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What are the code and description of the least frequent detention type ?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id ORDER BY avg( high_temperature ) DESC LIMIT 1",
            "question": "Find the id and local authority of the station with has the highest average high temperature.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.address_id , T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY AVG( monthly_rental ) DESC LIMIT 1",
            "question": "Find the id and city of the student address with the highest average monthly rental.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has the most problems? Give me the number of problems and the product name.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city , count( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which city do the most employees live and how many of them live there?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city , count( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city lives most of staffs? List the city name and number of staffs.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many problems does the product with the most problems have? List the number of the problems and product name.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , count( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name , COUNT( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 5",
            "question": "How many tracks does each genre have and what are the names of the top 5?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , count( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "List the organisation id with the maximum outcome count, and the count.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name , COUNT( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 5",
            "question": "List the top 5 genres by number of tracks. List genres name and total tracks.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , count( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the names and number of works of the three artists who have produced the most songs.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , count( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count( Documents.document_id ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count( Documents.document_id ) DESC LIMIT 1",
            "question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details , T2.product_id FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY sum( T1.order_quantity ) LIMIT 1",
            "question": "Find the name and ID of the product whose total order quantity is the largest.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg( T2.salary ) ASC LIMIT 1",
            "question": "Which team offers the lowest average salary? Give me the name and id of the team.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg( T2.salary ) ASC LIMIT 1",
            "question": "What are the name and id of the team offering the lowest average salary?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details , T2.product_id FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY sum( T1.order_quantity ) LIMIT 1",
            "question": "What are the name and ID of the product bought the most.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name , avg( T1.age ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY avg( T1.age ) DESC LIMIT 1",
            "question": "Which person whose friends have the oldest average age?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name , avg( T1.age ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY avg( T1.age ) DESC LIMIT 1",
            "question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , avg( T1.stu_gpa ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY avg( T1.stu_gpa ) DESC LIMIT 1",
            "question": "What is the name and the average gpa of department whose students have the highest average gpa?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , avg( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg( T1.stars ) DESC LIMIT 1",
            "question": "What are the movie titles with the highest average rating and what are those ratings?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , avg( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg( T1.stars ) DESC LIMIT 1",
            "question": "Find the movies with the highest average rating. Return the movie titles and average rating.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , avg( T1.stu_gpa ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY avg( T1.stu_gpa ) DESC LIMIT 1",
            "question": "Which department has the highest average student GPA, and what is the average gpa?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the ids, types, and details of the organization with the most research staff?",
            "ted": 0.1
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the teacher who teaches the largest number of students.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the title, id, and description of the movie with the greatest number of actors?",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most number of actors or actresses? List the film name, film id and description.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id and full name of the customer with the most accounts.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.",
            "ted": 0.1
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and nationality of the architect who built most mills?",
            "ted": 0.1
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name , T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and IATA code of the airport that had most number of flights?",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
            "ted": 0.1
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name, phone number and email address for the customer with the most orders.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id, first and last name with most number of accounts.",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the first name, last name and id for the top three players won the most player awards.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer last name, id and phone number with most number of orders?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the manager's first name, last name and id who won the most manager award?",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the source for the most number of flight routes.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport from most of the routes start?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Which 3 players won the most player awards? List their full name and id.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the destination of the most number of routes.",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport that the most routes end at?",
            "ted": 0.1
        }
    ],
    "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )": [
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "List the names of mountains that do not have any climber.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
            "question": "List the names of products that are not in any event.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
            "question": "List the name of artworks that are not nominated.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the names of courses without prerequisites?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "What are the names of instructors who didn't teach?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "Give the names of people who did not participate in the candidate election.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "what are the names of people who did not participate in the candidate election.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "Find the first name of students not enrolled in any course.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "What are the first names of all students that are not enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "List the names of aircrafts and that did not win any match.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "What are the names of all aicrafts that have never won any match?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "List the locations of schools that do not have any player.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "Which schools do not have any player? Give me the school locations.",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
            "question": "List the names of people that are not perpetrators.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "What are the famous titles of artists who do not have any volumes?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "Which buildings do not have any company office? Give me the building names.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "Find the famous titles of artists that do not have any volume.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "List the names of buildings that have no company office.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all info of students who registered courses but not attended courses?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the titles of courses without prerequisites?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
            "question": "List the names of people that are not employed by any company",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "List the title of films that do not have any market estimation.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "What are the titles of films that do not have a film market estimation?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "What are the names of counties that do not contain any cities?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "List the names of counties that do not have any cities.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "Which projects have no outcome? List the project details.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "What are the details of the project with no outcomes?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "What are the titles of all movies that have not been rated?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "Find the titles of all movies that have no ratings.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
            "question": "List the names of members who did not participate in any round.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "Find all the name of documents without any sections.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "What are the names of documents that do not have any sections?",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM school_bus )",
            "question": "Show the names of the drivers without a school bus.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all details of the students who registered but did not attend any course?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "Select the project names which are not assigned yet.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "What are the names of people who are not entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people )",
            "question": "List the names of people that have not been on the affirmative side of debates.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "List the authors who do not have submission to any workshop.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "Show names for artists without any exhibition.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "What are the prices of products that have never gotten a complaint?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "Find the prices of products which has never received a single complaint.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN ( SELECT Player_ID FROM player_coach )",
            "question": "List the names of players that do not have coaches.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium WHERE id NOT IN ( SELECT stadium_id FROM event )",
            "question": "Find the names of stadiums which have never had any event.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record )",
            "question": "Find the names of the swimmers who have no record.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "What are the names of artists that have not had any exhibitions?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "What are the names of all the dorms that don't have any amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "Find the name of dorms that do not have any amenity",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the names of the items that did not receive any review.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train )",
            "question": "List the object number of railways that do not have any trains.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Book_ID NOT IN ( SELECT Book_ID FROM publication )",
            "question": "List the titles of books that are not published.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "Which authors did not submit to any workshop?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "List the names of people that are not entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "List the name of musicals that do not have actors.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "What are the names of the members that have never registered at any branch?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "What are the names of the technicians that have not been assigned to repair machines?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "List the names of technicians who have not been assigned to repair machines.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "List the names of shops that have no devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "What are the names of shops that do not have any devices in stock?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "List the carriers of devices that have no devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "What are the carriers of devices that are not in stock anywhere?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN ( SELECT Pilot_ID FROM pilot_record )",
            "question": "List the names of pilots that do not have any record.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "What are the names of parties that have no members?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "Show names of parties that does not have any members.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market )",
            "question": "List the names of phones that are not on any market.",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution )",
            "question": "Show the name of buildings that do not have any institution.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school WHERE school_id NOT IN ( SELECT school_id FROM endowment )",
            "question": "List the names of the schools without any endowment.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "What are the names of wrestlers who have never been eliminated?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "List the names of wrestlers that have not been eliminated.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "Show member names without any registered branch.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "What are the names of musicals who have no actors?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "What are the names of projects that have not been assigned?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "Find the name of instructors who didn't teach any courses?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "What are the names of scientists who have not been assigned a project?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "Return the names of teams that have no match season record.",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM member_attendance )",
            "question": "List the names of members who did not attend any performance.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "List the name of ships that are not involved in any mission",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE editor_id NOT IN ( SELECT editor_id FROM journal_committee )",
            "question": "List the names of editors that are not on any journal committee.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "List the names of clubs that do not have any players.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "Show the name for regions not affected.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "What are the names of regions that were not affected?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "Show the name of storms which don't have affected region in record.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "What are the names of storms that did not affect any regions?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "What is all the information about employees who have never had a job in the past?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Show all track names that have had no races.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Return the names of tracks that have no had any races.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "List the official names of cities that have not held any competition.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees )",
            "question": "Find the states which do not have any employee in their record.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "What are the names of parties that do not have delegates in election?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT name FROM station WHERE station_id NOT IN ( SELECT station_id FROM train_station )",
            "question": "Show station names without any trains.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the name of scientists who are not assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN ( SELECT asset_id FROM Fault_Log )",
            "question": "Which assets did not incur any fault log? List the asset model.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN ( SELECT journalist_ID FROM news_report )",
            "question": "List the names of journalists who have not reported any event.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "Which parties did not have any delegates in elections?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "What are the official names of cities that have not hosted a farm competition?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "display all the information of those employees who did not have any job in the past.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "What are the names of all clubs that do not have any players?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "What are the names of the ships that are not involved in any missions?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "What are the names of hosts who did not host any party in our record?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "List the id of students who never attends courses?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are the  ids of every student who has never attended a course?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "What are the names of teams that do no have match season record?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "List the names of hosts who did not serve as a host of any party in our record.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "What are the names of countains that no climber has climbed?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election )",
            "question": "List the names of representatives that have not participated in elections listed here.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "Count the number of products that were never ordered.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "How many schools do not participate in the basketball match?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "Count the number of universities that do not participate in the baketball match.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items without any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events )",
            "question": "How many events did not have any participants?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "How many customers have no payment histories?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the number of users who did not write any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "List the number of customers that did not have any payment history.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "Count the number of students who did not enroll in any course.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "How many apartments do not have any facility?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "Find the number of apartments that have no facility.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
            "question": "How many accelerators are not compatible with the browsers listed ?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have never taken a loan?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
            "question": "How many camera lenses are not used in taking any photos?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who do not have any loan.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers do not have an account?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Show the number of all customers without an account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "How many colors are never used by any product?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "Count the number of colors that are not used in any products.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who do not have any tweet.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "How many products were not included in any order?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "How many enzymes do not have any interactions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
            "question": "Find the average ram mib size of the chip models that are never used by any phone.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "How many tourists did not make any visit?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers don't have an account?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "Count the number of tourists who did not visit any place.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM institution WHERE institution_id NOT IN ( SELECT institution_id FROM protein )",
            "question": "How many institutions do not have an associated protein in our record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Count the number of customers who do not have an account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM department WHERE department_id NOT IN ( SELECT department_id FROM management ) ",
            "question": "How many departments are led by heads who are not mentioned?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "What is the count of enzymes without any interactions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "How many students did not have any course enrollment?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
            "question": "How many students are not involved in any behavior incident?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
            "question": "How many customers did not have any event?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items that did not receive any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "How many artists do not have any album?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "Cound the number of artists who have not released an album.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "How many documents do not have any expense?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM people WHERE people_id NOT IN ( SELECT People_ID FROM body_builder )",
            "question": "How many persons are not body builders?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
            "question": "How many games are free of injury accidents?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "How many courses that do not have prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Count the number of courses without prerequisites.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "How many scientists do not have any projects assigned to them?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the number of scientists who are not assigned to any project.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "Count the number of documents that do not have expenses.",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT other_student_details FROM Students ORDER BY other_student_details DESC": [
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age DESC",
            "question": "Sort all captain names by their ages from old to young.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character FROM actor ORDER BY age DESC",
            "question": "Return the characters for actors, ordered by age descending.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver ORDER BY age DESC",
            "question": "Show the name of drivers in descending order of age.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
            "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
            "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person ORDER BY age DESC",
            "question": "What are the names of everybody sorted by age in descending order?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person ORDER BY age DESC",
            "question": "Find the names of all person sorted in the descending order using age.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY name DESC",
            "question": "What are the names of all the clubs ordered in descending alphabetical order?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character FROM actor ORDER BY age DESC",
            "question": "What are the characters of actors in descending order of age?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY name DESC",
            "question": "List all club names in descending alphabetical order.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
            "question": "What are the names of the counties of public safety, ordered by population descending?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
            "question": "List the names of counties in descending order of population.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme ORDER BY name DESC",
            "question": "List the name of enzymes in descending lexicographical order.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT venue FROM MATCH ORDER BY date DESC",
            "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT venue FROM MATCH ORDER BY date DESC",
            "question": "List venues of all matches in the order of their dates starting from the most recent one.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age DESC",
            "question": "What are the names of captains, sorted by age descending?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC",
            "question": "Find all information about student addresses, and sort by monthly rental in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme ORDER BY name DESC",
            "question": "What are the names of enzymes in descending order?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY County_name DESC",
            "question": "Sort the names of all counties in descending alphabetical order.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
            "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
            "question": "Show the working years of managers in descending order of their level.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
            "question": "Show the case burden of counties in descending order of population.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
            "question": "What are the case burdens of counties, ordered descending by population?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
            "question": "What are the names of the wrestlers, ordered descending by days held?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
            "question": "List the names of wrestlers in descending order of days held.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM event ORDER BY YEAR DESC",
            "question": "List all the event names by year from the most recent to the oldest.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Votes FROM election ORDER BY Votes DESC",
            "question": "List the votes of elections in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
            "question": "List the names of companies in descending order of market value.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
            "question": "List all channel names ordered by their rating in percent from big to small.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
            "question": "Sort the company names in descending order of the company's market value.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
            "question": "Find the first name of students in the descending order of age.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings ORDER BY Height DESC",
            "question": "List the names of buildings in descending order of building height.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings ORDER BY Height DESC",
            "question": "What are the names of buildings sorted in descending order of building height?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
            "question": "What are the first names of students, ordered by age from greatest to least?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber ORDER BY Points DESC",
            "question": "What are the names of the climbers, ordered by points descending?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber ORDER BY Points DESC",
            "question": "List the names of climbers in descending order of points.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication ORDER BY Price DESC",
            "question": "What are the dates of publications in descending order of price?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT name FROM browser ORDER BY market_share DESC",
            "question": "List the name of browsers in descending order by market share.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY County_name DESC",
            "question": "Return the names of all counties sorted by county name in descending alphabetical order.",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT Date FROM game ORDER BY home_team DESC",
            "question": "List the dates of games by the home team name in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
            "question": "List the total points of gymnasts in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
            "question": "What are the official names of cities, ordered descending by population?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT name FROM church ORDER BY open_date DESC",
            "question": "List all church names in descending order of opening date.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Age DESC",
            "question": "What are the names of all pilots listed by descending age?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
            "question": "What is the list of school locations sorted in descending order of school foundation year?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
            "question": "List all countries of markets in descending order of number of cities.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
            "question": "List official names of cities in descending order of population.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC",
            "question": "List all information about customer master index, and sort them by details in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
            "question": "What are the countries for each market ordered by decreasing number of cities?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
            "question": "List the total points of gymnasts in descending order of floor exercise points.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
            "question": "List the locations of schools in descending order of founded year.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
            "question": "What are the total points for all gymnasts, ordered by total points descending?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Age DESC",
            "question": "List names of all pilot in descending order of age.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
            "question": "What are the companies of entrepreneurs, ordered descending by amount of money requested?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
            "question": "What are the total points of gymnasts, ordered by their floor exercise points descending?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
            "question": "List the companies of entrepreneurs in descending order of money requested.",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Date FROM perpetrator ORDER BY Killed DESC",
            "question": "List the date of perpetrators in descending order of the number of people killed.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM scientists ORDER BY name",
            "question": "List the names of all scientists sorted in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors ORDER BY fname",
            "question": "Sort the first names of all the authors in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
            "question": "What are the themes of parties ordered by the number of hosts in ascending manner?",
            "ted": 0.1
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
            "question": "List the themes of parties in ascending order of number of hosts.",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors ORDER BY fname",
            "question": "Find the first names of all the authors ordered in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "match_season",
            "query": "SELECT player FROM match_season ORDER BY College ASC",
            "question": "Return all players sorted by college in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Team ASC",
            "question": "Find the team of each player and sort them in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "railway",
            "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
            "question": "What are the names of managers in ascending order of level?",
            "ted": 0.1
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder FROM railway ORDER BY Builder ASC",
            "question": "List the builders of railways in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Name ASC",
            "question": "Give the names of mountains in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Name ASC",
            "question": "What are the names of mountains in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book ORDER BY Issues ASC",
            "question": "List the titles of the books in ascending order of issues.",
            "ted": 0.1
        },
        {
            "db_id": "book_2",
            "query": "SELECT Writer FROM book ORDER BY Writer ASC",
            "question": "List the writers of the books in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "match_season",
            "query": "SELECT player FROM match_season ORDER BY College ASC",
            "question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member ORDER BY Name ASC",
            "question": "List the names of members in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Team ASC",
            "question": "What are the teams of the players, sorted in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC",
            "question": "Return the names of all counties sorted by population in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM scientists ORDER BY name",
            "question": "What are the names of all the scientists in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT * FROM COURSE ORDER BY Credits",
            "question": "What is all the information about courses, ordered by credits ascending?",
            "ted": 0.1
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
            "question": "Sort the apartment numbers in ascending order of room count.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
            "question": "List the locations of schools in ascending order of enrollment.",
            "ted": 0.1
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people ORDER BY date_of_birth",
            "question": "What are the names of all people, ordered by their date of birth?",
            "ted": 0.1
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people ORDER BY date_of_birth",
            "question": "List all people names in the order of their date of birth from old to young.",
            "ted": 0.1
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
            "question": "Return all the apartment numbers sorted by the room count in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school ORDER BY school_name",
            "question": "Show all school names in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song ORDER BY resolution",
            "question": "Give me a list of the names of all songs ordered by their resolution.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
            "question": "What is the list of school locations sorted in ascending order of school enrollment?",
            "ted": 0.1
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song ORDER BY resolution",
            "question": "What are the names of all songs that are ordered by their resolution numbers?",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors ORDER BY lname",
            "question": "Retrieve all the last names of authors in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Injured FROM perpetrator ORDER BY Injured ASC",
            "question": "List the number of people injured by perpetrators in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
            "question": "Sort the names of products in ascending order of their price.",
            "ted": 0.1
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM People ORDER BY Height ASC",
            "question": "What are the names of people in ascending order of height?",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM People ORDER BY Weight ASC",
            "question": "Return the names of people, ordered by weight ascending.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
            "question": "List all product names in ascending order of price.",
            "ted": 0.1
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Date FROM People ORDER BY Height ASC",
            "question": "What are the birthdays of people in ascending order of height?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE ORDER BY Credits",
            "question": "List the course name of courses sorted by credits.",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM People ORDER BY Weight ASC",
            "question": "What are the names of people in ascending order of weight?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE ORDER BY Credits",
            "question": "What are the course names, ordered by credits?",
            "ted": 0.1
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Total FROM body_builder ORDER BY Total ASC",
            "question": "List the total scores of body builders in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors ORDER BY lname",
            "question": "Give me a list of all the last names of authors sorted in alphabetical order",
            "ted": 0.1
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer ORDER BY meter_100",
            "question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT title FROM albums ORDER BY title",
            "question": "List every album ordered by album title in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician ORDER BY Age ASC",
            "question": "List the names of technicians in ascending order of age.",
            "ted": 0.1
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician ORDER BY Age ASC",
            "question": "What are the names of the technicians by ascending order of age?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
            "question": "What details are there on the research staff? List the result in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
            "question": "List the research staff details, and order in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM ORDER BY Title",
            "question": "What are all the album titles, in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM ORDER BY Title",
            "question": "Please list all album titles in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
            "question": "List the names of pilots in ascending order of rank.",
            "ted": 0.1
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT * FROM College ORDER BY enr",
            "question": "What information do you have on colleges sorted by increasing enrollment numbers?",
            "ted": 0.1
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT * FROM College ORDER BY enr",
            "question": "List all information about college sorted by enrollment number in the ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY basePrice",
            "question": "List the name of all rooms sorted by their prices.",
            "ted": 0.1
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY basePrice",
            "question": "Sort all the rooms according to the price. Just report the room names.",
            "ted": 0.1
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Name ASC",
            "question": "What are the names of the pilots in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
            "question": "List in alphabetic order all different amenities.",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
            "question": "What are the different dorm amenity names in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist ORDER BY Years_working ASC",
            "question": "List the names of journalists in ascending order of years working.",
            "ted": 0.1
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
            "question": "List the name of ships in ascending order of tonnage.",
            "ted": 0.1
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
            "question": "what are the names of the ships ordered by ascending tonnage?",
            "ted": 0.1
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT address FROM shop ORDER BY open_year",
            "question": "Show the shop addresses ordered by their opening year.",
            "ted": 0.1
        },
        {
            "db_id": "company_1",
            "query": "SELECT dname FROM department ORDER BY mgr_start_date",
            "question": "List all department names ordered by their starting date.",
            "ted": 0.1
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Name ASC",
            "question": "List all pilot names in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC",
            "question": "List the names of companies by ascending number of sales.",
            "ted": 0.1
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC",
            "question": "Sort the names of all counties in ascending order of population.",
            "ted": 0.1
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT service_type_code FROM services ORDER BY service_type_code",
            "question": "List the type of the services in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT truck_details FROM trucks ORDER BY truck_licence_number",
            "question": "Show the details of all trucks in the order of their license number.",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT title FROM albums ORDER BY title",
            "question": "What are the titles of all the albums alphabetically ascending?",
            "ted": 0.1
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT service_name FROM services ORDER BY service_name",
            "question": "List all the services in the alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT text FROM tweets ORDER BY createdate",
            "question": "List the text of all tweets in the order of date.",
            "ted": 0.1
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM actor ORDER BY Name ASC",
            "question": "List the name of actors in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM actor ORDER BY Name ASC",
            "question": "What are the names of actors, ordered alphabetically?",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch",
            "question": "list all the names of programs, ordering by launch time.",
            "ted": 0.1
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor ORDER BY Age ASC",
            "question": "List the names of editors in ascending order of age.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region ORDER BY region_name",
            "question": "List all region names in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region ORDER BY region_name",
            "question": "What are the names of the regions in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch",
            "question": "What is the list of program names, sorted by the order of launch date?",
            "ted": 0.1
        },
        {
            "db_id": "phone_1",
            "query": "SELECT model_name FROM chip_model ORDER BY launch_year",
            "question": "List all the model names sorted by their launch year.",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT origin FROM program ORDER BY origin",
            "question": "List all program origins in the alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT origin FROM program ORDER BY origin",
            "question": "What is the list of program origins ordered alphabetically?",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Country ASC",
            "question": "What are the countries for each market, ordered alphabetically?",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
            "question": "List all the information about course authors and tutors in alphabetical order of the personal name.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
            "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
            "ted": 0.1
        },
        {
            "db_id": "gas_company",
            "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
            "question": "order all gas station locations by the opening year.",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Country ASC",
            "question": "List all countries of markets in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "gas_company",
            "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
            "question": "What are the locations of all the gas stations ordered by opening year?",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
            "question": "Return the names of shops, ordered by year of opening ascending.",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
            "question": "What are the names of shops in ascending order of open year?",
            "ted": 0.1
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT route_name FROM Delivery_Routes ORDER BY route_name",
            "question": "List the names of all routes in alphabetic order.",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT * FROM COURSE ORDER BY Credits",
            "question": "List all information about courses sorted by credits in the ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
            "question": "List the carriers of devices in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT service_name FROM services ORDER BY service_name",
            "question": "Give me a list of all the service names sorted alphabetically.",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
            "question": "What are the different carriers for devices, listed in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone ORDER BY Price ASC",
            "question": "List the names of phones in ascending order of price.",
            "ted": 0.1
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT name FROM accounts ORDER BY name",
            "question": "List all customers\u2019 names in the alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC",
            "question": "List the total number of horses on farms in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers ORDER BY customer_details",
            "question": "List the names of all the customers in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers ORDER BY customer_details",
            "question": "Sort the customer names in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY Name ASC",
            "question": "What are the names of cities in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC",
            "question": "What is the total horses record for each farm, sorted ascending?",
            "ted": 0.1
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
            "question": "List all the name of organizations in order of the date formed.",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Name ASC",
            "question": "Return the names of people, ordered alphabetically.",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC",
            "question": "What are the themes of farm competitions sorted by year in ascending order?",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC",
            "question": "Return the themes of farm competitions, sorted by year ascending.",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
            "question": "List the name of all customers sorted by their account balance in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Name ASC",
            "question": "What are the names of people in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork ORDER BY Name ASC",
            "question": "List the name of artworks in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
            "question": "What are the names of all customers, ordered by account balance?",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY Name ASC",
            "question": "Return the names of cities, ordered alphabetically.",
            "ted": 0.1
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
            "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
            "ted": 0.1
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT name FROM accounts ORDER BY name",
            "question": "What are the names of all the customers in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC",
            "question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT * FROM instructor ORDER BY salary",
            "question": "List the information of all instructors ordered by their salary in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT * FROM instructor ORDER BY salary",
            "question": "Give all information regarding instructors, in order of salary from least to greatest.",
            "ted": 0.1
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Song",
            "question": "What are the the songs in volumes, listed in ascending order?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC",
            "question": "List all information about the assessment notes sorted by date in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
            "question": "What are the crime rates of counties sorted by number of offices ascending?",
            "ted": 0.1
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY Start_year ASC",
            "question": "List all club names in ascending order of start year.",
            "ted": 0.1
        },
        {
            "db_id": "debate",
            "query": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC",
            "question": "List the venues of debates in ascending order of the number of audience.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT course_name FROM courses ORDER BY course_name",
            "question": "List the names of courses in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item ORDER BY title",
            "question": "List the titles of all items in alphabetic order .",
            "ted": 0.1
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY Start_year ASC",
            "question": "What are the names of all the clubs starting with the oldest?",
            "ted": 0.1
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player ORDER BY Votes ASC",
            "question": "List the names of players in ascending order of votes.",
            "ted": 0.1
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores ASC",
            "question": "List the authors of submissions in ascending order of scores.",
            "ted": 0.1
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores ASC",
            "question": "Find the author for each submission and list them in ascending order of submission score.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_name FROM department ORDER BY dept_name",
            "question": "list names of all departments ordered by their names.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_name FROM department ORDER BY dept_name",
            "question": "What are the names of all departments in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT HOST FROM performance ORDER BY Attendance ASC",
            "question": "List the hosts of performances in ascending order of attendance.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT first_name FROM people ORDER BY first_name",
            "question": "List the first names of people in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Song",
            "question": "Please list all songs in volumes in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT city FROM Addresses ORDER BY city",
            "question": "List all cities of addresses in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT course_name FROM courses ORDER BY course_name",
            "question": "What are the names of the courses in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT first_name FROM people ORDER BY first_name",
            "question": "What are the first names of the people in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
            "question": "Show the crime rates of counties in ascending order of number of police officers.",
            "ted": 0.1
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
            "question": "List the name of products in ascending order of price.",
            "ted": 0.1
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC",
            "question": "List the names of roller coasters by ascending order of length.",
            "ted": 0.1
        }
    ],
    "SELECT grade FROM Highschooler WHERE name = 'Brittany'": [
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "Find the name of dorms only for female (F gender).",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the location of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "What is the description of the club \"Pen and Paper Gaming\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the description of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "What are the names of all movies directed by Steven Spielberg?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "Find the titles of all movies directed by steven spielberg.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
            "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "Find the description of the club called \"Tennis Club\".",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the description of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Which employees have the role with code \"HR\"? Find their names.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Show the names of all the employees with role \"HR\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "Show the id of the employee named Ebba.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of all the files in mp3 format?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "Return the date of birth for all the guests with gender code \"Male\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "What is the id for the employee called Ebba?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of songs whose format is mp3.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the code of the school where the accounting department belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the school code of the accounting department?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "Find the department name that is in Building \"Mergenthaler\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "What is the description of the role named \"Proof Reader\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "Show the description for role name \"Proof Reader\".",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "What are the names of all songs in English?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How many milliseconds long is Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "Where us the club named \"Tennis Club\" located?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the location of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "Show ids for all the male faculty.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "What are the faculty ids of all the male faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "What are the birth dates of employees living in Edmonton?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Find the name of all the clubs at \"AKW\".",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "Find the branch names of banks in the New York state.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "What are the names of banks in the state of New York?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "What are the names of the airports in the city of Goroka?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "Find the name of the airport in the city of Goroka.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "What are the document ids for the budget type code 'SF'?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "Show student ids for all male students.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Where is the club \"Hopkins Student Enterprises\" located?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "What are the student ids for all male students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Which city does the student whose last name is \"Kim\" live in?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How long does track Fast As a Shark has?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Where is the club \"Pen and Paper Gaming\" located?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "Where is the headquarter of the company founded by James?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Return the founder of Sony.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Give the city that the student whose family name is Kim lives in.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Who is the founder of Sony?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the id of the reviewer named Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the reviewer id of Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the unit price of the tune \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How much is the track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Show the short names of the buildings managed by \"Emma\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT gender FROM TEACHERS WHERE last_name = 'Medhurst'",
            "question": "What is the gender of the teacher with last name \"Medhurst\"?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who directed Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who is the director of movie Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "What is the headquarter of the company whose founder is James?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Which clubs are located at \"AKW\"? Return the club names.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "what is the address of history department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the composer who created the track \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "Return the elimination movies of wrestlers on Team Orton.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "What are the names of all wines produced in 2008?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "Find all the customer information in state NY.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "What is all the customer information for customers in NY state?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the unit of measure for 'Herb' products.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What campuses are located in Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What are the names of all campuses located at Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are located in the county of Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "Report the name of all campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "Find the attribute data type for the attribute named \"Green\".",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "What is the attribute data type of the attribute with name \"Green\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "Which category does the product named \"flax\" belong to?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "What is the code of the category that the product with the name 'flax' belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT email FROM user_profiles WHERE name = 'Mary'",
            "question": "Find the emails of the user named \"Mary\".",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'",
            "question": "What is the partition id of the user named \"Iron Man\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "Find the phone number of performer \"Ashley\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "What is the phone number of the performer Ashley?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "Find the marketing region description of China?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "What is the description of the marketing region China?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "Display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "What are all the employees without a department number?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "Return all the information for all employees without any department number.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "Return the description of the product called \"Chocolate\".",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "Find the names of all wines produced in 2008.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "What is the description of the claim status \"Open\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "What are the names of all instructors in the Comp. Sci. department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "Who is the composer of track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "Find the names of all English songs.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "Show the location code of the country \"Canada\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "What is the location code for the country \"Canada\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "When was the document named \"Marry CV\" stored? Give me the date.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "What is the date when the document \"Marry CV\" was stored?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "What are the names of products with category \"Spices\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "Return the names of products in the category 'Spices'.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "What is the name of the department in the Building Mergenthaler?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "What are the famous titles of the artist \"Triumfall\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "Return the famous titles of the artist called \"Triumfall\".",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "Where is the history department?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "Find the code of the document type \"Paper\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "What is the description of the product named \"Chocolate\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "List the codes of all courses that take place in room KLR209.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "What are the codes of all the courses that are located in room KLR209?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "Return the categories of music festivals that have the result \"Awarded\".",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are in Los Angeles county?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "List the campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "What is the document type code for document type \"Paper\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "What is the description of the product category with the code 'Spices'?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "Find the product category description of the product category with code \"Spices\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "Find the description of the claim status \"Open\".",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "Return the names of musicals who have the nominee Bob Fosse.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "Find the names of all instructors in computer science department",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "What are the category of music festivals with result \"Awarded\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "Return the description of the budget type that has the code ORG.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "What is the description for the budget type with code ORG?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "Show all video games with type Collectible card game.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "What are the names of all video games that are collectible cards?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "What are the majors of male (sex is M) students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "List the major of each male student.",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Address FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the address of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Rating FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the rating of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = 'Sandwich'",
            "question": "What is the description of the restaurant type Sandwich?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What is the type of video game Call of Destiny.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What type of game is Call of Destiny?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = 'Paper'",
            "question": "What is the description of document type 'Paper'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT role_description FROM ROLES WHERE role_code = 'ED'",
            "question": "What is the description of role code ED?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "Which courses are taught on days MTW?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "What are the course names for courses taught on MTW?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Find the id of the order whose shipment tracking number is \"3452\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success'",
            "question": "Find the ids of orders whose status is 'Success'.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "Show ids for all students who live in CHI.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "What are the ids of all students who live in CHI?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "Return the description of the document type name 'Film'.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "What are the login names of the students with family name \"Ward\"?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "Find id of candidates whose assessment code is \"Pass\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "What is the document type description for document type named Film?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "What are the ids of the candidates that have an outcome code of Pass?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = 'working'",
            "question": "What is the description of document status code 'working'?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "What is the decor of room Recluse and defiance?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "What are the descriptions of the courses with name \"database\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "Return the description for the courses named \"database\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "What are the names of the tourist attractions that can be accessed by bus?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Who are the players from UCLA?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Show the players from college UCLA.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "Return the type code of the document named \"David CV\".",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "What is the type of the document named \"David CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Return the detail of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "Show the zip code of the county with name \"Howard\".",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "What are the names of the all-female dorms?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the detail of the location UK Gallery?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Find the address of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Find the dates of the tests taken with result \"Pass\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the address of the location \"UK Gallery\"?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT i_id FROM item WHERE title = 'orange'",
            "question": "Find the id of the item whose title is \"orange\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "What are the price ranges of five star hotels?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "Show the price ranges of hotels with 5 star ratings.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "Return the decor of the room named \"Recluse and defiance\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "What is the zip code the county named \"Howard\" is located in?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'UPS'",
            "question": "What is the shipping agent code of shipping agent UPS?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What are the numbers of all flights coming from Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = 'PUR'",
            "question": "Show the description of transaction type with code \"PUR\".",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is the type of allergy Cat?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "What are the other account details for the account with the name 338?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the job of a researcher?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "Return the titles of any movies with an R rating.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "What are all the movies rated as R? List the titles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "Show all flight number from Los Angeles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "Show origins of all flights with destination Honolulu.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is allergy type of a cat allergy?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the researcher role.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = 'SALE'",
            "question": "Show all dates of transactions whose type code is \"SALE\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "Show other account details for account with name 338.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "What are the origins of all flights that are headed to Honolulu?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "List ids for all student who are on scholarship.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "What are the ids for all sporty students who are on scholarship?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Show the advisors of the students whose city of residence has city code \"BAL\".",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Which authors have first name \"Amal\"? List their last names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Find the last name of the author with first name \"Amal\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "Which authors have last name \"Ueno\"? List their first names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "What is the first name of the author with last name \"Ueno\"?",
            "ted": 0.0
        },
        {
            "db_id": "company_1",
            "query": "SELECT Dependent_name FROM dependent WHERE relationship = 'Spouse'",
            "question": "find all dependent names who have a spouse relation with some employee.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "Return the login names of the students whose family name is \"Ward\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "What are the names of customers who use payment method \"Cash\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code = 'PUR'",
            "question": "Show all transaction ids with transaction code 'PUR'.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Find the names of channels that are not owned by CCTV.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Which channels are not owned by CCTV? Give me the channel names.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "display those employees who joined after 7th September, 1987.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "Which employees were hired after September 7th, 1987?",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "Return the hosts of competitions for which the theme is not Aliens?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Find the ids of orders which are shipped after 2000-01-01.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "Return the device carriers that do not have Android as their software platform.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "What is all the information about employees hired before June 21, 2002?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "What is the name of customers who do not use Cash as payment method.",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "List the name of technicians whose team is not \"NYY\".",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "What is the name of the technician whose team is not 'NYY'?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "What are the names of the ships that are not from the United States?",
            "ted": 0.0625
        },
        {
            "db_id": "architecture",
            "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
            "question": "What are the names of the mills which are not located in 'Donceel'?",
            "ted": 0.0625
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork WHERE TYPE != 'Program Talent Show'",
            "question": "List the name of artworks whose type is not \"Program Talent Show\".",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "Find the name of customers who did not pay with Cash.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "find the names of programs whose origin is not in Beijing.",
            "ted": 0.0625
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM Representative WHERE Party != 'Republican'",
            "question": "What are the names of representatives whose party is not \"Republican\"?",
            "ted": 0.0625
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM country WHERE Languages != 'German'",
            "question": "List the names of countries whose language is not \"German\".",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "What are the nicknames of schools whose division is not 1?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "What are the ids of the problems which are reported before 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Show names for all regions except for Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Return the names of all regions other than Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_company",
            "query": "SELECT name FROM airport WHERE country != 'Iceland'",
            "question": "What are the names of the airports which are not in the country 'Iceland'?",
            "ted": 0.0625
        },
        {
            "db_id": "department_management",
            "query": "SELECT name FROM head WHERE born_state != 'California'",
            "question": "What are the names of the heads who are born outside the California state?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "Find the ids of the problems reported after 1978-06-26.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "What are the ids of the problems which are reported after 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "List the names of climbers whose country is not Switzerland.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes who does not produce 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "What are the names of climbers who are not from the country of Switzerland?",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "Show the nicknames of schools that are not in division 1.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "What are the census rankings of cities that do not have the status \"Village\"?",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "Show the census ranking of cities whose status are not \"Village\".",
            "ted": 0.0625
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
            "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "List the name of ships whose nationality is not \"United States\".",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "What are the names of companies whose headquarters are not \"USA\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes whose product is not 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Which ministers are not a part of the Progress Party?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Show all ministers who do not belong to Progress Party.",
            "ted": 0.0625
        }
    ],
    "SELECT count( * ) FROM Highschooler": [
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "Count the number of budget codes.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "How many counties are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "Count the number of statements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "How many statements do we have?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "Count the total number of counties.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists do we have?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM station",
            "question": "How many train stations are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM event",
            "question": "How many events are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "Count the number of companies.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "How many film are there?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM stadium",
            "question": "How many stadiums are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "How many companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "What is the total number of faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games exist?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games do you have?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "How many faculty do we have?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( * ) FROM perpetrator",
            "question": "How many perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "Count the number of bank branches.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "How many bank branches are there?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT count( * ) FROM journalist",
            "question": "How many journalists are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "How many apartment bookings are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "Count the number of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "How many wrestlers are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "Count the total number of apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( * ) FROM election",
            "question": "How many elections are there?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM train",
            "question": "Show the number of trains",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "Count the number of films.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "How many tracks do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "How many cinema do we have?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "How many songs are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Count the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Show the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "How many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "What is the number of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "How many settlements are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "Count the number of songs.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM body_builder",
            "question": "How many body builders are there?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM building",
            "question": "How many buildings are there?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "How many races are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "Count the total number of settlements made.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "How many entrepreneurs are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "Count the number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "Count the number of ships.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts exist in the database?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "Find the total number of catalog contents.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "Count the number of tracks.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "How many products are there in the records?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "Count the number of races.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "How many customer cards are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "Show the number of customer cards.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT count( * ) FROM railway",
            "question": "How many railways are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "How many accounts are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT count( * ) FROM player",
            "question": "How many players are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT count( * ) FROM driver",
            "question": "How many drivers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many employees are there?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT count( * ) FROM editor",
            "question": "How many editors are there?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "How many CSU campuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "Return the total number of distinct customers.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "What is the total number of campuses?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "Count the number of total papers.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "How many candidates are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many staff in total?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM tweets",
            "question": "Find the number of tweets in record.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "Count the number of gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "How many gymnasts are there?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT count( * ) FROM performance",
            "question": "How many performances are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "What is the number of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "How many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "Count how many appointments have been made in total.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "Count the number of candidates.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM follows",
            "question": "How many followers does each user have?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "How many appointments are there?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT count( * ) FROM member",
            "question": "How many members are there?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM user_profiles",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "Count the number of actors.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "How many actors are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "How many papers are published in total?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( * ) FROM customers",
            "question": "Find the number of customers in total.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM review",
            "question": "Find the number of reviews.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "How many authors are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers do we have?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "How many aircrafts are there?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "What is the number of aircraft?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT count( * ) FROM book",
            "question": "How many books are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers in total?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "Count the number of stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "How many stores are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "How many activities do we have?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "Count the number of authors.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "How many institutions are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "How many diffrent dorm amenities are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "Find the number of distinct amenities.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicle in total?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicles exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are in the database?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "Count the number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers are there?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers listed?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "Count the number of cinemas.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "How many students are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "How many bands are there?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "Count the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "Count the total number of clubs.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "Count the number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "How many rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "What is the total number of rooms available in this inn?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "How many counties are there?",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT count( * ) FROM debate",
            "question": "How many debates are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "Count the number of documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "Count the total number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "How many bookings do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT count( * ) FROM premises",
            "question": "How many premises are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "How many devices are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "Count the total number of bookings made.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT count( * ) FROM roller_coaster",
            "question": "How many roller coasters are there?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT count( * ) FROM INVESTORS",
            "question": "Find the number of investors in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "How many documents have expenses?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( * ) FROM rent_arrears",
            "question": "How many council taxes are collected for renting arrears ?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "What is the total number of companies?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "Find the number of bands.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "What is the total number of clubs?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "Count the number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the total number of available services.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "Find the total number of scientists.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "How many transactions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "How many party events do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "Count the number of party events.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "Find the number of activities available.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT count( * ) FROM pilot",
            "question": "How many pilots are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Show the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct courses are enrolled in by students?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "How many airlines are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "What is the total number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "What is the total count of enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "How many kinds of enzymes are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "Find the total number of courses offered.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "Find the total number of employees.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "How many farms are there?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "Count the number of farms.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "What is the total number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "How many available hotels are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct courses that have enrolled students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "Find the total number of available hotels.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "How many employees are there all together?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "How many scientists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Show the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "Find the number of distinct stages in claim processing.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "How many claim processing stages are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "How many invoices do we have?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT count( * ) FROM artwork",
            "question": "How many artworks are there?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "How many gas companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "Count the number of products.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "Count the total number of roles listed.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "How many roles are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "Count the number of invoices.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "How many colors are there?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "How many voting records do we have?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "Count the number of book clubs.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "How many book clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "Find the number of albums.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "How many albums are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many different colleges are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "How many locations are listed in the database?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "How many submissions are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "Show the number of locations.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "Count the number of colors.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "How many characteristics are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "Count the number of characteristics.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "What is the number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM ASSESSMENT_NOTES",
            "question": "How many assessment notes are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "How many climbers are there?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "Count the number of climbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "How many document types are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "Show the number of document types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "Find the number of voting records in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "Count the number of all the calendar items.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "How many calendar items do we have?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many colleges in total?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "how many programs are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the number of services.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "How many projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "Count the number of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "Show the number of projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "How many budget types do we have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "How many countries are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "Find the number of employees we have.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "Count the number of customers recorded.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "How many flights do we have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "What is the number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "How many parties are there?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "Count the number of parties.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "Count the number of programs.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT count( * ) FROM phone",
            "question": "How many phones are there?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT count( * ) FROM Products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "How many customers do we have?",
            "ted": 0.0
        }
    ],
    "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2": [
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "Show the account id and name with at least 4 transactions.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count( * ) >= 3",
            "question": "What are the ids and names of the architects who built at least 3 bridges ?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
            "question": "What are the id and details of the customers who have at least 3 events?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count( * ) >= 1",
            "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Find the student ID and personal name of the student with at least two enrollments.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Show the names and ids of tourist attractions that are visited at least two times.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show first name and id for all customers with at least 2 accounts.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the id and name of the mountains that have at least 2 photos?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "What are the ids and names of accounts with 4 or more transactions?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the first names and ids for customers who have two or more accounts?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count( * ) > 2",
            "question": "Which parts have more than 2 faults? Show the part name and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT( * ) > 1",
            "question": "Show id and location of railways that are associated with more than one train.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "List first name and last name of customers that have more than 2 payments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "Show the names and ids of tourist attractions that are visited at most once.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "Return the order ids and details for orderes with two or more invoices.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
            "question": "Find the name and email for the users who have more than one follower.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "What are the full names of actors who had roles in more than 30 films?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "What is the order id and order details for the order more than two invoices.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) < 2",
            "question": "Find the name and partition id for users who tweeted less than twice.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "What are the first and last names of all customers with more than 2 payments?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "What are the names and ids of the tourist attractions that are visited at most once?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count( * ) > 1",
            "question": "What are the ids and names of the companies that operated more than one flight?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "What are the student IDs and middle names of the students enrolled in at most two courses?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "What is the project id and detail for the project with at least two documents?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "what are name and phone number of patients who had more than one appointment?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "What are the GDP and population of the city that already served as a host more than once?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Find the the customer details and id for the customers who had more than one policy.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "What are the names and locations of tracks that have had exactly 1 race?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "Find the student ID and middle name for all the students with at most two enrollments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count( * ) > 1",
            "question": "What are the ids and details of events that have more than one participants?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "Show the name and location of track with 1 race.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "Find the organisation ids and details of the organisations which are involved in",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id HAVING max( T1.precipitation ) > 50",
            "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT( * ) > 1",
            "question": "Show names of pilots that have more than one record.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg( T1.price ) >= 150",
            "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Roles.role_description , count( Employees.employee_id ) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count( Employees.employee_id ) > 1",
            "question": "List roles that have more than one employee. List the role description and number of employees.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg( T1.price ) >= 150",
            "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
            "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show id, first and last names for all customers with at least two cards.",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT( * ) >= 3 ORDER BY T2.Name",
            "question": "What are the names and ids of artists with 3 or more albums, listed in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.score , T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT( * ) >= 3 ORDER BY T2.Name",
            "question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the ids and full names of customers who hold two or more cards?",
            "ted": 0.1
        }
    ],
    "select name from teacher where hometown != 'Farnworth Municipal Borough'": [
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "List the name of technicians whose team is not \"NYY\".",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Which ministers are not a part of the Progress Party?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork WHERE TYPE != 'Program Talent Show'",
            "question": "List the name of artworks whose type is not \"Program Talent Show\".",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Show all ministers who do not belong to Progress Party.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT name FROM airport WHERE country != 'Iceland'",
            "question": "What are the names of the airports which are not in the country 'Iceland'?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "Find the name of customers who did not pay with Cash.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "What is the name of the technician whose team is not 'NYY'?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "Return the device carriers that do not have Android as their software platform.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Show names for all regions except for Denmark.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Return the names of all regions other than Denmark.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes whose product is not 'Heme'?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "Show the census ranking of cities whose status are not \"Village\".",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "What are the census rankings of cities that do not have the status \"Village\"?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Find the names of channels that are not owned by CCTV.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Which channels are not owned by CCTV? Give me the channel names.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "find the names of programs whose origin is not in Beijing.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "What are the nicknames of schools whose division is not 1?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "Show the nicknames of schools that are not in division 1.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
            "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM country WHERE Languages != 'German'",
            "question": "List the names of countries whose language is not \"German\".",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "List the name of ships whose nationality is not \"United States\".",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "What are the names of the ships that are not from the United States?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes who does not produce 'Heme'?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "What are the names of companies whose headquarters are not \"USA\"?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "What is the name of customers who do not use Cash as payment method.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "Return the hosts of competitions for which the theme is not Aliens?",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
            "question": "What are the names of the mills which are not located in 'Donceel'?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "What are the names of climbers who are not from the country of Switzerland?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT name FROM head WHERE born_state != 'California'",
            "question": "What are the names of the heads who are born outside the California state?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM Representative WHERE Party != 'Republican'",
            "question": "What are the names of representatives whose party is not \"Republican\"?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "List the names of climbers whose country is not Switzerland.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "What are the names of customers who use payment method \"Cash\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "What is the document type code for document type \"Paper\"?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Where is the club \"Hopkins Student Enterprises\" located?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "Find the code of the document type \"Paper\".",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "Show ids for all students who live in CHI.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "When was the document named \"Marry CV\" stored? Give me the date.",
            "ted": 0.0625
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "Who is the composer of track Fast As a Shark?",
            "ted": 0.0625
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the composer who created the track \"Fast As a Shark\"?",
            "ted": 0.0625
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How long does track Fast As a Shark has?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Where is the club \"Pen and Paper Gaming\" located?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "What is the date when the document \"Marry CV\" was stored?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
            "ted": 0.0625
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What campuses are located in Chico?",
            "ted": 0.0625
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What are the names of all campuses located at Chico?",
            "ted": 0.0625
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are located in the county of Los Angeles?",
            "ted": 0.0625
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "Report the name of all campuses in Los Angeles county.",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
            "ted": 0.0625
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "Show other account details for account with name 338.",
            "ted": 0.0625
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
            "ted": 0.0625
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "Return the titles of any movies with an R rating.",
            "ted": 0.0625
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "What are all the movies rated as R? List the titles.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "What are the other account details for the account with the name 338?",
            "ted": 0.0625
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "Show ids for all the male faculty.",
            "ted": 0.0625
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "Return the elimination movies of wrestlers on Team Orton.",
            "ted": 0.0625
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How many milliseconds long is Fast As a Shark?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "What is the location code for the country \"Canada\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "What is the description of the role named \"Proof Reader\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "Show the description for role name \"Proof Reader\".",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "What are the ids of all students who live in CHI?",
            "ted": 0.0625
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "What are the names of banks in the state of New York?",
            "ted": 0.0625
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the unit price of the tune \"Fast As a Shark\"?",
            "ted": 0.0625
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How much is the track Fast As a Shark?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Which employees have the role with code \"HR\"? Find their names.",
            "ted": 0.0625
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are in Los Angeles county?",
            "ted": 0.0625
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "Find the branch names of banks in the New York state.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Show the names of all the employees with role \"HR\".",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the description of the club named \"Tennis Club\"?",
            "ted": 0.0625
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
            "ted": 0.0625
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What type of game is Call of Destiny?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "Show the location code of the country \"Canada\".",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "List ids for all student who are on scholarship.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "What are the names of all video games that are collectible cards?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "Show all video games with type Collectible card game.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "What are the ids for all sporty students who are on scholarship?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "Find the description of the club called \"Tennis Club\".",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the description of the club \"Pen and Paper Gaming\".",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "What is the description of the club \"Pen and Paper Gaming\"?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the location of the club named \"Tennis Club\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "Show the id of the employee named Ebba.",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "Where us the club named \"Tennis Club\" located?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the location of the club \"Pen and Paper Gaming\".",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "What is the id for the employee called Ebba?",
            "ted": 0.0625
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "List the campuses in Los Angeles county.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What is the type of video game Call of Destiny.",
            "ted": 0.0625
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "Return the categories of music festivals that have the result \"Awarded\".",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Find the dates of the tests taken with result \"Pass\".",
            "ted": 0.0625
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT gender FROM TEACHERS WHERE last_name = 'Medhurst'",
            "question": "What is the gender of the teacher with last name \"Medhurst\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "Find the names of all English songs.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "What are the origins of all flights that are headed to Honolulu?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "Show origins of all flights with destination Honolulu.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What are the numbers of all flights coming from Los Angeles?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "Show all flight number from Los Angeles.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = 'working'",
            "question": "What is the description of document status code 'working'?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "display all the information about the department Marketing.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = 'Paper'",
            "question": "What is the description of document type 'Paper'?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'UPS'",
            "question": "What is the shipping agent code of shipping agent UPS?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT role_description FROM ROLES WHERE role_code = 'ED'",
            "question": "What is the description of role code ED?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "What is the document type description for document type named Film?",
            "ted": 0.0625
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "What are the names of all wines produced in 2008?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "What are the names of all songs in English?",
            "ted": 0.0625
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "Find the names of all wines produced in 2008.",
            "ted": 0.0625
        },
        {
            "db_id": "company_1",
            "query": "SELECT Dependent_name FROM dependent WHERE relationship = 'Spouse'",
            "question": "find all dependent names who have a spouse relation with some employee.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "Which employees were hired after September 7th, 1987?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "display those employees who joined after 7th September, 1987.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "What is the description for the budget type with code ORG?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "Return the description of the budget type that has the code ORG.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "What are the document ids for the budget type code 'SF'?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "What is all the information about employees hired before June 21, 2002?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
            "ted": 0.0625
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "What is the attribute data type of the attribute with name \"Green\"?",
            "ted": 0.0625
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "Find the attribute data type for the attribute named \"Green\".",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "Display all the information about the department Marketing.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "Return the description of the document type name 'Film'.",
            "ted": 0.0625
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "What are the famous titles of the artist \"Triumfall\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of songs whose format is mp3.",
            "ted": 0.0625
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'",
            "question": "What is the partition id of the user named \"Iron Man\".",
            "ted": 0.0625
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
            "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "Return the famous titles of the artist called \"Triumfall\".",
            "ted": 0.0625
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "What are the category of music festivals with result \"Awarded\"?",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "Return the login names of the students whose family name is \"Ward\".",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "What are the login names of the students with family name \"Ward\"?",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
            "ted": 0.0625
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "What are the faculty ids of all the male faculty members?",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "Return the description for the courses named \"database\".",
            "ted": 0.0625
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "What are the descriptions of the courses with name \"database\"?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the code of the school where the accounting department belongs to?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the school code of the accounting department?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of all the files in mp3 format?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Give the city that the student whose family name is Kim lives in.",
            "ted": 0.0625
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "Return the names of musicals who have the nominee Bob Fosse.",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "what is the address of history department?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "Where is the history department?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Which city does the student whose last name is \"Kim\" live in?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "What are the student ids for all male students?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "Show student ids for all male students.",
            "ted": 0.0625
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0625
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is allergy type of a cat allergy?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is the type of allergy Cat?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "List the codes of all courses that take place in room KLR209.",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "What are the codes of all the courses that are located in room KLR209?",
            "ted": 0.0625
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT email FROM user_profiles WHERE name = 'Mary'",
            "question": "Find the emails of the user named \"Mary\".",
            "ted": 0.0625
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "What are all the employees without a department number?",
            "ted": 0.0625
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT i_id FROM item WHERE title = 'orange'",
            "question": "Find the id of the item whose title is \"orange\".",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Which clubs are located at \"AKW\"? Return the club names.",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "Return the names of products in the category 'Spices'.",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "Which category does the product named \"flax\" belong to?",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "What is the code of the category that the product with the name 'flax' belongs to?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
            "ted": 0.0625
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "Show the zip code of the county with name \"Howard\".",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Find the id of the order whose shipment tracking number is \"3452\".",
            "ted": 0.0625
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "What is the zip code the county named \"Howard\" is located in?",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the unit of measure for 'Herb' products.",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "Find the product category description of the product category with code \"Spices\".",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "What is the description of the product category with the code 'Spices'?",
            "ted": 0.0625
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
            "ted": 0.0625
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Find the name of all the clubs at \"AKW\".",
            "ted": 0.0625
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
            "ted": 0.0625
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "What are the birth dates of employees living in Edmonton?",
            "ted": 0.0625
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "Find id of candidates whose assessment code is \"Pass\"?",
            "ted": 0.0625
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "What are the ids of the candidates that have an outcome code of Pass?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the id of the reviewer named Daniel Lewis?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the reviewer id of Daniel Lewis?",
            "ted": 0.0625
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "Find the names of all instructors in computer science department",
            "ted": 0.0625
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Address FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the address of the restaurant Subway?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who directed Avatar?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who is the director of movie Avatar?",
            "ted": 0.0625
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "Find the name of dorms only for female (F gender).",
            "ted": 0.0625
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "What are the names of products with category \"Spices\"?",
            "ted": 0.0625
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "What are the names of the all-female dorms?",
            "ted": 0.0625
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Show the advisors of the students whose city of residence has city code \"BAL\".",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "What is the description of the marketing region China?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "What is the headquarter of the company whose founder is James?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "Where is the headquarter of the company founded by James?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Return the founder of Sony.",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Who is the founder of Sony?",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Who are the players from UCLA?",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Show the players from college UCLA.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "What is the decor of room Recluse and defiance?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "Return the decor of the room named \"Recluse and defiance\".",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "What are the ids of the problems which are reported after 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "Find the ids of the problems reported after 1978-06-26.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "What are the ids of the problems which are reported before 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
            "ted": 0.0625
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Show the short names of the buildings managed by \"Emma\".",
            "ted": 0.0625
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
            "ted": 0.0625
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
            "ted": 0.0625
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
            "ted": 0.0625
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "Return the date of birth for all the guests with gender code \"Male\".",
            "ted": 0.0625
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "Find the phone number of performer \"Ashley\".",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "What is the phone number of the performer Ashley?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Find the ids of orders which are shipped after 2000-01-01.",
            "ted": 0.0625
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "What are the majors of male (sex is M) students?",
            "ted": 0.0625
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "List the major of each male student.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "Find the marketing region description of China?",
            "ted": 0.0625
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
            "ted": 0.0625
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "What are the names of all instructors in the Comp. Sci. department?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "Return all the information for all employees without any department number.",
            "ted": 0.0625
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "Return the description of the product called \"Chocolate\".",
            "ted": 0.0625
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "Which courses are taught on days MTW?",
            "ted": 0.0625
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "What is the description of the product named \"Chocolate\"?",
            "ted": 0.0625
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Find the last name of the author with first name \"Amal\".",
            "ted": 0.0625
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "Which authors have last name \"Ueno\"? List their first names.",
            "ted": 0.0625
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "What is the description of the claim status \"Open\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Return the detail of the location named \"UK Gallery\".",
            "ted": 0.0625
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "Find the description of the claim status \"Open\".",
            "ted": 0.0625
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "What is the first name of the author with last name \"Ueno\"?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the detail of the location UK Gallery?",
            "ted": 0.0625
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "What are the course names for courses taught on MTW?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Find the address of the location named \"UK Gallery\".",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "What are the price ranges of five star hotels?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "Show the price ranges of hotels with 5 star ratings.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = 'PUR'",
            "question": "Show the description of transaction type with code \"PUR\".",
            "ted": 0.0625
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "Return the type code of the document named \"David CV\".",
            "ted": 0.0625
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "What is the type of the document named \"David CV\"?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code = 'PUR'",
            "question": "Show all transaction ids with transaction code 'PUR'.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = 'SALE'",
            "question": "Show all dates of transactions whose type code is \"SALE\".",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "Find the name of the airport in the city of Goroka.",
            "ted": 0.0625
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success'",
            "question": "Find the ids of orders whose status is 'Success'.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the address of the location \"UK Gallery\"?",
            "ted": 0.0625
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = 'Sandwich'",
            "question": "What is the description of the restaurant type Sandwich?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "What are the names of the airports in the city of Goroka?",
            "ted": 0.0625
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "Find the department name that is in Building \"Mergenthaler\".",
            "ted": 0.0625
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "What is the name of the department in the Building Mergenthaler?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "What are the names of the tourist attractions that can be accessed by bus?",
            "ted": 0.0625
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "Find all the customer information in state NY.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the researcher role.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the job of a researcher?",
            "ted": 0.0625
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Rating FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the rating of the restaurant Subway?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
            "ted": 0.0625
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Which authors have first name \"Amal\"? List their last names.",
            "ted": 0.0625
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "What is all the customer information for customers in NY state?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "Find the titles of all movies directed by steven spielberg.",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "What are the names of all movies directed by Steven Spielberg?",
            "ted": 0.0625
        }
    ],
    "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id": [
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
            "question": "List the id of students who registered some courses and the number of their registered courses?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "How many members are in each party?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
            "question": "List the name of all products along with the number of complaints that they have received.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
            "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
            "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
            "question": "What are the faculty id and the number of students each faculty has?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
            "question": "Show all the faculty ranks and the number of students advised by each rank.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
            "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
            "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
            "question": "For each user, find their name and the number of reviews written by them.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "Show party names and the number of events for each party.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "How many events are there for each party?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
            "question": "Show all the activity names and the number of faculty involved in each activity.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
            "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
            "question": "For each building, show the name of the building and the number of institutions in it.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
            "question": "Show the names of pilots and the number of records they have.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
            "question": "Show the name of track and the number of races in each track.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
            "question": "Return the name of each physician and the number of patients he or she treats.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
            "question": "How many exhibitions has each artist had?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "Show all party names and the number of members in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
            "question": "What are all the different product names, and how many complains has each received?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
            "question": "Show institution names along with the number of proteins for each institution.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
            "question": "Show the station name and number of trains in each station.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
            "question": "What are the different card types, and how many transactions have been made with each?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
            "question": "Find the name of each user and number of tweets tweeted by each of them.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
            "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
            "question": "For every student who is registered for some course, how many courses are they registered for?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
            "question": "Show the company name with the number of gas station.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
            "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
            "question": "Show all cities along with the number of drama workshop groups in each city.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
            "question": "What is the name of each course and the corresponding number of student enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
            "question": "List the name and the number of enrolled student for each course.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown , COUNT( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
            "question": "How many gymnasts are from each hometown?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown , COUNT( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
            "question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
            "question": "Show aircraft names and number of flights for each aircraft.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
            "question": "What is the name of each aircraft and how many flights does each one complete?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , count( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id",
            "question": "How many games has each stadium held?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
            "question": "For each company id, what are the companies and how many gas stations does each one operate?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
            "question": "Show all artist names and the number of exhibitions for each artist.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
            "question": "Show the card type codes and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
            "question": "What are the department names and how many employees work in each of them?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T2.Name , COUNT( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
            "question": "What are the names of the technicians  and how many machines are they assigned to repair?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
            "question": "What are the names of different tracks, and how many races has each had?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft , COUNT( * ) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
            "question": "List the names of aircrafts and the number of times it won matches.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name , count( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
            "question": "Show the name for regions and the number of storms for each region.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name , count( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
            "question": "How many storms occured in each region?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , COUNT( * ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
            "question": "How many players are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , count( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
            "question": "List the name for storms and the number of affected regions for each storm.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , count( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
            "question": "How many regions were affected by each storm?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.staff_name , count( * ) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name",
            "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party , COUNT( * ) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
            "question": "For each party, return the name of the party and the number of delegates from that party.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT T2.Name , COUNT( * ) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",
            "question": "Show the names of people and the number of times they have been on the affirmative side of debates.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party , COUNT( * ) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
            "question": "Show the name of each party and the corresponding number of delegates from that party.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT T2.type , count( * ) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",
            "question": "Show the type of school and the number of buses for each type.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name , COUNT( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
            "question": "For each county, find the name of the county and the number of delegates from that county.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT T1.Product_Name , COUNT( * ) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name",
            "question": "Show the names of products and the number of events they are in.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name , COUNT( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
            "question": "Show the name of each county along with the corresponding number of delegates from that county.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT T2.allergytype , count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
            "question": "Show all allergy type with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.property_id , count( * ) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id",
            "question": "How many residents does each property have? List property id and resident count.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T2.Name , COUNT( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
            "question": "Show names of technicians and the number of machines they are assigned to repair.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft , COUNT( * ) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
            "question": "For each aircraft that has won an award, what is its name and how many time has it won?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T2.state_province_county , count( * ) FROM customer_addresses AS T1 JOIN addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.state_province_county",
            "question": "List the state names and the number of customers living in each state.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
            "question": "display the department name and number of employees in each of the department.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
            "question": "display the department name and number of employees in each of the department.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT T2.allergytype , count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
            "question": "How many students are affected by each allergy type?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name , COUNT( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
            "question": "How many actors have appeared in each musical?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name , COUNT( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
            "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
            "question": "Give the name of each department and the number of employees in each.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , count( * ) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",
            "question": "How many assets can each parts be used in? List the part name and the number.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , COUNT( * ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
            "question": "Show the country names and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
            "question": "display job title and average salary of employees.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
            "question": "What are the different product names, and what is the sum of quantity ordered for each product?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T1.Name , avg( T2.Speed ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",
            "question": "Show the names of countries and the average speed of roller coasters from each country.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , avg( trust ) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",
            "question": "Find each target user's name and average trust score.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.name , sum( T1.show_times_per_day ) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
            "question": "What is total number of show times per dat for each cinema?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.title , max( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
            "question": "What are the title and maximum price of each film?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.title , max( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
            "question": "Give me the title and highest price for each film.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.line_1 , avg( T2.monthly_rental ) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",
            "question": "What are the line 1 and average monthly rentals of all student addresses?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
            "question": "What is the average salary for each job title?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , avg( T2.rating ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
            "question": "For each user, return the name and the average rating of reviews given by them.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T2.Name , sum( T1.Num_of_stock ) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name",
            "question": "For each phone, show its names and total number of stocks.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.lot_id , avg( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",
            "question": "Show the average amount of transactions for different lots.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
            "question": "What is the average rating star for each reviewer?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
            "question": "What is the average number of stars that each reviewer awards for a movie?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
            "question": "Show all product names and the total quantity ordered for each product name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.product_name , sum( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",
            "question": "Show the product name and total order quantity for each product.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , COUNT( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
            "question": "How many workshops did each author submit to? Return the author name and the number of workshops.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , COUNT( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
            "question": "Show each author and the number of workshops they submitted to.",
            "ted": 0.06666666666666667
        }
    ],
    "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )": [
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "List the names of mountains that do not have any climber.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
            "question": "List the names of products that are not in any event.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
            "question": "List the name of artworks that are not nominated.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the names of courses without prerequisites?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "What are the names of instructors who didn't teach?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "Give the names of people who did not participate in the candidate election.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "what are the names of people who did not participate in the candidate election.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "Find the first name of students not enrolled in any course.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "What are the first names of all students that are not enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "List the names of aircrafts and that did not win any match.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "What are the names of all aicrafts that have never won any match?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "List the locations of schools that do not have any player.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "Which schools do not have any player? Give me the school locations.",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
            "question": "List the names of people that are not perpetrators.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "What are the famous titles of artists who do not have any volumes?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "Which buildings do not have any company office? Give me the building names.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "Find the famous titles of artists that do not have any volume.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "List the names of buildings that have no company office.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all info of students who registered courses but not attended courses?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the titles of courses without prerequisites?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
            "question": "List the names of people that are not employed by any company",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "List the title of films that do not have any market estimation.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "What are the titles of films that do not have a film market estimation?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "What are the names of counties that do not contain any cities?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "List the names of counties that do not have any cities.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "Which projects have no outcome? List the project details.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "What are the details of the project with no outcomes?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "What are the titles of all movies that have not been rated?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "Find the titles of all movies that have no ratings.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
            "question": "List the names of members who did not participate in any round.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "Find all the name of documents without any sections.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "What are the names of documents that do not have any sections?",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM school_bus )",
            "question": "Show the names of the drivers without a school bus.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all details of the students who registered but did not attend any course?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "Select the project names which are not assigned yet.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "What are the names of people who are not entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people )",
            "question": "List the names of people that have not been on the affirmative side of debates.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "List the authors who do not have submission to any workshop.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "Show names for artists without any exhibition.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "What are the prices of products that have never gotten a complaint?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "Find the prices of products which has never received a single complaint.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN ( SELECT Player_ID FROM player_coach )",
            "question": "List the names of players that do not have coaches.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium WHERE id NOT IN ( SELECT stadium_id FROM event )",
            "question": "Find the names of stadiums which have never had any event.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record )",
            "question": "Find the names of the swimmers who have no record.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "What are the names of artists that have not had any exhibitions?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "What are the names of all the dorms that don't have any amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "Find the name of dorms that do not have any amenity",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the names of the items that did not receive any review.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train )",
            "question": "List the object number of railways that do not have any trains.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Book_ID NOT IN ( SELECT Book_ID FROM publication )",
            "question": "List the titles of books that are not published.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "Which authors did not submit to any workshop?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "List the names of people that are not entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "List the name of musicals that do not have actors.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "What are the names of the members that have never registered at any branch?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "What are the names of the technicians that have not been assigned to repair machines?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "List the names of technicians who have not been assigned to repair machines.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "List the names of shops that have no devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "What are the names of shops that do not have any devices in stock?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "List the carriers of devices that have no devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "What are the carriers of devices that are not in stock anywhere?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN ( SELECT Pilot_ID FROM pilot_record )",
            "question": "List the names of pilots that do not have any record.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "What are the names of parties that have no members?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "Show names of parties that does not have any members.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market )",
            "question": "List the names of phones that are not on any market.",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution )",
            "question": "Show the name of buildings that do not have any institution.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school WHERE school_id NOT IN ( SELECT school_id FROM endowment )",
            "question": "List the names of the schools without any endowment.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "What are the names of wrestlers who have never been eliminated?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "List the names of wrestlers that have not been eliminated.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "Show member names without any registered branch.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "What are the names of musicals who have no actors?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "What are the names of projects that have not been assigned?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "Find the name of instructors who didn't teach any courses?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "What are the names of scientists who have not been assigned a project?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "Return the names of teams that have no match season record.",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM member_attendance )",
            "question": "List the names of members who did not attend any performance.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "List the name of ships that are not involved in any mission",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE editor_id NOT IN ( SELECT editor_id FROM journal_committee )",
            "question": "List the names of editors that are not on any journal committee.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "List the names of clubs that do not have any players.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "Show the name for regions not affected.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "What are the names of regions that were not affected?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "Show the name of storms which don't have affected region in record.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "What are the names of storms that did not affect any regions?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "What is all the information about employees who have never had a job in the past?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Show all track names that have had no races.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Return the names of tracks that have no had any races.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "List the official names of cities that have not held any competition.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees )",
            "question": "Find the states which do not have any employee in their record.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "What are the names of parties that do not have delegates in election?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT name FROM station WHERE station_id NOT IN ( SELECT station_id FROM train_station )",
            "question": "Show station names without any trains.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the name of scientists who are not assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN ( SELECT asset_id FROM Fault_Log )",
            "question": "Which assets did not incur any fault log? List the asset model.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN ( SELECT journalist_ID FROM news_report )",
            "question": "List the names of journalists who have not reported any event.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "Which parties did not have any delegates in elections?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "What are the official names of cities that have not hosted a farm competition?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "display all the information of those employees who did not have any job in the past.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "What are the names of all clubs that do not have any players?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "What are the names of the ships that are not involved in any missions?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "What are the names of hosts who did not host any party in our record?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "List the id of students who never attends courses?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are the  ids of every student who has never attended a course?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "What are the names of teams that do no have match season record?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "List the names of hosts who did not serve as a host of any party in our record.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "What are the names of countains that no climber has climbed?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election )",
            "question": "List the names of representatives that have not participated in elections listed here.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "Count the number of products that were never ordered.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "How many schools do not participate in the basketball match?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "Count the number of universities that do not participate in the baketball match.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items without any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events )",
            "question": "How many events did not have any participants?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "How many customers have no payment histories?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the number of users who did not write any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "List the number of customers that did not have any payment history.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "Count the number of students who did not enroll in any course.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "How many apartments do not have any facility?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "Find the number of apartments that have no facility.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
            "question": "How many accelerators are not compatible with the browsers listed ?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have never taken a loan?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
            "question": "How many camera lenses are not used in taking any photos?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who do not have any loan.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers do not have an account?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Show the number of all customers without an account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "How many colors are never used by any product?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "Count the number of colors that are not used in any products.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who do not have any tweet.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "How many products were not included in any order?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "How many enzymes do not have any interactions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
            "question": "Find the average ram mib size of the chip models that are never used by any phone.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "How many tourists did not make any visit?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers don't have an account?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "Count the number of tourists who did not visit any place.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM institution WHERE institution_id NOT IN ( SELECT institution_id FROM protein )",
            "question": "How many institutions do not have an associated protein in our record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Count the number of customers who do not have an account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM department WHERE department_id NOT IN ( SELECT department_id FROM management ) ",
            "question": "How many departments are led by heads who are not mentioned?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "What is the count of enzymes without any interactions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "How many students did not have any course enrollment?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
            "question": "How many students are not involved in any behavior incident?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
            "question": "How many customers did not have any event?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items that did not receive any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "How many artists do not have any album?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "Cound the number of artists who have not released an album.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "How many documents do not have any expense?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM people WHERE people_id NOT IN ( SELECT People_ID FROM body_builder )",
            "question": "How many persons are not body builders?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
            "question": "How many games are free of injury accidents?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "How many courses that do not have prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Count the number of courses without prerequisites.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "How many scientists do not have any projects assigned to them?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the number of scientists who are not assigned to any project.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "Count the number of documents that do not have expenses.",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3": [
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "What are the student IDs and middle names of the students enrolled in at most two courses?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "What are the names and ids of the tourist attractions that are visited at most once?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "Find the student ID and middle name for all the students with at most two enrollments.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "Show the names and ids of tourist attractions that are visited at most once.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Find the the customer details and id for the customers who had more than one policy.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "what are name and phone number of patients who had more than one appointment?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the first names and ids for customers who have two or more accounts?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Show the names and ids of tourist attractions that are visited at least two times.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) < 2",
            "question": "Find the name and partition id for users who tweeted less than twice.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
            "question": "Find the name and email for the users who have more than one follower.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "Show the name and location of track with 1 race.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "What are the names and locations of tracks that have had exactly 1 race?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "What are the first and last names of all customers with more than 2 payments?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
            "question": "What are the id and details of the customers who have at least 3 events?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT( * ) > 1",
            "question": "Show id and location of railways that are associated with more than one train.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count( * ) >= 1",
            "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count( * ) > 2",
            "question": "Which parts have more than 2 faults? Show the part name and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "Return the order ids and details for orderes with two or more invoices.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "What is the order id and order details for the order more than two invoices.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "What are the ids and names of accounts with 4 or more transactions?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "Show the account id and name with at least 4 transactions.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "List first name and last name of customers that have more than 2 payments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show first name and id for all customers with at least 2 accounts.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the id and name of the mountains that have at least 2 photos?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count( * ) >= 3",
            "question": "What are the ids and names of the architects who built at least 3 bridges ?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Find the student ID and personal name of the student with at least two enrollments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "What are the GDP and population of the city that already served as a host more than once?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "What are the full names of actors who had roles in more than 30 films?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count( * ) > 1",
            "question": "What are the ids and details of events that have more than one participants?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "What is the project id and detail for the project with at least two documents?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count( * ) > 1",
            "question": "What are the ids and names of the companies that operated more than one flight?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id HAVING max( T1.precipitation ) > 50",
            "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "Find the organisation ids and details of the organisations which are involved in",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
            "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Roles.role_description , count( Employees.employee_id ) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count( Employees.employee_id ) > 1",
            "question": "List roles that have more than one employee. List the role description and number of employees.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT( * ) > 1",
            "question": "Show names of pilots that have more than one record.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count( * ) ASC LIMIT 1": [
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What are the name and code of the location with the smallest number of documents?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What are the code and description of the least frequent detention type ?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Show the location name and code with the least documents.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "what is the name and position of the head whose department has least number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "Find the name and position of the head of the department with the least employees.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student who played the most sports?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and hours of project that has the most number of scientists.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the full names of the 3 instructors who teach the most courses?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the full name of the employee who has the most customers?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name of employee who supported the most number of customers.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the salaray and name of the employee that is certified to fly the most planes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the first and last name of the faculty who has the most students?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the student ID and login name of the student who are enrolled in the most courses?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give me the the first and last name of the faculty who advises the most students.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date for the invoice with most number of transactions?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the student ID and login name of the student with the most course enrollments",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.booking_id , T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the salary and name of the employee who has the most number of aircraft certificates?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg( T2.salary ) ASC LIMIT 1",
            "question": "What are the name and id of the team offering the lowest average salary?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and first name of the student that has the most number of assessment notes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that is rated by most of times?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the first and last names of the instructors who teach the top 3 number of courses?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and hours for the project which has the most scientists assigned to it?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first name and last name of the student who have most number of sports?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T1.club_id , T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many gold medals has the club with the most coaches won?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and last name of the student that has the most behavior incidents?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg( T2.salary ) ASC LIMIT 1",
            "question": "Which team offers the lowest average salary? Give me the name and id of the team.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the code and description of the most frequent behavior incident type?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the browser that is compatible with the most web accelerators?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and country for the artist with most number of exhibitions?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and details of the investor that has the largest number of transactions.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
            "question": "Show the id and details for the investors who have the top 3 number of transactions.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the faculty participating in the most activities?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student participating in the most activities?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "Find the names of the top 10 airlines that operate the most number of routes.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and max speed of the storm that affected the most regions.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the description and code of the type of service that is performed the most often?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the description and code of the service type that is performed the most times.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and builder of the railway that are associated with the most trains.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the storm name and max speed which affected the greatest number of regions?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "For the airline ids with the top 10 most routes operated, what are their names?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that has been reviewed the most?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name and id of the college that has the most baseball players.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which student visited restaurant most often? List student's first name and last name.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details , T2.product_id FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY sum( T1.order_quantity ) LIMIT 1",
            "question": "Find the name and ID of the product whose total order quantity is the largest.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.product_name , T1.product_price FROM products AS T1 JOIN regular_order_products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and price of the product that has been ordered the greatest number of times.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the full name and id of the college with the largest number of baseball players?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description and code of the attraction type most tourist attractions belong to.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details and id of the project with the most outcomes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Tell me the first and last name of the student who has the most activities.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which project made the most number of outcomes? List the project details and the project id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details , T2.product_id FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY sum( T1.order_quantity ) LIMIT 1",
            "question": "What are the name and ID of the product bought the most.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most copies in the inventory? List both title and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type and id of the organization that has the most research staff?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and address of the department that has the highest number of students.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and address of the department with the most students?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id ORDER BY avg( high_temperature ) DESC LIMIT 1",
            "question": "Find the id and local authority of the station with has the highest average high temperature.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG( monthly_rental ) DESC LIMIT 1",
            "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.address_id , T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY AVG( monthly_rental ) DESC LIMIT 1",
            "question": "Find the id and city of the student address with the highest average monthly rental.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rank ) DESC LIMIT 1",
            "question": "Find the name and id of the good with the highest average rank.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rating ) DESC LIMIT 1",
            "question": "Find the name and id of the item with the highest average rating.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has the most problems? Give me the number of problems and the product name.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , count( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , count( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the names and number of works of the three artists who have produced the most songs.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city , count( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city lives most of staffs? List the city name and number of staffs.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city , count( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which city do the most employees live and how many of them live there?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many problems does the product with the most problems have? List the number of the problems and product name.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , avg( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg( T1.stars ) LIMIT 1",
            "question": "What are the movie titles and average rating of the movies with the lowest average rating?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , avg( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg( T1.stars ) LIMIT 1",
            "question": "What are the titles and average ratings for all movies that have the lowest average rating?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Restaurant.ResName , sum( Visits_Restaurant.Spent ) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum( Visits_Restaurant.Spent ) ASC LIMIT 1",
            "question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , count( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , count( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "List the organisation id with the maximum outcome count, and the count.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name , COUNT( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 5",
            "question": "List the top 5 genres by number of tracks. List genres name and total tracks.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name , COUNT( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 5",
            "question": "How many tracks does each genre have and what are the names of the top 5?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count( Documents.document_id ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count( Documents.document_id ) DESC LIMIT 1",
            "question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Return the id and full name of the customer who has the fewest accounts.",
            "ted": 0.1
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the customer id, first and last name with least number of accounts.",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the full name and staff id of the staff who has handled the fewest payments.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which staff handled least number of payments? List the full name and the id.",
            "ted": 0.1
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the full name and customer id of the customer with the fewest accounts.",
            "ted": 0.1
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the customer first, last name and id with least number of accounts.",
            "ted": 0.1
        }
    ],
    "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy type is most common?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy type has most number of allergies?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the industry shared by the most companies.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the event with the most participants?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which people severed as governor most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the payment method code used by the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the three colleges from which the most players are from?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
            "question": "Show the top 3 most common colleges of players in match seasons.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the position that is most common among players in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the people that have been governor the most times.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the most common position of players in match seasons.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the name of film studio that have the most number of films.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the country that has the most stadiums.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the home city with the most number of drivers.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most frequently used carrier of the phones.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the software platform shared by the greatest number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common participant type?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most used instrument?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common competition type?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of competition.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
            "question": "What instrument is used the most?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of teh studio that created the most films?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the names of the top 3 departments that provide the largest amount of courses?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the rank for which there are the fewest captains.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which location has the most corresponding counties?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which advisor has most number of students?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the deparment with the highest enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the code of the city with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the largest major?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which major has most number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the document type that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of city where most of students are living in.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common result of the music festival?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of the location with the largest number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the location code with the most documents?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which game type has most number of games?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) DESC LIMIT 1",
            "question": "What type has the most games?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the location shared by most counties?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the institution type with the largest number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the names of the 3 departments with the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT label FROM albums GROUP BY label ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the label that has the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT label FROM albums GROUP BY label ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the label with the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of the role that have the most employees.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which industry has the most companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common location of performances.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the role code with the largest number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the race class with most number of races.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the party that has the most people.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most popular payment method?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which payment method is used the most often?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which kind of policy type was chosen by the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common age of editors.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common headquarter for companies.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which policy type has the most records in the database?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which position is most popular among players in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the type code of the most frequently used policy.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the nominee who has been nominated the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Who is the nominee who has been nominated for the most musicals?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common result of the musicals.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the most frequent result across all musicals.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which type of policy is most frequently used? Give me the policy type code.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the poll resource associated with the most candidates.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the budget type code that is most common among documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count( * ) DESC LIMIT 1",
            "question": "What was the most popular position at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the card type that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the card type code with most number of cards?",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count( * ) DESC LIMIT 1",
            "question": "which pilot is in charge of the most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the budget type code with most number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which reign is the most common among wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which gender makes up the majority of the staff?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common reigns of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the country with the most number of home airlines?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which countries has the most number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which rank is the most common among captains?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which poll resource provided the most number of candidate information?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality of pilots.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the investor who have invested in the greatest number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality for journalists.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which policy type appears most frequently in the available policies?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which building has most faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the building that has the largest number of faculty members.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which classroom has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the year in which most ships were built?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the classroom that the most students use.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the policy type the most customers choose.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count( departmentID ) DESC LIMIT 1",
            "question": "Which department has the largest number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common country across members.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count( departmentID ) DESC LIMIT 1",
            "question": "Find the department with the most employees.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which vocal type is the most frequently appearring type?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of vocables that appears most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which year were most of ships built?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the software platform that is most common amongst all devices?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which college has the most authors with submissions?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common publication date.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the flag that is most common among all ships.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which flag is most widely used among all ships?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common college of authors of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count( * ) DESC LIMIT 1",
            "question": "What place has the most flights coming from there?",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common occupation of players.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which origin has most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the transaction type code that occurs the most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which payment method is used by most customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the advisor with the most students.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the class of races that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the city that has the most students.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the publisher with most number of books?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most popular first name of the actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which marketing region has the most drama workshop groups? Give me the region code.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the range that has the most number of mountains.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the publisher that has published the most books.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which status code is the most common of all the bookings?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the document type code with most number of documents?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the most common first name among all actors.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which role is most common for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city_code of the city that the most students live in?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the transportation method most people choose to get to tourist attractions.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which range contains the most mountains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the marketing region code that has the most drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count( * ) DESC LIMIT 2",
            "question": "What are the ids of the two department store chains with the largest number of department stores?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the product id for the product that was ordered most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the product ID of the most frequently ordered item on invoices?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the most prominent max page size among all the products.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of Status across cities.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which transportation method is used the most often to get to tourist attractions?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the file format that is used by the most files.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which apartment type code appears the most often?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the most common apartment type code.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which major has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the account id with most number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the catalog publisher that has the most catalogs.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most popular file format?",
            "ted": 0.0
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which month has the most happy hours?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the membership level with most number of members.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the membership level with the most people?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common status across all cities?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the major that is studied by the largest number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most frequent status of bookings?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the account with the most transactions?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the id of the product ordered the most often on invoices.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the investor that has invested in the most number of entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy has most number of students affected?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the team that has the most number of technicians.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common maximum page size?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT creation FROM department GROUP BY creation ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which year were most departments established?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common birth place of people?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of artworks.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the product that was ordered the most often?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy is the most common?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the location with most number of train stations.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which nationality has the most hosts?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which catalog publisher has published the most catalogs?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which year had the greatest number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the teams with the most technicians?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the store that has the most items in inventory?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the year which offers the largest number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common role for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id of the store with the most customers.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT languages FROM song GROUP BY languages ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the languages that are used most often in songs?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the result that is most frequent at music festivals.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common type code across products.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of department has the highest amount of students?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common type of ships.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT languages FROM song GROUP BY languages ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the language used most often in the songs?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which store owns most items?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality of hosts.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common builder of railways.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common status of roller coasters.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count( * ) DESC LIMIT 2",
            "question": "Return the ids of the two department store chains with the most department stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which store has most the customers?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common type of ships?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the least common faculty rank?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "Which year has the most degrees conferred?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Return the id of the project that has the fewest corresponding documents.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the payment method that were used the least often?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "In what year was the most degrees conferred?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg( salary ) DESC LIMIT 1",
            "question": "Which department has the highest average instructor salary?",
            "ted": 0.05
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum( transaction_amount ) DESC LIMIT 1",
            "question": "Return the type of transaction with the highest total amount.",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg( salary ) DESC LIMIT 1",
            "question": "Find the name of the department which has the highest average salary of professors.",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT state FROM customers GROUP BY state ORDER BY count( * ) LIMIT 1",
            "question": "Give the state that has the most customers.",
            "ted": 0.05
        },
        {
            "db_id": "college_3",
            "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the rank of the faculty that the fewest faculties belong to.",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count( * ) ASC LIMIT 3",
            "question": "List three countries which are the origins of the least players.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the id of the project with least number of documents?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "What campus has the most degrees  conferrred over its entire existence?",
            "ted": 0.05
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count( * ) LIMIT 1",
            "question": "Which destination has least number of flights?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "Which campus has the most degrees conferred in all times?",
            "ted": 0.05
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count( * ) LIMIT 1",
            "question": "What destination has the fewest number of flights?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count( * ) ASC LIMIT 3",
            "question": "What are the three countries that the least players are from?",
            "ted": 0.05
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "Tell me the employee id of the head of the department with the least employees.",
            "ted": 0.05
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "What is the employee id of the head whose department has the least number of employees?",
            "ted": 0.05
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "Show the transaction type code that occurs the fewest times.",
            "ted": 0.05
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the faculty rank that has the least members.",
            "ted": 0.05
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum( transaction_amount ) DESC LIMIT 1",
            "question": "What is the transaction type that has processed the greatest total amount in transactions?",
            "ted": 0.05
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which rank has the smallest number of faculty members?",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT state FROM customers GROUP BY state ORDER BY count( * ) LIMIT 1",
            "question": "Which state has the most customers?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum( credits ) DESC LIMIT 1",
            "question": "What is the name of the department with the most credits?",
            "ted": 0.05
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) ASC LIMIT 1",
            "question": "With which kind of payment method were the least number of payments processed?",
            "ted": 0.05
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count( * ) LIMIT 1",
            "question": "What are the ids of the students who registered for some courses but had the least number of courses for all students?",
            "ted": 0.05
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which customer status code has least number of customers?",
            "ted": 0.05
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the status code with the least number of customers?",
            "ted": 0.05
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which allergy type has least number of allergies?",
            "ted": 0.05
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which allergy type is the least common?",
            "ted": 0.05
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) LIMIT 1",
            "question": "What is the type with the fewest games?",
            "ted": 0.05
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) LIMIT 1",
            "question": "Which game type has least number of games?",
            "ted": 0.05
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg( room_count ) DESC LIMIT 3",
            "question": "What are the top three apartment types in terms of the average room count? Give me the",
            "ted": 0.05
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count( * ) LIMIT 1",
            "question": "what is id of students who registered some courses but the least number of courses in these students?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count( * ) ASC LIMIT 1",
            "question": "In which year did the least people enter hall of fame?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Show the role code with the least employees.",
            "ted": 0.05
        },
        {
            "db_id": "department_store",
            "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count( * ) LIMIT 1",
            "question": "Return the id of the department with the fewest staff assignments.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the role with the smallest number of employees? Find the role codes.",
            "ted": 0.05
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state FROM bank GROUP BY state ORDER BY sum( no_of_customers ) DESC LIMIT 1",
            "question": "Which state has the greatest total number of bank customers?",
            "ted": 0.05
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state FROM bank GROUP BY state ORDER BY sum( no_of_customers ) DESC LIMIT 1",
            "question": "Find the state which has the most number of customers.",
            "ted": 0.05
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg( room_count ) DESC LIMIT 3",
            "question": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.",
            "ted": 0.05
        },
        {
            "db_id": "department_store",
            "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count( * ) LIMIT 1",
            "question": "What is the id of the department with the least number of staff?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum( credits ) DESC LIMIT 1",
            "question": "Find the name of the department that offers the highest total credits?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the year in which the least people enter hall of fame.",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT sum( access_count ) FROM documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the total access count of documents that are of the most common document type?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers GROUP BY customer_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Count the number of customers that have the customer type that is most common.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers GROUP BY customer_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many customers are there in the customer type with the most customers?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT sum( access_count ) FROM documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the total access count of all documents in the most popular document type.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg( mean_sea_level_pressure_inches ) LIMIT 1",
            "question": "What is the zip code that has the lowest average mean sea level pressure?",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg( mean_sea_level_pressure_inches ) LIMIT 1",
            "question": "What is the zip code in which the average mean sea level pressure is the lowest?",
            "ted": 0.1
        }
    ],
    "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id": [
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id",
            "question": "What are the line 1 of addresses shared by some students and some teachers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID",
            "question": "Which cities have at least one customer but no performer?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID",
            "question": "Show all cities where at least one customer lives in but no performer lives in.",
            "ted": 0.023809523809523808
        }
    ],
    "SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count( * ) , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1": [],
    "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT( * ) DESC LIMIT 1": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy type is most common?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy type has most number of allergies?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the industry shared by the most companies.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the event with the most participants?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which people severed as governor most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the payment method code used by the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the three colleges from which the most players are from?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
            "question": "Show the top 3 most common colleges of players in match seasons.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the position that is most common among players in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the people that have been governor the most times.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the most common position of players in match seasons.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the name of film studio that have the most number of films.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the country that has the most stadiums.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the home city with the most number of drivers.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most frequently used carrier of the phones.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the software platform shared by the greatest number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common participant type?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most used instrument?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common competition type?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of competition.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
            "question": "What instrument is used the most?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of teh studio that created the most films?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the names of the top 3 departments that provide the largest amount of courses?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the rank for which there are the fewest captains.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which location has the most corresponding counties?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which advisor has most number of students?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the deparment with the highest enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the code of the city with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the largest major?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which major has most number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the document type that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of city where most of students are living in.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common result of the music festival?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of the location with the largest number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the location code with the most documents?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which game type has most number of games?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) DESC LIMIT 1",
            "question": "What type has the most games?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the location shared by most counties?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the institution type with the largest number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the names of the 3 departments with the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT label FROM albums GROUP BY label ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the label that has the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT label FROM albums GROUP BY label ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the label with the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of the role that have the most employees.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which industry has the most companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common location of performances.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the role code with the largest number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the race class with most number of races.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the party that has the most people.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most popular payment method?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which payment method is used the most often?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which kind of policy type was chosen by the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common age of editors.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common headquarter for companies.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which policy type has the most records in the database?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which position is most popular among players in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the type code of the most frequently used policy.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the nominee who has been nominated the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Who is the nominee who has been nominated for the most musicals?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common result of the musicals.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the most frequent result across all musicals.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which type of policy is most frequently used? Give me the policy type code.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the poll resource associated with the most candidates.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the budget type code that is most common among documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count( * ) DESC LIMIT 1",
            "question": "What was the most popular position at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the card type that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the card type code with most number of cards?",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count( * ) DESC LIMIT 1",
            "question": "which pilot is in charge of the most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the budget type code with most number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which reign is the most common among wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which gender makes up the majority of the staff?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common reigns of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the country with the most number of home airlines?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which countries has the most number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which rank is the most common among captains?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which poll resource provided the most number of candidate information?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality of pilots.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the investor who have invested in the greatest number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality for journalists.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which policy type appears most frequently in the available policies?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which building has most faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the building that has the largest number of faculty members.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which classroom has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the year in which most ships were built?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the classroom that the most students use.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the policy type the most customers choose.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count( departmentID ) DESC LIMIT 1",
            "question": "Which department has the largest number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common country across members.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count( departmentID ) DESC LIMIT 1",
            "question": "Find the department with the most employees.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which vocal type is the most frequently appearring type?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of vocables that appears most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which year were most of ships built?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the software platform that is most common amongst all devices?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which college has the most authors with submissions?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common publication date.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the flag that is most common among all ships.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which flag is most widely used among all ships?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common college of authors of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count( * ) DESC LIMIT 1",
            "question": "What place has the most flights coming from there?",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common occupation of players.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which origin has most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the transaction type code that occurs the most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which payment method is used by most customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the advisor with the most students.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the class of races that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the city that has the most students.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the publisher with most number of books?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most popular first name of the actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which marketing region has the most drama workshop groups? Give me the region code.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the range that has the most number of mountains.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the publisher that has published the most books.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which status code is the most common of all the bookings?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the document type code with most number of documents?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the most common first name among all actors.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which role is most common for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city_code of the city that the most students live in?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the transportation method most people choose to get to tourist attractions.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which range contains the most mountains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the marketing region code that has the most drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count( * ) DESC LIMIT 2",
            "question": "What are the ids of the two department store chains with the largest number of department stores?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the product id for the product that was ordered most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the product ID of the most frequently ordered item on invoices?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the most prominent max page size among all the products.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of Status across cities.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which transportation method is used the most often to get to tourist attractions?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the file format that is used by the most files.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which apartment type code appears the most often?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the most common apartment type code.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which major has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the account id with most number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the catalog publisher that has the most catalogs.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most popular file format?",
            "ted": 0.0
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which month has the most happy hours?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the membership level with most number of members.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the membership level with the most people?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common status across all cities?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the major that is studied by the largest number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most frequent status of bookings?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the account with the most transactions?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the id of the product ordered the most often on invoices.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the investor that has invested in the most number of entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy has most number of students affected?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the team that has the most number of technicians.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common maximum page size?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT creation FROM department GROUP BY creation ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which year were most departments established?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common birth place of people?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of artworks.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the product that was ordered the most often?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy is the most common?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the location with most number of train stations.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which nationality has the most hosts?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which catalog publisher has published the most catalogs?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which year had the greatest number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the teams with the most technicians?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the store that has the most items in inventory?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the year which offers the largest number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common role for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id of the store with the most customers.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT languages FROM song GROUP BY languages ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the languages that are used most often in songs?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the result that is most frequent at music festivals.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common type code across products.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of department has the highest amount of students?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common type of ships.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT languages FROM song GROUP BY languages ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the language used most often in the songs?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which store owns most items?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality of hosts.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common builder of railways.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common status of roller coasters.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count( * ) DESC LIMIT 2",
            "question": "Return the ids of the two department store chains with the most department stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which store has most the customers?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common type of ships?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the least common faculty rank?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "Which year has the most degrees conferred?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Return the id of the project that has the fewest corresponding documents.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the payment method that were used the least often?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "In what year was the most degrees conferred?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg( salary ) DESC LIMIT 1",
            "question": "Which department has the highest average instructor salary?",
            "ted": 0.05
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum( transaction_amount ) DESC LIMIT 1",
            "question": "Return the type of transaction with the highest total amount.",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg( salary ) DESC LIMIT 1",
            "question": "Find the name of the department which has the highest average salary of professors.",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT state FROM customers GROUP BY state ORDER BY count( * ) LIMIT 1",
            "question": "Give the state that has the most customers.",
            "ted": 0.05
        },
        {
            "db_id": "college_3",
            "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the rank of the faculty that the fewest faculties belong to.",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count( * ) ASC LIMIT 3",
            "question": "List three countries which are the origins of the least players.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the id of the project with least number of documents?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "What campus has the most degrees  conferrred over its entire existence?",
            "ted": 0.05
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count( * ) LIMIT 1",
            "question": "Which destination has least number of flights?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "Which campus has the most degrees conferred in all times?",
            "ted": 0.05
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count( * ) LIMIT 1",
            "question": "What destination has the fewest number of flights?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count( * ) ASC LIMIT 3",
            "question": "What are the three countries that the least players are from?",
            "ted": 0.05
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "Tell me the employee id of the head of the department with the least employees.",
            "ted": 0.05
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "What is the employee id of the head whose department has the least number of employees?",
            "ted": 0.05
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "Show the transaction type code that occurs the fewest times.",
            "ted": 0.05
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the faculty rank that has the least members.",
            "ted": 0.05
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum( transaction_amount ) DESC LIMIT 1",
            "question": "What is the transaction type that has processed the greatest total amount in transactions?",
            "ted": 0.05
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which rank has the smallest number of faculty members?",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT state FROM customers GROUP BY state ORDER BY count( * ) LIMIT 1",
            "question": "Which state has the most customers?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum( credits ) DESC LIMIT 1",
            "question": "What is the name of the department with the most credits?",
            "ted": 0.05
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) ASC LIMIT 1",
            "question": "With which kind of payment method were the least number of payments processed?",
            "ted": 0.05
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count( * ) LIMIT 1",
            "question": "What are the ids of the students who registered for some courses but had the least number of courses for all students?",
            "ted": 0.05
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which customer status code has least number of customers?",
            "ted": 0.05
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the status code with the least number of customers?",
            "ted": 0.05
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which allergy type has least number of allergies?",
            "ted": 0.05
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which allergy type is the least common?",
            "ted": 0.05
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) LIMIT 1",
            "question": "What is the type with the fewest games?",
            "ted": 0.05
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) LIMIT 1",
            "question": "Which game type has least number of games?",
            "ted": 0.05
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg( room_count ) DESC LIMIT 3",
            "question": "What are the top three apartment types in terms of the average room count? Give me the",
            "ted": 0.05
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count( * ) LIMIT 1",
            "question": "what is id of students who registered some courses but the least number of courses in these students?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count( * ) ASC LIMIT 1",
            "question": "In which year did the least people enter hall of fame?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Show the role code with the least employees.",
            "ted": 0.05
        },
        {
            "db_id": "department_store",
            "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count( * ) LIMIT 1",
            "question": "Return the id of the department with the fewest staff assignments.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the role with the smallest number of employees? Find the role codes.",
            "ted": 0.05
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state FROM bank GROUP BY state ORDER BY sum( no_of_customers ) DESC LIMIT 1",
            "question": "Which state has the greatest total number of bank customers?",
            "ted": 0.05
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state FROM bank GROUP BY state ORDER BY sum( no_of_customers ) DESC LIMIT 1",
            "question": "Find the state which has the most number of customers.",
            "ted": 0.05
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg( room_count ) DESC LIMIT 3",
            "question": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.",
            "ted": 0.05
        },
        {
            "db_id": "department_store",
            "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count( * ) LIMIT 1",
            "question": "What is the id of the department with the least number of staff?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum( credits ) DESC LIMIT 1",
            "question": "Find the name of the department that offers the highest total credits?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the year in which the least people enter hall of fame.",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT sum( access_count ) FROM documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the total access count of documents that are of the most common document type?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers GROUP BY customer_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Count the number of customers that have the customer type that is most common.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers GROUP BY customer_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many customers are there in the customer type with the most customers?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT sum( access_count ) FROM documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the total access count of all documents in the most popular document type.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg( mean_sea_level_pressure_inches ) LIMIT 1",
            "question": "What is the zip code that has the lowest average mean sea level pressure?",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg( mean_sea_level_pressure_inches ) LIMIT 1",
            "question": "What is the zip code in which the average mean sea level pressure is the lowest?",
            "ted": 0.1
        }
    ],
    "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 6 GROUP BY T1.student_id HAVING count( * ) >= 3": [
        {
            "db_id": "school_finance",
            "query": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.amount > 8.5 GROUP BY T1.school_id HAVING count( * ) > 1",
            "question": "Find the names of schools that have more than one donator with donation amount above 8.5.",
            "ted": 0.025
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE outcome_code = 'Order' GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.name , T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 GROUP BY T1.building_id HAVING count( * ) >= 2",
            "question": "Show the names and heights of buildings with at least two institutions founded after 1880.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.resolution > 900 GROUP BY T2.artist_name HAVING count( * ) >= 1",
            "question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.resolution > 900 GROUP BY T2.artist_name HAVING count( * ) >= 1",
            "question": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method_code = 'Credit Card' GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "Show the names of customers who use Credit Card payment method and have more than 2 orders.",
            "ted": 0.09523809523809523
        }
    ],
    "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Tiffany'": [
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many vocal types are used in the song \"Le Pop\"?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT count( * ) FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'England'",
            "question": "How many leagues are there in England?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "Find the number of routes with destination airports in Italy.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "Count the number of financial transactions that the account with the name 337 has.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "Find the number of vocal types used in song \"Le Pop\"",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "How many characteristics does the product named \"sesame\" have?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "Count the number of characteristics the product 'sesame' has.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lesson does customer with first name Ray took?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "Find the number of professors in accounting department.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lessons did the customer with the first name Ray take?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "How many professors are in the accounting dept?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes are professor whose last name is Graztevski has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes does the professor whose last name is Graztevski teach?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "How many department stores does the store chain South have?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums has Billy Cobam released?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses are offered by the Computer Info. Systems department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses does the department of Computer Information Systmes offer?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "How many students enrolled in class ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "What are the total number of students enrolled in ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "What is the number of routes that end at John F Kennedy International Airport?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "Find the number of routes that have destination John F Kennedy International Airport.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students attend course English?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students are attending English courses?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "Find the number of routes operated by American Airlines.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "How many routes does American Airlines operate?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "Find the number of routes whose destination airports are in Canada.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "How many routes end in a Canadian airport?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS'",
            "question": "How many documents were shipped by USPS?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "What is the number of routes whose destinations are Italian airports?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums does Billy Cobham has?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "Count the number of stores the chain South has.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "How many transaction does account with name 337 have?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Find the number of albums by the artist \"Metallica\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "Count the number of tracks that are of the media type \"AAC audio file\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Hom many albums does the artist \"Metallica\" have?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems did the product called \"voluptatem\" have in record?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "How many cities are in Australia?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "How many tracks are in the AAC audio file media type?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students have a food allergy?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students are affected by food related allergies?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "Count the number of cities in Australia.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems are there for product voluptatem?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "Find the number of vocal types used in song \"Demon Kitty Rag\"?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Count the number of tracks that are part of the rock genre.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "How many tracks belong to rock genre?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "What are the types of vocals used in the song \"Demon Kitty Rag\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "Count the total number of policies used by the customer named \"Dayana Robel\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "How many policies are listed for the customer named \"Dayana Robel\"?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'AIB'",
            "question": "What is the average points of players from club with name \"AIB\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "What is the average unit price of rock tracks?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'AIB'",
            "question": "What is the average number of points for players from the \"AIB\" club?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Find the average unit price of tracks from the Rock genre.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "wine_1",
            "query": "SELECT AVG( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'",
            "question": "Give me the average prices of wines that are produced by appelations in Sonoma County.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( T1.ROM_MiB ) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = 'Nokia Corporation'",
            "question": "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT sum( T1.Order_Quantity ) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = 'photo'",
            "question": "What are the total order quantities of photo products?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT sum( T1.Order_Quantity ) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = 'photo'",
            "question": "Compute the total order quantities of the product \"photo\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "wine_1",
            "query": "SELECT AVG( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'",
            "question": "What is the average price of wines produced in appelations in Sonoma County?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'",
            "question": "What is the average number of hours spent practicing for students who got rejected?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "What is average salary of the players in the team named 'Boston Red Stockings' ?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'",
            "question": "Find the average hours for the students whose tryout decision is no.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = 'Columbus Square'",
            "question": "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = 'Columbus Square'",
            "question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = 'Gym'",
            "question": "Find the total number of rooms in the apartments that have facility code \"Gym\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Jazz'",
            "question": "What is the average unit price of tracks that belong to Jazz genre?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "How many trips did not end in San Francisco?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "Count the number of trips that did not end in San Francisco city.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "What is the average room count of the apartments whose booking status code is \"Provisional\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( T2.rating ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female'",
            "question": "What is the average rating of songs produced by female artists?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Show the average room count of the apartments that have booking status code \"Provisional\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT max( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "What are the maximum scores the team Boston Red Stockings got when the team won in postseason?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT max( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "List the maximum scores of the team Boston Red Stockings when the team won in postseason?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Jazz'",
            "question": "Find the average unit price of jazz tracks.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "election_representative",
            "query": "SELECT avg( T1.Votes ) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Party = 'Republican'",
            "question": "What is the average number of votes of representatives from party \"Republican\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "school_finance",
            "query": "SELECT sum( T1.budgeted ) FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn'",
            "question": "What is the total budget amount for school \"Glenn\" in all years?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "Compute the average salary of the players in the team called 'Boston Red Stockings'.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( T2.rating ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female'",
            "question": "How many songs, on average, are sung by a female artist?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT avg( T1.sales ) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'",
            "question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status = 'Cancelled'",
            "question": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = 'Gym'",
            "question": "Show the total number of rooms of all apartments with facility code \"Gym\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status = 'Cancelled'",
            "question": "What is the total number of products that are in orders with status \"Cancelled\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT max( T2.active_to_date ) FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( T2.amount ) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
            "question": "What is the total amount of money loaned by banks in New York state?",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( T2.amount ) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
            "question": "Find the total amount of loans provided by bank branches in the state of New York.",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT max( T2.active_to_date ) FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".",
            "ted": 0.03333333333333333
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T2.position ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Count the number of different positions in the club \"Bootup Baltimore\".",
            "ted": 0.0625
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT T2.Location_Code ) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.service_details = 'Unsatisfied'",
            "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?",
            "ted": 0.0625
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT T2.camera_lens_id ) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country = 'Ethiopia'",
            "question": "How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.College ) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Columbus Crew'",
            "question": "Count the number of different colleges that players who play for Columbus Crew are from.",
            "ted": 0.0625
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( DISTINCT T1.donator_name ) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn'",
            "question": "How many donors have endowment for school named \"Glenn\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many instruments does the song \"Le Pop\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many different instruments are used in the song \"Le Pop\"?",
            "ted": 0.0625
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T2.position ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "How many different roles are there in the club \"Bootup Baltimore\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "How many different instruments does the musician with the last name \"Heilo\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "How many instrument does the musician with last name \"Heilo\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.Official_native_language ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "Count the number of different official languages corresponding to countries that players who play Defender are from.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( DISTINCT dst_apid ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "Find the number of different airports which are the destinations of the American Airlines.",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.Official_native_language ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "How many distinct official languages are there among countries of players whose positions are defenders.",
            "ted": 0.0625
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT T1.College ) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Columbus Crew'",
            "question": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\".",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "How many different instruments are used in the song \"Badlands\"?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'lead'",
            "question": "How many songs have vocals of type lead?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "How many instruments does the song \"Badlands\" use?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'shared'",
            "question": "How many different songs have shared vocals?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'shared'",
            "question": "How many songs have a shared vocal?",
            "ted": 0.0625
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT title ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = 'lead'",
            "question": "How many songs have a lead vocal?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( DISTINCT dst_apid ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "What is the number of different different airports that are destinations for American Airlines?",
            "ted": 0.0625
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
            "question": "What are the different states that had students successfully try out?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Brazil'",
            "question": "Find the first names of all customers that live in Brazil and have an invoice.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'",
            "question": "Find the cities corresponding to employees who help customers with the postal code 70174.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = 'Bosco'",
            "question": "Find the ids of the problems that are reported by the staff whose last name is Bosco.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = 'The Phantom of the Opera'",
            "question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
            "question": "Find the states where have some college students in tryout and their decisions are yes.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = 'West Germany'",
            "question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = 'The Phantom of the Opera'",
            "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Germany'",
            "question": "Find the address of all customers that live in Germany and have invoice.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
            "question": "Find the states of the colleges that have students in the tryout who played in striker position.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
            "question": "What are the states of the colleges where students who tried out for the striker position attend?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic'",
            "question": "Return all the committees that have delegates from Democratic party.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
            "question": "What are the last names for all scholarship students?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Germany'",
            "question": "What are the addresses of customers living in Germany who have had an invoice?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT DISTINCT channel_code FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = 'Appropriations'",
            "question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = 'Bosco'",
            "question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Brazil'",
            "question": "What are the different first names for customers from Brazil who have also had an invoice?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = 'West Germany'",
            "question": "What are the different names of mountains ascended by climbers from the country of West Germany?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'",
            "question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
            "question": "What are the times used by climbers who climbed mountains in the country of Uganda?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk'",
            "question": "What are the details of the shops that can be accessed by walk?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T2.player = 'Walter Samuel'",
            "question": "What is the season of the game which causes the player 'Walter Samuel' to get injured?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = 'Taizhou ( Zhejiang ) '",
            "question": "What is the host year of city \"Taizhou ( Zhejiang )\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = 'Taizhou ( Zhejiang ) '",
            "question": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'AC/DC'",
            "question": "What are the titles of albums by the artist \"AC/DC\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk'",
            "question": "Find the details of the shops that can be reached by walk.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
            "question": "Give the address of the staff member who has the first name Elsa.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
            "question": "Where does the staff member with the first name Elsa live?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = 'US museum'",
            "question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = 'US museum'",
            "question": "Tell me the name of the staff in charge of the attraction called \"US museum\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'",
            "question": "What is the name of the language that the film 'AIRPORT POLLOCK' is in?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'",
            "question": "Which language does the film AIRPORT POLLOCK use? List the language name.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = 'Balls to the Wall'",
            "question": "Which artist does the album \"Balls to the Wall\" belong to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = 'Balls to the Wall'",
            "question": "Find the name of the artist who made the album \"Balls to the Wall\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed'",
            "question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed'",
            "question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'",
            "question": "Tell me the booking status code for the apartment with number \"Suite 634\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
            "question": "Show last names for all student who are on scholarship.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'",
            "question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic'",
            "question": "Which committees have delegates from the Democratic party?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'",
            "question": "What city does the employee who helps the customer with postal code 70174 live in?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
            "question": "Show the times used by climbers to climb mountains in Country Uganda.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = 'Appropriations'",
            "question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = 'Koby'",
            "question": "What is the role of the employee named Koby?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = 'null'",
            "question": "Find the names of all reviewers who have ratings with a NULL value for the date.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'",
            "question": "List the email addresses of the drama workshop groups located in Alaska state.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = 'stop'",
            "question": "What are the names of the workshop groups that have bookings with status code \"stop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = 'stop'",
            "question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = 'Solveig'",
            "question": "Find all the stage positions of the musicians with first name \"Solveig\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = 'Solveig'",
            "question": "What are the different stage positions for all musicians whose first name is \"Solveig\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What instruments does the the song \"Le Pop\" use?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the instruments are used in the song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT T1.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.catalog_level_number = '8'",
            "question": "Find the names of catalog entries with level number 8.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
            "question": "List all company names with a book published by Alyson.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = 'Government'",
            "question": "Give the ids for documents that have the budget description 'Government'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT T1.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.catalog_level_number = '8'",
            "question": "What are the names of catalog entries with level number 8?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = 'Government'",
            "question": "Show ids for all documents with budget types described as 'Government'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "Find all the instruments ever used by the musician with last name \"Heilo\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "What are all the instruments used by the musician with the last name \"Heilo\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the vocal types used in song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the types of vocals used in the song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = 'King Book'",
            "question": "What is the project detail for the project with document \"King Book\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
            "question": "What are all the company names that have a book published by Alyson?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "What are the vocal types used in song \"Badlands\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "What types of vocals are used in the song \"Badlands\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids",
            "question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids",
            "question": "List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = 'King Book'",
            "question": "Give the details of the project with the document name 'King Book'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "department_management",
            "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'",
            "question": "What are the distinct ages of the heads who are acting?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'",
            "question": "What are the email addresses of the drama workshop groups with address in Alaska state?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'",
            "question": "What are the names of the drama workshop groups with address in Feliciaberg city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Ryley Goldner'",
            "question": "Return the positions of players on the team Ryley Goldner.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Ryley Goldner'",
            "question": "Show the positions of the players from the team with name \"Ryley Goldner\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = 'North Coast'",
            "question": "What are the distinct names of wines that have appellations in the North Coast area?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = 'North Coast'",
            "question": "Find the names of all distinct wines that have appellations in North Coast area.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = 'Shanghai'",
            "question": "What is the temperature of \"Shanghai\" city in January?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'Red'",
            "question": "List the names of all distinct wines that are made of red color grape.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = 'Dublin'",
            "question": "Give the different positions of players who play for the country with the capital Dublin.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = 'Dublin'",
            "question": "What are the distinct positions of the players from a country whose capital is Dublin?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = 'Indonesia'",
            "question": "Who are the players from Indonesia?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = 'Indonesia'",
            "question": "Which players are from Indonesia?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'",
            "question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = 'FJA Filming'",
            "question": "Which city is the address of the store named \"FJA Filming\" located in?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = 'CA'",
            "question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = 'CA'",
            "question": "Find the states or counties where the stores with marketing region code \"CA\" are located.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = 'Rob Dinning'",
            "question": "What is the name of the marketing region that the store Rob Dinning belongs to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = 'Rob Dinning'",
            "question": "Return the name of the marketing region the store Rob Dinning is located in.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = 'null'",
            "question": "What are the different names of all reviewers whose ratings do not have a date field?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop'",
            "question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT DISTINCT channel_code FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb , Becker and Wyman'",
            "question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop'",
            "question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax'",
            "question": "what are the details of the cmi masters that have the cross reference code 'Tax'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = 'FJA Filming'",
            "question": "Find the city the store named \"FJA Filming\" is in.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'Red'",
            "question": "What are the names of wines made from red grapes?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = 'Shanghai'",
            "question": "Give me the temperature of Shanghai in January.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
            "question": "What is the total number of purchases for members with level 6?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning'",
            "question": "Which channels are broadcast in the morning? Give me the channel names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'advanced database'",
            "question": "Find the login name of the course author that teaches the course with name \"advanced database\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'advanced database'",
            "question": "Which course author teaches the \"advanced database\" course? Give me his or her login name.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock'",
            "question": "What is the name of tracks whose genre is Rock?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock'",
            "question": "What is the name of all tracks in the Rock genre?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = 'Julio'",
            "question": "Find the names of courses taught by the tutor who has personal name \"Julio\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = 'Julio'",
            "question": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = 'Professor'",
            "question": "Which students have professors as their advisors? Find their student ids.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = 'Professor'",
            "question": "Show the ids of students whose advisors are professors.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = 'Balls to the Wall'",
            "question": "What is title of album which track Balls to the Wall belongs to?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = 'Balls to the Wall'",
            "question": "What is the name of the album that has the track Ball to the Wall?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning'",
            "question": "Find the names of the channels that are broadcast in the morning.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'",
            "question": "What is the total balance of savings accounts not belonging to someone with the name Brown?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'Spanish'",
            "question": "What is the date of enrollment of the course named \"Spanish\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'Spanish'",
            "question": "Find the the date of enrollment of the \"Spanish\" course.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Pass'",
            "question": "What are the enrollment dates of all the tests that have result \"Pass\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Pass'",
            "question": "Find the enrollment date for all the tests that have \"Pass\" result.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Fail'",
            "question": "What are the completion dates of all the tests that have result \"Fail\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Fail'",
            "question": "Return the completion date for all the tests that have \"Fail\" result.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'",
            "question": "List name of all tracks in Balls to the Wall.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'",
            "question": "What is the name of all tracks in the album named Balls to the Wall?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeramie'",
            "question": "Find the dates of orders which belong to the customer named \"Jeramie\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "railway",
            "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name = 'Andaman Exp'",
            "question": "Show the builder of railways associated with the trains named \"Andaman Exp\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'AC/DC'",
            "question": "Find the title of all the albums of the artist \"AC/DC\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'",
            "question": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = 'Airbus A340-300'",
            "question": "What are the flight numbers for the aircraft Airbus A340-300?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = 'Airbus A340-300'",
            "question": "Show all flight numbers with aircraft Airbus A340-300.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road'",
            "question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'",
            "question": "What is the first name of students who got grade C in any class?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'",
            "question": "What are the first names of all students who got a grade C in a class?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_date < '2018-03-17 07:13:53'",
            "question": "Find the total amount of products ordered before 2018-03-17 07:13:53.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_date < '2018-03-17 07:13:53'",
            "question": "What is the total amount of products purchased before 2018-03-17 07:13:53?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = 'game1'",
            "question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'",
            "question": "What is the id of the candidate whose email is stanley.monahan@example.org?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = 'game1'",
            "question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = 'l'",
            "question": "Return the lot details of lots that belong to investors with details \"l\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = 'Right Wing'",
            "question": "Show the names of clubs that have players with position \"Right Wing\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'",
            "question": "Find id of the candidate whose email is stanley.monahan@example.org?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
            "question": "How many courses does the student with id 171 actually attend?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = 'Right Wing'",
            "question": "What are the names of the clubs that have players in the position of \"Right Wing\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
            "question": "How many courses do the student whose id is 171 attend?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Aerosmith'",
            "question": "List Aerosmith's albums.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Aerosmith'",
            "question": "What are the titles of all the Aerosmith albums?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "company_1",
            "query": "SELECT T1.dname FROM department AS T1 JOIN dept_locations AS T2 ON T1.dnumber = T2.dnumber WHERE T2.dlocation = 'Houston'",
            "question": "Find the names of departments that are located in Houston.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage'",
            "question": "what are the event details of the services that have the type code 'Marriage'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = 'Nominated'",
            "question": "Please show the songs that have result \"nominated\" at music festivals.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = 'Nominated'",
            "question": "What are the songs in volumes that have resulted in a nomination at music festivals?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'",
            "question": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'",
            "question": "Return the issue dates of volumes that are by the artist named Gorgoroth.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
            "question": "How many events had participants whose details had the substring 'Dr.'",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Packing'",
            "question": "List the name of all the distinct customers who have orders with status \"Packing\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Packing'",
            "question": "Which customers have orders with status \"Packing\"? Give me the customer names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road'",
            "question": "Find the details of all the distinct customers who have orders with status \"On Road\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeramie'",
            "question": "What are the dates of the orders made by the customer named \"Jeramie\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = '918'",
            "question": "What are the email addresses of teachers whose address has zip code \"918\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = 'United States'",
            "question": "Show the distinct fate of missions that involve ships with nationality \"United States\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Win'",
            "question": "Find the names of swimmers who has a result of \"win\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy'",
            "question": "Find the names of the customers who have an deputy policy.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
            "question": "What is the name of the product with the color description 'yellow'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = 'United States'",
            "question": "What are the different fates of the mission that involved ships from the United States?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_details = 'Dayana Robel'",
            "question": "What are the type codes of the policies used by the customer \"Dayana Robel\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_details = 'Dayana Robel'",
            "question": "Find all the policy type codes associated with the customer \"Dayana Robel\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
            "question": "Find the organisation type description of the organisation detailed as 'quo'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
            "question": "What is the type description of the organization whose detail is listed as 'quo'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = 'Spring'",
            "question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = 'Fall'",
            "question": "What are the distinct ages of students who have secretary votes in the fall election cycle?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_2",
            "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
            "question": "Give id of the instructor who advises students in the History department.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy'",
            "question": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_2",
            "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
            "question": "What is the id of the instructor who advises of all students from History department?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = 'Fall'",
            "question": "Find the distinct ages of students who have secretary votes in the fall election cycle.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'",
            "question": "Who are Bob's friends?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
            "question": "Find the name of persons who are friends with Bob.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
            "question": "What are the names of all of Bob's friends?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'",
            "question": "Who has a friend that is from new york city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'",
            "question": "What are the names of all friends who are from New York?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Country = 'Canada'",
            "question": "Show the distinct leader names of colleges associated with members from country \"Canada\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.section_title FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code WHERE T1.document_name = 'David CV'",
            "question": "What are all the section titles of the document named \"David CV\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.section_title FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code WHERE T1.document_name = 'David CV'",
            "question": "Give the section titles of the document with the name \"David CV\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
            "question": "What are the total purchases for members rated at level 6?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'",
            "question": "Who are the friends of Bob?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
            "question": "Give the name of the products that have a color description 'yellow'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = 'Spring'",
            "question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = 'Fanny'",
            "question": "Find the dates of assessment notes for students with first name \"Fanny\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'Lyla'",
            "question": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'white'",
            "question": "What are the names of products with 'white' as their color description?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = 'catnip'",
            "question": "What is the color description of the product with name \"catnip\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.unit_of_measure FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code WHERE T1.product_name = 'cumin'",
            "question": "What is the unit of measurement of product named \"cumin\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = 'How to read a book'",
            "question": "What is the document type name for the document with name \"How to read a book\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE '%a%'",
            "question": "How many lessons taught by staff whose first name has letter 'a' in it?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'white'",
            "question": "List all the product names with the color description \"white\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = 'Texas'",
            "question": "What are the monthly rentals of student addresses in Texas state?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = 'How to read a book'",
            "question": "Find the document type name of the document named \"How to read a book\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Editor'",
            "question": "Find the names of all the employees whose the role name is \"Editor\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.unit_of_measure FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code WHERE T1.product_name = 'cumin'",
            "question": "Give the unit of measure for the product with the name 'cumin'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = 'catnip'",
            "question": "Give the color description for the product 'catnip'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = 'Schuster'",
            "question": "Find the texts of assessment notes for teachers with last name \"Schuster\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Editor'",
            "question": "Show the names of employees with role name Editor.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE '%a%'",
            "question": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != 'Progress Party'",
            "question": "Which member names corresponding to members who are not in the Progress Party?",
            "ted": 0.1
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country != 'China'",
            "question": "What are the names of perpetrators whose country is not \"China\"?",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != 'Rachel Elnaugh'",
            "question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != 'Rachel Elnaugh'",
            "question": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != 'Santo Domingo'",
            "question": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?",
            "ted": 0.1
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != 'Progress Party'",
            "question": "Show member names that are not in the Progress Party.",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != 'Santo Domingo'",
            "question": "Return the names of gymnasts who did not grow up in Santo Domingo.",
            "ted": 0.1
        }
    ],
    "SELECT section_name FROM Sections ORDER BY section_name DESC": [
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age DESC",
            "question": "Sort all captain names by their ages from old to young.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character FROM actor ORDER BY age DESC",
            "question": "Return the characters for actors, ordered by age descending.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver ORDER BY age DESC",
            "question": "Show the name of drivers in descending order of age.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
            "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
            "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person ORDER BY age DESC",
            "question": "What are the names of everybody sorted by age in descending order?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person ORDER BY age DESC",
            "question": "Find the names of all person sorted in the descending order using age.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY name DESC",
            "question": "What are the names of all the clubs ordered in descending alphabetical order?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character FROM actor ORDER BY age DESC",
            "question": "What are the characters of actors in descending order of age?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY name DESC",
            "question": "List all club names in descending alphabetical order.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
            "question": "What are the names of the counties of public safety, ordered by population descending?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
            "question": "List the names of counties in descending order of population.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme ORDER BY name DESC",
            "question": "List the name of enzymes in descending lexicographical order.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT venue FROM MATCH ORDER BY date DESC",
            "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT venue FROM MATCH ORDER BY date DESC",
            "question": "List venues of all matches in the order of their dates starting from the most recent one.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age DESC",
            "question": "What are the names of captains, sorted by age descending?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC",
            "question": "Find all information about student addresses, and sort by monthly rental in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme ORDER BY name DESC",
            "question": "What are the names of enzymes in descending order?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY County_name DESC",
            "question": "Sort the names of all counties in descending alphabetical order.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
            "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
            "question": "Show the working years of managers in descending order of their level.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
            "question": "Show the case burden of counties in descending order of population.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
            "question": "What are the case burdens of counties, ordered descending by population?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
            "question": "What are the names of the wrestlers, ordered descending by days held?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
            "question": "List the names of wrestlers in descending order of days held.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM event ORDER BY YEAR DESC",
            "question": "List all the event names by year from the most recent to the oldest.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Votes FROM election ORDER BY Votes DESC",
            "question": "List the votes of elections in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
            "question": "List the names of companies in descending order of market value.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
            "question": "List all channel names ordered by their rating in percent from big to small.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
            "question": "Sort the company names in descending order of the company's market value.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
            "question": "Find the first name of students in the descending order of age.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings ORDER BY Height DESC",
            "question": "List the names of buildings in descending order of building height.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings ORDER BY Height DESC",
            "question": "What are the names of buildings sorted in descending order of building height?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
            "question": "What are the first names of students, ordered by age from greatest to least?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber ORDER BY Points DESC",
            "question": "What are the names of the climbers, ordered by points descending?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber ORDER BY Points DESC",
            "question": "List the names of climbers in descending order of points.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication ORDER BY Price DESC",
            "question": "What are the dates of publications in descending order of price?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT name FROM browser ORDER BY market_share DESC",
            "question": "List the name of browsers in descending order by market share.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY County_name DESC",
            "question": "Return the names of all counties sorted by county name in descending alphabetical order.",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT Date FROM game ORDER BY home_team DESC",
            "question": "List the dates of games by the home team name in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
            "question": "List the total points of gymnasts in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
            "question": "What are the official names of cities, ordered descending by population?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT name FROM church ORDER BY open_date DESC",
            "question": "List all church names in descending order of opening date.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Age DESC",
            "question": "What are the names of all pilots listed by descending age?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
            "question": "What is the list of school locations sorted in descending order of school foundation year?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
            "question": "List all countries of markets in descending order of number of cities.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
            "question": "List official names of cities in descending order of population.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC",
            "question": "List all information about customer master index, and sort them by details in descending order.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
            "question": "What are the countries for each market ordered by decreasing number of cities?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
            "question": "List the total points of gymnasts in descending order of floor exercise points.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
            "question": "List the locations of schools in descending order of founded year.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
            "question": "What are the total points for all gymnasts, ordered by total points descending?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Age DESC",
            "question": "List names of all pilot in descending order of age.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
            "question": "What are the companies of entrepreneurs, ordered descending by amount of money requested?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
            "question": "What are the total points of gymnasts, ordered by their floor exercise points descending?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
            "question": "List the companies of entrepreneurs in descending order of money requested.",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Date FROM perpetrator ORDER BY Killed DESC",
            "question": "List the date of perpetrators in descending order of the number of people killed.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM scientists ORDER BY name",
            "question": "List the names of all scientists sorted in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors ORDER BY fname",
            "question": "Sort the first names of all the authors in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
            "question": "What are the themes of parties ordered by the number of hosts in ascending manner?",
            "ted": 0.1
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
            "question": "List the themes of parties in ascending order of number of hosts.",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors ORDER BY fname",
            "question": "Find the first names of all the authors ordered in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "match_season",
            "query": "SELECT player FROM match_season ORDER BY College ASC",
            "question": "Return all players sorted by college in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Team ASC",
            "question": "Find the team of each player and sort them in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "railway",
            "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
            "question": "What are the names of managers in ascending order of level?",
            "ted": 0.1
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder FROM railway ORDER BY Builder ASC",
            "question": "List the builders of railways in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Name ASC",
            "question": "Give the names of mountains in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Name ASC",
            "question": "What are the names of mountains in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book ORDER BY Issues ASC",
            "question": "List the titles of the books in ascending order of issues.",
            "ted": 0.1
        },
        {
            "db_id": "book_2",
            "query": "SELECT Writer FROM book ORDER BY Writer ASC",
            "question": "List the writers of the books in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "match_season",
            "query": "SELECT player FROM match_season ORDER BY College ASC",
            "question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member ORDER BY Name ASC",
            "question": "List the names of members in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Team ASC",
            "question": "What are the teams of the players, sorted in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC",
            "question": "Return the names of all counties sorted by population in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM scientists ORDER BY name",
            "question": "What are the names of all the scientists in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT * FROM COURSE ORDER BY Credits",
            "question": "What is all the information about courses, ordered by credits ascending?",
            "ted": 0.1
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
            "question": "Sort the apartment numbers in ascending order of room count.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
            "question": "List the locations of schools in ascending order of enrollment.",
            "ted": 0.1
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people ORDER BY date_of_birth",
            "question": "What are the names of all people, ordered by their date of birth?",
            "ted": 0.1
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people ORDER BY date_of_birth",
            "question": "List all people names in the order of their date of birth from old to young.",
            "ted": 0.1
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
            "question": "Return all the apartment numbers sorted by the room count in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school ORDER BY school_name",
            "question": "Show all school names in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song ORDER BY resolution",
            "question": "Give me a list of the names of all songs ordered by their resolution.",
            "ted": 0.1
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
            "question": "What is the list of school locations sorted in ascending order of school enrollment?",
            "ted": 0.1
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song ORDER BY resolution",
            "question": "What are the names of all songs that are ordered by their resolution numbers?",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors ORDER BY lname",
            "question": "Retrieve all the last names of authors in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Injured FROM perpetrator ORDER BY Injured ASC",
            "question": "List the number of people injured by perpetrators in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
            "question": "Sort the names of products in ascending order of their price.",
            "ted": 0.1
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM People ORDER BY Height ASC",
            "question": "What are the names of people in ascending order of height?",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM People ORDER BY Weight ASC",
            "question": "Return the names of people, ordered by weight ascending.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
            "question": "List all product names in ascending order of price.",
            "ted": 0.1
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Date FROM People ORDER BY Height ASC",
            "question": "What are the birthdays of people in ascending order of height?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE ORDER BY Credits",
            "question": "List the course name of courses sorted by credits.",
            "ted": 0.1
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM People ORDER BY Weight ASC",
            "question": "What are the names of people in ascending order of weight?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE ORDER BY Credits",
            "question": "What are the course names, ordered by credits?",
            "ted": 0.1
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Total FROM body_builder ORDER BY Total ASC",
            "question": "List the total scores of body builders in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors ORDER BY lname",
            "question": "Give me a list of all the last names of authors sorted in alphabetical order",
            "ted": 0.1
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer ORDER BY meter_100",
            "question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT title FROM albums ORDER BY title",
            "question": "List every album ordered by album title in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician ORDER BY Age ASC",
            "question": "List the names of technicians in ascending order of age.",
            "ted": 0.1
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician ORDER BY Age ASC",
            "question": "What are the names of the technicians by ascending order of age?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
            "question": "What details are there on the research staff? List the result in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
            "question": "List the research staff details, and order in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM ORDER BY Title",
            "question": "What are all the album titles, in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM ORDER BY Title",
            "question": "Please list all album titles in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
            "question": "List the names of pilots in ascending order of rank.",
            "ted": 0.1
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT * FROM College ORDER BY enr",
            "question": "What information do you have on colleges sorted by increasing enrollment numbers?",
            "ted": 0.1
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT * FROM College ORDER BY enr",
            "question": "List all information about college sorted by enrollment number in the ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY basePrice",
            "question": "List the name of all rooms sorted by their prices.",
            "ted": 0.1
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY basePrice",
            "question": "Sort all the rooms according to the price. Just report the room names.",
            "ted": 0.1
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Name ASC",
            "question": "What are the names of the pilots in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
            "question": "List in alphabetic order all different amenities.",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
            "question": "What are the different dorm amenity names in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist ORDER BY Years_working ASC",
            "question": "List the names of journalists in ascending order of years working.",
            "ted": 0.1
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
            "question": "List the name of ships in ascending order of tonnage.",
            "ted": 0.1
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
            "question": "what are the names of the ships ordered by ascending tonnage?",
            "ted": 0.1
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT address FROM shop ORDER BY open_year",
            "question": "Show the shop addresses ordered by their opening year.",
            "ted": 0.1
        },
        {
            "db_id": "company_1",
            "query": "SELECT dname FROM department ORDER BY mgr_start_date",
            "question": "List all department names ordered by their starting date.",
            "ted": 0.1
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot ORDER BY Name ASC",
            "question": "List all pilot names in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC",
            "question": "List the names of companies by ascending number of sales.",
            "ted": 0.1
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC",
            "question": "Sort the names of all counties in ascending order of population.",
            "ted": 0.1
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT service_type_code FROM services ORDER BY service_type_code",
            "question": "List the type of the services in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT truck_details FROM trucks ORDER BY truck_licence_number",
            "question": "Show the details of all trucks in the order of their license number.",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT title FROM albums ORDER BY title",
            "question": "What are the titles of all the albums alphabetically ascending?",
            "ted": 0.1
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT service_name FROM services ORDER BY service_name",
            "question": "List all the services in the alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT text FROM tweets ORDER BY createdate",
            "question": "List the text of all tweets in the order of date.",
            "ted": 0.1
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM actor ORDER BY Name ASC",
            "question": "List the name of actors in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM actor ORDER BY Name ASC",
            "question": "What are the names of actors, ordered alphabetically?",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch",
            "question": "list all the names of programs, ordering by launch time.",
            "ted": 0.1
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor ORDER BY Age ASC",
            "question": "List the names of editors in ascending order of age.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region ORDER BY region_name",
            "question": "List all region names in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region ORDER BY region_name",
            "question": "What are the names of the regions in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch",
            "question": "What is the list of program names, sorted by the order of launch date?",
            "ted": 0.1
        },
        {
            "db_id": "phone_1",
            "query": "SELECT model_name FROM chip_model ORDER BY launch_year",
            "question": "List all the model names sorted by their launch year.",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT origin FROM program ORDER BY origin",
            "question": "List all program origins in the alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT origin FROM program ORDER BY origin",
            "question": "What is the list of program origins ordered alphabetically?",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Country ASC",
            "question": "What are the countries for each market, ordered alphabetically?",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
            "question": "List all the information about course authors and tutors in alphabetical order of the personal name.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
            "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
            "ted": 0.1
        },
        {
            "db_id": "gas_company",
            "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
            "question": "order all gas station locations by the opening year.",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Country FROM market ORDER BY Country ASC",
            "question": "List all countries of markets in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "gas_company",
            "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
            "question": "What are the locations of all the gas stations ordered by opening year?",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
            "question": "Return the names of shops, ordered by year of opening ascending.",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
            "question": "What are the names of shops in ascending order of open year?",
            "ted": 0.1
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT route_name FROM Delivery_Routes ORDER BY route_name",
            "question": "List the names of all routes in alphabetic order.",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT * FROM COURSE ORDER BY Credits",
            "question": "List all information about courses sorted by credits in the ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
            "question": "List the carriers of devices in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT service_name FROM services ORDER BY service_name",
            "question": "Give me a list of all the service names sorted alphabetically.",
            "ted": 0.1
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
            "question": "What are the different carriers for devices, listed in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone ORDER BY Price ASC",
            "question": "List the names of phones in ascending order of price.",
            "ted": 0.1
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT name FROM accounts ORDER BY name",
            "question": "List all customers\u2019 names in the alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC",
            "question": "List the total number of horses on farms in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers ORDER BY customer_details",
            "question": "List the names of all the customers in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers ORDER BY customer_details",
            "question": "Sort the customer names in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY Name ASC",
            "question": "What are the names of cities in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC",
            "question": "What is the total horses record for each farm, sorted ascending?",
            "ted": 0.1
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
            "question": "List all the name of organizations in order of the date formed.",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Name ASC",
            "question": "Return the names of people, ordered alphabetically.",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC",
            "question": "What are the themes of farm competitions sorted by year in ascending order?",
            "ted": 0.1
        },
        {
            "db_id": "farm",
            "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC",
            "question": "Return the themes of farm competitions, sorted by year ascending.",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
            "question": "List the name of all customers sorted by their account balance in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Name ASC",
            "question": "What are the names of people in ascending alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork ORDER BY Name ASC",
            "question": "List the name of artworks in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
            "question": "What are the names of all customers, ordered by account balance?",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY Name ASC",
            "question": "Return the names of cities, ordered alphabetically.",
            "ted": 0.1
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
            "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
            "ted": 0.1
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT name FROM accounts ORDER BY name",
            "question": "What are the names of all the customers in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC",
            "question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT * FROM instructor ORDER BY salary",
            "question": "List the information of all instructors ordered by their salary in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT * FROM instructor ORDER BY salary",
            "question": "Give all information regarding instructors, in order of salary from least to greatest.",
            "ted": 0.1
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Song",
            "question": "What are the the songs in volumes, listed in ascending order?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC",
            "question": "List all information about the assessment notes sorted by date in ascending order.",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
            "question": "What are the crime rates of counties sorted by number of offices ascending?",
            "ted": 0.1
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY Start_year ASC",
            "question": "List all club names in ascending order of start year.",
            "ted": 0.1
        },
        {
            "db_id": "debate",
            "query": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC",
            "question": "List the venues of debates in ascending order of the number of audience.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT course_name FROM courses ORDER BY course_name",
            "question": "List the names of courses in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item ORDER BY title",
            "question": "List the titles of all items in alphabetic order .",
            "ted": 0.1
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM club ORDER BY Start_year ASC",
            "question": "What are the names of all the clubs starting with the oldest?",
            "ted": 0.1
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player ORDER BY Votes ASC",
            "question": "List the names of players in ascending order of votes.",
            "ted": 0.1
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores ASC",
            "question": "List the authors of submissions in ascending order of scores.",
            "ted": 0.1
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores ASC",
            "question": "Find the author for each submission and list them in ascending order of submission score.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_name FROM department ORDER BY dept_name",
            "question": "list names of all departments ordered by their names.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_name FROM department ORDER BY dept_name",
            "question": "What are the names of all departments in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT HOST FROM performance ORDER BY Attendance ASC",
            "question": "List the hosts of performances in ascending order of attendance.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT first_name FROM people ORDER BY first_name",
            "question": "List the first names of people in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Song",
            "question": "Please list all songs in volumes in ascending alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT city FROM Addresses ORDER BY city",
            "question": "List all cities of addresses in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT course_name FROM courses ORDER BY course_name",
            "question": "What are the names of the courses in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT first_name FROM people ORDER BY first_name",
            "question": "What are the first names of the people in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
            "question": "Show the crime rates of counties in ascending order of number of police officers.",
            "ted": 0.1
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
            "question": "List the name of products in ascending order of price.",
            "ted": 0.1
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC",
            "question": "List the names of roller coasters by ascending order of length.",
            "ted": 0.1
        }
    ],
    "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1": [
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
            "question": "Find the name of project that continues for the longest time.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
            "question": "Show the names of the three most recent festivals.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
            "question": "What is the location of the festival with the largest number of audience?",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
            "question": "What is the name of the product with the highest price?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
            "question": "What is the name of the project with the most hours?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
            "question": "What is the date of the performance with the highest number of attendees?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
            "question": "What is the nationality of the journalist with the largest number of years working?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
            "question": "What is the stories of highest building?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
            "question": "Find the stories of the building with the largest height.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
            "question": "What is the name of the event that happened in the most recent year?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
            "question": "Which county has the largest population? Give me the name of the county.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
            "question": "Show the name of the county with the biggest population.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
            "question": "Who is the instructor with the highest salary?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
            "question": "Give the name of the highest paid instructor.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
            "question": "What are the names of schools with the top 3 largest size?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
            "question": "What are the names of the schools with the top 3 largest class sizes?",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
            "question": "What is the carrier of the most expensive phone?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
            "question": "What is the author of the submission with the highest score?",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
            "question": "What is the name of the player with the largest number of votes?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
            "question": "What is the id of the most recent order?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
            "question": "Find the id of the order made most recently.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
            "question": "What are the names of the dorm with the largest capacity?",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1",
            "question": "Show the park of the roller coaster with the highest speed.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
            "question": "Give the ids of the three products purchased in the largest amounts.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
            "question": "What are the ids of the top three products that were purchased in the largest amount?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
            "question": "List the school color of the school that has the largest enrollment.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
            "question": "What is the school color of the school with the largest enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
            "question": "What are the speeds of the longest roller coaster?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
            "question": "Which district has the largest population?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
            "question": "Return the song in the volume that has spent the most weeks on top?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
            "question": "What is the id of the appointment that started most recently?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
            "question": "What is the song in the volume with the maximum weeks on top?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
            "question": "Return the famous release date for the oldest artist.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
            "question": "What is the famous release date of the artist with the oldest age?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
            "question": "Find the name of the dorm with the largest capacity.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
            "question": "What is the starting year for the oldest technician?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
            "question": "What is the starting year of the oldest technicians?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
            "question": "Return the apartment number with the largest number of bedrooms.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
            "question": "What is the apartment number of the apartment with the most beds?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "Find the name of the most expensive product.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
            "question": "What is the name of the district with the most residents?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
            "question": "Find the id of the appointment with the most recent start date?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
            "question": "What is the id of the longest song?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
            "question": "Find the id of the song that lasts the longest.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
            "question": "Find the name of the stadium that has the maximum capacity.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
            "question": "What is the owner of the channel that has the highest rating ratio?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
            "question": "Show me the owner of the channel with the highest rating.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
            "question": "Return the name of the artist who has the latest join year.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
            "question": "What is the name of the artist who joined latest?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
            "question": "find the name of the program that was launched most recently.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
            "question": "Which program was launched most recently? Return the program name.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
            "question": "Which minister left office the latest?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "Which country is the airport that has the highest altitude located in?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
            "question": "Return the minister who left office at the latest time.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
            "question": "What is the product with the highest height? Give me the catalog entry name.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
            "question": "What are the names of the five cities with the greatest proportion of white people?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
            "question": "Find the entry name of the catalog with the highest price (in USD).",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
            "question": "What is the entry name of the most expensive catalog (in USD)?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
            "question": "List the names of the city with the top 5 white percentages.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
            "question": "What is the name of the county with the greatest population?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
            "question": "List the name of the county with the largest population.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
            "question": "Find the name of the user who has the largest number of followers.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
            "question": "Which catalog content has the highest height? Give me the catalog entry name.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
            "question": "What are the names for the 3 branches that have the most memberships?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "What is the country of the airport with the highest elevation?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
            "question": "Return the duration of the actor with the greatest age.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
            "question": "What is the name of the oldest manager?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
            "question": "List the name of the shop with the latest open year.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
            "question": "What is the shop name corresponding to the shop that opened in the most recent year?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
            "question": "Which party had the most hosts? Give me the party location.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
            "question": "Find the author who achieved the highest score in a submission.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
            "question": "What is the location of the party with the most hosts?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
            "question": "What is the last date that a staff member left a project?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
            "question": "What is the last date of the staff leaving the projects?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
            "question": "Tell me the name of the most pricy product.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
            "question": "What are the details of the three most expensive hotels?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1",
            "question": "List the publisher of the publication with the highest price.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1",
            "question": "What is the name of the room that can accommodate the most people?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1",
            "question": "Find the name of the room with the maximum occupancy.",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name of the race that occurred most recently?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name of the race held most recently?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
            "question": "What is the name of the most expensive product?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1",
            "question": "What is the location of the perpetrator with the largest kills.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
            "question": "What is the duration of the oldest actor?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
            "question": "Show the details of the top 3 most expensive hotels.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
            "question": "What are the teams that have the 5 oldest players?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
            "question": "List the names of 5 users followed by the largest number of other users.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
            "question": "Find the branch name of the bank that has the most number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
            "question": "Return the name of the mountain with the greatest height.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
            "question": "What are the three largest cities in terms of regional population?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
            "question": "What is the name of the bank branch with the greatest number of customers?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
            "question": "what are the top 3 highest support rates?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
            "question": "What are names for top three branches with most number of membership?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1",
            "question": "What is the name of the tallest building?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
            "question": "Return the amount of the largest payment.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
            "question": "Find the name of the youngest organization.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1",
            "question": "What are the clean and jerk score of the body builder with the highest total score?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
            "question": "What is the name of the organization that was formed most recently?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
            "question": "What is the id of the problem log that is created most recently?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
            "question": "What is the ship with the largest amount of tonnage called?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
            "question": "What is the name of the ship with the largest tonnage?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
            "question": "Show all information on the airport that has the largest number of international passengers.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
            "question": "When was the school with the largest enrollment founded?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
            "question": "Return the poll source corresponding to the candidate who has the oppose rate.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
            "question": "Return the founded year for the school with the largest enrollment.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
            "question": "What is all the information on the airport with the largest number of international passengers?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
            "question": "which poll source does the highest oppose rate come from?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
            "question": "What is the highest acc percent score in the competition?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
            "question": "Return the highest acc percent across all basketball matches.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
            "question": "Which three cities have the largest regional population?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
            "question": "What is the name of the highest mountain?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
            "question": "Return the top 3 greatest support rates.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
            "question": "Find the team of the player of the highest age.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
            "question": "Find the GDP of the city with the largest regional population.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
            "question": "What is id of the city that hosted events in the most recent year?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
            "question": "List the teams of the players with the top 5 largest ages.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
            "question": "Find the city that hosted some events in the most recent year. What is the id of this city?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
            "question": "What is the age of the tallest person?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
            "question": "Return the age of the person with the greatest height.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
            "question": "List the names of the top 5 oldest people.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
            "question": "What are the names of the five oldest people?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
            "question": "Which problem log was created most recently? Give me the log id.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
            "question": "What is the largest payment amount?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
            "question": "what is the GDP of the city with the largest population.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
            "question": "Which team has the oldest player?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
            "question": "Find id of the candidate who most recently accessed the course?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
            "question": "What is the id of the candidate who most recently accessed the course?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
            "question": "What is the headquarter of the company with the largest sales?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
            "question": "Which department has the lowest budget?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
            "question": "Show the name of employees with three lowest salaries.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
            "question": "What is the name of the 3 employees who get paid the least?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
            "question": "Show the flight number of flights with three lowest distances.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
            "question": "Of all the claims, what was the earliest date when any claim was made?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
            "question": "What is the name of the highest rated wine?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
            "question": "Give the name of the wine with the highest score.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
            "question": "Which winery is the wine that has the highest score from?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
            "question": "Find the name of customer who has the lowest credit score.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
            "question": "When did the first staff for the projects started working?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
            "question": "What is the winery at which the wine with the highest score was made?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3",
            "question": "List the publication dates of publications with 3 lowest prices.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
            "question": "What is the name of the customer with the worst credit score?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
            "question": "Return the name of the youngest captain.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
            "question": "What are the numbers of the shortest flights?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
            "question": "What was the date of the earliest payment?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
            "question": "What are the 3 counties that have the smallest population? Give me the county names.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1",
            "question": "What is the name of the youngest editor?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
            "question": "Show the 3 counties with the smallest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "debate",
            "query": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1",
            "question": "What is the party of the youngest people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
            "question": "When did the first staff member start working?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
            "question": "What is the weight of the shortest person?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
            "question": "Give the name of the department with the lowest budget.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
            "question": "What is the name of the youngest captain?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
            "question": "Tell me the the date when the first claim was made.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
            "question": "What is the id of the shortest trip?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
            "question": "What is the id of the trip that has the shortest duration?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
            "question": "Find the id of the candidate who got the lowest oppose rate.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
            "question": "What is the name of the district with the smallest area?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1",
            "question": "What is the joined year of the pilot of the highest rank?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
            "question": "When was the first asset acquired?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
            "question": "Which district has the least area?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
            "question": "What is the issue date of the volume with the minimum weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
            "question": "Return the issue date of the volume that has spent the fewest weeks on top.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
            "question": "Find the name of the product that has the smallest capacity.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
            "question": "Which catalog content has the smallest capacity? Return the catalog entry name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
            "question": "Which patient is undergoing the most recent treatment?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
            "question": "Find the patient who has the most recent undergoing treatment?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
            "question": "Find the three most expensive procedures.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
            "question": "What are the three most costly procedures?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
            "question": "Find the name of the first 5 customers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1",
            "question": "List the name of the school with the smallest enrollment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
            "question": "Return the weight of the shortest person.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
            "question": "What are the aircrafts with top 3 shortest lengthes? List their names.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
            "question": "What is the name of the wrestler with the fewest days held?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
            "question": "Return the name of the wrestler who had the lowest number of days held.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
            "question": "What is the id of the candidate with the lowest oppose rate?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
            "question": "Show the name of aircrafts with top three lowest distances.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
            "question": "When did the first payment happen?",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "college_3",
            "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which building does the instructor who teaches the most number of courses live in?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which room has the largest number of reservations?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which program is broadcast most frequently? Give me the program name.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the organization which has the most contact individuals.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details of the student who registered for the most number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is detail of the student who registered the most number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer uses the most policies? Give me the customer name.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of organization that has the greatest number of contact individuals?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the party email that has used party services the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which is the email of the party that has used the services the most number of times?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the program that is broadcast most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the three products that have the most problems?s",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the party form that is most common?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the most popular party form.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the names of the cameras that have taken picture of the most mountains?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the structure of the document with the least number of accesses?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the city that hosted the most events.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city has hosted the most events?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the structure description of the document that has been accessed the fewest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer have the most policies? Give me the customer details.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the document that has the most sections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the party that has the most delegates.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the top 3 products which have the largest number of problems?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the aircraft that has won an award the most?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the course that has the most student enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which course is enrolled in by the most students? Give me the course name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the activity that has the largest number of student participants.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the activity with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which activity has the most faculty members participating in? Find the activity name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the activity that has the most faculty members involved in?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which song has the most vocals?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the song with the most vocals?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the member who is in charge of the most events.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of member in charge of greatest number of events?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the track that has had the greatest number of races?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the denomination of the school that has the most players.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of track with most number of races.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the denomination of the school the most players belong to?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city with the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which artist has the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the artist with the greatest number of albums?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city does has most number of customers?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the station name with greatest number of trains.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the party with the most members.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of party with most number of members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the most common genre in all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the name of the genre that is most frequent across all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation type hires most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of the organization with the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T1.name FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id GROUP BY T2.train_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the train whose route runs through greatest number of stations.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the user who gives the most reviews.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the course with the most registered students?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "which course has most number of registered students?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the document with the most number of sections?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the airline with the most routes?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id of the customer who has the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id of the customer who made the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the shop that has the most different kinds of devices in stock?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of airline which runs the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the names of customers who have the most mailshots.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the shop that has the most kind of devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of amenity that is most common in all dorms.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the order which has the most items?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the nurse has the most appointments?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which order deals with the most items? Return the order id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the customer who made the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the nurse who has the largest number of appointments.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common amenity in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the department that has the biggest number of students minored in?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the department with the most students minoring in it?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description of the transaction type that occurs most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.claim_status_name FROM claims_processing AS T1 JOIN claims_processing_stages AS T2 ON T1.claim_stage_id = T2.claim_stage_id GROUP BY T1.claim_stage_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which claim processing stage has the most claims? Show the claim status name.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.claim_status_name FROM claims_processing AS T1 JOIN claims_processing_stages AS T2 ON T1.claim_stage_id = T2.claim_stage_id GROUP BY T1.claim_stage_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the claim processing stage that most of the claims are on?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the largest number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id GROUP BY T2.swimmer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the swimmer who has the most records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of the customer who has the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer made the most orders? Find the customer name.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the color description that is most common across all products.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM stadium AS T1 JOIN event AS T2 ON T1.id = T2.stadium_id GROUP BY T2.stadium_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the stadium which held the most events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the customer that has been involved in the most policies.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.route_name FROM Delivery_Routes AS T1 JOIN Delivery_Route_Locations AS T2 ON T1.route_id = T2.route_id GROUP BY T1.route_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of route that has the highest number of deliveries.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most frequently ordered product? Tell me the detail of the product",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of aircraft which fewest people have its certificate.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the most policies listed?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the description of the color for most products?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which party has the largest number of delegates?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the names of the aircraft that the least people are certified to fly?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common hometown of gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has been ordered most number of times?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the status of the city that has hosted the most competitions?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the status of the city that has hosted the greatest number of competitions.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the hometown that is most common among gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the name of the department that has the fewest members.",
            "ted": 0.03125
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT T1.sex FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex ORDER BY avg( T2.unsure_rate ) DESC LIMIT 1",
            "question": "What is the sex of the candidate who had the highest unsure rate?",
            "ted": 0.03125
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) LIMIT 1",
            "question": "What country is the artist who made the fewest songs from?",
            "ted": 0.03125
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the name of the department with the fewest members?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.email_address FROM customers AS T1 JOIN complaints AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) LIMIT 1",
            "question": "Find the emails of customers who has filed a complaints of the product with the most complaints.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count( * ) LIMIT 1",
            "question": "Which school has the smallest amount of professors?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.first_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count( * ) LIMIT 5",
            "question": "What is first names of the top 5 staff who have handled the greatest number of complaints?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.first_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count( * ) LIMIT 5",
            "question": "Return the first names of the 5 staff members who have handled the most complaints.",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.email_address FROM customers AS T1 JOIN complaints AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) LIMIT 1",
            "question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?",
            "ted": 0.03125
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) LIMIT 1",
            "question": "Find the country of origin for the artist who made the least number of songs?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count( * ) LIMIT 1",
            "question": "Which school has the fewest professors?",
            "ted": 0.03125
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the color description that is least common across products.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "What is the name of the customer who has greatest total loan amount?",
            "ted": 0.03125
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the description of the color used by least products?",
            "ted": 0.03125
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum( T1.show_times_per_day ) DESC LIMIT 1",
            "question": "Show director with the largest number of show times in total.",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG( Price ) DESC LIMIT 1",
            "question": "Give the color of the grape whose wine products have the highest average price?",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG( Price ) DESC LIMIT 1",
            "question": "What is the color of the grape whose wine products has the highest average price?",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "Find the name of bank branch that provided the greatest total amount of loans.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "What is the name of the bank branch that has lent the greatest amount?",
            "ted": 0.03125
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg( trust ) DESC LIMIT 1",
            "question": "Find the name of the source user with the highest average trust score.",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum( hours_played ) DESC LIMIT 1",
            "question": "Show the game name that has most number of hours played.",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count( T2.decor ) ASC LIMIT 1",
            "question": "What kind of decor has the least number of reservations?",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count( T2.decor ) ASC LIMIT 1",
            "question": "What is the least popular kind of decor?",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum( hours_played ) DESC LIMIT 1",
            "question": "What is the name of the game that has been played the most?",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "Find the name of customer who has the highest amount of loans.",
            "ted": 0.03125
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT T1.sex FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex ORDER BY avg( T2.unsure_rate ) DESC LIMIT 1",
            "question": "which gender got the highest average uncertain ratio.",
            "ted": 0.03125
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which kind of part has the least number of faults? List the part name.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) LIMIT 1",
            "question": "What is the name of the department with the fewest professors?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) LIMIT 1",
            "question": "What is the name of department where has the smallest number of professors?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM( T1.quantity ) DESC LIMIT 1",
            "question": "Show the name of the shop that have the largest quantity of devices in stock.",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.Effective_Date FROM claims AS T1 JOIN settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY sum( T2.settlement_amount ) DESC LIMIT 1",
            "question": "What is the effective date of the claim that has the largest amount of total settlement?",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.Effective_Date FROM claims AS T1 JOIN settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY sum( T2.settlement_amount ) DESC LIMIT 1",
            "question": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "What is the least common media type in all tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM( T1.quantity ) DESC LIMIT 1",
            "question": "What is the name of the shop that has the greatest quantity of devices in stock?",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "What is the name of the media type that is least common across all tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rating ) LIMIT 1",
            "question": "Find the name of the item with the lowest average rating.",
            "ted": 0.0625
        }
    ],
    "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'PHD' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'PHD'": [
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'",
            "question": "Find the name of customers who have loans of both Mortgages and Auto.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film'",
            "question": "What is the description of the service type which offers both the photo product and the film product?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film'",
            "question": "Give me the description of the service type that offers not only the photo product but also the film product.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "ship_1",
            "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Midshipman' INTERSECT SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Lieutenant'",
            "question": "What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "ship_1",
            "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Midshipman' INTERSECT SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Lieutenant'",
            "question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent'",
            "question": "List the project details of the project both producing patent and paper as outcomes.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'",
            "question": "Which services type had both successful and failure event details?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "phone_1",
            "query": "SELECT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Accreditation_type = 'Provisional' INTERSECT SELECT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Accreditation_type = 'Full'",
            "question": "Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'",
            "question": "Find the name of product that is produced by both companies Creative Labs and Sony.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic' INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Liberal'",
            "question": "Find the committees that have delegates both from from the democratic party and the liberal party.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic' INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Liberal'",
            "question": "Which committees have delegates from both democratic party and liberal party?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'",
            "question": "What are the names of products produced by both Creative Labs and Sony?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning' INTERSECT SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Night'",
            "question": "what are the names of the channels that broadcast in both morning and night?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'",
            "question": "What are the names of customers who have taken both Mortgage and Auto loans?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'",
            "question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "school_finance",
            "query": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Triton'",
            "question": "Show the names of donors who donated to both school \"Glenn\" and \"Triton.\"",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = 'Mary' INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = 'Susan'",
            "question": "Find the id of users who are followed by Mary and Susan.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed' INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'",
            "question": "Find the ids of the students who participate in Canoeing and Kayaking.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'",
            "question": "Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'",
            "question": "What is the first name of the professor who is teaching CIS-220 and QM-261?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'",
            "question": "Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad'",
            "question": "What are the coupon amount of the coupons owned by both good and bad customers?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed' INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
            "question": "Give the dates of creation for documents that have both budget type codes 'GV' and 'SF'.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
            "question": "What are the dates for the documents with both 'GV' type and 'SF' type expenses?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Forward' INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Forward' INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "What are the names of countries that have both players with position forward and players with position defender?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'",
            "question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'",
            "question": "Find the names of states that have some college students playing in goalie and mid positions.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Appropriations' INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Economic Matters'",
            "question": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Appropriations' INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Economic Matters'",
            "question": "What are the names of parties that have both delegates on \"Appropriations\" committee and",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent'",
            "question": "What are the details of the project that is producing both patents and papers as outcomes?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Morning' INTERSECT SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Night'",
            "question": "Who are the owners of the programs that broadcast both in the morning and at night?",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning' INTERSECT SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Night'",
            "question": "Which channels broadcast both in the morning and at night? Give me the channel names.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Part'",
            "question": "Show the names of customers who have both an order in completed status and an order in part status.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Morning' INTERSECT SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Night'",
            "question": "find the program owners that have some programs in both morning and night time.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Loss'",
            "question": "Find the names of the swimmers who have both \"win\" and \"loss\" results in the record.",
            "ted": 0.06060606060606061
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'",
            "question": "What are the names of all the states with college students playing in the mid position but no goalies?",
            "ted": 0.07575757575757576
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'",
            "question": "Find the names of states that have some college students playing in the mid position but not in the goalie position.",
            "ted": 0.07575757575757576
        }
    ],
    "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11": [
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
            "question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?",
            "ted": 0.041666666666666664
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
            "question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.",
            "ted": 0.041666666666666664
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
            "question": "Show the names of editors of age either 24 or 25.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE Age = 35 OR Age = 36",
            "question": "Show the names of people aged either 35 or 36.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
            "question": "Show the name of technicians aged either 36 or 37",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
            "question": "What are the names of the technicians aged either 36 or 37?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
            "question": "Show the number of audience in year 2008 or 2010.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "culture_company",
            "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
            "question": "Show all director names who have a movie in the year 1999 or 2000.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "culture_company",
            "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
            "question": "Which directors had a movie in either 1999 or 2000?",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID": [
        {
            "db_id": "riding_club",
            "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID",
            "question": "Show the names of players and names of their coaches.",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT T2.Name , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
            "question": "For each journal_committee, find the editor name and the journal theme.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name , T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id",
            "question": "show the train name and station name for each train.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
            "question": "Find the first names of all instructors who have taught some course and the course description.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
            "question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
            "question": "Show names of technicians and series of machines they are assigned to repair.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T3.Pilot_name , T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID",
            "question": "Show the names of pilots and models of aircrafts they have flied with.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T3.Shop_Name , T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",
            "question": "What are the names of device shops, and what are the carriers that they carry devices in stock for?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT T2.Name , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
            "question": "Show the names of editors and the theme of journals for which they serve on committees.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T3.Shop_Name , T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",
            "question": "Show names of shops and the carriers of devices they have in stock.",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT T2.Name , T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID",
            "question": "Show the names of members and the location of the performances they attended.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID",
            "question": "Show the names of companies and of employees.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT T2.Name , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",
            "question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id",
            "question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id",
            "question": "List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",
            "question": "For each company, return the company name and the name of the building its office is located in.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",
            "question": "List the name of a building along with the name of a company whose office is in the building.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID",
            "question": "Show the names of phones and the districts of markets they are on.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_short_name , T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id",
            "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
            "question": "What are the names of technicians and the machine series that they repair?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",
            "question": "Show the themes of parties and the names of the party hosts.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT T2.school , T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id",
            "question": "Show the school name and driver name for all school buses.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT T3.Name , T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID",
            "question": "Show the names of journalists and the dates of the events they reported.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",
            "question": "For each party, return its theme and the name of its host.",
            "ted": 0.0
        }
    ],
    "SELECT count( * ) FROM teacher": [
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "Count the number of budget codes.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "How many counties are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "Count the number of statements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Statements",
            "question": "How many statements do we have?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( * ) FROM county",
            "question": "Count the total number of counties.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists do we have?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM station",
            "question": "How many train stations are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM event",
            "question": "How many events are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "Count the number of companies.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "How many film are there?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM stadium",
            "question": "How many stadiums are there?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies",
            "question": "How many companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "What is the total number of faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games exist?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games",
            "question": "How many video games do you have?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty",
            "question": "How many faculty do we have?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( * ) FROM perpetrator",
            "question": "How many perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "Count the number of bank branches.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( * ) FROM bank",
            "question": "How many bank branches are there?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT count( * ) FROM journalist",
            "question": "How many journalists are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "How many apartment bookings are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "Count the number of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT count( * ) FROM wrestler",
            "question": "How many wrestlers are there?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartment_Bookings",
            "question": "Count the total number of apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( * ) FROM election",
            "question": "How many elections are there?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT count( * ) FROM train",
            "question": "Show the number of trains",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM film",
            "question": "Count the number of films.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "How many tracks do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "How many cinema do we have?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "How many songs are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Count the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents",
            "question": "Show the number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "How many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT count( * ) FROM technician",
            "question": "What is the number of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "How many settlements are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Songs",
            "question": "Count the number of songs.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM body_builder",
            "question": "How many body builders are there?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM building",
            "question": "How many buildings are there?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "How many races are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT count( * ) FROM Settlements",
            "question": "Count the total number of settlements made.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "How many entrepreneurs are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( * ) FROM entrepreneur",
            "question": "Count the number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) FROM ship",
            "question": "Count the number of ships.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts exist in the database?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft",
            "question": "How many aircrafts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "Find the total number of catalog contents.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM track",
            "question": "Count the number of tracks.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT count( * ) FROM catalog_contents",
            "question": "How many products are there in the records?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT count( * ) FROM race",
            "question": "Count the number of races.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "How many customer cards are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards",
            "question": "Show the number of customer cards.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT count( * ) FROM railway",
            "question": "How many railways are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "Count the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) FROM accounts",
            "question": "How many accounts are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts do we have?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "Count the number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT count( * ) FROM player",
            "question": "How many players are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT count( * ) FROM driver",
            "question": "How many drivers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many employees are there?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT count( * ) FROM editor",
            "question": "How many editors are there?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "How many CSU campuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers",
            "question": "Return the total number of distinct customers.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses",
            "question": "What is the total number of campuses?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "Count the number of total papers.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "How many candidates are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff",
            "question": "How many staff in total?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM tweets",
            "question": "Find the number of tweets in record.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "Count the number of gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( * ) FROM gymnast",
            "question": "How many gymnasts are there?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT count( * ) FROM performance",
            "question": "How many performances are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "What is the number of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT count( * ) FROM ship",
            "question": "How many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "Count how many appointments have been made in total.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT count( * ) FROM candidate",
            "question": "Count the number of candidates.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM follows",
            "question": "How many followers does each user have?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM appointment",
            "question": "How many appointments are there?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT count( * ) FROM member",
            "question": "How many members are there?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( * ) FROM user_profiles",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( * ) FROM school",
            "question": "How many schools are there?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "Count the number of actors.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT count( * ) FROM actor",
            "question": "How many actors are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM papers",
            "question": "How many papers are published in total?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( * ) FROM customers",
            "question": "Find the number of customers in total.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM review",
            "question": "Find the number of reviews.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct",
            "question": "How many users are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "How many authors are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers do we have?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "How many aircrafts are there?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT count( * ) FROM aircraft",
            "question": "What is the number of aircraft?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT count( * ) FROM book",
            "question": "How many books are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers are there?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers",
            "question": "How many customers in total?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "Count the number of stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM store",
            "question": "How many stores are there?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "How many activities do we have?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors",
            "question": "Count the number of authors.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "How many institutions are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "How many diffrent dorm amenities are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm_amenity",
            "question": "Find the number of distinct amenities.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicle in total?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Vehicles",
            "question": "How many vehicles exist?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are in the database?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM dorm",
            "question": "How many dorms are there?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM inst",
            "question": "Count the number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list",
            "question": "Find the number of students in total.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers are there?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Reviewer",
            "question": "How many reviewers listed?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT count( * ) FROM cinema",
            "question": "Count the number of cinemas.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT",
            "question": "How many students are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Tasks",
            "question": "How many tasks are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "How many bands are there?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "How many services are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "Count the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "Count the total number of clubs.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE",
            "question": "Count the number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "How many rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms",
            "question": "What is the total number of rooms available in this inn?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT count( * ) FROM county_public_safety",
            "question": "How many counties are there?",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT count( * ) FROM debate",
            "question": "How many debates are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "Count the number of documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM student",
            "question": "Count the total number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "How many bookings do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT count( * ) FROM premises",
            "question": "How many premises are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "How many devices are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM BOOKINGS",
            "question": "Count the total number of bookings made.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT count( * ) FROM roller_coaster",
            "question": "How many roller coasters are there?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT count( * ) FROM INVESTORS",
            "question": "Find the number of investors in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents_with_expenses",
            "question": "How many documents have expenses?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( * ) FROM rent_arrears",
            "question": "How many council taxes are collected for renting arrears ?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "What is the total number of companies?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM Band",
            "question": "Find the number of bands.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "How many clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club",
            "question": "What is the total number of clubs?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( * ) FROM device",
            "question": "Count the number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the total number of available services.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "Find the total number of scientists.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions",
            "question": "How many transactions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "How many party events do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM party_events",
            "question": "Count the number of party events.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Activity",
            "question": "Find the number of activities available.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "How many accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT count( * ) FROM pilot",
            "question": "How many pilots are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Accounts",
            "question": "Show the number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct courses are enrolled in by students?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "How many airlines are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines",
            "question": "What is the total number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "What is the total count of enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme",
            "question": "How many kinds of enzymes are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "Find the total number of courses offered.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "Count the number of regions.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region",
            "question": "How many regions do we have?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "Find the total number of employees.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "How many farms are there?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( * ) FROM farm",
            "question": "Count the number of farms.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "How many students are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student",
            "question": "What is the total number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "How many available hotels are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct courses that have enrolled students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM HOTELS",
            "question": "Find the total number of available hotels.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM COURSES",
            "question": "How many courses are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee",
            "question": "How many employees are there all together?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists",
            "question": "How many scientists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Show the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers",
            "question": "Count the number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "Find the number of distinct stages in claim processing.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( * ) FROM claims_processing_stages",
            "question": "How many claim processing stages are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "How many invoices do we have?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT count( * ) FROM artwork",
            "question": "How many artworks are there?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM company",
            "question": "How many gas companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products",
            "question": "Count the number of products.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "Count the total number of roles listed.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "Count the number of artists.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM ROLES",
            "question": "How many roles are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT count( * ) FROM artist",
            "question": "How many artists are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Invoices",
            "question": "Count the number of invoices.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "How many colors are there?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "How many voting records do we have?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "Count the number of book clubs.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT count( * ) FROM book_club",
            "question": "How many book clubs are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "Find the number of albums.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ALBUM",
            "question": "How many albums are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many different colleges are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "How many locations are listed in the database?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "How many submissions are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_locations",
            "question": "Show the number of locations.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM ref_colors",
            "question": "Count the number of colors.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "How many characteristics are there?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM CHARACTERISTICS",
            "question": "Count the number of characteristics.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "What is the number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM ASSESSMENT_NOTES",
            "question": "How many assessment notes are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "How many climbers are there?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT count( * ) FROM climber",
            "question": "Count the number of climbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "How many document types are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_document_types",
            "question": "Show the number of document types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM VOTING_RECORD",
            "question": "Find the number of voting records in total.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "Count the number of all the calendar items.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Ref_calendar",
            "question": "How many calendar items do we have?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College",
            "question": "How many colleges in total?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "how many programs are there?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM services",
            "question": "Count the number of services.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "How many employees do we have?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "How many projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT count( * ) FROM submission",
            "question": "Count the number of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Projects",
            "question": "Show the number of projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Ref_budget_codes",
            "question": "How many budget types do we have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "How many countries are there in total?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM Employees",
            "question": "Find the number of employees we have.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "Count the number of customers recorded.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "How many flights do we have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Flight",
            "question": "What is the number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "How many parties are there?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT count( * ) FROM party",
            "question": "Count the number of parties.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) FROM program",
            "question": "Count the number of programs.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT count( * ) FROM phone",
            "question": "How many phones are there?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( * ) FROM country",
            "question": "Count the number of countries.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT count( * ) FROM Products",
            "question": "How many products are there?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( * ) FROM CUSTOMERS",
            "question": "How many customers do we have?",
            "ted": 0.0
        }
    ],
    "select T1.first_name from students as T1 join addresses as T2 on T1.permanent_address_id = T2.address_id where T2.country = 'Gibraltar' or T1.cell_mobile_number = '5073658405'": [
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock' OR T1.name = 'Jazz'",
            "question": "List the name of tracks belongs to genre Rock or genre Jazz.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '254 Ottilie Junction' OR T2.How_to_Get_There = 'bus'",
            "question": "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '660 Shea Crescent' OR T2.How_to_Get_There = 'walk'",
            "question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = 'China' OR T2.Country = 'Japan'",
            "question": "What are the names of perpetrators in country \"China\" or \"Japan\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'operating system' OR T2.course_name = 'data structure'",
            "question": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = 'Simon Woodroffe' OR T1.Investor = 'Peter Jones'",
            "question": "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = 'Simon Woodroffe' OR T1.Investor = 'Peter Jones'",
            "question": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'operating system' OR T2.course_name = 'data structure'",
            "question": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '254 Ottilie Junction' OR T2.How_to_Get_There = 'bus'",
            "question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock' OR T1.name = 'Jazz'",
            "question": "What are the names of the tracks that are Rock or Jazz songs?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.source_system_code = 'Electoral' OR T2.source_system_code = 'Tax'",
            "question": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus'",
            "question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = 'Maryland' OR T2.College = 'Duke'",
            "question": "What are the official languages of the countries of players from Maryland or Duke college?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk' OR T2.How_to_Get_There = 'bus'",
            "question": "Find the details of all the markets that are accessible by walk or bus.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '660 Shea Crescent' OR T2.How_to_Get_There = 'walk'",
            "question": "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = 'Maryland' OR T2.College = 'Duke'",
            "question": "Return the official native languages of countries who have players from Maryland or Duke colleges.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Human Resource' OR T2.role_name = 'Manager'",
            "question": "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Human Resource' OR T2.role_name = 'Manager'",
            "question": "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk' OR T2.How_to_Get_There = 'bus'",
            "question": "What are the details of the markets that can be accessed by walk or bus?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = 'Mary' OR T1.name = 'Susan'",
            "question": "Find the id of users who are followed by Mary or Susan.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "Which city does staff with first name as Janessa and last name as Sawayn live?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'GELL' AND T1.lastname = 'TAMI'",
            "question": "What are the last names of the teachers who teach the student called GELL TAMI?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'GELL' AND T1.lastname = 'TAMI'",
            "question": "Find the last names of all the teachers that teach GELL TAMI.",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'",
            "question": "What are the names of all students who successfully tried out for the position of striker?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' AND T1.gender = 'female'",
            "question": "Find the names of females who are friends with Zach",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' AND T1.gender = 'female'",
            "question": "What are the names of all females who are friends with Zach?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female' AND T2.languages = 'bangla'",
            "question": "What is the country of origin of the artist who is female and produced a song in Bangla?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female' AND T2.languages = 'bangla'",
            "question": "What countries are the female artists who sung in the language Bangla from?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'",
            "question": "Find the female friends of Alice.",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'",
            "question": "Find the names of the students who are in the position of striker and got a yes tryout decision.",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'",
            "question": "What are all the friends of Alice who are female?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE shipping_method_code = 'FedEx' AND order_status_code = 'Paid'",
            "question": "Show the names of customers having an order with shipping method FedEx and order status Paid.",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the zip code of the hosue of the employee named Janessa Sawayn?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "In what city does Janessa Sawayn live?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = 'Astrid' AND LastName = 'Gruber'",
            "question": "What are the invoice dates for customers with the first name Astrid and the last name Gruber?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "What is the zip code of the customer Carole Bernhard?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = 'Astrid' AND LastName = 'Gruber'",
            "question": "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber.",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "Which country does customer with first name as Carole and last name as Bernhard lived in?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "What is zip code of customer with first name as Carole and last name as Bernhard?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "What is the country in which the customer Carole Bernhard lived?",
            "ted": 0.02631578947368421
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy' OR T1.policy_type_code = 'Uniform'",
            "question": "Find the names of customers who either have an deputy policy or uniformed policy.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy' OR T1.policy_type_code = 'Uniform'",
            "question": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.",
            "ted": 0.05
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Latin' OR T1.Name = 'Pop'",
            "question": "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?",
            "ted": 0.05
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology'",
            "question": "How many professors who are from either Accounting or Biology department?",
            "ted": 0.05
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology'",
            "question": "What is the number of professors who are in the Accounting or Biology departments?",
            "ted": 0.05
        },
        {
            "db_id": "architecture",
            "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS T2 ON T1.architect_id = T2.id WHERE T2.nationality = 'American' OR T2.nationality = 'Canadian'",
            "question": "What are the distinct types of mills that are built by American or Canadian architects?",
            "ted": 0.05
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Latin' OR T1.Name = 'Pop'",
            "question": "Find the average millisecond length of Latin and Pop tracks.",
            "ted": 0.05
        },
        {
            "db_id": "phone_1",
            "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = 'Graphics' OR T2.Company_name = 'Nokia Corporation'",
            "question": "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\"",
            "ted": 0.05
        },
        {
            "db_id": "flight_company",
            "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.country = 'United States' OR T1.name = 'Billund Airport'",
            "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?",
            "ted": 0.05
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'voluptatem' AND T1.date_problem_reported > '1995'",
            "question": "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'voluptatem' AND T1.date_problem_reported > '1995'",
            "question": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.amount_payment ) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Carole' AND T2.last_name = 'Bernhard'",
            "question": "What is the total amount of moeny paid by the customer Carole Bernhard?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.amount_payment ) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Carole' AND T2.last_name = 'Bernhard'",
            "question": "How much in total does customer with first name as Carole and last name as Bernhard paid?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( lesson_time ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.lesson_time ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Rylan' AND T2.last_name = 'Goodwin'",
            "question": "How long is the total lesson time took by the customer named Rylan Goodwin?",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "How many accounts does the customer with first name Art and last name Turcotte have?",
            "ted": 0.075
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "Find the number of activities Mark Giuliano is involved in.",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.lesson_time ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Rylan' AND T2.last_name = 'Goodwin'",
            "question": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT sum( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "What is the total amount of money spent by Lucas Mancini?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT sum( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "How much money did Lucas Mancini spend?",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "Return the number of accounts that the customer with the first name Art and last name Turcotte has.",
            "ted": 0.075
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "How many activities does Mark Giuliano participate in?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT avg( price ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the average price for a lesson taught by Janessa Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT sum( Spent ) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = 'Linda' AND Student.Lname = 'Smith'",
            "question": "How long does student Linda Smith spend on the restaurant in total?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "How many orders does Lucas Mancini has?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "How many orders does Luca Mancini have in his invoices?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = 'Steve' AND T1.last_name = 'Johnson'",
            "question": "How many customers does Steve Johnson support?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'LORIA' AND T2.lastname = 'ONDERSMA'",
            "question": "How many students does LORIA ONDERSMA teaches?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'LORIA' AND T2.lastname = 'ONDERSMA'",
            "question": "Count the number of students the teacher LORIA ONDERSMA teaches.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'KAWA' AND T2.lastname = 'GORDON'",
            "question": "How many students does KAWA GORDON teaches?",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = 'M' AND T2.Election_Cycle = 'Fall'",
            "question": "How many male (sex is M) students have class senator votes in the fall election cycle?",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = 'M' AND T2.Election_Cycle = 'Fall'",
            "question": "Count the number of male students who had class senator votes in the fall election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "Which students live in the city with code \"NYC\" and have class senator votes in the spring election cycle? Count the numbers.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "What is the average age of students who have city code \"NYC\" and have secretary votes for the spring election cycle?",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = 'F' AND T2.Election_Cycle = 'Spring'",
            "question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = 'F' AND T2.Election_Cycle = 'Spring'",
            "question": "What is the average age of the female students with secretary votes in the spring election cycle?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'KAWA' AND T2.lastname = 'GORDON'",
            "question": "Find the number of students taught by the teacher KAWA GORDON.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'TARRING' AND T2.lastname = 'LEIA'",
            "question": "Find the number of students taught by TARRING LEIA.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'TARRING' AND T2.lastname = 'LEIA'",
            "question": "How many students are taught by teacher TARRING LEIA?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'CHRISSY' AND T1.lastname = 'NABOZNY'",
            "question": "How many teachers does the student named CHRISSY NABOZNY have?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'CHRISSY' AND T1.lastname = 'NABOZNY'",
            "question": "Find the number of teachers who teach the student called CHRISSY NABOZNY.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'MADLOCK' AND T1.lastname = 'RAY'",
            "question": "How many teachers does the student named MADLOCK RAY have?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'MADLOCK' AND T1.lastname = 'RAY'",
            "question": "Find the number of teachers who teach the student called MADLOCK RAY.",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "Count the number of cards the customer with the first name Art and last name Turcotte has.",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "How many cards does customer Art Turcotte have?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( lesson_time ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the total time for all lessons taught by Janessa Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = 'Steve' AND T1.last_name = 'Johnson'",
            "question": "What is the count of customers that Steve Johnson supports?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT avg( price ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Jose State University' AND T2.year = 1996",
            "question": "What is the campus fee of \"San Jose State University\" in year 1996?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2004 AND T2.campus = 'San Francisco State University'",
            "question": "How many faculty lines are there in \"San Francisco State University\" in year 2004?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2004 AND T2.campus = 'San Francisco State University'",
            "question": "How many faculty lines are there at San Francisco State University in 2004?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A' AND T2.class_code = 10018",
            "question": "What is the last name of the student who received an A in the class with the code 10018?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A' AND T2.class_code = 10018",
            "question": "What is the last name of the student who got a grade A in the class with code 10018.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Francisco State University' AND T2.year = 2001",
            "question": "What degrees were conferred in San Francisco State University in the year 2001?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Francisco State University' AND T2.year = 2001",
            "question": "What are the degrees conferred in \"San Francisco State University\" in 2001.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Jose State University' AND T2.year = 2000",
            "question": "How many degrees were conferred at San Jose State University in 2000?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Jose State University' AND T2.year = 2000",
            "question": "How many degrees were conferred in \"San Jose State University\" in 2000?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Jose State University' AND T2.year = 1996",
            "question": "What is the campus fee for San Jose State University in 1996?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT T1.campusfee FROM csu_fees AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T2.campus = 'San Francisco State University' AND T1.year = 2000",
            "question": "What is the campus fee of \"San Francisco State University\" in year 2000?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2002 AND T2.campus = 'Long Beach State University'",
            "question": "What is the number of faculty at Long Beach State University in 2002?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Francisco State University' AND T2.year = 1996",
            "question": "What is the campus fee of \"San Francisco State University\" in year 1996?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT T1.campusfee FROM csu_fees AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T2.campus = 'San Francisco State University' AND T1.year = 2000",
            "question": "In the year 2000, what is the campus fee for San Francisco State University?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT T1.campusfee FROM csu_fees AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T2.campus = 'San Jose State University' AND T1.year = 2000",
            "question": "Find the campus fee of \"San Jose State University\" in year 2000.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT T1.campusfee FROM csu_fees AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T2.campus = 'San Jose State University' AND T1.year = 2000",
            "question": "What is the campus fee in the year 2000 for San Jose State University?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = T2.campus WHERE T1.campus = 'San Francisco State University' AND T2.year = 1996",
            "question": "What is the campus fee for San Francisco State University in 1996?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= '2009-01-01' AND T2.date_order_placed <= '2010-01-01'",
            "question": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "csu_1",
            "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2002 AND T2.campus = 'Long Beach State University'",
            "question": "What is the number of faculty lines in campus \"Long Beach State University\" in 2002?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= '2009-01-01' AND T2.date_order_placed <= '2010-01-01'",
            "question": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",
            "question": "Find names of all students who took some course and got A or C.",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = 'Football' OR T1.SportName = 'Lacrosse'",
            "question": "Find the last and first name of students who are playing Football or Lacrosse.",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",
            "question": "What are the names of all students taking a course who received an A or C?",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = 'Football' OR T1.SportName = 'Lacrosse'",
            "question": "What is the first and last name of all students who play Football or Lacrosse?",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "phone_1",
            "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Company_name = 'Nokia Corporation' AND T1.Type != 'Text'",
            "question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.",
            "ted": 0.1
        }
    ],
    "SELECT avg( grade ) FROM Highschooler WHERE id IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )": [],
    "SELECT Name FROM teacher WHERE Age = 31 OR Age = 32": [
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
            "question": "Show the number of audience in year 2008 or 2010.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
            "question": "Which directors had a movie in either 1999 or 2000?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
            "question": "Show all director names who have a movie in the year 1999 or 2000.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
            "question": "What are the names of the technicians aged either 36 or 37?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
            "question": "Show the name of technicians aged either 36 or 37",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
            "question": "Show the names of editors of age either 24 or 25.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE Age = 35 OR Age = 36",
            "question": "Show the names of people aged either 35 or 36.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1",
            "question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1",
            "question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",
            "question": "What are the dates of transactions with at least 100 share count or amount bigger than 100?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",
            "question": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "railway",
            "query": "SELECT Country FROM manager WHERE Age > 50 OR Age < 46",
            "question": "Show the countries that have managers of age above 50 or below 46.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
            "question": "Show the names of mountains with height more than 5000 or prominence more than 1000.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
            "question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500",
            "question": "What are the official names of cities that have population over 1500 or less than 500?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
            "question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE height > 200 OR height < 190",
            "question": "What are the names of people who have a height greater than 200 or less than 190?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE height > 200 OR height < 190",
            "question": "find the names of people who are taller than 200 or lower than 190.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
            "question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959",
            "question": "Who are the ministers who took office after 1961 or before 1959?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500",
            "question": "Find the official names of cities with population bigger than 1500 or smaller than 500.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status FROM roller_coaster WHERE LENGTH > 3300 OR Height > 100",
            "question": "Show the statuses of roller coasters longer than 3300 or higher than 100.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000",
            "question": "Find the name all districts with city area greater than 10 or population larger than 100000",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5",
            "question": "Which catalog contents have length below 3 or above 5? Find the catalog entry names.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000",
            "question": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5",
            "question": "Find the names of the products with length smaller than 3 or height greater than 5.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959",
            "question": "Show the minister who took office after 1961 or before 1959.",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the description and code of the type of service that is performed the most often?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and hours for the project which has the most scientists assigned to it?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the description and code of the service type that is performed the most times.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details and id of the project with the most outcomes?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which project made the most number of outcomes? List the project details and the project id.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the student ID and login name of the student with the most course enrollments",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student who played the most sports?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first name and last name of the student who have most number of sports?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "For the airline ids with the top 10 most routes operated, what are their names?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "Find the names of the top 10 airlines that operate the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and country for the artist with most number of exhibitions?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
            "question": "Show the id and details for the investors who have the top 3 number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name and id of the college that has the most baseball players.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most copies in the inventory? List both title and id.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name of employee who supported the most number of customers.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type and id of the organization that has the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the first and last name of the faculty who has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give me the the first and last name of the faculty who advises the most students.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the code and description of the most frequent behavior incident type?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and details of the investor that has the largest number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and first name of the student that has the most number of assessment notes?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the faculty participating in the most activities?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and last name of the student that has the most behavior incidents?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student participating in the most activities?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the full name of the employee who has the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description and code of the attraction type most tourist attractions belong to.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and hours of project that has the most number of scientists.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the storm name and max speed which affected the greatest number of regions?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and builder of the railway that are associated with the most trains.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the browser that is compatible with the most web accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the first and last names of the instructors who teach the top 3 number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date for the invoice with most number of transactions?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that has been reviewed the most?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and max speed of the storm that affected the most regions.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the full names of the 3 instructors who teach the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and address of the department with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and address of the department that has the highest number of students.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that is rated by most of times?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the student ID and login name of the student who are enrolled in the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T1.club_id , T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many gold medals has the club with the most coaches won?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the full name and id of the college with the largest number of baseball players?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.booking_id , T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the salary and name of the employee who has the most number of aircraft certificates?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which student visited restaurant most often? List student's first name and last name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Tell me the first and last name of the student who has the most activities.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the salaray and name of the employee that is certified to fly the most planes?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.product_name , T1.product_price FROM products AS T1 JOIN regular_order_products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and price of the product that has been ordered the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What are the name and code of the location with the smallest number of documents?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "Find the name and position of the head of the department with the least employees.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG( monthly_rental ) DESC LIMIT 1",
            "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Show the location name and code with the least documents.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rank ) DESC LIMIT 1",
            "question": "Find the name and id of the good with the highest average rank.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rating ) DESC LIMIT 1",
            "question": "Find the name and id of the item with the highest average rating.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "what is the name and position of the head whose department has least number of employees?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What are the code and description of the least frequent detention type ?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id ORDER BY avg( high_temperature ) DESC LIMIT 1",
            "question": "Find the id and local authority of the station with has the highest average high temperature.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.address_id , T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY AVG( monthly_rental ) DESC LIMIT 1",
            "question": "Find the id and city of the student address with the highest average monthly rental.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has the most problems? Give me the number of problems and the product name.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city , count( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which city do the most employees live and how many of them live there?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city , count( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city lives most of staffs? List the city name and number of staffs.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many problems does the product with the most problems have? List the number of the problems and product name.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , count( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name , COUNT( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 5",
            "question": "How many tracks does each genre have and what are the names of the top 5?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , count( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "List the organisation id with the maximum outcome count, and the count.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name , COUNT( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 5",
            "question": "List the top 5 genres by number of tracks. List genres name and total tracks.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name , count( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the names and number of works of the three artists who have produced the most songs.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , count( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count( Documents.document_id ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count( Documents.document_id ) DESC LIMIT 1",
            "question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details , T2.product_id FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY sum( T1.order_quantity ) LIMIT 1",
            "question": "Find the name and ID of the product whose total order quantity is the largest.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg( T2.salary ) ASC LIMIT 1",
            "question": "Which team offers the lowest average salary? Give me the name and id of the team.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg( T2.salary ) ASC LIMIT 1",
            "question": "What are the name and id of the team offering the lowest average salary?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details , T2.product_id FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY sum( T1.order_quantity ) LIMIT 1",
            "question": "What are the name and ID of the product bought the most.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name , avg( T1.age ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY avg( T1.age ) DESC LIMIT 1",
            "question": "Which person whose friends have the oldest average age?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name , avg( T1.age ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY avg( T1.age ) DESC LIMIT 1",
            "question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , avg( T1.stu_gpa ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY avg( T1.stu_gpa ) DESC LIMIT 1",
            "question": "What is the name and the average gpa of department whose students have the highest average gpa?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , avg( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg( T1.stars ) DESC LIMIT 1",
            "question": "What are the movie titles with the highest average rating and what are those ratings?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , avg( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg( T1.stars ) DESC LIMIT 1",
            "question": "Find the movies with the highest average rating. Return the movie titles and average rating.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , avg( T1.stu_gpa ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY avg( T1.stu_gpa ) DESC LIMIT 1",
            "question": "Which department has the highest average student GPA, and what is the average gpa?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the ids, types, and details of the organization with the most research staff?",
            "ted": 0.1
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the teacher who teaches the largest number of students.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the title, id, and description of the movie with the greatest number of actors?",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most number of actors or actresses? List the film name, film id and description.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id and full name of the customer with the most accounts.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.",
            "ted": 0.1
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and nationality of the architect who built most mills?",
            "ted": 0.1
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name , T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and IATA code of the airport that had most number of flights?",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
            "ted": 0.1
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name, phone number and email address for the customer with the most orders.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id, first and last name with most number of accounts.",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the first name, last name and id for the top three players won the most player awards.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer last name, id and phone number with most number of orders?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the manager's first name, last name and id who won the most manager award?",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the source for the most number of flight routes.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport from most of the routes start?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Which 3 players won the most player awards? List their full name and id.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the destination of the most number of routes.",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport that the most routes end at?",
            "ted": 0.1
        }
    ],
    "SELECT student_id , count( * ) FROM Friend GROUP BY student_id": [
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "For each denomination, return the denomination and the count of schools with that denomination.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "Give the country id and corresponding count of cities in each country.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
            "question": "Show each location and the number of cinemas there.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "How many hosts does each nationality have? List the nationality and the count.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
            "question": "Show the different countries and the number of members from each.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
            "question": "List all directors along with the number of films directed by each director.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "Show different nationalities along with the number of hosts of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "For each type, how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the number of ships of each type.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "What are the allergy types and how many allergies correspond to each one?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "Show all allergy types and the number of allergies in each type.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "What are the number of rooms for each bed type?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "Find the number of rooms for each bed type.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "What are the different budget type codes, and how many documents are there for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "Show budget type codes and the number of documents in each budget type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
            "question": "Show different carriers of phones together with the number of phones with each carrier.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "find the number of medicines offered by each trade.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "How many medicines are offered by each trade name?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "How many counties correspond to each police force?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "Please show the police forces and the number of counties with each police force.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "List all headquarters and the number of companies in each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "display the country ID and number of cities for each country.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "For each advisor, report the total number of students advised by him or her.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "Show all majors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "Show all ages and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "Find all types of store and number of them.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "Show the race class and number of races in each class.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "What are the different classes of races, and how many races correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
            "question": "Show the different headquarters and number of companies at each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "For each classroom, show the classroom number and find how many students are using it.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "Report the number of students in each classroom.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status , COUNT( * ) FROM roller_coaster GROUP BY Status",
            "question": "Show the different statuses and the numbers of roller coasters for each status.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , COUNT( * ) FROM journalist GROUP BY Nationality",
            "question": "Show the different nationalities and the number of journalists of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "Show all the buildings along with the number of faculty members the buildings have.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "How many faculty members does each building have? List the result with the name of the building.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "For each faculty rank, show the number of faculty members who have it.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "How many students have each different allergy?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "Show all allergies with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "How many faculty members do we have for each faculty rank?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "Please show different denominations and the corresponding number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "Show all advisors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "How many students live in each city?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "Show all cities and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , COUNT( * ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the number of transactions for different investors.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "How old is each student and how many students are each age?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "How many students are there for each major?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION , COUNT( * ) FROM performance GROUP BY LOCATION",
            "question": "Show different locations and the number of performances at each location.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "For each election cycle, report the number of voting records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT state_province_county , count( * ) FROM addresses GROUP BY state_province_county",
            "question": "Show each state and the number of addresses in each state.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "Show the booking status code and the corresponding number of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT outcome_code , count( * ) FROM mailshot_customers GROUP BY outcome_code",
            "question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT product_category , count( * ) FROM mailshot_campaigns GROUP BY product_category",
            "question": "Show all distinct product categories along with the number of mailshots in each category.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Please show each industry and the corresponding number of companies in that industry.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Whah are the name of each industry and the number of companies in that industry?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Country , COUNT( * ) FROM perpetrator GROUP BY Country",
            "question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "Please show the countries and the number of climbers from each country.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT premises_type , count( * ) FROM premises GROUP BY premises_type",
            "question": "Show each premise type and the number of premises in that type.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "Show different nominees and the number of musicals they have been nominated.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "How many musicals has each nominee been nominated for?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "How many climbers are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "How many entrepreneurs correspond to each investor?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place , COUNT( * ) FROM people GROUP BY Birth_Place",
            "question": "List each birth place along with the number of people from there.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT party , count( * ) FROM driver GROUP BY party",
            "question": "Show the party and the number of drivers in each party.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE , COUNT( * ) FROM artwork GROUP BY TYPE",
            "question": "Please show different types of artworks with the corresponding number of artworks of each type.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "For each team, how many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "Show different teams of technicians and the number of technicians in each team.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Party , COUNT( * ) FROM representative GROUP BY Party",
            "question": "What are the different parties of representative? Show the party name and the number of representatives in each party.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT LOCATION , COUNT( * ) FROM railway GROUP BY LOCATION",
            "question": "Show different locations of railways along with the corresponding number of railways at each location.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder , COUNT( * ) FROM railway GROUP BY Builder",
            "question": "Show different builders of railways, along with the corresponding number of railways using each builder.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country , count( * ) FROM stadium GROUP BY country",
            "question": "How many stadiums does each country have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "How many players played each position?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "Count the number of voting records for each election cycle.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "For each college, return the college name and the count of authors with submissions from that college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "What are the destinations and number of flights to each one?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "Show different colleges along with the number of authors of submission from each college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "Show all destinations and the number of flights to each destination.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "For each origin, how many flights came from there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "Show all origins and the number of flights from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "How many customers use each payment method?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "How many players enter hall of fame each year?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "Count the number of players who enter hall of fame for each year.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "What are the types of competition and number of competitions for that type?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher , COUNT( * ) FROM publication GROUP BY Publisher",
            "question": "Show different publishers together with the number of publications they have.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "For each payment method, return how many customers use it.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "How many documents are there of each type?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "Find the number of phones for each accreditation type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "How many phones belongs to each accreditation type?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "List document type codes and the number of documents in each code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "How many documents correspond with each project id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "Show project ids and the number of documents in each project.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "What are the different statement ids on accounts, and the number of accounts for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "Show all statement id and the number of accounts for each statement.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "Show the position of players and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality , COUNT( * ) FROM pilot GROUP BY Nationality",
            "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "List the types of competition and the number of competitions of each type.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code , COUNT( * ) FROM Products GROUP BY Product_Type_Code",
            "question": "Show different type codes of products and the number of products with each type code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destroyed by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "List the distinct payment method codes with the number of orders made",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "What are the types of video games and how many are in each type?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "Show all video game types and the number of video games in each type.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "Show all customer ids and the number of cards owned by each customer.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "Show the id of each employee and the number of document destruction authorised by that employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "What are the different customer ids, and how many cards does each one hold?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destruction authorised by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "Show all payment method codes and the number of orders for each code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "Show all card type codes and the number of cards in each type.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "What are the different software platforms for devices, and how many devices have each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT origin , count( * ) FROM train GROUP BY origin",
            "question": "Find the number of trains starting from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "What are the different card types, and how many cards are there of each?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "List all customer status codes and the number of customers having each status code.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "For each customer status code, how many customers are classified that way?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "Show the employee ids and the number of documents destroyed by each employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction type and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party , COUNT( * ) FROM people GROUP BY Party",
            "question": "Show different parties of people along with the number of people in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "How many accounts are there for each customer id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "What is the code of each role and the number of employees in each role?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "Show all role codes and the number of employees in each role.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "For each policy type, return its type code and its count in the record.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "Find the number of records of each policy type and its type code.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "How many students play each sport?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT country , count( * ) FROM people GROUP BY country",
            "question": "Show all countries and the number of people from each country.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "How many books fall into each category?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "Show all publishers and the number of books for each publisher.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "Show all sport name and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "Show the location codes and the number of documents in each location.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "Show all book categories and the number of books in each category.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "How many books are there for each publisher?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "What is the code of each location and the number of documents in that location?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "Show all customer ids and the number of accounts for each customer.",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT open_date , count( * ) FROM church GROUP BY open_date",
            "question": "Show all opening years and the number of churches that opened in that year.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation , COUNT( * ) FROM player GROUP BY Occupation",
            "question": "Show different occupations along with the number of players in each occupation.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "Please show different software platforms and the corresponding number of devices using each.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are the different transaction types, and how many transactions of each have taken place?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age , COUNT( * ) FROM editor GROUP BY Age",
            "question": "What are the different ages of editors? Show each age along with the number of editors of that age.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Return the number of music festivals of each category.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "List the studios of each film and the number of films produced by that studio.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "Show the order ids and the number of items in each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "Show the number of customers for each gender.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "How many order items correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "How films are produced by each studio?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "How many customers are there of each gender?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "List all payment methods and number of payments using each payment methods.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "For each type of store, how many of them are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "How many invoices correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "Show the order ids and the number of invoices for each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "How many transactions correspond to each invoice number?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Please show the categories of the music festivals and the count.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT Operating_system , count( * ) FROM web_client_accelerator GROUP BY Operating_system",
            "question": "Find the number of web accelerators used for each Operating system.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "For each payment method, how many payments were made?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "Show the invoice number and the number of transactions for each invoice.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "Show different teams in eliminations and the number of eliminations from each team.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "Show the account id and the number of transactions for each account",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "How many eliminations did each team have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT preferred_foot , avg( overall_rating ) FROM Player_Attributes GROUP BY preferred_foot",
            "question": "What is the average rating for right-footed players and left-footed players?",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "For each year, return the year and the average number of attendance at home games.",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "What is the average number of attendance at home games for each year?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "Show the average price of hotels for each star rating code.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of different bed type? List bed type and average base price.",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "For each position, what is the average number of points for players in that position?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction types and the total amount of transactions.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "What are the ids of all students and number of hours played?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, what is the highest latitude for its stations?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, return the highest latitude among its stations.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "What are the main indstries and total market value for each industry?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "Show all student ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "What are ids and total number of hours played for each game?",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "What is the average price for each type of product?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "Show all game ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "Return the average price for each product type.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "Please show the different statuses of cities and the average population of cities with each status.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "What are the statuses and average populations of each city?",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "List the position of players and the average number of points of players of each position.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "Show all main industry and total market value in each industry.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "What is the average price range of hotels for each each star rating code?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average base price of different bed type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "What are the different product names? What is the average product price for each of them?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "Show the average price of hotels for different pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "What are the average prices of hotels grouped by their pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average amount of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "display the employee ID for each employee and the date on which he ended his previous job.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "What are the employee ids for each employee and final dates of employment at their last job?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( share_count ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average share count of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Show order ids and the total quantity in each order.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Give the order ids for all orders, as well as the total product quantity in each.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY transaction_type_code",
            "question": "Show the average transaction amount for different transaction types.",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "For each type, what is the average tonnage?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are total transaction amounts for each transaction type?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average room price.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of rooms, for each bed type?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the average tonnage of ships of each type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "For each distinct product name, show its average product price.",
            "ted": 0.0625
        }
    ],
    "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id": [
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id",
            "question": "Show all product names without an order.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_name FROM customers EXCEPT SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Which customers do not have a first notification of loss record? Give me the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID",
            "question": "List the name of physicians who never took any appointment.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID",
            "question": "Which physicians have never taken any appointment? Find their names.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id",
            "question": "List the details of the customers who do not have any policies.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id",
            "question": "What are the names of members who are not in charge of any events?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id",
            "question": "List the employees who have not showed up in any circulation history of documents. List the employee's name.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers EXCEPT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What are the names of customers who never made an order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers EXCEPT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Find the names of customers who never placed an order.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers EXCEPT SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Find the names of customers who have no policies associated.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers EXCEPT SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What are the names of customers who do not have any policies?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId",
            "question": "Find the names of artists that do not have any albums.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId",
            "question": "What are the names of artists who have not released any albums?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_name FROM customers EXCEPT SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Find the names of users who do not have a first notification of loss record.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id",
            "question": "Show all member names who are not in charge of any event.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID = T2.Client_ID",
            "question": "Show the names of all the clients with no booking.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id",
            "question": "What are the details of the lots which are not used in any transactions?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO",
            "question": "Find the name of the department that has no students minored in?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT service_name FROM services EXCEPT SELECT T1.service_name FROM services AS T1 JOIN party_services AS T2 ON T1.service_id = T2.service_id",
            "question": "What are the names of the services that have never been used?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO",
            "question": "What is the name of the department htat has no students minoring in it?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT service_name FROM services EXCEPT SELECT T1.service_name FROM services AS T1 JOIN party_services AS T2 ON T1.service_id = T2.service_id",
            "question": "Find name of the services that has never been used.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id",
            "question": "Which students not enrolled in any course? Find their personal names.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id",
            "question": "What is the first name of the staff who did not give any lesson?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Which customers do not have any policies? Find the details of these customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id",
            "question": "What are the names of products that have never been ordered?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id",
            "question": "What is the first name of all employees who do not give any lessons?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id",
            "question": "Find the personal names of students not enrolled in any course.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID = T2.Client_ID",
            "question": "What are the names of the clients who do not have any booking?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id",
            "question": "Find the last names of teachers who are not involved in any detention.",
            "ted": 0.0
        }
    ],
    "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1": [
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
            "question": "What is the name, city, and country of the airport with the lowest altitude?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
            "question": "What are the name, latitude, and city of the station with the lowest latitude?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
            "question": "Find the name, city, and country of the airport that has the lowest altitude.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
            "question": "What is the name, latitude, and city of the station that is located the furthest South?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "What is the name, city, and country of the airport with the highest elevation?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
            "question": "What is the name, location and seating for the most recently opened track?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
            "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
            "question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
            "question": "Find the name, type, and flag of the ship that is built in the most recent year.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
            "question": "What is the name, type, and flag of the ship that was built in the most recent year?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "college_1",
            "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
            "question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "Find the name, city, and country of the airport that has the highest latitude.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
            "question": "Find the name, headquarter and founder of the manufacturer that has the highest revenue.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
            "question": "What are the names, headquarters and founders of the company with the highest revenue?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "college_1",
            "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
            "question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
            "question": "Find the name, account type, and account balance of the customer who has the highest credit score.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
            "question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
            "question": "Return the name, location, and seating of the track that was opened in the most recent year.",
            "ted": 0.045454545454545456
        }
    ],
    "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown": [
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "For each denomination, return the denomination and the count of schools with that denomination.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "Give the country id and corresponding count of cities in each country.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
            "question": "Show each location and the number of cinemas there.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "How many hosts does each nationality have? List the nationality and the count.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
            "question": "Show the different countries and the number of members from each.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
            "question": "List all directors along with the number of films directed by each director.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
            "question": "Show different nationalities along with the number of hosts of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "For each type, how many ships are there?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the number of ships of each type.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "What are the allergy types and how many allergies correspond to each one?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
            "question": "Show all allergy types and the number of allergies in each type.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "What are the number of rooms for each bed type?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
            "question": "Find the number of rooms for each bed type.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "What are the different budget type codes, and how many documents are there for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
            "question": "Show budget type codes and the number of documents in each budget type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
            "question": "Show different carriers of phones together with the number of phones with each carrier.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "find the number of medicines offered by each trade.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
            "question": "How many medicines are offered by each trade name?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "How many counties correspond to each police force?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
            "question": "Please show the police forces and the number of counties with each police force.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "List all headquarters and the number of companies in each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
            "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
            "question": "display the country ID and number of cities for each country.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "For each advisor, report the total number of students advised by him or her.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "Show all majors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "Show all ages and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "Find all types of store and number of them.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "Show the race class and number of races in each class.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
            "question": "What are the different classes of races, and how many races correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
            "question": "Show the different headquarters and number of companies at each headquarter.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "For each classroom, show the classroom number and find how many students are using it.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
            "question": "Report the number of students in each classroom.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status , COUNT( * ) FROM roller_coaster GROUP BY Status",
            "question": "Show the different statuses and the numbers of roller coasters for each status.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , COUNT( * ) FROM journalist GROUP BY Nationality",
            "question": "Show the different nationalities and the number of journalists of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "Show all the buildings along with the number of faculty members the buildings have.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building , count( * ) FROM Faculty GROUP BY building",
            "question": "How many faculty members does each building have? List the result with the name of the building.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "For each faculty rank, show the number of faculty members who have it.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "How many students have each different allergy?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy , count( * ) FROM Has_allergy GROUP BY Allergy",
            "question": "Show all allergies with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , count( * ) FROM Faculty GROUP BY rank",
            "question": "How many faculty members do we have for each faculty rank?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
            "question": "Please show different denominations and the corresponding number of schools.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor , count( * ) FROM Student GROUP BY advisor",
            "question": "Show all advisors and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "How many students live in each city?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code , count( * ) FROM Student GROUP BY city_code",
            "question": "Show all cities and corresponding number of students.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , COUNT( * ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the number of transactions for different investors.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT age , count( * ) FROM Student GROUP BY age",
            "question": "How old is each student and how many students are each age?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major , count( * ) FROM Student GROUP BY major",
            "question": "How many students are there for each major?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
            "question": "How many students does each advisor have?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION , COUNT( * ) FROM performance GROUP BY LOCATION",
            "question": "Show different locations and the number of performances at each location.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "For each election cycle, report the number of voting records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT state_province_county , count( * ) FROM addresses GROUP BY state_province_county",
            "question": "Show each state and the number of addresses in each state.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_status_code , COUNT( * ) FROM Apartment_Bookings GROUP BY booking_status_code",
            "question": "Show the booking status code and the corresponding number of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT outcome_code , count( * ) FROM mailshot_customers GROUP BY outcome_code",
            "question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT product_category , count( * ) FROM mailshot_campaigns GROUP BY product_category",
            "question": "Show all distinct product categories along with the number of mailshots in each category.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Please show each industry and the corresponding number of companies in that industry.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry , COUNT( * ) FROM Companies GROUP BY Industry",
            "question": "Whah are the name of each industry and the number of companies in that industry?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Country , COUNT( * ) FROM perpetrator GROUP BY Country",
            "question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "Please show the countries and the number of climbers from each country.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT premises_type , count( * ) FROM premises GROUP BY premises_type",
            "question": "Show each premise type and the number of premises in that type.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "Show different nominees and the number of musicals they have been nominated.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee , COUNT( * ) FROM musical GROUP BY Nominee",
            "question": "How many musicals has each nominee been nominated for?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country , COUNT( * ) FROM climber GROUP BY Country",
            "question": "How many climbers are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "How many entrepreneurs correspond to each investor?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor , COUNT( * ) FROM entrepreneur GROUP BY Investor",
            "question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place , COUNT( * ) FROM people GROUP BY Birth_Place",
            "question": "List each birth place along with the number of people from there.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT party , count( * ) FROM driver GROUP BY party",
            "question": "Show the party and the number of drivers in each party.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE , COUNT( * ) FROM artwork GROUP BY TYPE",
            "question": "Please show different types of artworks with the corresponding number of artworks of each type.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "For each team, how many technicians are there?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , COUNT( * ) FROM technician GROUP BY Team",
            "question": "Show different teams of technicians and the number of technicians in each team.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Party , COUNT( * ) FROM representative GROUP BY Party",
            "question": "What are the different parties of representative? Show the party name and the number of representatives in each party.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT LOCATION , COUNT( * ) FROM railway GROUP BY LOCATION",
            "question": "Show different locations of railways along with the corresponding number of railways at each location.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder , COUNT( * ) FROM railway GROUP BY Builder",
            "question": "Show different builders of railways, along with the corresponding number of railways using each builder.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country , count( * ) FROM stadium GROUP BY country",
            "question": "How many stadiums does each country have?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "How many players played each position?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Election_Cycle , count( * ) FROM VOTING_RECORD GROUP BY Election_Cycle",
            "question": "Count the number of voting records for each election cycle.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "For each college, return the college name and the count of authors with submissions from that college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "What are the destinations and number of flights to each one?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College , COUNT( * ) FROM submission GROUP BY College",
            "question": "Show different colleges along with the number of authors of submission from each college.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination , count( * ) FROM Flight GROUP BY destination",
            "question": "Show all destinations and the number of flights to each destination.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "For each origin, how many flights came from there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin , count( * ) FROM Flight GROUP BY origin",
            "question": "Show all origins and the number of flights from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "How many customers use each payment method?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "How many players enter hall of fame each year?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid , count( * ) FROM hall_of_fame GROUP BY yearid",
            "question": "Count the number of players who enter hall of fame for each year.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "What are the types of competition and number of competitions for that type?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher , COUNT( * ) FROM publication GROUP BY Publisher",
            "question": "Show different publishers together with the number of publications they have.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT payment_method_code , count( * ) FROM customers GROUP BY payment_method_code",
            "question": "For each payment method, return how many customers use it.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "How many documents are there of each type?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "Find the number of phones for each accreditation type.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_type , count( * ) FROM phone GROUP BY Accreditation_type",
            "question": "How many phones belongs to each accreditation type?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , count( * ) FROM Documents GROUP BY document_type_code",
            "question": "List document type codes and the number of documents in each code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "How many documents correspond with each project id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , count( * ) FROM Documents GROUP BY project_id",
            "question": "Show project ids and the number of documents in each project.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "What are the different statement ids on accounts, and the number of accounts for each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , count( * ) FROM Accounts GROUP BY STATEMENT_ID",
            "question": "Show all statement id and the number of accounts for each statement.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION , COUNT( * ) FROM match_season GROUP BY POSITION",
            "question": "Show the position of players and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality , COUNT( * ) FROM pilot GROUP BY Nationality",
            "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , COUNT( * ) FROM competition GROUP BY Competition_type",
            "question": "List the types of competition and the number of competitions of each type.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code , COUNT( * ) FROM Products GROUP BY Product_Type_Code",
            "question": "Show different type codes of products and the number of products with each type code.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destroyed by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "List the distinct payment method codes with the number of orders made",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "What are the types of video games and how many are in each type?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype , count( * ) FROM Video_games GROUP BY gtype",
            "question": "Show all video game types and the number of video games in each type.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "Show all customer ids and the number of cards owned by each customer.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "Show the id of each employee and the number of document destruction authorised by that employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Customers_cards GROUP BY customer_id",
            "question": "What are the different customer ids, and how many cards does each one hold?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destruction_Authorised_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
            "question": "What are the id of each employee and the number of document destruction authorised by that employee?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code , count( * ) FROM INVOICES GROUP BY payment_method_code",
            "question": "Show all payment method codes and the number of orders for each code.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "Show all card type codes and the number of cards in each type.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "What are the different software platforms for devices, and how many devices have each?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT origin , count( * ) FROM train GROUP BY origin",
            "question": "Find the number of trains starting from each origin.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code , count( * ) FROM Customers_cards GROUP BY card_type_code",
            "question": "What are the different card types, and how many cards are there of each?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "List all customer status codes and the number of customers having each status code.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code , count( * ) FROM Customers GROUP BY customer_status_code",
            "question": "For each customer status code, how many customers are classified that way?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There , COUNT( * ) FROM Tourist_Attractions GROUP BY How_to_Get_There",
            "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID , count( * ) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
            "question": "Show the employee ids and the number of documents destroyed by each employee.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction type and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party , COUNT( * ) FROM people GROUP BY Party",
            "question": "Show different parties of people along with the number of people in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "How many accounts are there for each customer id?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "What is the code of each role and the number of employees in each role?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , count( * ) FROM Employees GROUP BY role_code",
            "question": "Show all role codes and the number of employees in each role.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "For each policy type, return its type code and its count in the record.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code , count( * ) FROM policies GROUP BY policy_type_code",
            "question": "Find the number of records of each policy type and its type code.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "How many students play each sport?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT country , count( * ) FROM people GROUP BY country",
            "question": "Show all countries and the number of people from each country.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "How many books fall into each category?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "Show all publishers and the number of books for each publisher.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT sportname , count( * ) FROM Sportsinfo GROUP BY sportname",
            "question": "Show all sport name and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "Show the location codes and the number of documents in each location.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT category , count( * ) FROM book_club GROUP BY category",
            "question": "Show all book categories and the number of books in each category.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher , count( * ) FROM book_club GROUP BY publisher",
            "question": "How many books are there for each publisher?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , count( * ) FROM Document_locations GROUP BY location_code",
            "question": "What is the code of each location and the number of documents in that location?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT customer_id , count( * ) FROM Accounts GROUP BY customer_id",
            "question": "Show all customer ids and the number of accounts for each customer.",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT open_date , count( * ) FROM church GROUP BY open_date",
            "question": "Show all opening years and the number of churches that opened in that year.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation , COUNT( * ) FROM player GROUP BY Occupation",
            "question": "Show different occupations along with the number of players in each occupation.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform , COUNT( * ) FROM device GROUP BY Software_Platform",
            "question": "Please show different software platforms and the corresponding number of devices using each.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type , count( * ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are the different transaction types, and how many transactions of each have taken place?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age , COUNT( * ) FROM editor GROUP BY Age",
            "question": "What are the different ages of editors? Show each age along with the number of editors of that age.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Return the number of music festivals of each category.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "List the studios of each film and the number of films produced by that studio.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "Show the order ids and the number of items in each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "Show the number of customers for each gender.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Order_items GROUP BY order_id",
            "question": "How many order items correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio , COUNT( * ) FROM film GROUP BY Studio",
            "question": "How films are produced by each studio?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT gender , count( * ) FROM Customers GROUP BY gender",
            "question": "How many customers are there of each gender?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "List all payment methods and number of payments using each payment methods.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
            "question": "For each type of store, how many of them are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "How many invoices correspond to each order id?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , count( * ) FROM Invoices GROUP BY order_id",
            "question": "Show the order ids and the number of invoices for each order.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "How many transactions correspond to each invoice number?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category , COUNT( * ) FROM music_festival GROUP BY Category",
            "question": "Please show the categories of the music festivals and the count.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT Operating_system , count( * ) FROM web_client_accelerator GROUP BY Operating_system",
            "question": "Find the number of web accelerators used for each Operating system.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT payment_method_code , count( * ) FROM Customer_Payments GROUP BY payment_method_code",
            "question": "For each payment method, how many payments were made?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT invoice_number , count( * ) FROM Financial_transactions GROUP BY invoice_number",
            "question": "Show the invoice number and the number of transactions for each invoice.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "Show different teams in eliminations and the number of eliminations from each team.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "Show the account id and the number of transactions for each account",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team , COUNT( * ) FROM elimination GROUP BY Team",
            "question": "How many eliminations did each team have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , count( * ) FROM Financial_transactions GROUP BY account_id",
            "question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT preferred_foot , avg( overall_rating ) FROM Player_Attributes GROUP BY preferred_foot",
            "question": "What is the average rating for right-footed players and left-footed players?",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "For each year, return the year and the average number of attendance at home games.",
            "ted": 0.0625
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT YEAR , avg( attendance ) FROM home_game GROUP BY YEAR",
            "question": "What is the average number of attendance at home games for each year?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "Show the average price of hotels for each star rating code.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of different bed type? List bed type and average base price.",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "For each position, what is the average number of points for players in that position?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "Show the transaction types and the total amount of transactions.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "What are the ids of all students and number of hours played?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, what is the highest latitude for its stations?",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT city , max( lat ) FROM station GROUP BY city",
            "question": "For each city, return the highest latitude among its stations.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "What are the main indstries and total market value for each industry?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT Stuid , sum( hours_played ) FROM Plays_games GROUP BY Stuid",
            "question": "Show all student ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "What are ids and total number of hours played for each game?",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "What is the average price for each type of product?",
            "ted": 0.0625
        },
        {
            "db_id": "game_1",
            "query": "SELECT gameid , sum( hours_played ) FROM Plays_games GROUP BY gameid",
            "question": "Show all game ids and the number of hours played.",
            "ted": 0.0625
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_type_code , avg( product_price ) FROM products GROUP BY product_type_code",
            "question": "Return the average price for each product type.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "Please show the different statuses of cities and the average population of cities with each status.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Status , avg( Population ) FROM city GROUP BY Status",
            "question": "What are the statuses and average populations of each city?",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION , avg( Points ) FROM player GROUP BY POSITION",
            "question": "List the position of players and the average number of points of players of each position.",
            "ted": 0.0625
        },
        {
            "db_id": "gas_company",
            "query": "SELECT main_industry , sum( market_value ) FROM company GROUP BY main_industry",
            "question": "Show all main industry and total market value in each industry.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT star_rating_code , avg( price_range ) FROM HOTELS GROUP BY star_rating_code",
            "question": "What is the average price range of hotels for each each star rating code?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average base price of different bed type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "What are the different product names? What is the average product price for each of them?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "Show the average price of hotels for different pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT pets_allowed_yn , avg( price_range ) FROM HOTELS GROUP BY pets_allowed_yn",
            "question": "What are the average prices of hotels grouped by their pet policy.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average amount of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "display the employee ID for each employee and the date on which he ended his previous job.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id , MAX( end_date ) FROM job_history GROUP BY employee_id",
            "question": "What are the employee ids for each employee and final dates of employment at their last job?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , avg( share_count ) FROM TRANSACTIONS GROUP BY investor_id",
            "question": "Show the average share count of transactions for different investors.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Show order ids and the total quantity in each order.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT order_id , sum( product_quantity ) FROM Order_items GROUP BY order_id",
            "question": "Give the order ids for all orders, as well as the total product quantity in each.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code , avg( amount_of_transaction ) FROM TRANSACTIONS GROUP BY transaction_type_code",
            "question": "Show the average transaction amount for different transaction types.",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "For each type, what is the average tonnage?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT transaction_type , sum( transaction_amount ) FROM Financial_transactions GROUP BY transaction_type",
            "question": "What are total transaction amounts for each transaction type?",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "For each bed type, find the average room price.",
            "ted": 0.0625
        },
        {
            "db_id": "inn_1",
            "query": "SELECT bedType , avg( basePrice ) FROM Rooms GROUP BY bedType",
            "question": "What is the average base price of rooms, for each bed type?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , avg( Tonnage ) FROM ship GROUP BY TYPE",
            "question": "Show different types of ships and the average tonnage of ships of each type.",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name , avg( Product_Price ) FROM PRODUCTS GROUP BY Product_Name",
            "question": "For each distinct product name, show its average product price.",
            "ted": 0.0625
        }
    ],
    "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "college_3",
            "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which building does the instructor who teaches the most number of courses live in?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which room has the largest number of reservations?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which program is broadcast most frequently? Give me the program name.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the organization which has the most contact individuals.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details of the student who registered for the most number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is detail of the student who registered the most number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer uses the most policies? Give me the customer name.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of organization that has the greatest number of contact individuals?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the party email that has used party services the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which is the email of the party that has used the services the most number of times?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the program that is broadcast most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the three products that have the most problems?s",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the party form that is most common?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the most popular party form.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the names of the cameras that have taken picture of the most mountains?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the structure of the document with the least number of accesses?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the city that hosted the most events.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city has hosted the most events?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the structure description of the document that has been accessed the fewest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer have the most policies? Give me the customer details.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the document that has the most sections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the party that has the most delegates.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the top 3 products which have the largest number of problems?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the aircraft that has won an award the most?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the course that has the most student enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which course is enrolled in by the most students? Give me the course name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the activity that has the largest number of student participants.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the activity with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which activity has the most faculty members participating in? Find the activity name.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the activity that has the most faculty members involved in?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which song has the most vocals?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the song with the most vocals?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the member who is in charge of the most events.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of member in charge of greatest number of events?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the track that has had the greatest number of races?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the denomination of the school that has the most players.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of track with most number of races.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the denomination of the school the most players belong to?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city with the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which artist has the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the artist with the greatest number of albums?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city does has most number of customers?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the station name with greatest number of trains.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the party with the most members.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of party with most number of members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the most common genre in all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the name of the genre that is most frequent across all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation type hires most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of the organization with the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T1.name FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id GROUP BY T2.train_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the train whose route runs through greatest number of stations.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the user who gives the most reviews.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the course with the most registered students?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "which course has most number of registered students?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the document with the most number of sections?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the airline with the most routes?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id of the customer who has the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id of the customer who made the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of the shop that has the most different kinds of devices in stock?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of airline which runs the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the names of customers who have the most mailshots.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the shop that has the most kind of devices in stock.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of amenity that is most common in all dorms.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the order which has the most items?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the nurse has the most appointments?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which order deals with the most items? Return the order id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the customer who made the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the nurse who has the largest number of appointments.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common amenity in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the department that has the biggest number of students minored in?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the department with the most students minoring in it?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description of the transaction type that occurs most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.claim_status_name FROM claims_processing AS T1 JOIN claims_processing_stages AS T2 ON T1.claim_stage_id = T2.claim_stage_id GROUP BY T1.claim_stage_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which claim processing stage has the most claims? Show the claim status name.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.claim_status_name FROM claims_processing AS T1 JOIN claims_processing_stages AS T2 ON T1.claim_stage_id = T2.claim_stage_id GROUP BY T1.claim_stage_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the claim processing stage that most of the claims are on?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the largest number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id GROUP BY T2.swimmer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the swimmer who has the most records.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of the customer who has the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which customer made the most orders? Find the customer name.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the color description that is most common across all products.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM stadium AS T1 JOIN event AS T2 ON T1.id = T2.stadium_id GROUP BY T2.stadium_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the stadium which held the most events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the customer that has been involved in the most policies.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.route_name FROM Delivery_Routes AS T1 JOIN Delivery_Route_Locations AS T2 ON T1.route_id = T2.route_id GROUP BY T1.route_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of route that has the highest number of deliveries.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most frequently ordered product? Tell me the detail of the product",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the name of aircraft which fewest people have its certificate.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the most policies listed?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the description of the color for most products?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which party has the largest number of delegates?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the names of the aircraft that the least people are certified to fly?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common hometown of gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T2.product_details FROM order_items AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has been ordered most number of times?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the status of the city that has hosted the most competitions?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the status of the city that has hosted the greatest number of competitions.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the customer who has the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the hometown that is most common among gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the name of the department that has the fewest members.",
            "ted": 0.03125
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT T1.sex FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex ORDER BY avg( T2.unsure_rate ) DESC LIMIT 1",
            "question": "What is the sex of the candidate who had the highest unsure rate?",
            "ted": 0.03125
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) LIMIT 1",
            "question": "What country is the artist who made the fewest songs from?",
            "ted": 0.03125
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the name of the department with the fewest members?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.email_address FROM customers AS T1 JOIN complaints AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) LIMIT 1",
            "question": "Find the emails of customers who has filed a complaints of the product with the most complaints.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count( * ) LIMIT 1",
            "question": "Which school has the smallest amount of professors?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.first_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count( * ) LIMIT 5",
            "question": "What is first names of the top 5 staff who have handled the greatest number of complaints?",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.first_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count( * ) LIMIT 5",
            "question": "Return the first names of the 5 staff members who have handled the most complaints.",
            "ted": 0.03125
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.email_address FROM customers AS T1 JOIN complaints AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) LIMIT 1",
            "question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?",
            "ted": 0.03125
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count( * ) LIMIT 1",
            "question": "Find the country of origin for the artist who made the least number of songs?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count( * ) LIMIT 1",
            "question": "Which school has the fewest professors?",
            "ted": 0.03125
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the color description that is least common across products.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "What is the name of the customer who has greatest total loan amount?",
            "ted": 0.03125
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code GROUP BY T2.color_description ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the description of the color used by least products?",
            "ted": 0.03125
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum( T1.show_times_per_day ) DESC LIMIT 1",
            "question": "Show director with the largest number of show times in total.",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG( Price ) DESC LIMIT 1",
            "question": "Give the color of the grape whose wine products have the highest average price?",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG( Price ) DESC LIMIT 1",
            "question": "What is the color of the grape whose wine products has the highest average price?",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "Find the name of bank branch that provided the greatest total amount of loans.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "What is the name of the bank branch that has lent the greatest amount?",
            "ted": 0.03125
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg( trust ) DESC LIMIT 1",
            "question": "Find the name of the source user with the highest average trust score.",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum( hours_played ) DESC LIMIT 1",
            "question": "Show the game name that has most number of hours played.",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count( T2.decor ) ASC LIMIT 1",
            "question": "What kind of decor has the least number of reservations?",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count( T2.decor ) ASC LIMIT 1",
            "question": "What is the least popular kind of decor?",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum( hours_played ) DESC LIMIT 1",
            "question": "What is the name of the game that has been played the most?",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum( T2.amount ) DESC LIMIT 1",
            "question": "Find the name of customer who has the highest amount of loans.",
            "ted": 0.03125
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT T1.sex FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex ORDER BY avg( T2.unsure_rate ) DESC LIMIT 1",
            "question": "which gender got the highest average uncertain ratio.",
            "ted": 0.03125
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which kind of part has the least number of faults? List the part name.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) LIMIT 1",
            "question": "What is the name of the department with the fewest professors?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) LIMIT 1",
            "question": "What is the name of department where has the smallest number of professors?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM( T1.quantity ) DESC LIMIT 1",
            "question": "Show the name of the shop that have the largest quantity of devices in stock.",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.Effective_Date FROM claims AS T1 JOIN settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY sum( T2.settlement_amount ) DESC LIMIT 1",
            "question": "What is the effective date of the claim that has the largest amount of total settlement?",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.Effective_Date FROM claims AS T1 JOIN settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY sum( T2.settlement_amount ) DESC LIMIT 1",
            "question": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "What is the least common media type in all tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM( T1.quantity ) DESC LIMIT 1",
            "question": "What is the name of the shop that has the greatest quantity of devices in stock?",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "What is the name of the media type that is least common across all tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg( T2.rating ) LIMIT 1",
            "question": "Find the name of the item with the lowest average rating.",
            "ted": 0.0625
        }
    ],
    "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes": [
        {
            "db_id": "e_learning",
            "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
            "question": "Find the common personal name of course authors and students.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
            "question": "What are ids of the faculty members who not only participate in an activity but also advise a student.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
            "question": "Show the ids of all the faculty members who participate in an activity and advise a student.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
            "question": "Show ids of students who play video game and play sports.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
            "question": "What are the ids of all students who played video games and sports?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
            "question": "What are the last names that are used by customers and staff?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
            "question": "Which last names are both used by customers and by staff?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
            "question": "What are the personal names used both by some course authors and some students?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
            "question": "Find the common login name of course authors and students.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
            "question": "What are the login names used both by some course authors and some students?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
            "question": "What are the names of all cities and states?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Show the ids of the employees who don't authorize destruction for any document.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
            "question": "What are the ids of instructors who didnt' teach?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
            "question": "Which faculty do not participate in any activity? Find their faculty ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
            "question": "Find the id of instructors who didn't teach any courses?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "e_government",
            "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
            "question": "Find the name of all the cities and states.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
            "question": "Show ids of students who don't play video game.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
            "question": "What are the ids of all students who don't play sports?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
            "question": "What are the ids of all students who are not video game players?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Show the ids of all employees who don't destroy any document.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Which employees do not destroy any document? Find their employee ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
            "question": "Find the id of the courses that do not have any prerequisite?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "movie_1",
            "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie",
            "question": "What are the names of all the reviewers and movie names?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
            "question": "Show the ids of the students who don't participate in any activity.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
            "question": "What are the names of all people who do not have friends?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
            "question": "What are the ids of the students who are not involved in any activity",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
            "question": "What are the ids of courses without prerequisites?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
            "question": "Show ids for all employees who don't have a certificate.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
            "question": "Show the ids of the faculty who don't participate in any activity.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "movie_1",
            "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie",
            "question": "Return all reviewer names and movie names together in a single list.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases",
            "question": "What are the details of all sales and purchases?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
            "question": "Which organizations are not a parent organization of others? List the organization id.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers",
            "question": "Return the phone numbers for all customers and suppliers.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers",
            "question": "What are the phone numbers of all customers and suppliers.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
            "question": "Which students are unaffected by allergies?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff",
            "question": "What are the phone numbers of all customers and all staff members?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
            "question": "What are the student ids of students who don't have any allergies?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
            "question": "Show student ids who don't have any sports.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
            "question": "What are the ids of the students who either registered or attended a course?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
            "question": "What are the id of students who registered courses or attended courses?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff",
            "question": "Find the phone number of all the customers and staff.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
            "question": "What are the ids of the faculty members who do not advise any student.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
            "question": "What are the ids of all employees that don't have certificates?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
            "question": "Show ids for the faculty members who don't advise any student.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
            "question": "What are the names of the customers and staff members?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
            "question": "Show customer ids who don't have an account.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
            "question": "Find the names of all the customers and staff members.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
            "question": "Return the ids of documents that do not have expenses.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
            "question": "What are the ids of documents which don't have expense budgets?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines",
            "question": "Which cmi cross reference id is not related to any parking taxes?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
            "question": "What are the customer ids for customers who do not have an account?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
            "question": "Who is the person that has no friend?",
            "ted": 0.05555555555555555
        }
    ],
    "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3": [
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT( * ) >= 2",
            "question": "display the ID for those employees who did two or more jobs in the past.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count( * ) >= 3",
            "question": "Show the location codes with at least 3 documents.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count( * ) >= 2",
            "question": "Show all advisors who have at least two students.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT( * ) >= 2",
            "question": "Show the product type codes that have at least two products.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count( * ) >= 2",
            "question": "What are the advisors",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT( * ) >= 3",
            "question": "What parties have at least three representatives?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT( * ) >= 2",
            "question": "What are the employee ids for employees who have held two or more jobs?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT( * ) >= 2",
            "question": "What is the team with at least 2 technicians?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT( * ) >= 2",
            "question": "Show the team that have at least two technicians.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count( * ) >= 3",
            "question": "What are the roles with three or more employees? Give me the role codes.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College HAVING count( * ) >= 2",
            "question": "What are the names of all colleges that have two or more players?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT district FROM address GROUP BY district HAVING count( * ) >= 2",
            "question": "Give the districts which have two or more addresses.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count( * ) >= 2",
            "question": "What are the opening years in which at least two shops opened?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count( * ) >= 3",
            "question": "Show all role codes with at least 3 employees.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT( * ) >= 2",
            "question": "Show the residences that have at least two players.",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT open_date FROM church GROUP BY open_date HAVING count( * ) >= 2",
            "question": "Show the opening year in whcih at least two churches opened.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count( * ) >= 4",
            "question": "Find the wineries that have at least four wines.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College HAVING count( * ) >= 2",
            "question": "Show the name of colleges that have at least two players.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count( * ) >= 2",
            "question": "List all open years when at least two shops are opened.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count( * ) >= 5",
            "question": "What are the codes of card types that have 5 or more cards?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT( * ) >= 2",
            "question": "What are the employee ids for those who had two or more jobs.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT district FROM address GROUP BY district HAVING count( * ) >= 2",
            "question": "Which districts have at least two addresses?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count( * ) >= 5",
            "question": "Show card type codes with at least 5 cards.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT( * ) >= 2",
            "question": "Which party has two or more records?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT( * ) >= 2",
            "question": "Show the name of the party that has at least two records.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT( * ) >= 2",
            "question": "What are the birth places that are shared by at least two people?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count( * ) >= 2",
            "question": "What are the classes of races that have two or more corresponding races?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count( * ) >= 2",
            "question": "List the race class with at least two races.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count( * ) >= 4",
            "question": "Which wineries produce at least four wines?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count( * ) >= 2",
            "question": "What are project ids of projects that have 2 or more corresponding documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count( * ) >= 2",
            "question": "Show the ids for projects with at least 2 documents.",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT born_state FROM head GROUP BY born_state HAVING count( * ) >= 3",
            "question": "What are the names of the states where at least 3 heads were born?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count( * ) >= 2",
            "question": "Show the product type codes which have at least two products.",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT( * ) >= 2",
            "question": "Show the locations that have at least two performances.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count( * ) >= 2",
            "question": "What are the students ids of students who have more than one allergy?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT( * ) >= 2",
            "question": "What are the investors that have invested in at least two entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count( * ) >= 2",
            "question": "Show all student IDs who have at least two allergies.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT( * ) >= 2",
            "question": "What are the names of studios that have made two or more films?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT( * ) >= 2",
            "question": "List the names of studios that have at least two films.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count( * ) >= 3",
            "question": "What are the codes of the locations with at least three documents?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT State FROM representative GROUP BY State HAVING COUNT( * ) >= 2",
            "question": "What states have at least two representatives?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT( * ) >= 2",
            "question": "Show the headquarters that have at least two companies.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT( * ) >= 2",
            "question": "Return the investors who have invested in two or more entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT( * ) >= 2",
            "question": "display the ID for those employees who did two or more jobs in the past.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count( * ) = 1",
            "question": "Find the person who has exactly one friend.",
            "ted": 0.05
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT( * ) > 2",
            "question": "List the nations that have more than two ships.",
            "ted": 0.05
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count( * ) = 1",
            "question": "What are the names of everybody who has exactly one friend?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count( * ) < 3",
            "question": "What are the codes corresponding to document types for which there are less than 3 documents?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT state FROM park GROUP BY state HAVING count( * ) > 2",
            "question": "Which states have more than 2 parks?",
            "ted": 0.05
        },
        {
            "db_id": "train_station",
            "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count( * ) = 1",
            "question": "Show all locations with only 1 station.",
            "ted": 0.05
        },
        {
            "db_id": "flight_4",
            "query": "SELECT city FROM airports GROUP BY city HAVING count( * ) = 2",
            "question": "Find the cities which have exactly two airports.",
            "ted": 0.05
        },
        {
            "db_id": "flight_4",
            "query": "SELECT city FROM airports GROUP BY city HAVING count( * ) = 2",
            "question": "What are the cities with exactly two airports?",
            "ted": 0.05
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT country FROM addresses GROUP BY country HAVING count( address_id ) > 4",
            "question": "List the countries having more than 4 addresses listed.",
            "ted": 0.05
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT( commission_pct ) > 10",
            "question": "What are the department ids for which more than 10 employees had a commission?",
            "ted": 0.05
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT( commission_pct ) > 10",
            "question": "display those departments where more than ten employees work who got a commission percentage.",
            "ted": 0.05
        },
        {
            "db_id": "flight_company",
            "query": "SELECT country FROM airport GROUP BY country HAVING count( * ) > 2",
            "question": "which countries have more than 2 airports?",
            "ted": 0.05
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT( * ) > 2",
            "question": "Report all advisors that advise more than 2 students.",
            "ted": 0.05
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT country FROM addresses GROUP BY country HAVING count( address_id ) > 4",
            "question": "For which countries are there more than four distinct addresses listed?",
            "ted": 0.05
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT( * ) > 1",
            "question": "What are the categories of music festivals for which there have been more than 1 music festival?",
            "ted": 0.05
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count( customer_id ) < 5",
            "question": "Which contact channel codes were used less than 5 times?",
            "ted": 0.05
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT( * ) > 1",
            "question": "Please show the categories of the music festivals with count more than 1.",
            "ted": 0.05
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count( * ) > 5",
            "question": "Which membership card has more than 5 members?",
            "ted": 0.05
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg( Gross_in_dollar ) >= 4500000",
            "question": "Which studios have an average gross of over 4500000?",
            "ted": 0.05
        },
        {
            "db_id": "company_office",
            "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT( * ) > 2",
            "question": "Show the headquarters shared by more than two companies.",
            "ted": 0.05
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT( * ) > 2",
            "question": "List the nominees that have been nominated more than two musicals.",
            "ted": 0.05
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT( * ) > 2",
            "question": "Who are the nominees who have been nominated more than two times?",
            "ted": 0.05
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count( * ) > 1",
            "question": "On which days more than one revisions were made on catalogs.",
            "ted": 0.05
        },
        {
            "db_id": "company_office",
            "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT( * ) > 2",
            "question": "Which headquarter locations are used by more than 2 companies?",
            "ted": 0.05
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count( * ) > 1",
            "question": "Find the dates on which more than one revisions were made.",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count( * ) > 2",
            "question": "What document types have more than 2 corresponding documents?",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count( * ) > 2",
            "question": "Give the codes of document types that have more than 2 corresponding documents.",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count( * ) > 3",
            "question": "Return complaint status codes have more than 3 corresponding complaints?",
            "ted": 0.05
        },
        {
            "db_id": "ship_1",
            "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count( * ) > 2",
            "question": "Which classes have more than two captains?",
            "ted": 0.05
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count( * ) > 3",
            "question": "What are the attribute data types with more than 3 attribute definitions?",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count( * ) > 3",
            "question": "Which complaint status has more than 3 records on file?",
            "ted": 0.05
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg( Gross_in_dollar ) >= 4500000",
            "question": "List the studios which average gross is above 4500000.",
            "ted": 0.05
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT( * ) > 2",
            "question": "Which countries have more than two members?",
            "ted": 0.05
        },
        {
            "db_id": "e_government",
            "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count( * ) > 3",
            "question": "What are the payment method codes that have been used by more than 3 parties?",
            "ted": 0.05
        },
        {
            "db_id": "ship_1",
            "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count( * ) > 2",
            "question": "Give the classes that have more than two captains.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count( * ) > 2",
            "question": "Find all the policy types that are used by more than 2 customers.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count( * ) > 2",
            "question": "Which types of policy are chosen by more than 2 customers? Give me the policy type codes.",
            "ted": 0.05
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT( * ) > 2",
            "question": "What are the nations that have more than two ships?",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count( * ) > 4",
            "question": "Find the types of documents with more than 4 documents.",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count( * ) > 4",
            "question": "What are the codes of types of documents of which there are for or more?",
            "ted": 0.05
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count( customer_id ) < 5",
            "question": "List all the contact channel codes that were used less than 5 times.",
            "ted": 0.05
        },
        {
            "db_id": "school_bus",
            "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count( * ) = 2",
            "question": "Show the types of schools that have two schools.",
            "ted": 0.05
        },
        {
            "db_id": "station_weather",
            "query": "SELECT origin FROM train GROUP BY origin HAVING count( * ) > 1",
            "question": "Find the origins from which more than 1 train starts.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count( * ) > 4",
            "question": "Find the policy types more than 4 customers use. Show their type code.",
            "ted": 0.05
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT( * ) > 1",
            "question": "Show publishers that have more than one publication.",
            "ted": 0.05
        },
        {
            "db_id": "book_2",
            "query": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT( * ) > 1",
            "question": "List the writers who have written more than one book.",
            "ted": 0.05
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count( * ) > 2",
            "question": "Which months have more than 2 happy hours?",
            "ted": 0.05
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count( * ) > 4",
            "question": "Find the policy type used by more than 4 customers.",
            "ted": 0.05
        },
        {
            "db_id": "e_government",
            "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count( * ) > 3",
            "question": "Find the payment method code used by more than 3 parties.",
            "ted": 0.05
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT( * ) > 1",
            "question": "List the year in which there are more than one festivals.",
            "ted": 0.05
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT( * ) > 2",
            "question": "Which advisors have more than two students?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT state FROM park GROUP BY state HAVING count( * ) > 2",
            "question": "List the names of states that have more than 2 parks.",
            "ted": 0.05
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT( * ) < 3",
            "question": "Report all majors that have less than 3 students.",
            "ted": 0.05
        },
        {
            "db_id": "wrestler",
            "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT( * ) > 2",
            "question": "List the locations that are shared by more than two wrestlers.",
            "ted": 0.05
        },
        {
            "db_id": "wrestler",
            "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT( * ) > 2",
            "question": "Which locations are shared by more than two wrestlers?",
            "ted": 0.05
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT( * ) > 1",
            "question": "List the countries that have more than one mountain.",
            "ted": 0.05
        },
        {
            "db_id": "party_people",
            "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count( * ) > 2",
            "question": "Which event names were used more than twice for party events?",
            "ted": 0.05
        },
        {
            "db_id": "party_people",
            "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count( * ) > 2",
            "question": "find the event names that have more than 2 records.",
            "ted": 0.05
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count( * ) > 3",
            "question": "Find the accreditation level that more than 3 phones use.",
            "ted": 0.05
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count( * ) > 3",
            "question": "What is the maximum page size for everything that has more than 3 products listed?",
            "ted": 0.05
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count( * ) > 3",
            "question": "Find the list of page size which have more than 3 product listed",
            "ted": 0.05
        },
        {
            "db_id": "school_player",
            "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT( * ) > 1",
            "question": "What are the denomination more than one school have?",
            "ted": 0.05
        },
        {
            "db_id": "school_player",
            "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT( * ) > 1",
            "question": "Show the denomination shared by more than one school.",
            "ted": 0.05
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT( * ) > 2",
            "question": "List the status shared by more than two roller coaster.",
            "ted": 0.05
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION FROM player GROUP BY name HAVING avg( Points ) >= 20",
            "question": "List the position of players with average number of points scored by players of that position bigger than 20.",
            "ted": 0.05
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT POSITION FROM player GROUP BY name HAVING avg( Points ) >= 20",
            "question": "What are the positions of players whose average number of points scored by that position is larger than 20?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course GROUP BY title HAVING count( * ) > 1",
            "question": "What are the titles of courses that are offered in more than one department?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course GROUP BY title HAVING count( * ) > 1",
            "question": "Find the title of the course that is offered by more than one department.",
            "ted": 0.05
        },
        {
            "db_id": "swimming",
            "query": "SELECT country FROM stadium GROUP BY country HAVING count( * ) <= 3",
            "question": "Which country has at most 3 stadiums listed?",
            "ted": 0.05
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT( * ) <= 5",
            "question": "List the types of competition that have at most five competitions of that type.",
            "ted": 0.05
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT( * ) <= 5",
            "question": "What are the types of competition that have most 5 competitions for that type?",
            "ted": 0.05
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie GROUP BY director HAVING count( * ) = 1",
            "question": "What are the names of the directors who made exactly one movie?",
            "ted": 0.05
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count( * ) = 3",
            "question": "What is the id of the product that is booked for 3 times?",
            "ted": 0.05
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie GROUP BY director HAVING count( * ) = 1",
            "question": "What are the names of all directors who made one movie?",
            "ted": 0.05
        },
        {
            "db_id": "railway",
            "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT( * ) > 1",
            "question": "Show the locations that have more than one railways.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count( * ) < 3",
            "question": "Show the document type code with fewer than 3 documents.",
            "ted": 0.05
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT( * ) > 3",
            "question": "Which teams had more than 3 eliminations?",
            "ted": 0.05
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT( * ) > 3",
            "question": "Show teams that have suffered more than three eliminations.",
            "ted": 0.05
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count( * ) > 3",
            "question": "Find the list of attribute data types possessed by more than 3 attribute definitions.",
            "ted": 0.05
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count( * ) > 1",
            "question": "List the name of the company that produced more than one phone model.",
            "ted": 0.05
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT( * ) < 3",
            "question": "What are the majors only less than three students are studying?",
            "ted": 0.05
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT( * ) > 1",
            "question": "Which countries have more than one mountain?",
            "ted": 0.05
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count( * ) > 2",
            "question": "Which advisors are advising more than 2 students?",
            "ted": 0.05
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count( * ) > 2",
            "question": "Report the distinct advisors who have more than 2 students.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg( Product_Price ) < 1000000",
            "question": "What are the product names with average product price smaller than 1000000?",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg( Product_Price ) < 1000000",
            "question": "Find the product names whose average product price is below 1000000.",
            "ted": 0.1
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG( salary ) > 8000",
            "question": "What are the job ids corresponding to jobs with average salary above 8000?",
            "ted": 0.1
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG( salary ) > 8000",
            "question": "Find the job ID for those jobs which average salary is above 8000.",
            "ted": 0.1
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum( access_count ) > 10000",
            "question": "Return the codes of the document types that do not have a total access count of over 10000.",
            "ted": 0.1
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum( access_count ) > 10000",
            "question": "What document types do have more than 10000 total access number.",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg( mean_visibility_miles ) < 10",
            "question": "Find the zip code in which the average mean visibility is lower than 10.",
            "ted": 0.1
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum( hoursperweek ) > 10",
            "question": "What are the student IDs for everybody who worked for more than 10 hours per week on all sports?",
            "ted": 0.1
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum( hoursperweek ) > 10",
            "question": "Show all student IDs with more than total 10 hours per week on all sports played.",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg( mean_visibility_miles ) < 10",
            "question": "For each zip code, select all those that have an average mean visiblity below 10.",
            "ted": 0.1
        }
    ],
    "SELECT line_1 , line_2 FROM addresses": [
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "List all document type codes and document type names.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "Show the delegate and committee information of elections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "What are the delegate and committee information for each election record?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "Show all calendar dates and day Numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "What are all the calendar dates and day Numbers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "Show the ids and names of all documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "What are the reigns and days held of all wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "What are all the document type codes and document type names?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "What are the ids and details of all statements?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title , Issues FROM book",
            "question": "What are the title and issues of the books?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , Age FROM journalist",
            "question": "What are the nationalities and ages of journalists?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction , share_count FROM TRANSACTIONS",
            "question": "Show all date and share count of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "What are the names and locations of all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "List all location codes and location names.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "What are all the location codes and location names?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "Show the name and location for all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "What are the characters and duration of actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "What are the ids and names for each of the documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "List all statement ids and statement details.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "What are the name and population of each county?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "Show the county name and population of all counties.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT POSITION , Team FROM pilot",
            "question": "What are the positions and teams of pilots?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the type and nationality of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the types and nationalities of every ship?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "What are the authors of submissions and their colleges?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "What are the names and locations of all enzymes listed?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "List the names and the locations that the enzymes can make an effect.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "For each submission, show the author and their affiliated college.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
            "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "What are the themes and locations of parties?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "Give me the theme and location of each party.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , Industry FROM company",
            "question": "What are the headquarters and industries of all companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date , LOCATION FROM performance",
            "question": "What are the dates and locations of performances?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "What are the low and high estimates of film markets?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "Return the low and high estimates for all film markets.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "Show all account ids and account details.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "What are the ids and details of all accounts?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "Return the characters and durations for each actor.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Gender , Occupation FROM player",
            "question": "What are the gender and occupation of players?",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Memory_in_G , Carrier FROM phone",
            "question": "What are the memories and carriers of phones?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT lot_details , investor_id FROM LOTS",
            "question": "Return the lot details and investor ids.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "What are the names and distances for all airplanes?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT cell_mobile_number , email_address FROM STUDENTS",
            "question": "Return the cell phone number and email address for all students.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Leader_Name , College_Location FROM college",
            "question": "Show the leader names and locations of colleges.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name , Country FROM member",
            "question": "What are the names and countries of members?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT local_authority , services FROM station",
            "question": "list the local authorities and services provided by all stations.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Name , Arrival FROM train",
            "question": "What are the names and arrival times of trains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "Show the names and details of all the staff members.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "What is the name and detail of each staff member?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Wheels , LOCATION FROM railway",
            "question": "List the wheels and locations of the railways.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "What are the full names of all students",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "Show first name and last name for all students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "What are the allergies and their types?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "What are the first and last names for all customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "Show all allergies and their types.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "List the first name and last name of all customers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "What are the names and location of the wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "Give the names and locations of all wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "Show name and distance for all aircrafts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "What are the planned delivery date and actual delivery date for each booking?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types and countries of competitions?",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name , Product_Type_Code FROM Products",
            "question": "What are the names and type codes of products?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "What are the title and director of each film?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "Show the title and director for all films.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Date , Venue FROM debate",
            "question": "What are the date and venue of each debate?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "List ids and details for all projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "What are the ids and details for each project?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "List all budget type codes and descriptions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "What are the type codes and descriptions of each budget type?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name , Age FROM editor",
            "question": "What are the names and ages of editors?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "What are the names and buying prices of all the products?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "Return the names and typical buying prices for all products.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name , LOCATION FROM festival_detail",
            "question": "What are the names and locations of festivals?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "List the grapes and appelations of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "What are the grapes and appelations of each wine?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "List the names and scores of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "What are the names and scores of all wines?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "List the area and county of all appelations.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "What are the areas and counties for all appelations?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types of every competition and in which countries are they located?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_id , receipt_date FROM Documents",
            "question": "List all document ids and receipt dates of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "Show the reign and days held of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "Tell me the the claim date and settlement date for each settlement case.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Show the players and the years played.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Who are the different players and how many years has each played?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT service_id , event_details FROM EVENTS",
            "question": "List the service id and details for the events.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "What are the first names and last names of all the guests?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "What are the names and prices of all products in the store?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "Return the first names and last names of all guests",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "Return the dates of ceremony and the results of all music festivals",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "What are the start date and end date of each apartment booking?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "What are the log id and entry description of each problem?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "Show the start dates and end dates of all the apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT LENGTH , Height FROM roller_coaster",
            "question": "What are the lengths and heights of roller coasters?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "List the companies and the investors of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "What are the companies and investors that correspond to each entrepreneur?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What is the team and starting year for each technician?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "List all the log ids and their descriptions from the problem logs.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What are the team and starting year of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "Return the apartment number and the number of rooms for each apartment.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "What are the apartment number and the room count of each apartment?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name , Party FROM representative",
            "question": "What are the names and parties of representatives?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "What are the dates of ceremony and results for each music festival?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "Show the country name and capital of all countries.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "What are the claim dates and settlement dates of all the settlements?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Date , Vote_Percent FROM election",
            "question": "List the dates and vote percents of elections.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "Select the names and the prices of all the products in the store.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "What are the login names and family names of course author and tutors?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "List all the dates of enrollment and completion of students.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "What are all the dates of enrollment and completion in record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "What are the names and capitals of each country?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "List all the login names and family names of course author and tutors.",
            "ted": 0.0
        }
    ],
    "SELECT min( grade ) FROM Highschooler WHERE id NOT IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )": [],
    "SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count( * ) = 3": [
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count( * ) = 1",
            "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count( * ) = 1",
            "question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2": [
        {
            "db_id": "journal_committee",
            "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT( * ) >= 2",
            "question": "Show the names of editors that are on at least two journal committees.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT( * ) >= 2",
            "question": "What are the hometowns that are shared by at least two gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id GROUP BY T2.swimmer_id HAVING count( * ) >= 2",
            "question": "Find the name of the swimmer who has at least 2 records.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT( * ) >= 2",
            "question": "Give the hometowns from which two or more gymnasts are from.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id HAVING count( * ) >= 2",
            "question": "Show the station name with at least two trains.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT( * ) >= 2",
            "question": "Show the names of products that are in at least two events.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT( * ) >= 2",
            "question": "Show the names of counties that have at least two delegates.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT( * ) >= 2",
            "question": "Which counties have two or more delegates? Give me the county names.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count( * ) >= 2",
            "question": "Which faculty members advise two ore more students? Give me their faculty ids.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id HAVING COUNT( * ) >= 2",
            "question": "Show the ids of the investors who have at least two transactions.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT( * ) >= 5",
            "question": "Give the names of the courses with at least five enrollments.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count( * ) >= 2",
            "question": "Return the names of parties that have two or more events.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count( * ) >= 2",
            "question": "What are the names of parties with at least 2 events?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count( * ) >= 3",
            "question": "Which countries have at least 3 cities?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count( * ) >= 3",
            "question": "What are the countries that contain 3 or more cities?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
            "question": "List the names of aircrafts and that won matches at least twice.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
            "question": "What are the names of all aircrafts that have won a match at least twice?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT( * ) >= 5",
            "question": "What are the name of courses that have at least five enrollments?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id GROUP BY T1.church_id HAVING count( * ) >= 2",
            "question": "Show all church names that have hosted least two weddings.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count( * ) >= 2",
            "question": "Show the ids for all the faculty members who have at least 2 students.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.People_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
            "question": "Show the names of people who have been on the negative side of debates at least twice.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count( * ) >= 2",
            "question": "What are the names of regions with two or more storms?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT( * ) >= 3",
            "question": "Show names of musicals which have at least three actors.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count( * ) >= 2",
            "question": "Show the region name with at least two storms.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT( * ) >= 3",
            "question": "What are the names of musicals who have at 3 or more actors?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count( * ) >= 2",
            "question": "Show names for all aircraft with at least two flights.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count( * ) >= 2",
            "question": "What are the names for all aircrafts with at least 2 flights?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T1.rID HAVING COUNT( * ) >= 3",
            "question": "Find the names of all reviewers who have contributed three or more ratings.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T1.rID HAVING COUNT( * ) >= 3",
            "question": "What are the names of all reviewers that have rated 3 or more movies?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) = 2",
            "question": "What are the titles for courses with two prerequisites?",
            "ted": 0.03125
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
            "question": "What are the names of staff who have been assigned multiple jobs?",
            "ted": 0.03125
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
            "question": "List the name of staff who has been assigned multiple jobs.",
            "ted": 0.03125
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count( * ) > 1",
            "question": "What are the names of students who have more than one advisor?",
            "ted": 0.03125
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) = 1",
            "question": "Find the names of the courses that have just one student enrollment.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
            "question": "What are the first names of all professors who teach more than one class?",
            "ted": 0.03125
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) = 2",
            "question": "Find the title of courses that have two prerequisites?",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num GROUP BY T2.stu_num HAVING count( * ) = 1",
            "question": "Find the first names of students who took exactly one class.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num GROUP BY T2.stu_num HAVING count( * ) = 1",
            "question": "What are the first names of student who only took one course?",
            "ted": 0.03125
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) = 1",
            "question": "What are the names of the courses that have exactly 1 student enrollment?",
            "ted": 0.03125
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count( * ) > 1",
            "question": "Find the name of the students who have more than one advisor?",
            "ted": 0.03125
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
            "question": "What are the names of instructors who advise more than one student?",
            "ted": 0.03125
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
            "question": "Find the name of instructors who are advising more than one student.",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum( hours_played ) >= 1000",
            "question": "What are the names of all the games that have been played for at least 1000 hours?",
            "ted": 0.03125
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum( hours_played ) >= 1000",
            "question": "Show all game names played by at least 1000 hours.",
            "ted": 0.03125
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
            "question": "Show the locations of schools that have more than 1 player.",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count( * ) <= 3",
            "question": "Find the country of all appelations who have at most three wines.",
            "ted": 0.03125
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
            "question": "Find the first names of professors who are teaching more than one class.",
            "ted": 0.03125
        },
        {
            "db_id": "school_player",
            "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
            "question": "Which schools have more than 1 player? Give me the school locations.",
            "ted": 0.03125
        },
        {
            "db_id": "ship_1",
            "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
            "question": "Find the name of the ships that have more than one captain.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
            "question": "Find the name of customers who have more than one loan.",
            "ted": 0.03125
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
            "question": "What are the names of customers who have taken out more than one loan?",
            "ted": 0.03125
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) <= 2",
            "question": "Find the name of the customers who have at most two orders.",
            "ted": 0.03125
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) <= 2",
            "question": "What are the names of the customers who have made two or less orders?",
            "ted": 0.03125
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
            "question": "What are the names of the albums that have more than 10 tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
            "question": "List the name of playlist which has number of tracks greater than 100.",
            "ted": 0.03125
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
            "question": "What are the names of all playlists that have more than 100 tracks?",
            "ted": 0.03125
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
            "question": "List title of albums have the number of tracks greater than 10.",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
            "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
            "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
            "ted": 0.03125
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
            "question": "Find the names of rooms that have been reserved for more than 60 times.",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) <= 20",
            "question": "What are the last names of employees who serve at most 20 customers?",
            "ted": 0.03125
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
            "question": "Find the names of users who have more than one tweet.",
            "ted": 0.03125
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) <= 20",
            "question": "Please show the employee last names that serves no more than 20 customers.",
            "ted": 0.03125
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count( * ) <= 3",
            "question": "What are the countries for appelations with at most 3 wines?",
            "ted": 0.03125
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
            "question": "Find the name of services that have been used for more than 2 times in first notification of loss.",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
            "question": "What are the carriers of devices that are in stock in more than a single shop?",
            "ted": 0.03125
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
            "question": "Find the name of physicians who are in charge of more than one patient.",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
            "question": "What are the names of shops that have more than a single kind of device in stock?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
            "question": "Show names of shops that have more than one kind of device in stock.",
            "ted": 0.03125
        },
        {
            "db_id": "ship_1",
            "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
            "question": "What are the names of ships that have more than one captain?",
            "ted": 0.03125
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
            "question": "Show the names of countries that have more than one roller coaster.",
            "ted": 0.03125
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
            "question": "Which physicians are in charge of more than one patient? Give me their names.",
            "ted": 0.03125
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
            "question": "Show the official names of the cities that have hosted more than one competition.",
            "ted": 0.03125
        },
        {
            "db_id": "farm",
            "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
            "question": "What are the official names of cities that have hosted more than one competition?",
            "ted": 0.03125
        },
        {
            "db_id": "device",
            "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
            "question": "Show the carriers of devices in stock at more than one shop.",
            "ted": 0.03125
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING avg( T2.mean_temperature_f ) > 60",
            "question": "For each zip code, find the ids of all trips that have a higher average mean temperature above 60?",
            "ted": 0.0625
        },
        {
            "db_id": "school_finance",
            "query": "SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T1.school_id HAVING sum( T1.amount ) <= 10",
            "question": "List all the names of schools with an endowment amount smaller than or equal to 10.",
            "ted": 0.0625
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING avg( T2.mean_temperature_f ) > 60",
            "question": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.",
            "ted": 0.0625
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author HAVING COUNT( DISTINCT T1.workshop_id ) > 1",
            "question": "Show the authors who have submissions to more than one workshop.",
            "ted": 0.08823529411764706
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author HAVING COUNT( DISTINCT T1.workshop_id ) > 1",
            "question": "Which authors have submitted to more than one workshop?",
            "ted": 0.08823529411764706
        }
    ],
    "SELECT zip_postcode FROM Addresses WHERE city = 'Lake Careyberg'": [
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "Find the name of dorms only for female (F gender).",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the location of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "What is the description of the club \"Pen and Paper Gaming\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the description of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "What are the names of all movies directed by Steven Spielberg?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "Find the titles of all movies directed by steven spielberg.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
            "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "Find the description of the club called \"Tennis Club\".",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the description of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Which employees have the role with code \"HR\"? Find their names.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Show the names of all the employees with role \"HR\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "Show the id of the employee named Ebba.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of all the files in mp3 format?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "Return the date of birth for all the guests with gender code \"Male\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "What is the id for the employee called Ebba?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of songs whose format is mp3.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the code of the school where the accounting department belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the school code of the accounting department?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "Find the department name that is in Building \"Mergenthaler\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "What is the description of the role named \"Proof Reader\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "Show the description for role name \"Proof Reader\".",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "What are the names of all songs in English?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How many milliseconds long is Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "Where us the club named \"Tennis Club\" located?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the location of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "Show ids for all the male faculty.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "What are the faculty ids of all the male faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "What are the birth dates of employees living in Edmonton?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Find the name of all the clubs at \"AKW\".",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "Find the branch names of banks in the New York state.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "What are the names of banks in the state of New York?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "What are the names of the airports in the city of Goroka?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "Find the name of the airport in the city of Goroka.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "What are the document ids for the budget type code 'SF'?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "Show student ids for all male students.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Where is the club \"Hopkins Student Enterprises\" located?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "What are the student ids for all male students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Which city does the student whose last name is \"Kim\" live in?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How long does track Fast As a Shark has?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Where is the club \"Pen and Paper Gaming\" located?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "Where is the headquarter of the company founded by James?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Return the founder of Sony.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Give the city that the student whose family name is Kim lives in.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Who is the founder of Sony?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the id of the reviewer named Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the reviewer id of Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the unit price of the tune \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How much is the track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Show the short names of the buildings managed by \"Emma\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT gender FROM TEACHERS WHERE last_name = 'Medhurst'",
            "question": "What is the gender of the teacher with last name \"Medhurst\"?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who directed Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who is the director of movie Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "What is the headquarter of the company whose founder is James?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Which clubs are located at \"AKW\"? Return the club names.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "what is the address of history department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the composer who created the track \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "Return the elimination movies of wrestlers on Team Orton.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "What are the names of all wines produced in 2008?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "Find all the customer information in state NY.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "What is all the customer information for customers in NY state?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the unit of measure for 'Herb' products.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What campuses are located in Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What are the names of all campuses located at Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are located in the county of Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "Report the name of all campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "Find the attribute data type for the attribute named \"Green\".",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "What is the attribute data type of the attribute with name \"Green\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "Which category does the product named \"flax\" belong to?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "What is the code of the category that the product with the name 'flax' belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT email FROM user_profiles WHERE name = 'Mary'",
            "question": "Find the emails of the user named \"Mary\".",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'",
            "question": "What is the partition id of the user named \"Iron Man\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "Find the phone number of performer \"Ashley\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "What is the phone number of the performer Ashley?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "Find the marketing region description of China?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "What is the description of the marketing region China?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "Display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "What are all the employees without a department number?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "Return all the information for all employees without any department number.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "Return the description of the product called \"Chocolate\".",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "Find the names of all wines produced in 2008.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "What is the description of the claim status \"Open\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "What are the names of all instructors in the Comp. Sci. department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "Who is the composer of track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "Find the names of all English songs.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "Show the location code of the country \"Canada\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "What is the location code for the country \"Canada\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "When was the document named \"Marry CV\" stored? Give me the date.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "What is the date when the document \"Marry CV\" was stored?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "What are the names of products with category \"Spices\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "Return the names of products in the category 'Spices'.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "What is the name of the department in the Building Mergenthaler?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "What are the famous titles of the artist \"Triumfall\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "Return the famous titles of the artist called \"Triumfall\".",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "Where is the history department?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "Find the code of the document type \"Paper\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "What is the description of the product named \"Chocolate\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "List the codes of all courses that take place in room KLR209.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "What are the codes of all the courses that are located in room KLR209?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "Return the categories of music festivals that have the result \"Awarded\".",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are in Los Angeles county?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "List the campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "What is the document type code for document type \"Paper\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "What is the description of the product category with the code 'Spices'?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "Find the product category description of the product category with code \"Spices\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "Find the description of the claim status \"Open\".",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "Return the names of musicals who have the nominee Bob Fosse.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "Find the names of all instructors in computer science department",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "What are the category of music festivals with result \"Awarded\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "Return the description of the budget type that has the code ORG.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "What is the description for the budget type with code ORG?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "Show all video games with type Collectible card game.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "What are the names of all video games that are collectible cards?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "What are the majors of male (sex is M) students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "List the major of each male student.",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Address FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the address of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Rating FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the rating of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = 'Sandwich'",
            "question": "What is the description of the restaurant type Sandwich?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What is the type of video game Call of Destiny.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What type of game is Call of Destiny?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = 'Paper'",
            "question": "What is the description of document type 'Paper'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT role_description FROM ROLES WHERE role_code = 'ED'",
            "question": "What is the description of role code ED?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "Which courses are taught on days MTW?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "What are the course names for courses taught on MTW?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Find the id of the order whose shipment tracking number is \"3452\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success'",
            "question": "Find the ids of orders whose status is 'Success'.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "Show ids for all students who live in CHI.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "What are the ids of all students who live in CHI?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "Return the description of the document type name 'Film'.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "What are the login names of the students with family name \"Ward\"?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "Find id of candidates whose assessment code is \"Pass\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "What is the document type description for document type named Film?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "What are the ids of the candidates that have an outcome code of Pass?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = 'working'",
            "question": "What is the description of document status code 'working'?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "What is the decor of room Recluse and defiance?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "What are the descriptions of the courses with name \"database\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "Return the description for the courses named \"database\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "What are the names of the tourist attractions that can be accessed by bus?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Who are the players from UCLA?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Show the players from college UCLA.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "Return the type code of the document named \"David CV\".",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "What is the type of the document named \"David CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Return the detail of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "Show the zip code of the county with name \"Howard\".",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "What are the names of the all-female dorms?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the detail of the location UK Gallery?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Find the address of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Find the dates of the tests taken with result \"Pass\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the address of the location \"UK Gallery\"?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT i_id FROM item WHERE title = 'orange'",
            "question": "Find the id of the item whose title is \"orange\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "What are the price ranges of five star hotels?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "Show the price ranges of hotels with 5 star ratings.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "Return the decor of the room named \"Recluse and defiance\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "What is the zip code the county named \"Howard\" is located in?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'UPS'",
            "question": "What is the shipping agent code of shipping agent UPS?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What are the numbers of all flights coming from Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = 'PUR'",
            "question": "Show the description of transaction type with code \"PUR\".",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is the type of allergy Cat?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "What are the other account details for the account with the name 338?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the job of a researcher?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "Return the titles of any movies with an R rating.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "What are all the movies rated as R? List the titles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "Show all flight number from Los Angeles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "Show origins of all flights with destination Honolulu.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is allergy type of a cat allergy?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the researcher role.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = 'SALE'",
            "question": "Show all dates of transactions whose type code is \"SALE\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "Show other account details for account with name 338.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "What are the origins of all flights that are headed to Honolulu?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "List ids for all student who are on scholarship.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "What are the ids for all sporty students who are on scholarship?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Show the advisors of the students whose city of residence has city code \"BAL\".",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Which authors have first name \"Amal\"? List their last names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Find the last name of the author with first name \"Amal\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "Which authors have last name \"Ueno\"? List their first names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "What is the first name of the author with last name \"Ueno\"?",
            "ted": 0.0
        },
        {
            "db_id": "company_1",
            "query": "SELECT Dependent_name FROM dependent WHERE relationship = 'Spouse'",
            "question": "find all dependent names who have a spouse relation with some employee.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "Return the login names of the students whose family name is \"Ward\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "What are the names of customers who use payment method \"Cash\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code = 'PUR'",
            "question": "Show all transaction ids with transaction code 'PUR'.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Find the names of channels that are not owned by CCTV.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Which channels are not owned by CCTV? Give me the channel names.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "display those employees who joined after 7th September, 1987.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "Which employees were hired after September 7th, 1987?",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "Return the hosts of competitions for which the theme is not Aliens?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Find the ids of orders which are shipped after 2000-01-01.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "Return the device carriers that do not have Android as their software platform.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "What is all the information about employees hired before June 21, 2002?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "What is the name of customers who do not use Cash as payment method.",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "List the name of technicians whose team is not \"NYY\".",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "What is the name of the technician whose team is not 'NYY'?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "What are the names of the ships that are not from the United States?",
            "ted": 0.0625
        },
        {
            "db_id": "architecture",
            "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
            "question": "What are the names of the mills which are not located in 'Donceel'?",
            "ted": 0.0625
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork WHERE TYPE != 'Program Talent Show'",
            "question": "List the name of artworks whose type is not \"Program Talent Show\".",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "Find the name of customers who did not pay with Cash.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "find the names of programs whose origin is not in Beijing.",
            "ted": 0.0625
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM Representative WHERE Party != 'Republican'",
            "question": "What are the names of representatives whose party is not \"Republican\"?",
            "ted": 0.0625
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM country WHERE Languages != 'German'",
            "question": "List the names of countries whose language is not \"German\".",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "What are the nicknames of schools whose division is not 1?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "What are the ids of the problems which are reported before 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Show names for all regions except for Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Return the names of all regions other than Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_company",
            "query": "SELECT name FROM airport WHERE country != 'Iceland'",
            "question": "What are the names of the airports which are not in the country 'Iceland'?",
            "ted": 0.0625
        },
        {
            "db_id": "department_management",
            "query": "SELECT name FROM head WHERE born_state != 'California'",
            "question": "What are the names of the heads who are born outside the California state?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "Find the ids of the problems reported after 1978-06-26.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "What are the ids of the problems which are reported after 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "List the names of climbers whose country is not Switzerland.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes who does not produce 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "What are the names of climbers who are not from the country of Switzerland?",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "Show the nicknames of schools that are not in division 1.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "What are the census rankings of cities that do not have the status \"Village\"?",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "Show the census ranking of cities whose status are not \"Village\".",
            "ted": 0.0625
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
            "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "List the name of ships whose nationality is not \"United States\".",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "What are the names of companies whose headquarters are not \"USA\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes whose product is not 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Which ministers are not a part of the Progress Party?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Show all ministers who do not belong to Progress Party.",
            "ted": 0.0625
        }
    ],
    "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'": [
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE name LIKE '%ALA%'",
            "question": "Which enzyme names have the substring \"ALA\"?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name LIKE '%Mike%'",
            "question": "What is the id of the reviewer whose name has substring \u201cMike\u201d?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
            "question": "What is the name of the department with an instructure who has a name like 'Soisalon'?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE '2%'",
            "question": "Find the names of all the products whose stock number starts with \"2\".",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE '2%'",
            "question": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT name FROM camera_lens WHERE name LIKE '%Digital%'",
            "question": "List the camera lens names containing substring \"Digital\".",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE '%6862 Kaitlyn Knolls%'",
            "question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE '%6862 Kaitlyn Knolls%'",
            "question": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE '%Party%'",
            "question": "What are the names of organizations that contain the word \"Party\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE '%film%'",
            "question": "Which location names contain the word \"film\"?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
            "question": "What are the names of tracks that contain the the word you in them?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE '%Party%'",
            "question": "Find the name of organizations whose names contain \"Party\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
            "question": "Find the names of all the tracks that contain the word \"you\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE '%film%'",
            "question": "Find all the locations whose names contain the word \"film\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers WHERE customer_details LIKE '%Diana%'",
            "question": "Find the names of customers whose name contains \"Diana\".",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
            "question": "Find all the songs whose name contains the word \"the\".",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
            "question": "What are the names of the songs whose title has the word \"the\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_id FROM customers WHERE customer_name LIKE '%Diana%'",
            "question": "Find the IDs of customers whose name contains \"Diana\".",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
            "question": "Find the founder of the company whose name begins with the letter 'S'.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
            "question": "Who is the founders of companies whose first letter is S?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
            "question": "What are the countries of all airlines whose names start with Orbit?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
            "question": "Find the country of the airlines whose name starts with 'Orbit'.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
            "question": "What are the names of the physicians who have 'senior' in their titles.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_name LIKE '%CV%'",
            "question": "What are the names of documents that contain the substring \"CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT name FROM airport WHERE name LIKE '%international%'",
            "question": "Which of the airport names contains the word 'international'?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_name LIKE '%CV%'",
            "question": "List all the document names which contains \"CV\".",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT name FROM stadium WHERE name LIKE '%Bank%'",
            "question": "Which stadium name contains the substring \"Bank\"?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Name FROM ARTIST WHERE Name LIKE '%a%'",
            "question": "Find the names of all artists that have \"a\" in their names.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Name FROM ARTIST WHERE Name LIKE '%a%'",
            "question": "What are the names of artist who have the letter 'a' in their names?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_id FROM customers WHERE customer_name LIKE '%Diana%'",
            "question": "What are the IDs of customers who have \"Diana\" in part of their names?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE name LIKE '%ALA%'",
            "question": "What are the names of enzymes that include the string 'ALA'?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers WHERE customer_details LIKE '%Diana%'",
            "question": "Which customers have the substring \"Diana\" in their names? Return the customer details.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
            "question": "Find the name of physicians whose position title contains the word 'senior'.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT title FROM papers WHERE title LIKE '%ML%'",
            "question": "Find the titles of the papers that contain the word \"ML\".",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name LIKE '%Mike%'",
            "question": "What is the id of the reviewer whose name includes the word \"Mike\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT title FROM papers WHERE title LIKE '%Database%'",
            "question": "Which paper's title contains the word \"Database\"?",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT name FROM mill WHERE name LIKE '%Moulin%'",
            "question": "Which of the mill names contains the french word 'Moulin'?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
            "question": "Find the names of all instructors whose name includes the substring \u201cdar\u201d.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT title FROM papers WHERE title LIKE '%ML%'",
            "question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE '%court%'",
            "question": "Find all the building full names containing the word \"court\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE '%court%'",
            "question": "What are the building full names that contain the word \"court\"?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'",
            "question": "What are the resident details containing the substring 'Miss'?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
            "question": "Return the titles of films that include 'Deleted Scenes' in their special feature section.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE customer_name LIKE '%Alex%'",
            "question": "Which customer's name contains \"Alex\"? Find the full name.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT last_name FROM staff WHERE email_address LIKE '%wrau%'",
            "question": "Find the last name of the staff whose email address contains \"wrau\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'",
            "question": "Find the first names of teachers whose email address contains the word \"man\".",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT product FROM product WHERE product LIKE '%Scanner%'",
            "question": "Find all the product whose name contains the word \"Scanner\".",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'",
            "question": "What are the daily hire costs for the products with substring 'Book' in its name?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT product FROM product WHERE product LIKE '%Scanner%'",
            "question": "What are all of the products whose name includes the substring \"Scanner\"?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE customer_name LIKE '%Alex%'",
            "question": "Find the name of all customers whose name contains \"Alex\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT last_name FROM staff WHERE email_address LIKE '%wrau%'",
            "question": "What are the last names of staff with email addressed containing the substring \"wrau\"?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
            "question": "Which movies have 'Deleted Scenes' as a substring in the special feature?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'",
            "question": "Return the text of tweets about the topic 'intern'.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE '%English%'",
            "question": "What are the official native languages that contain the string \"English\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT title FROM papers WHERE title LIKE '%Database%'",
            "question": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
            "question": "What is the type of the document whose description starts with the word 'Initial'?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
            "question": "Which document type is described with the prefix 'Initial'?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT card_number FROM member WHERE Hometown LIKE '%Kentucky%'",
            "question": "list the card number of all members whose hometown address includes word \"Kentucky\".",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT card_number FROM member WHERE Hometown LIKE '%Kentucky%'",
            "question": "What are the card numbers of members from Kentucky?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
            "question": "What are the names of all instructors with names that include \"dar\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
            "question": "Find the department name of the instructor whose name contains 'Soisalon'.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE '%English%'",
            "question": "Show all official native languages that contain the word \"English\".",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT name FROM web_client_accelerator WHERE name LIKE '%Opera%'",
            "question": "Which accelerator name contains substring \"Opera\"?",
            "ted": 0.0
        }
    ],
    "SELECT name FROM Highschooler WHERE grade = 11": [
        {
            "db_id": "allergy_1",
            "query": "SELECT Advisor FROM Student WHERE StuID = 1004",
            "question": "Who advises student 1004?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_type_code FROM Documents WHERE document_id = 2",
            "question": "List the document type code for the document with the id 2.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT receipt_date FROM Documents WHERE document_id = 3",
            "question": "What is the receipt date of the document with id 3?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
            "question": "Find all the order items whose product id is 11. What are the order item ids?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
            "question": "Find the ids of all the order items whose product id is 11.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Credits = 1",
            "question": "List all names of courses with 1 credit?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7",
            "question": "What is draft detail of the document with id 7?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races WHERE YEAR = 2017",
            "question": "Find the names of all races held in 2017.",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races WHERE YEAR = 2017",
            "question": "What are the names of all the races that occurred in the year 2017?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT city FROM addresses WHERE zip_postcode = 255",
            "question": "Find the city with post code 255.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT city FROM addresses WHERE zip_postcode = 255",
            "question": "Which city is post code 255 located in?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1",
            "question": "What are the details of the car with id 1?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301",
            "question": "What are the ids of the students who registered for course 301?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR = 2007",
            "question": "What are the names of festivals held in year 2007?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT firstname FROM list WHERE classroom = 108",
            "question": "What are the first names of students in room 108?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT firstname FROM list WHERE classroom = 108",
            "question": "Find the first names of students studying in room 108.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT lastname FROM list WHERE classroom = 111",
            "question": "What are the last names of students in room 111?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT lastname FROM list WHERE classroom = 111",
            "question": "Find the last names of students studying in room 111.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DPhone FROM DEPARTMENT WHERE Room = 268",
            "question": "Give the phones for departments in room 268.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DPhone FROM DEPARTMENT WHERE Room = 268",
            "question": "What are the phones of departments in Room 268?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Advisor FROM Student WHERE StuID = 1004",
            "question": "Who is the advisor of student with ID 1004?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE YEAR = 1958",
            "question": "Find all the campuses opened in 1958.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE YEAR = 1958",
            "question": "What are the campuses that opened in 1958?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301",
            "question": "What are the id of students who registered course 301?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT * FROM Albums WHERE YEAR = 2012",
            "question": "Find all the albums in 2012.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7",
            "question": "What is the mail date of the document with id 7?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT * FROM Albums WHERE YEAR = 2010",
            "question": "What are the albums produced in year 2010?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate FROM election WHERE District = 1",
            "question": "Who is the delegate of district 1 in the elections?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate FROM election WHERE District = 1",
            "question": "Show the delegate from district 1 in election.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE Advisor = 1121",
            "question": "Show ids for all students who have advisor 1121.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE Advisor = 1121",
            "question": "What are the ids of all students who have advisor number 1121?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT Fname FROM Student WHERE Major = 600",
            "question": "Show first name for all students with major 600.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT LName FROM STUDENT WHERE Major = 50",
            "question": "Find the last names of students with major 50.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT LName FROM STUDENT WHERE Major = 50",
            "question": "What are the last names of students studying major 50?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT Fname FROM Student WHERE Major = 600",
            "question": "What are the first names for all students who are from the major numbered 600?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT * FROM Albums WHERE YEAR = 2012",
            "question": "return all columns of the albums created in the year of 2012.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR = 1995",
            "question": "Return the types of film market estimations in 1995.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Credits = 1",
            "question": "What are the names of courses with 1 credit?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT lastname FROM teachers WHERE classroom = 109",
            "question": "Find the last names of teachers teaching in classroom 109.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT * FROM Albums WHERE YEAR = 2010",
            "question": "What information is there on albums from 2010?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR = 1995",
            "question": "What are the types of film market estimations in year 1995?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1",
            "question": "Show the detail of vehicle with id 1.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT lastname FROM teachers WHERE classroom = 109",
            "question": "Which teachers teach in classroom 109? Give me their last names.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT firstname FROM teachers WHERE classroom = 110",
            "question": "Find the first names of all the teachers that teach in classroom 110.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT firstname FROM teachers WHERE classroom = 110",
            "question": "Which teachers teach in classroom 110? Give me their first names.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Date FROM debate WHERE Num_of_Audience > 150",
            "question": "List the dates of debates with number of audience bigger than 150",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE distance > 2000",
            "question": "Show flight number for all flights with more than 2000 distance.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Price FROM WINE WHERE YEAR < 2010",
            "question": "What are the prices of wines produced before the year of 2010?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Price FROM WINE WHERE YEAR < 2010",
            "question": "Return the prices of wines produced before 2010.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE score > 90",
            "question": "List the names of all distinct wines that have scores higher than 90.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE score > 90",
            "question": "What are the names of wines with scores higher than 90?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Hispanic FROM city WHERE Black > 10",
            "question": "Return the hispanic percentage for cities in which the black percentage is greater than 10.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE age > 20",
            "question": "What are the student ids for students over 20 years old?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE age > 20",
            "question": "Show all student ids who are older than 20.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date FROM weather WHERE max_temperature_f > 85",
            "question": "Give me the dates when the max temperature was higher than 85.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT name FROM station WHERE lat < 37.5",
            "question": "What are the names of all stations with a latitude smaller than 37.5?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8",
            "question": "Name all the products with next entry ID greater than 8.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE age < 30",
            "question": "What is the name of the person whose age is below 30?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE age < 30",
            "question": "Who is the person whose age is below 30?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid FROM Employee WHERE salary > 100000",
            "question": "What is the id of every employee who has at least a salary of  100000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid FROM Aircraft WHERE distance > 1000",
            "question": "Show ids for all aircrafts with more than 1000 distance.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid FROM Aircraft WHERE distance > 1000",
            "question": "What are the ids of all aircrafts that can cover a distance of more than 1000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Rating WHERE stars != 4",
            "question": "Find the ids of reviewers who didn't only give 4 star.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid FROM Employee WHERE salary > 100000",
            "question": "Show ids for all employees with at least 100000 salary.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT name FROM station WHERE lat < 37.5",
            "question": "What are the names of stations that have latitude lower than 37.5?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Rating WHERE stars != 4",
            "question": "What are the ids of all reviewers who have not given 4 stars at least once?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Hispanic FROM city WHERE Black > 10",
            "question": "What are the percentage of hispanics in cities with the black percentage higher than 10?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date FROM weather WHERE max_temperature_f > 85",
            "question": "What are the dates with a maximum temperature higher than 85?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8",
            "question": "What are the catalog entry names of the products with next entry ID above 8?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE distance > 2000",
            "question": "What are the numbers of all flights that can cover a distance of more than 2000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE student_capacity > 300",
            "question": "What are the names of all the dorms that can accomdate more than 300 students?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city WHERE regional_population > 10000000",
            "question": "Please give me a list of cities whose regional population is over 10000000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title FROM jobs WHERE min_salary > 9000",
            "question": "Which job titles correspond to jobs with salaries over 9000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Days_held < 100",
            "question": "Return the names of wrestlers with fewer than 100 days held.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title FROM jobs WHERE min_salary > 9000",
            "question": "display the job title of jobs which minimum salary is greater than 9000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country FROM mountain WHERE Height > 5000",
            "question": "What are the countries of mountains with height bigger than 5000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Days_held < 100",
            "question": "What are the names of wrestlers days held less than 100?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name FROM products WHERE price <= 200",
            "question": "What are the names of products with price at most 200?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE student_capacity > 300",
            "question": "Find the name of dorms that can accommodate more than 300 students.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city WHERE regional_population > 10000000",
            "question": "Which cities have regional population above 10000000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Fname FROM STUDENT WHERE Age > 22",
            "question": "Find the first names of students with age above 22.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM actor WHERE Age != 20",
            "question": "List the name of actors whose age is not 20.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name FROM products WHERE price <= 200",
            "question": "Select the name of the products with a price less than or equal to $200.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM actor WHERE Age != 20",
            "question": "What are the names of actors who are not 20 years old?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot WHERE Age >= 25",
            "question": "What are the name of pilots aged 25 or older?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT fname FROM student WHERE age > 20",
            "question": "Find the first name of students who is older than 20.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT fname FROM student WHERE age > 20",
            "question": "What are the first names of all students who are older than 20?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume WHERE Weeks_on_Top > 1",
            "question": "Give the songs included in volumes that have more than 1 week on top.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "climbing",
            "query": "SELECT Country FROM mountain WHERE Height > 5000",
            "question": "Return the countries of the mountains that have a height larger than 5000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume WHERE Weeks_on_Top > 1",
            "question": "What are the songs in volumes with more than 1 week on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE YEAR < 1800",
            "question": "Find the name of the campuses opened before 1800.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE YEAR < 1800",
            "question": "What campuses opened before 1800?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "game_injury",
            "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage > 100",
            "question": "What is the average attendance of stadiums with capacity percentage higher than 100%?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE Age > 25",
            "question": "List the names of editors who are older than 25.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Name FROM pilot WHERE Age >= 25",
            "question": "what is the name of every pilot who is at least 25 years old?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Fname FROM STUDENT WHERE Age > 22",
            "question": "What are the first names of all the students aged above 22?",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT count( DISTINCT department_id ) FROM Degree_Programs": [
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "How many different teams have had eliminated wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "How many distinct governors are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "How many different types of rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the unique types of player positions in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergy entries are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many different allergy types exist?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many distinct allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges were represented at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "Count the number of distinct governors.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "How many distinct currency codes are there for all drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges do attend the tryout test?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "How many different types of transactions are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "From the trip record, find the number of unique bikes.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "How many different bike ids are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "What is the number of distinct cities the stations are located at?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "How many different cities have these stations?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "Count the number of different affected regions.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "How many regions are affected?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "Find the number of distinct currency codes used in drama workshop groups.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "Show the number of transaction types.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "Find the number of distinct room types available.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of artists who have had volumes.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many different types of sports do we offer?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many students play sports?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "How many distinct countries are the climbers from?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "Count the number of different countries that climbers are from.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many different students are involved in sports?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "How many different levels do members have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "What is the count of distinct employees with certificates?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "How many distinct companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists have volumes?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many students play video games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "How many distinct payment methods are used by parties?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( DISTINCT nationality ) FROM swimmer",
            "question": "How many different countries are all the swimmers from?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many different students play games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "Count the number of different payment method codes used by parties.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the different types of player positions?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( DISTINCT Party ) FROM representative",
            "question": "How many distinct parties are there for representatives?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "how many different positions are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different position for players are listed?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( DISTINCT Birth_Place ) FROM people",
            "question": "How many distinct birth places are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "How many employees have certificate.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "What is the number of distinct teams that suffer elimination?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "Show the number of card types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "How many distinct president votes are recorded?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "Find the distinct number of president votes.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "Count the number of different hometowns of these people.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "How many distinct hometowns did these people have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT Status_of_Thing_Code ) FROM Timed_Status_of_Things",
            "question": "How many different status codes of things are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "How many students have advisors?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "Count the number of students who have advisors.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "How many departments offer courses?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have an account?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "what is the number of different channel owners?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "Count the number of departments which offer courses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "How many different instructors have taught some course?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "Count the number of distinct instructors who have taught a course.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different positions of players are there?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "What are the different membership levels?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "Count the number of distinct player positions.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct students are enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct students enrolled in courses.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "Count the number of distinct channel owners.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "How many different card types are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who hold an account.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of distinct artists who have volumes.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT COUNT( DISTINCT transaction_type_code ) FROM TRANSACTIONS",
            "question": "How many distinct transaction types are used in the transactions?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "Give me the number of faculty members who participate in an activity",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "How many faculty members participate in an activity?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many different advisors are listed?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many advisors are there?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT u_id ) FROM review",
            "question": "How many different users wrote some reviews?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "How many unique labels are there for albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "What are the unique labels for the albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists do the volumes associate to?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT i_id ) FROM review",
            "question": "How many different items were reviewed by some users?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "Find the number of distinct bed types available in this inn.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "How many different types of beds are there?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( DISTINCT client ) FROM web_client_accelerator",
            "question": "How many different kinds of clients are supported by the web clients accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Find the number of different product types.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Count the number of distinct product types.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT brand ) FROM camera_lens",
            "question": "How many different kinds of lens brands are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( DISTINCT SOURCE ) FROM injury_accident",
            "question": "How many different kinds of information sources are there for injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( DISTINCT UID ) FROM tweets",
            "question": "Find the number of users who posted some tweets.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( DISTINCT source_system_code ) FROM CMI_cross_references",
            "question": "How many different source system code for the cmi cross references are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many sports do we have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( DISTINCT participant_id ) FROM participants_in_Events",
            "question": "What are all the distinct participant ids who attended any events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "Count the number of distinct claim outcome codes.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "Count the number of distinct names associated with the photos.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many type of jobs do they have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "How many different statuses do cities have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "Count the number of different statuses.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "Count the number of different account types.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "Count the number of different last names actors have.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities do people originate from?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many distinct FDA approval statuses are there for the medicines?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "How many different last names do the actors and actresses have?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many different FDA approval statuses exist for medicines?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "How many schools are in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT incident_type_code ) FROM Behavior_Incident",
            "question": "How many distinct incident type codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "How many distinct claim outcome codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "Count the number of schools that have had basketball matches.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "Count the number of different complaint type codes.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "How many distinct complaint type codes are there in the database?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT student_id ) FROM Students_in_Detention",
            "question": "How many distinct students have been in detention?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "How many distinct types of accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "In how many different states are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "Find the number of different states which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "In how many different cities are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "Count the number of different film ratings.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "Count the number of different scientists assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "Find the number of distinct projects.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "How many kinds of different ratings are listed?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "How many different projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( DISTINCT LOCATION ) FROM perpetrator",
            "question": "How many distinct locations of perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "How many different software platforms are there for devices?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "Count the number of different software platforms.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "Find the number of different cities that employees live in.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "Count the number of different directors.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "How many movie directors are there?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "Count the number of different languages in these films.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "How many languages are in these films?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "How many parties do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "Count the number of different parties.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "Find the number of different cities which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many different jobs are listed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "How many distinct names are associated with all the photos?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( DISTINCT temporary_acting ) FROM management",
            "question": "How many acting statuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "How many distinct cities does the employees live in?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "How many different scientists are assigned to any project?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Count the number of different affiliation types.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "Find the number of distinct gender for dorms.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "What is the number of distinct publication dates?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Find how many different affiliation types there are.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "How many dorms have amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "Find the number of dorms that have some amenity.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have opened an account?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many different roles are there on the project staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many kinds of roles are there for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( DISTINCT payment_method ) FROM customers",
            "question": "How many different payment methods are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "How many different genders are there in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "Count the number of different ranks of captain.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "How many schools are there in the department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many different classes are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many unique classes are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "How many courses are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "What are the number of different course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many departments does the college has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many different departments are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "Count the number of different companies.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "How many different captain ranks are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "how many schools exist in total?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "Count the number of different teams involved in match season.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who have an account.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "Count the number of distinct company industries.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities are they from?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "How many different industries are the companies in?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "How many distinct publication dates are there in our record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "How many distinct teams are involved in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT count( DISTINCT services ) FROM station",
            "question": "How many different services are provided by all stations?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "How many video game types exist?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products_for_hire",
            "question": "How many different product types are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "What is the count of different game types?",
            "ted": 0.0
        }
    ],
    "SELECT section_name , section_description FROM Sections": [
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "List all document type codes and document type names.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "Show the delegate and committee information of elections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "What are the delegate and committee information for each election record?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "Show all calendar dates and day Numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "What are all the calendar dates and day Numbers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "Show the ids and names of all documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "What are the reigns and days held of all wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "What are all the document type codes and document type names?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "What are the ids and details of all statements?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title , Issues FROM book",
            "question": "What are the title and issues of the books?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , Age FROM journalist",
            "question": "What are the nationalities and ages of journalists?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction , share_count FROM TRANSACTIONS",
            "question": "Show all date and share count of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "What are the names and locations of all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "List all location codes and location names.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "What are all the location codes and location names?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "Show the name and location for all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "What are the characters and duration of actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "What are the ids and names for each of the documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "List all statement ids and statement details.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "What are the name and population of each county?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "Show the county name and population of all counties.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT POSITION , Team FROM pilot",
            "question": "What are the positions and teams of pilots?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the type and nationality of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the types and nationalities of every ship?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "What are the authors of submissions and their colleges?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "What are the names and locations of all enzymes listed?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "List the names and the locations that the enzymes can make an effect.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "For each submission, show the author and their affiliated college.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
            "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "What are the themes and locations of parties?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "Give me the theme and location of each party.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , Industry FROM company",
            "question": "What are the headquarters and industries of all companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date , LOCATION FROM performance",
            "question": "What are the dates and locations of performances?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "What are the low and high estimates of film markets?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "Return the low and high estimates for all film markets.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "Show all account ids and account details.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "What are the ids and details of all accounts?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "Return the characters and durations for each actor.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Gender , Occupation FROM player",
            "question": "What are the gender and occupation of players?",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Memory_in_G , Carrier FROM phone",
            "question": "What are the memories and carriers of phones?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT lot_details , investor_id FROM LOTS",
            "question": "Return the lot details and investor ids.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "What are the names and distances for all airplanes?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT cell_mobile_number , email_address FROM STUDENTS",
            "question": "Return the cell phone number and email address for all students.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Leader_Name , College_Location FROM college",
            "question": "Show the leader names and locations of colleges.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name , Country FROM member",
            "question": "What are the names and countries of members?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT local_authority , services FROM station",
            "question": "list the local authorities and services provided by all stations.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Name , Arrival FROM train",
            "question": "What are the names and arrival times of trains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "Show the names and details of all the staff members.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "What is the name and detail of each staff member?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Wheels , LOCATION FROM railway",
            "question": "List the wheels and locations of the railways.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "What are the full names of all students",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "Show first name and last name for all students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "What are the allergies and their types?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "What are the first and last names for all customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "Show all allergies and their types.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "List the first name and last name of all customers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "What are the names and location of the wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "Give the names and locations of all wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "Show name and distance for all aircrafts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "What are the planned delivery date and actual delivery date for each booking?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types and countries of competitions?",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name , Product_Type_Code FROM Products",
            "question": "What are the names and type codes of products?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "What are the title and director of each film?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "Show the title and director for all films.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Date , Venue FROM debate",
            "question": "What are the date and venue of each debate?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "List ids and details for all projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "What are the ids and details for each project?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "List all budget type codes and descriptions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "What are the type codes and descriptions of each budget type?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name , Age FROM editor",
            "question": "What are the names and ages of editors?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "What are the names and buying prices of all the products?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "Return the names and typical buying prices for all products.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name , LOCATION FROM festival_detail",
            "question": "What are the names and locations of festivals?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "List the grapes and appelations of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "What are the grapes and appelations of each wine?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "List the names and scores of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "What are the names and scores of all wines?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "List the area and county of all appelations.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "What are the areas and counties for all appelations?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types of every competition and in which countries are they located?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_id , receipt_date FROM Documents",
            "question": "List all document ids and receipt dates of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "Show the reign and days held of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "Tell me the the claim date and settlement date for each settlement case.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Show the players and the years played.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Who are the different players and how many years has each played?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT service_id , event_details FROM EVENTS",
            "question": "List the service id and details for the events.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "What are the first names and last names of all the guests?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "What are the names and prices of all products in the store?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "Return the first names and last names of all guests",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "Return the dates of ceremony and the results of all music festivals",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "What are the start date and end date of each apartment booking?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "What are the log id and entry description of each problem?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "Show the start dates and end dates of all the apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT LENGTH , Height FROM roller_coaster",
            "question": "What are the lengths and heights of roller coasters?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "List the companies and the investors of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "What are the companies and investors that correspond to each entrepreneur?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What is the team and starting year for each technician?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "List all the log ids and their descriptions from the problem logs.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What are the team and starting year of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "Return the apartment number and the number of rooms for each apartment.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "What are the apartment number and the room count of each apartment?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name , Party FROM representative",
            "question": "What are the names and parties of representatives?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "What are the dates of ceremony and results for each music festival?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "Show the country name and capital of all countries.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "What are the claim dates and settlement dates of all the settlements?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Date , Vote_Percent FROM election",
            "question": "List the dates and vote percents of elections.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "Select the names and the prices of all the products in the store.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "What are the login names and family names of course author and tutors?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "List all the dates of enrollment and completion of students.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "What are all the dates of enrollment and completion in record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "What are the names and capitals of each country?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "List all the login names and family names of course author and tutors.",
            "ted": 0.0
        }
    ],
    "SELECT section_description FROM Sections WHERE section_name = 'a'": [
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "Find the name of dorms only for female (F gender).",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the location of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "What is the description of the club \"Pen and Paper Gaming\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the description of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "What are the names of all movies directed by Steven Spielberg?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "Find the titles of all movies directed by steven spielberg.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
            "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "Find the description of the club called \"Tennis Club\".",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the description of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Which employees have the role with code \"HR\"? Find their names.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Show the names of all the employees with role \"HR\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "Show the id of the employee named Ebba.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of all the files in mp3 format?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "Return the date of birth for all the guests with gender code \"Male\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "What is the id for the employee called Ebba?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of songs whose format is mp3.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the code of the school where the accounting department belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the school code of the accounting department?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "Find the department name that is in Building \"Mergenthaler\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "What is the description of the role named \"Proof Reader\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "Show the description for role name \"Proof Reader\".",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "What are the names of all songs in English?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How many milliseconds long is Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "Where us the club named \"Tennis Club\" located?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the location of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "Show ids for all the male faculty.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "What are the faculty ids of all the male faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "What are the birth dates of employees living in Edmonton?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Find the name of all the clubs at \"AKW\".",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "Find the branch names of banks in the New York state.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "What are the names of banks in the state of New York?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "What are the names of the airports in the city of Goroka?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "Find the name of the airport in the city of Goroka.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "What are the document ids for the budget type code 'SF'?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "Show student ids for all male students.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Where is the club \"Hopkins Student Enterprises\" located?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "What are the student ids for all male students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Which city does the student whose last name is \"Kim\" live in?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How long does track Fast As a Shark has?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Where is the club \"Pen and Paper Gaming\" located?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "Where is the headquarter of the company founded by James?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Return the founder of Sony.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Give the city that the student whose family name is Kim lives in.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Who is the founder of Sony?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the id of the reviewer named Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the reviewer id of Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the unit price of the tune \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How much is the track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Show the short names of the buildings managed by \"Emma\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT gender FROM TEACHERS WHERE last_name = 'Medhurst'",
            "question": "What is the gender of the teacher with last name \"Medhurst\"?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who directed Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who is the director of movie Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "What is the headquarter of the company whose founder is James?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Which clubs are located at \"AKW\"? Return the club names.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "what is the address of history department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the composer who created the track \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "Return the elimination movies of wrestlers on Team Orton.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "What are the names of all wines produced in 2008?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "Find all the customer information in state NY.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "What is all the customer information for customers in NY state?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the unit of measure for 'Herb' products.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What campuses are located in Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What are the names of all campuses located at Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are located in the county of Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "Report the name of all campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "Find the attribute data type for the attribute named \"Green\".",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "What is the attribute data type of the attribute with name \"Green\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "Which category does the product named \"flax\" belong to?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "What is the code of the category that the product with the name 'flax' belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT email FROM user_profiles WHERE name = 'Mary'",
            "question": "Find the emails of the user named \"Mary\".",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'",
            "question": "What is the partition id of the user named \"Iron Man\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "Find the phone number of performer \"Ashley\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "What is the phone number of the performer Ashley?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "Find the marketing region description of China?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "What is the description of the marketing region China?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "Display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "What are all the employees without a department number?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "Return all the information for all employees without any department number.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "Return the description of the product called \"Chocolate\".",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "Find the names of all wines produced in 2008.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "What is the description of the claim status \"Open\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "What are the names of all instructors in the Comp. Sci. department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "Who is the composer of track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "Find the names of all English songs.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "Show the location code of the country \"Canada\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "What is the location code for the country \"Canada\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "When was the document named \"Marry CV\" stored? Give me the date.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "What is the date when the document \"Marry CV\" was stored?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "What are the names of products with category \"Spices\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "Return the names of products in the category 'Spices'.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "What is the name of the department in the Building Mergenthaler?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "What are the famous titles of the artist \"Triumfall\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "Return the famous titles of the artist called \"Triumfall\".",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "Where is the history department?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "Find the code of the document type \"Paper\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "What is the description of the product named \"Chocolate\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "List the codes of all courses that take place in room KLR209.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "What are the codes of all the courses that are located in room KLR209?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "Return the categories of music festivals that have the result \"Awarded\".",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are in Los Angeles county?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "List the campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "What is the document type code for document type \"Paper\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "What is the description of the product category with the code 'Spices'?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "Find the product category description of the product category with code \"Spices\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "Find the description of the claim status \"Open\".",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "Return the names of musicals who have the nominee Bob Fosse.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "Find the names of all instructors in computer science department",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "What are the category of music festivals with result \"Awarded\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "Return the description of the budget type that has the code ORG.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "What is the description for the budget type with code ORG?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "Show all video games with type Collectible card game.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "What are the names of all video games that are collectible cards?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "What are the majors of male (sex is M) students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "List the major of each male student.",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Address FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the address of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Rating FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the rating of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = 'Sandwich'",
            "question": "What is the description of the restaurant type Sandwich?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What is the type of video game Call of Destiny.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What type of game is Call of Destiny?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = 'Paper'",
            "question": "What is the description of document type 'Paper'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT role_description FROM ROLES WHERE role_code = 'ED'",
            "question": "What is the description of role code ED?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "Which courses are taught on days MTW?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "What are the course names for courses taught on MTW?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Find the id of the order whose shipment tracking number is \"3452\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success'",
            "question": "Find the ids of orders whose status is 'Success'.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "Show ids for all students who live in CHI.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "What are the ids of all students who live in CHI?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "Return the description of the document type name 'Film'.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "What are the login names of the students with family name \"Ward\"?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "Find id of candidates whose assessment code is \"Pass\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "What is the document type description for document type named Film?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "What are the ids of the candidates that have an outcome code of Pass?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = 'working'",
            "question": "What is the description of document status code 'working'?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "What is the decor of room Recluse and defiance?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "What are the descriptions of the courses with name \"database\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "Return the description for the courses named \"database\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "What are the names of the tourist attractions that can be accessed by bus?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Who are the players from UCLA?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Show the players from college UCLA.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "Return the type code of the document named \"David CV\".",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "What is the type of the document named \"David CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Return the detail of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "Show the zip code of the county with name \"Howard\".",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "What are the names of the all-female dorms?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the detail of the location UK Gallery?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Find the address of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Find the dates of the tests taken with result \"Pass\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the address of the location \"UK Gallery\"?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT i_id FROM item WHERE title = 'orange'",
            "question": "Find the id of the item whose title is \"orange\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "What are the price ranges of five star hotels?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "Show the price ranges of hotels with 5 star ratings.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "Return the decor of the room named \"Recluse and defiance\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "What is the zip code the county named \"Howard\" is located in?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'UPS'",
            "question": "What is the shipping agent code of shipping agent UPS?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What are the numbers of all flights coming from Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = 'PUR'",
            "question": "Show the description of transaction type with code \"PUR\".",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is the type of allergy Cat?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "What are the other account details for the account with the name 338?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the job of a researcher?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "Return the titles of any movies with an R rating.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "What are all the movies rated as R? List the titles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "Show all flight number from Los Angeles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "Show origins of all flights with destination Honolulu.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is allergy type of a cat allergy?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the researcher role.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = 'SALE'",
            "question": "Show all dates of transactions whose type code is \"SALE\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "Show other account details for account with name 338.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "What are the origins of all flights that are headed to Honolulu?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "List ids for all student who are on scholarship.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "What are the ids for all sporty students who are on scholarship?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Show the advisors of the students whose city of residence has city code \"BAL\".",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Which authors have first name \"Amal\"? List their last names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Find the last name of the author with first name \"Amal\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "Which authors have last name \"Ueno\"? List their first names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "What is the first name of the author with last name \"Ueno\"?",
            "ted": 0.0
        },
        {
            "db_id": "company_1",
            "query": "SELECT Dependent_name FROM dependent WHERE relationship = 'Spouse'",
            "question": "find all dependent names who have a spouse relation with some employee.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "Return the login names of the students whose family name is \"Ward\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "What are the names of customers who use payment method \"Cash\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code = 'PUR'",
            "question": "Show all transaction ids with transaction code 'PUR'.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Find the names of channels that are not owned by CCTV.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Which channels are not owned by CCTV? Give me the channel names.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "display those employees who joined after 7th September, 1987.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "Which employees were hired after September 7th, 1987?",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "Return the hosts of competitions for which the theme is not Aliens?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Find the ids of orders which are shipped after 2000-01-01.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "Return the device carriers that do not have Android as their software platform.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "What is all the information about employees hired before June 21, 2002?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "What is the name of customers who do not use Cash as payment method.",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "List the name of technicians whose team is not \"NYY\".",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "What is the name of the technician whose team is not 'NYY'?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "What are the names of the ships that are not from the United States?",
            "ted": 0.0625
        },
        {
            "db_id": "architecture",
            "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
            "question": "What are the names of the mills which are not located in 'Donceel'?",
            "ted": 0.0625
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork WHERE TYPE != 'Program Talent Show'",
            "question": "List the name of artworks whose type is not \"Program Talent Show\".",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "Find the name of customers who did not pay with Cash.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "find the names of programs whose origin is not in Beijing.",
            "ted": 0.0625
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM Representative WHERE Party != 'Republican'",
            "question": "What are the names of representatives whose party is not \"Republican\"?",
            "ted": 0.0625
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM country WHERE Languages != 'German'",
            "question": "List the names of countries whose language is not \"German\".",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "What are the nicknames of schools whose division is not 1?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "What are the ids of the problems which are reported before 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Show names for all regions except for Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Return the names of all regions other than Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_company",
            "query": "SELECT name FROM airport WHERE country != 'Iceland'",
            "question": "What are the names of the airports which are not in the country 'Iceland'?",
            "ted": 0.0625
        },
        {
            "db_id": "department_management",
            "query": "SELECT name FROM head WHERE born_state != 'California'",
            "question": "What are the names of the heads who are born outside the California state?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "Find the ids of the problems reported after 1978-06-26.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "What are the ids of the problems which are reported after 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "List the names of climbers whose country is not Switzerland.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes who does not produce 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "What are the names of climbers who are not from the country of Switzerland?",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "Show the nicknames of schools that are not in division 1.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "What are the census rankings of cities that do not have the status \"Village\"?",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "Show the census ranking of cities whose status are not \"Village\".",
            "ted": 0.0625
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
            "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "List the name of ships whose nationality is not \"United States\".",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "What are the names of companies whose headquarters are not \"USA\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes whose product is not 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Which ministers are not a part of the Progress Party?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Show all ministers who do not belong to Progress Party.",
            "ted": 0.0625
        }
    ],
    "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Brittany'": [
        {
            "db_id": "college_3",
            "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = 'Computer Science'",
            "question": "Find the last names of faculties who are members of computer science department.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'",
            "question": "Find the name of the instructors who taught C Programming course before.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = 'Robin CV'",
            "question": "What is the location name of the document \"Robin CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = 'Robin CV'",
            "question": "Show the location name for document \"Robin CV\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Binders Unbound'",
            "question": "What are the last names of the author of the paper titled \"Binders Unbound\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Binders Unbound'",
            "question": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'",
            "question": "Show all storm names affecting region \"Denmark\".",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.product_id JOIN store AS T3 ON T2.store_id = T3.store_id WHERE T3.store_name = 'Miramichi'",
            "question": "What products are sold at the store named Miramichi?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'",
            "question": "What are the names of instructors who have taught C Programming courses?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'",
            "question": "What are the names of the storms that affected Denmark?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "What are the names of procedures physician John Wen was trained in?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall'",
            "question": "What are the names of the amenities that Smith Hall has?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.product_id JOIN store AS T3 ON T2.store_id = T3.store_id WHERE T3.store_name = 'Miramichi'",
            "question": "What products are available at store named \"Miramichi\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
            "question": "What are the names of all tracks that are on playlists titled Movies?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson'",
            "question": "What is the code of the course which the student whose last name is Smithson took?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall'",
            "question": "Find the name of amenities Smith Hall dorm have.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
            "question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "Find the names of procedures which physician John Wen was trained in.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
            "question": "Find all the songs produced by artists with first name \"Marianne\".",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
            "question": "What are the names of all employees who have a certificate to fly Boeing 737-800?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
            "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'",
            "question": "What are the result description of the project whose detail is 'sint'?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
            "question": "List the name of all tracks in the playlists of Movies.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'",
            "question": "In which state is the college that Charles attends?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = 'Vincent'",
            "question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = 'Vincent'",
            "question": "Which tourist attractions does the visitor with detail 'Vincent' visit?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
            "question": "Show names for all employees who have certificate of Boeing 737-800.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'",
            "question": "What is the description for the results whose project detail is 'sint'?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "Return the last name for the members of the club named \"Hopkins Student Enterprises\".",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = 'Fail'",
            "question": "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = 'Fail'",
            "question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = 'Computer Science'",
            "question": "What are the last names of faculty who are part of the computer science department?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics'",
            "question": "Find the name of students who took some course offered by Statistics department.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics'",
            "question": "What are the names of students who have taken Statistics courses?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
            "question": "Show names for all aircrafts of which John Williams has certificates.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'",
            "question": "Find the state of the college which player Charles is attending.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.headquartered_city FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.store_name = 'Blackville'",
            "question": "What city is the headquarter of the store Blackville?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson'",
            "question": "What are the course codes for every class that the student with the last name Smithson took?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF'",
            "question": "Return the name of the category to which the film 'HUNGER ROOF' belongs.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF'",
            "question": "What is the genre name of the film HUNGER ROOF?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T3.address_content FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T1.customer_name = 'Maudie Kertzmann'",
            "question": "Return the address content for the customer whose name is \"Maudie Kertzmann\".",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'",
            "question": "What are the first names of all students in Smith Hall?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'",
            "question": "Find the first name of students who are living in the Smith Hall.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "Return the characteristic names of the 'sesame' product.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "What are all the characteristic names of product \"sesame\"?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "What are the names of all the aircrafts associated with London Gatwick airport?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'",
            "question": "What are the first names of all students in course ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = 'A Kiss Before You Go: Live in Hamburg'",
            "question": "What are the songs in album \"A Kiss Before You Go: Live in Hamburg\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'",
            "question": "What is the first name of each student enrolled in class ACCT-211?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = 'A Kiss Before You Go: Live in Hamburg'",
            "question": "What are the song titles on the album \"A Kiss Before You Go: Live in Hamburg\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.label = 'Universal Music Group'",
            "question": "What are all the songs in albums under label \"Universal Music Group\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.label = 'Universal Music Group'",
            "question": "What are the names of all the songs whose album is under the label of \"Universal Music Group\"?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T2.Type = 'Program Talent Show'",
            "question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.state_province_county = 'Colorado'",
            "question": "Find the name of customers who are living in Colorado?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.state_province_county = 'Colorado'",
            "question": "What are the names of customers who live in Colorado state?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.Lastname = 'Heilo'",
            "question": "Find all the songs performed by artist with last name \"Heilo\"",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.store_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_name = 'Khanewal District'",
            "question": "Find the names of all stores in Khanewal District.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Find the last names of the members of the club \"Bootup Baltimore\".",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.Lastname = 'Heilo'",
            "question": "What are the names of the songs by the artist whose last name is \"Heilo\"?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil'",
            "question": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = 'Violin'",
            "question": "Show the dates of performances with attending members whose roles are \"Violin\".",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T1.store_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_name = 'Khanewal District'",
            "question": "What are the names of all the stores located in Khanewal District?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil'",
            "question": "Show the manager name for gas stations belonging to the ExxonMobil company.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.headquartered_city FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.store_name = 'Blackville'",
            "question": "Which city is the headquarter of the store named \"Blackville\" in?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T3.address_content FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T1.customer_name = 'Maudie Kertzmann'",
            "question": "What is the address content of the customer named \"Maudie Kertzmann\"?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id WHERE T3.cmi_details != 'Schmidt , Kertzmann and Lubowitz'",
            "question": "What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?",
            "ted": 0.025
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT sum( grant_amount ) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'",
            "question": "What is the total grant amount of the organisations described as research?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'laurel'",
            "question": "How many characteristics does the product named \"laurel\" have?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'laurel'",
            "question": "Count the number of characteristics of the product named 'laurel'.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'flax'",
            "question": "Find the number of characteristics that the product \"flax\" has.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "Find the average age of members of the club \"Hopkins Student Enterprises\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T3.order_quantity ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'HOU'",
            "question": "Which clubs have one or more members from the city with code \"HOU\"? Give me the names of the clubs.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "What is the average age of the members of the club \"Bootup Baltimore\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_3",
            "query": "SELECT avg( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = 'Smith'",
            "question": "What is the average gradepoint for students with the last name Smith?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_3",
            "query": "SELECT avg( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = 'Smith'",
            "question": "Find the average grade point of student whose last name is Smith.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
            "question": "Find the average age of the members in the club \"Bootup Baltimore\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises'",
            "question": "On average, how old are the members in the club \"Hopkins Student Enterprises\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "How many members does the club \"Tennis Club\" has?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Pen and Paper Gaming'",
            "question": "How many people have membership in the club \"Pen and Paper Gaming\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Pen and Paper Gaming'",
            "question": "Find the number of members of club \"Pen and Paper Gaming\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "Retrieve the average age of members of the club \"Tennis Club\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT sum( grant_amount ) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'",
            "question": "What is the total amount of grant money for research?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT DISTINCT T1.product_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'warm'",
            "question": "List the all the distinct names of the products with the characteristic name 'warm'.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT DISTINCT T1.product_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'warm'",
            "question": "What are the different product names for products that have the 'warm' characteristic:?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "document_management",
            "query": "SELECT avg( T1.access_count ) FROM documents AS T1 JOIN document_functional_areas AS T2 ON T1.document_code = T2.document_code JOIN functional_areas AS T3 ON T2.functional_area_code = T3.functional_area_code WHERE T3.functional_area_description = 'Acknowledgement'",
            "question": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'hot'",
            "question": "Count the number of products with the 'hot' charactersitic.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'HOU'",
            "question": "Find the names of the clubs that have at least a member from the city with city code \"HOU\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate = T2.id JOIN songs AS T3 ON T3.songid = T1.songid WHERE T3.Title = 'Flash'",
            "question": "Hom many musicians performed in the song \"Flash\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'",
            "question": "What is the average height of the players from the college named 'Yale University'?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T3.characteristic_name = 'hot'",
            "question": "How many products have the characteristic named \"hot\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'flax'",
            "question": "Count the number of characteristics of the 'flax' product.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T3.order_quantity ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "What is the total quantity of products purchased by \"Rodrick Heaney\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "document_management",
            "query": "SELECT avg( T1.access_count ) FROM documents AS T1 JOIN document_functional_areas AS T2 ON T1.document_code = T2.document_code JOIN functional_areas AS T3 ON T2.functional_area_code = T3.functional_area_code WHERE T3.functional_area_description = 'Acknowledgement'",
            "question": "Find the average access counts of documents with functional area \"Acknowledgement\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT avg( T3.age ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "Compute the average age of the members in the club \"Tennis Club\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'",
            "question": "Find the average height of the players who belong to the college called 'Yale University'.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate = T2.id JOIN songs AS T3 ON T3.songid = T1.songid WHERE T3.Title = 'Flash'",
            "question": "How many musicians play in the song \"Flash\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Tennis Club'",
            "question": "Count the members of the club \"Tennis Club\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT avg( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'",
            "question": "What is the average gpa of the students enrolled in the course with code ACCT-211?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'",
            "question": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Google'",
            "question": "Find all the papers published by the institution \"Google\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT avg( T3.cost ) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "Compute the mean price of procedures physician John Wen was trained in.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT avg( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'",
            "question": "What is the average GPA of students taking ACCT-211?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT avg( T3.cost ) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = 'John Wen'",
            "question": "What is the average cost of procedures that physician John Wen was trained in?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Indiana University'",
            "question": "What are the papers published under the institution \"Indiana University\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'BAL'",
            "question": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'",
            "question": "Find the names of all directors whose movies are rated by Sarah Martinez.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind'",
            "question": "What are the names of all the different reviewers who rates Gone with the Wind?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind'",
            "question": "Find the names of all reviewers who rated Gone with the Wind.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M'",
            "question": "What are the total number of students who are living in a male dorm?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT DISTINCT T3.policy_type_code FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id JOIN available_policies AS T3 ON T2.policy_id = T3.policy_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "What are all the policy types of the customer named \"Dayana Robel\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M'",
            "question": "Find the total number of students living in the male dorm (with gender M).",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.city = 'Lake Geovannyton'",
            "question": "How many customers are living in city \"Lake Geovannyton\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Indiana University'",
            "question": "List the titles of the papers whose authors are from the institution \"Indiana University\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.city_code = 'BAL'",
            "question": "Which clubs have one or more members from the city with code \"BAL\"? Give me the names of the clubs.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.city = 'Lake Geovannyton'",
            "question": "Find the number of customers who live in the city called Lake Geovannyton.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = 'Thesisin'",
            "question": "List the names of all the physicians who prescribe Thesisin as medication.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "department_management",
            "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama'",
            "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT DISTINCT T3.policy_type_code FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id JOIN available_policies AS T3 ON T2.policy_id = T3.policy_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "Tell me the types of the policy used by the customer named \"Dayana Robel\".",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( T1.SSN ) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = 'John Dorian'",
            "question": "How many patients' prescriptions are made by physician John Dorian?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "aircraft",
            "query": "SELECT avg( T3.Total_Passengers ) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = 'Robinson R-22'",
            "question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "aircraft",
            "query": "SELECT avg( T3.Total_Passengers ) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = 'Robinson R-22'",
            "question": "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = 'Thesisin'",
            "question": "What is the names of the physicians who prescribe medication Thesisin?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( T1.SSN ) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = 'John Dorian'",
            "question": "Find the number of patients' prescriptions physician John Dorian made.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T1.title FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Google'",
            "question": "Which papers were written by authors from the institution \"Google\"?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Functional%'",
            "question": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.",
            "ted": 0.05
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Monadic%'",
            "question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\".",
            "ted": 0.05
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Monadic%'",
            "question": "Which authors have written a paper with title containing the word \"Monadic\"? Return their last names.",
            "ted": 0.05
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
            "question": "What are the details for the project whose research has been published?",
            "ted": 0.05
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title LIKE '%Functional%'",
            "question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".",
            "ted": 0.05
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'",
            "question": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith'?",
            "ted": 0.05
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T2.Rank = 1",
            "question": "Show the names of players coached by the rank 1 coach.",
            "ted": 0.05
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
            "question": "List the project details of the projects with the research outcome described with the substring 'Published'.",
            "ted": 0.05
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'",
            "question": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.",
            "ted": 0.05
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100",
            "question": "Show all locations where a gas station for company with market value greater than 100 is located.",
            "ted": 0.075
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70",
            "question": "What are the names of the technicians that are assigned to repair machines with more point values than 70?",
            "ted": 0.075
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50",
            "question": "What are the lot details of lots associated with transactions with share count smaller than 50?",
            "ted": 0.075
        },
        {
            "db_id": "debate",
            "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200",
            "question": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200.",
            "ted": 0.075
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70",
            "question": "Show names of technicians who are assigned to repair machines with value point more than 70.",
            "ted": 0.075
        },
        {
            "db_id": "company_employee",
            "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200",
            "question": "Show the names of employees that work for companies with sales bigger than 200.",
            "ted": 0.075
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100",
            "question": "What are the locations that have gas stations owned by a company with a market value greater than 100?",
            "ted": 0.075
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",
            "question": "What are the order dates of orders with price higher than 1000?",
            "ted": 0.075
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100",
            "question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.",
            "ted": 0.075
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",
            "question": "Find the order dates of the orders with price above 1000.",
            "ted": 0.075
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID WHERE T2.Num_of_shops > 50",
            "question": "Show the names of phones that are on market with number of shops greater than 50.",
            "ted": 0.075
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance",
            "question": "Find the name of accounts whose checking balance is higher than corresponding saving balance.",
            "ted": 0.075
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34",
            "question": "Show the fleet series of the aircrafts flied by pilots younger than 34",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50",
            "question": "Show the locations of parties with hosts older than 50.",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50",
            "question": "Which parties have hosts of age above 50? Give me the party locations.",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20",
            "question": "Show the host names for parties with number of hosts greater than 20.",
            "ted": 0.075
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100",
            "question": "What are the names of banks that have loaned money to customers with credit scores below 100?",
            "ted": 0.075
        },
        {
            "db_id": "party_host",
            "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20",
            "question": "Which parties have more than 20 hosts? Give me the host names for these parties.",
            "ted": 0.075
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance",
            "question": "What are the names of customers with a higher checking balance than savings balance?",
            "ted": 0.075
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000",
            "question": "Show the names of editors that are on the committee of journals with sales bigger than 3000.",
            "ted": 0.075
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000",
            "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
            "ted": 0.075
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10",
            "question": "What are the region names affected by the storm with a number of deaths of least 10?",
            "ted": 0.075
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10",
            "question": "Return the names of the regions affected by storms that had a death count of at least 10.",
            "ted": 0.075
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000",
            "question": "Which physicians are trained in procedures that are more expensive than 5000?",
            "ted": 0.075
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id WHERE T3.state_province_county = 'California'",
            "question": "Find the names and phone numbers of customers living in California state.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.name , T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = 'Lewis'",
            "question": "What are the names and years of all races that had a driver with the last name Lewis?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname , T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Nameless , Painless'",
            "question": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Tokohu University'",
            "question": "How many papers are published by the institution \"Tokohu University\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.fname , T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Nameless , Painless'",
            "question": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'Tokohu University'",
            "question": "Find the number of papers published by authors from the institution \"Tokohu University\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( DISTINCT T3.product_id ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "How many types of products have Rodrick Heaney bought in total?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.name , T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = 'Lewis'",
            "question": "Give me a list of names and years of races that had any driver whose forename is Lewis?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( DISTINCT T3.product_id ) FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Rodrick Heaney'",
            "question": "Find the number of distinct products Rodrick Heaney has bought so far.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'University of Pennsylvania'",
            "question": "How many papers are written by authors from the institution \"University of Pennsylvania\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( DISTINCT T3.characteristic_name ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "How many distinct characteristic names does the product \"cumin\" have?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Le Pop'",
            "question": "Who performed the song named \"Le Pop\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.dept_name , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",
            "question": "What is the name of the department and office location for the professor with the last name of Heffington?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Le Pop'",
            "question": "What is the first and last name of artist who performed \"Le Pop\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.dept_name , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",
            "question": "What is department name and office for the professor whose last name is Heffington?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",
            "question": "What are the last name and office of all history professors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",
            "question": "What is the last name and office of the professor from the history department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T3.name , T3.time FROM station AS T1 JOIN route AS T2 ON T1.id = T2.station_id JOIN train AS T3 ON T2.train_id = T3.id WHERE T1.local_authority = 'Chiltern'",
            "question": "Find names and times of trains that run through stations for the local authority Chiltern.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name",
            "question": "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = 'Biology'",
            "question": "What is the first and last name of the professor in biology department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_1",
            "query": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = 'LG-P760'",
            "question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name",
            "question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT T3.title ) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.type = 'Studio'",
            "question": "Find the number of songs in all the studio albums.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT T3.title ) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.type = 'Studio'",
            "question": "How many songs appear in studio albums?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name",
            "question": "What are the amenities in alphabetical order that Anonymous Donor Hall has?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.title , T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",
            "question": "Show the movie titles and book titles for all companies in China.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.title , T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",
            "question": "What are the titles of movies and books corresponding to companies incorporated in China?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = 'Biology'",
            "question": "What are the first and last name of all biology professors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name",
            "question": "What amenities does Smith Hall have in alphabetical order?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",
            "question": "Find the name and salary of the instructors who are advisors of any student from History department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred",
            "question": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands'",
            "question": "Who performed the song named \"Badlands\"? Show the first name and the last name.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands'",
            "question": "What are the first and last names of the artist who perfomed the song \"Badlands\"?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T3.booking_start_date , T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id = T2.product_id JOIN bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.product_name = 'Book collection A'",
            "question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( DISTINCT T1.title ) FROM papers AS T1 JOIN authorship AS T2 ON T1.paperid = T2.paperid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T3.name = 'University of Pennsylvania'",
            "question": "Find the number of papers published by the institution \"University of Pennsylvania\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",
            "question": "What are the names and salaries of instructors who advises students in the History department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name , T3.characteristic_data_type FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'cumin'",
            "question": "What are the names and data types of the characteristics of the 'cumin' product?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred",
            "question": "Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name , T3.characteristic_data_type FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'cumin'",
            "question": "List all the characteristic names and data types of product \"cumin\".",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'",
            "question": "Find the name and salary of instructors who are advisors of the students from the Math department.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( DISTINCT T3.characteristic_name ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame'",
            "question": "Count the number of different characteristic names the product 'cumin' has.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",
            "question": "What are the checking and savings balances in accounts belonging to Brown?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",
            "question": "Find the checking balance and saving balance in the Brown\u2019s account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'",
            "question": "What are the names and salaries of instructors who advise students in the Math department?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111",
            "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
            "ted": 0.1
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T3.Year = 2007",
            "question": "Show distinct types of artworks that are nominated in festivals in 2007.",
            "ted": 0.1
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.advisor = 1121",
            "question": "Which clubs have one or more members whose advisor is \"1121\"?",
            "ted": 0.1
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.advisor = 1121",
            "question": "List the clubs that have at least a member with advisor \"1121\".",
            "ted": 0.1
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111",
            "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
            "ted": 0.1
        }
    ],
    "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name": [
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
            "question": "List the id of students who registered some courses and the number of their registered courses?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "How many members are in each party?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
            "question": "List the name of all products along with the number of complaints that they have received.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
            "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
            "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
            "question": "What are the faculty id and the number of students each faculty has?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
            "question": "Show all the faculty ranks and the number of students advised by each rank.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
            "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
            "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
            "question": "For each user, find their name and the number of reviews written by them.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "Show party names and the number of events for each party.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "How many events are there for each party?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
            "question": "Show all the activity names and the number of faculty involved in each activity.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
            "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
            "question": "For each building, show the name of the building and the number of institutions in it.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
            "question": "Show the names of pilots and the number of records they have.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
            "question": "Show the name of track and the number of races in each track.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
            "question": "Return the name of each physician and the number of patients he or she treats.",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
            "question": "How many exhibitions has each artist had?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
            "question": "Show all party names and the number of members in each party.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
            "question": "What are all the different product names, and how many complains has each received?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
            "question": "Show institution names along with the number of proteins for each institution.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
            "question": "Show the station name and number of trains in each station.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
            "question": "What are the different card types, and how many transactions have been made with each?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
            "question": "Find the name of each user and number of tweets tweeted by each of them.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
            "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
            "question": "For every student who is registered for some course, how many courses are they registered for?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
            "question": "Show the company name with the number of gas station.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
            "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
            "question": "Show all cities along with the number of drama workshop groups in each city.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
            "question": "What is the name of each course and the corresponding number of student enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
            "question": "List the name and the number of enrolled student for each course.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown , COUNT( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
            "question": "How many gymnasts are from each hometown?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Hometown , COUNT( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
            "question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
            "question": "Show aircraft names and number of flights for each aircraft.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
            "question": "What is the name of each aircraft and how many flights does each one complete?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , count( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id",
            "question": "How many games has each stadium held?",
            "ted": 0.0
        },
        {
            "db_id": "gas_company",
            "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
            "question": "For each company id, what are the companies and how many gas stations does each one operate?",
            "ted": 0.0
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
            "question": "Show all artist names and the number of exhibitions for each artist.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
            "question": "Show the card type codes and the number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
            "question": "What are the department names and how many employees work in each of them?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T2.Name , COUNT( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
            "question": "What are the names of the technicians  and how many machines are they assigned to repair?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
            "question": "What are the names of different tracks, and how many races has each had?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft , COUNT( * ) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
            "question": "List the names of aircrafts and the number of times it won matches.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name , count( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
            "question": "Show the name for regions and the number of storms for each region.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.region_name , count( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
            "question": "How many storms occured in each region?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , COUNT( * ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
            "question": "How many players are from each country?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , count( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
            "question": "List the name for storms and the number of affected regions for each storm.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , count( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
            "question": "How many regions were affected by each storm?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.staff_name , count( * ) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name",
            "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party , COUNT( * ) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
            "question": "For each party, return the name of the party and the number of delegates from that party.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT T2.Name , COUNT( * ) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",
            "question": "Show the names of people and the number of times they have been on the affirmative side of debates.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party , COUNT( * ) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
            "question": "Show the name of each party and the corresponding number of delegates from that party.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT T2.type , count( * ) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",
            "question": "Show the type of school and the number of buses for each type.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name , COUNT( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
            "question": "For each county, find the name of the county and the number of delegates from that county.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT T1.Product_Name , COUNT( * ) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name",
            "question": "Show the names of products and the number of events they are in.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name , COUNT( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
            "question": "Show the name of each county along with the corresponding number of delegates from that county.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT T2.allergytype , count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
            "question": "Show all allergy type with number of students affected.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.property_id , count( * ) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id",
            "question": "How many residents does each property have? List property id and resident count.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T2.Name , COUNT( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
            "question": "Show names of technicians and the number of machines they are assigned to repair.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft , COUNT( * ) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
            "question": "For each aircraft that has won an award, what is its name and how many time has it won?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T2.state_province_county , count( * ) FROM customer_addresses AS T1 JOIN addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.state_province_county",
            "question": "List the state names and the number of customers living in each state.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
            "question": "display the department name and number of employees in each of the department.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
            "question": "display the department name and number of employees in each of the department.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT T2.allergytype , count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
            "question": "How many students are affected by each allergy type?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name , COUNT( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
            "question": "How many actors have appeared in each musical?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T2.Name , COUNT( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
            "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
            "question": "Give the name of each department and the number of employees in each.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , count( * ) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",
            "question": "How many assets can each parts be used in? List the part name and the number.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , COUNT( * ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",
            "question": "Show the country names and the corresponding number of players.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
            "question": "display job title and average salary of employees.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
            "question": "What are the different product names, and what is the sum of quantity ordered for each product?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T1.Name , avg( T2.Speed ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",
            "question": "Show the names of countries and the average speed of roller coasters from each country.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , avg( trust ) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",
            "question": "Find each target user's name and average trust score.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.name , sum( T1.show_times_per_day ) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
            "question": "What is total number of show times per dat for each cinema?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.title , max( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
            "question": "What are the title and maximum price of each film?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cinema",
            "query": "SELECT T2.title , max( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
            "question": "Give me the title and highest price for each film.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.line_1 , avg( T2.monthly_rental ) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",
            "question": "What are the line 1 and average monthly rentals of all student addresses?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "hr_1",
            "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
            "question": "What is the average salary for each job title?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.name , avg( T2.rating ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
            "question": "For each user, return the name and the average rating of reviews given by them.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T2.Name , sum( T1.Num_of_stock ) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name",
            "question": "For each phone, show its names and total number of stocks.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.lot_id , avg( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",
            "question": "Show the average amount of transactions for different lots.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
            "question": "What is the average rating star for each reviewer?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
            "question": "What is the average number of stars that each reviewer awards for a movie?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
            "question": "Show all product names and the total quantity ordered for each product name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.product_name , sum( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",
            "question": "Show the product name and total order quantity for each product.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , COUNT( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
            "question": "How many workshops did each author submit to? Return the author name and the number of workshops.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , COUNT( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
            "question": "Show each author and the number of workshops they submitted to.",
            "ted": 0.06666666666666667
        }
    ],
    "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1": [
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
            "question": "Select the name and price of the cheapest product.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
            "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
            "question": "Show the enrollment and primary_conference of the oldest college.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
            "question": "what are the order id and customer id of the oldest order?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
            "question": "Find the order id and customer id associated with the oldest order.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
            "question": "What is the station station and end station for the trips with the three smallest ids?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
            "question": "Give me the start station and end station for the trips with the three oldest id.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
            "question": "Give the id and product type of the product with the lowest price.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
            "question": "Show the details and star ratings of the 3 least expensive hotels.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
            "question": "What are the product id and product type of the cheapest product?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
            "question": "What are the room name and base price of the room with the lowest base price?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
            "question": "What is the name and price of the cheapest product?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
            "question": "What is the oldest log id and its corresponding problem id?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
            "question": "Find the oldest log id and its corresponding problem id.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
            "question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name , email FROM user_profiles ORDER BY followers LIMIT 1",
            "question": "Find the name and email of the user followed by the least number of people.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
            "question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
            "question": "Which room has cheapest base price? List the room's name and the base price.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
            "question": "What are the details and star ratings of the three hotels with the lowest price ranges?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
            "question": "Which city has the lowest GDP? Please list the city name and its GDP.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Model_name , RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1",
            "question": "Which model has the least amount of RAM? List the model name and the amount of RAM.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
            "question": "Which part has the least chargeable amount? List the part id and amount.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
            "question": "What are the first and last names of the employee with the earliest date of birth?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
            "question": "What are the first and last names of the top 10 longest-serving employees?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
            "question": "List top 10 employee work longest in the company. List employee's first and last name.",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT name , Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1",
            "question": "Find the name and component amount of the least popular furniture.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
            "question": "What is the first and last name of the oldest employee?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
            "question": "What is the city with the smallest GDP? Return the city and its GDP.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
            "question": "What is the id and name of the aircraft that can cover the maximum distance?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
            "question": "Show the id and name of the aircraft with the maximum distance.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
            "question": "Which film has the highest rental rate? And what is the rate?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "wedding",
            "query": "SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3",
            "question": "Show the name and opening year for three churches that opened most recently.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
            "question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "What is the name and category code of the product with the highest price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",
            "question": "What are the ids of the trips that lasted the longest and how long did they last?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "Find the name and category of the most expensive product.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name and date of the most recent race?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
            "question": "Find the id and name of the most expensive base price room.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name and date of the race that occurred most recently?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
            "question": "Which room has the highest base price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",
            "question": "What are the ids and durations of the trips with the top 3 durations?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
            "question": "What are the dates that have the 5 highest cloud cover rates and what are the rates?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
            "question": "What are the title and rental rate of the film with the highest rental rate?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "news_report",
            "query": "SELECT venue , name FROM event ORDER BY Event_Attendance DESC LIMIT 2",
            "question": "List the event venues and names that have the top 2 most number of people attended.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
            "question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
            "question": "What are the name and the nationality of the host of the highest age?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
            "question": "What are the name and id of the three highest priced rooms?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT open_year , name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1",
            "question": "Which manufacturer has the most number of shops? List its name and year of opening.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cinema",
            "query": "SELECT name , LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",
            "question": "What are the name and location of the cinema with the largest capacity?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
            "question": "Show the id and name of the employee with maximum salary.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
            "question": "What is the id and name of the employee with the highest salary?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
            "question": "Show the names and main services for train stations that have the top three total number of passengers.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
            "question": "Find the name and building of the department with the highest budget.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
            "question": "Show the name and the nationality of the oldest host.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
            "question": "What is the flight number and its distance for the one with the maximum price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
            "question": "Show the flight number and distance of the flight with maximum price.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1",
            "question": "Which restaurants have highest rating? List the restaurant name and its rating.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "school_finance",
            "query": "SELECT amount , donator_name FROM endowment ORDER BY amount DESC LIMIT 1",
            "question": "List the amount and donor name for the largest amount of donation.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
            "question": "Find the name and id of the top 3 expensive rooms.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
            "question": "What is the department name and corresponding building for the department with the greatest budget?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT name , furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
            "question": "Return the name and id of the furniture with the highest market rate.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
            "question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
            "question": "Who is the youngest employee in the company? List employee's first and last name.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
            "question": "What is the name of the song that was released most recently?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
            "question": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
            "question": "What is the name of the song that was released in the most recent year?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
            "question": "What is the official name and status of the city with the most residents?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
            "question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
            "question": "What si the youngest employee's first and last name?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
            "question": "List the official name and status of the city with the largest population.",
            "ted": 0.05555555555555555
        }
    ]
}