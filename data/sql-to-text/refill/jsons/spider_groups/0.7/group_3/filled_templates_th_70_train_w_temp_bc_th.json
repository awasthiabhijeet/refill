[
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 , line_2 FROM addresses",
        "question": "What are the line 1 and 2 of all addresses?",
        "query_toks": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the most common degree summary name in the program. The most common is the degree that had the greatest number of students enrolled.",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "What is the name of the teacher whose hometown is not Farnworth Municipal Borough?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( DISTINCT department_id ) FROM Degree_Programs",
        "question": "How many different departments are all the degrees offered?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "What are the names of teachers who did not arrange any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find all the department descriptions whose names contain the substring 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT count( * ) FROM teacher",
        "question": "What is the total number of teachers?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Transcripts",
        "question": "What is the total number of transcripts?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Tiffany'",
        "question": "How many likes are there for the student named Tiffany?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Tiffany\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'economics'",
        "question": "How many degrees does the economics department offer?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"economics\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Show all the high schooler names and the number of friends shared by each student.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "List the hometown shared by the greatest number of teachers.",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the summary names of the degree programs that are enrolled for the most number of students?",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age = 31 OR Age = 32",
        "question": "What are the names of teachers who are either 31 or 32 years old?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "31",
            "or",
            "age",
            "=",
            "32"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
        "question": "For each course arrange, return the teacher name and the name of the course its teacher is involved in.",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "How many teachers are from each hometown?",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3",
        "question": "What are the hometowns that have at least three teachers?",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'economics'",
        "question": "Count the number of degrees that the economics department offers.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"economics\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "What are the names of the teachers whose hometown is not Farnworth Municipal Borough?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What is the name of the students who did not have any friends?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3",
        "question": "Which hometown has at least three teachers?",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Brittany'",
        "question": "What are the names of all students that are on Brittany's friends list?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Courses",
        "question": "How many courses exist in total?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age = 31 OR Age = 32",
        "question": "What are the names of teachers aged either 31 or 32?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "31",
            "or",
            "age",
            "=",
            "32"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count( * ) ASC LIMIT 1",
        "question": "Find the date and id of the transcript that is accessed the most number of times.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "For each teacher, find their name and the number of courses they arrange.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question": "What are the names of all the sections in descending alphabetical order?",
        "query_toks": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler WHERE grade = 11",
        "question": "Find all the high school students in grade 11.",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler",
        "question": "What is the number of high school students?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Brittany'",
        "question": "Show the grade of all the students with name Brittany.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name , section_description FROM Sections",
        "question": "What are the names of all sections and their descriptions?",
        "query_toks": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age , Hometown FROM teacher",
        "question": "What are the ages and hometowns of all teachers?",
        "query_toks": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "List the names of the students who do not have any friends.",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "Show the names of teachers whose hometowns are not Farnworth Municipal Borough.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "For each teacher, show the name of the teacher and the number of courses they arrange.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )",
        "question": "what are the names of semesters that did not have any students enrolled in the courses?",
        "query_toks": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "How many courses are taught by each teacher? Return the teacher names and the number of courses they arrange.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "Show the most common grade of students in high school.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question": "Give me a list of all the details of the students in descending order of detail.",
        "query_toks": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name , section_description FROM Sections",
        "question": "Tell me the name and description of each section.",
        "query_toks": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "List the name of all high schoolers along with the number of likes that they have.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'economics'",
        "question": "Count the number of degrees offered by the economics department.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"economics\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( DISTINCT department_id ) FROM Degree_Programs",
        "question": "How many different departments of degree programs are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Show all high schooler names along with the number of friends in each student.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "Show the grade with the most number of students.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Tiffany'",
        "question": "What is the number of likes that the student named Tiffany has?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Tiffany\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name , section_description FROM Sections",
        "question": "What are the names and descriptions for all sections?",
        "query_toks": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'a'",
        "question": "What is the description of the section with name a?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"a\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Find the hometown that has the most teachers.",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'a'",
        "question": "What is the description of the section with name \"a\"?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"a\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "Show the date and detail of the most recent transcript.",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name , section_description FROM Sections",
        "question": "What are the names and descriptions of all the sections?",
        "query_toks": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "question": "List the names of teachers who arrange at least two courses.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Sports'",
        "question": "What are the names of all teachers that have taught some course to be related to sports?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"Sports\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3",
        "question": "Show the names and ids of courses that are offered at most three sections.",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )",
        "question": "Find the names of all semesters that have no student enrollment.",
        "query_toks": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "What are the names of all teachers that are not teaching any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the most common grade among high school students?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the semesters which has the most number of students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question": "Which date has the oldest transcript been made?",
        "query_toks": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "question": "Show the names of teachers who have worked on the arrange of courses at least twice.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Find the name of each student and the number of friends they have.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Sports'",
        "question": "What are the names of all teachers taught by the course with the name Sports?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"Sports\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "Show each grade and the number of students in each grade.",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What are the dates and details of the transcripts with the earliest date of creation?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Show the names of high schoolers and the number of likes they have.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT count( * ) FROM teacher",
        "question": "How many teachers are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Sports'",
        "question": "What are the names of the teachers who arrange the course \"Sports\"?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"Sports\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question": "What are the names of all the students ordered in descending order?",
        "query_toks": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question": "Find the first name and middle name of the student who has the first registered date.",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Find the date and id of the transcript with at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the id, line 1 and 2 of the address with the greatest number of students?",
        "query_toks": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age = 31 OR Age = 32",
        "question": "Show the names of teachers that are either 31 or 32 years old.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "31",
            "or",
            "age",
            "=",
            "32"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
        "question": "What are the names of the teachers and the corresponding courses they arrange?",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What are the names of the students who are not friends with any high schooler?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the student who has the greatest number of likes.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question": "List the details of all students in descending order of detail.",
        "query_toks": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "question": "Show the ids of the students who are friends with some friends and have some likes.",
        "query_toks": [
            "select",
            "student_id",
            "from",
            "friend",
            "intersect",
            "select",
            "liked_id",
            "from",
            "likes"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "friend",
            "intersect",
            "select",
            "liked_id",
            "from",
            "likes"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3",
        "question": "Find the name and id for courses that have less than 3 sections?",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT count( * ) FROM teacher",
        "question": "Count how many teachers are there.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Show all the student names and the number of friends in each school.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What are the names of the students who do not have any friends?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "How many students are in grade 10 or 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Brittany'",
        "question": "What are the names of all the grades taught by Brittany?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "question": "Show the names of teachers that are on at least two courses.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "What are all the different high schooler names and how many likes has each student had?",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "What are the names of the teachers who did not arrange any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question": "What are the names of all the sections ordered in descending alphabetical order?",
        "query_toks": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "Show the number of students in grade 10 or 11.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3",
        "question": "Find the name and id for the courses that have less than 3 sections?",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler",
        "question": "What is the total number of students in high school?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age , Hometown FROM teacher",
        "question": "Tell me the age and hometown of each teacher.",
        "query_toks": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )",
        "question": "What are the names of all semesters that have not enrolled any students?",
        "query_toks": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question": "What are the names of all the students in the school sorted by their details in descending order?",
        "query_toks": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count( * ) ASC LIMIT 1",
        "question": "Find the date and id of the transcript that has been accessed the most number of times.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the grade that is most common in high school students?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
        "question": "What are the names of all teachers who have taught a course and the corresponding courses?",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'economics'",
        "question": "How many degrees are offered by the economics department?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"economics\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which semesters have the most number of students enrolled? List the semesters name and the semester id.",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Find the date and id for the transcripts that have at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT avg( grade ) FROM Highschooler WHERE id IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )",
        "question": "What is the average grade of the students who are friends with some high schooler?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "in",
            "(",
            "select",
            "t1.student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "in",
            "(",
            "select",
            "t1.student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "What are the student ids and the number of likes for each student?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the semesters that has the largest number of students enrolled in?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'a'",
        "question": "What is the description of the section named a?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"a\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Courses",
        "question": "Count the total number of courses offered.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler",
        "question": "How many high school students are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Transcripts",
        "question": "Count the total number of transcripts.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question": "Show the dates of the most recent transcript.",
        "query_toks": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "List the grade shared by the greatest number of students.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "Show names for all teachers whose hometown is not Farnworth Municipal Borough.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age , Hometown FROM teacher",
        "question": "What are the age and hometown of each teacher?",
        "query_toks": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Lake Careyberg'",
        "question": "Return the zip code of Lake Careyberg for all the addresses with city code \"Lake Careyberg\".",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Lake Careyberg\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "What are all the different high schooler names and how many friends has each student?",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "Show all student ids and corresponding number of likes.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Lake Careyberg'",
        "question": "What is the zip code of the address in the city of Lake Careyberg?",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Lake Careyberg\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question": "What are the names of all the sections in the descending order of section name?",
        "query_toks": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "Show all student ids and the number of friends of each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 , line_2 FROM addresses",
        "question": "What are the line 1 and 2 of the addresses?",
        "query_toks": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "List all student ids along with the number of likes shared by each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the id and line number of the address that has the greatest number of students.",
        "query_toks": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "question": "What are the names of the teachers who arrange at least two courses?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Brittany'",
        "question": "What are the names of all students that have friends who happen to be Brittany?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Courses",
        "question": "How many courses are offered in total?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3",
        "question": "What are the names and ids of the courses that are offered at most three sections?",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id for the semesters which has the most students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What are the dates and details of the most recent transcript?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'a'",
        "question": "Show the description of the section named a.",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"a\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the students that have the most number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student who has the most number of friends?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "What are the different hometowns and how many teachers are there for each hometown?",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age , Hometown FROM teacher",
        "question": "Show the age and hometown of all teachers.",
        "query_toks": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "What are the different grades of students and how many students belong to each grade?",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Courses",
        "question": "How many courses are there in total?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "List all hometowns and the number of teachers in each hometown.",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Brittany'",
        "question": "What is the name of the high schooler with the name Brittany?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "display the student ID and number of likes for each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "What is the description of the department whose name starts with the word 'computer'?",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3",
        "question": "What are the names and ids of the courses that have at most three sections?",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "Show each student id and the number of friends they have.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'economics'",
        "question": "How many degrees are offered in the economics department?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"economics\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Show all student names and the number of friends in each school.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3",
        "question": "What hometowns have at least three teachers?",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the most common friend in the school. The most common is the student that had the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Brittany'",
        "question": "What are the names of all the students in grade Brittany?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id and line 1 of the address where most of the students live?",
        "query_toks": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 , line_2 FROM addresses",
        "question": "What are line 1 and 2 of the addresses?",
        "query_toks": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the name and id of the semester that has the most students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question": "What is the first and last name of the student that was registered in the most recent year?",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Show the hometown with the most number of teachers.",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the students who have the most number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 , line_2 FROM addresses",
        "question": "Show the line 1 and 2 for all addresses.",
        "query_toks": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "Show the different grade and the number of students in each grade.",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "What are the names of teachers who are not from Farnworth Municipal Borough?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "question": "Show the names of teachers that are in charge of at least two courses.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count( * ) ASC LIMIT 1",
        "question": "What is the date and id of the most recent transcript?",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT count( * ) FROM teacher",
        "question": "What is the total number of teachers in total?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the name of the student that has the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count( * ) <= 3",
        "question": "Show the name and id of courses with at most 3 sections.",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "t1.course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "Show all high schooler names without a friend.",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Transcripts",
        "question": "How many transcripts are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )",
        "question": "Find the name of the semesters that do not have any student enrollment.",
        "query_toks": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler WHERE grade = 11",
        "question": "What is the name of the high schooler with grade 11?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Brittany'",
        "question": "What are the grade ids of all the students named Brittany?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Tiffany'",
        "question": "How many likes does the girl named Tiffany have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Tiffany\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "Find the name of the teachers that do not have any course arrange.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question": "Find the first name and middle name of the student that has the first registered date.",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3",
        "question": "What are the names of all hometowns that have at least three teachers?",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age , Hometown FROM teacher",
        "question": "What are all the ages and hometowns of teachers?",
        "query_toks": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Sports'",
        "question": "List the name of all teachers involved in the arrange of course \"Sports\".",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"Sports\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student who has the most number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "How many students are in each grade?",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "What are the different grades and how many students are there for each grade?",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the grade of the youngest high schooler?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name , section_description FROM Sections",
        "question": "Show the name and description of all sections.",
        "query_toks": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age = 31 OR Age = 32",
        "question": "What are the names of teachers that are either 31 years old or 32 years old?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "31",
            "or",
            "age",
            "=",
            "32"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "question": "What are the names of teachers that are involved in at least two courses?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age , Hometown FROM teacher",
        "question": "Show the age and hometown for all teachers.",
        "query_toks": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the semesters that have the most students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Lake Careyberg'",
        "question": "Tell us the zip code of the city named Lake Careyberg.",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Lake Careyberg\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "question": "Return the name of each high schooler and the number of likes he or she has.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "Show all hometowns and the number of teachers in each hometown.",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3",
        "question": "Which hometowns have at least three teachers?",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the student that has the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the degree summaries that have been used by the most students?",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "List the names of teachers that are not involved in any course arrange.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "How many students in grade 10 or 11 are in the school?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "List all the department descriptions with substring \"computer\".",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "How many courses are arranged by each teacher? List the name and the number of courses.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Brittany'",
        "question": "What is the grade of the high schooler named Brittany?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student who has the most friends?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question": "What is the first name, middle name and last name of the youngest student?",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "Find the number of students in grade 10 or 11.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "For each teacher, how many courses are they involved in?",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question": "List the names of all sections in descending alphabetical order.",
        "query_toks": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler WHERE grade = 11",
        "question": "Find the names of all students in grade 11.",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find all the department descriptions whose name starts with the word 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student that has the highest number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 , line_2 FROM addresses",
        "question": "Tell me the line 1 and 2 of each address.",
        "query_toks": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler",
        "question": "What is the total number of high school students?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( DISTINCT department_id ) FROM Degree_Programs",
        "question": "How many distinct departments are there for all degree programs?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler",
        "question": "How many students are in high school?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "For each student id, how many likes are there?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "List the hometown shared by the most teachers.",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Tiffany'",
        "question": "How many likes are there for the student named \"Tiffany\"?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Tiffany\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Show the date and id for all transcripts with at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What is the start date and end detail for the transcript with the earliest date?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find the names of all the departments that contain the word 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count( * ) ASC LIMIT 1",
        "question": "What is the date and id corresponding to the transcript with the greatest number of records?",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question": "Give me a list of all the section names ordered by the name in descending order.",
        "query_toks": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count( * ) = 3",
        "question": "What are the first name, middle name, and id of the students who are enrolled in three universities?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t1.middle_name",
            ",",
            "t1.last_name",
            ",",
            "t1.student_id",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t1.middle_name",
            ",",
            "t1.last_name",
            ",",
            "t1.student_id",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Sports'",
        "question": "Show names for all teachers who have taught some course of sports.",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"Sports\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the name of the degree summary name which has the most student enrollment.",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )",
        "question": "What are the names of semesters that have no enrolled students?",
        "query_toks": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN ( SELECT semester_id FROM Student_Enrolment )",
        "question": "What are the names of all semesters that have never had any student enrollment?",
        "query_toks": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the student who has the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Brittany'",
        "question": "What are the names of all students who have a friend who is Brittany?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Brittany\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Courses",
        "question": "How many courses are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "What are the different student ids and how many friends are there for each student?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Show the date and id of the transcript with at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What is the name of all students who do not have any friends?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question": "What are the details of all the students in the descending order of detail?",
        "query_toks": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "What are the dates and ids of the transcripts with at least two corresponding contents?",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Lake Careyberg'",
        "question": "What are the zip codes of all the addresses in Lake Careyberg?",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Lake Careyberg\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Which hometown has the most teachers?",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( DISTINCT department_id ) FROM Degree_Programs",
        "question": "How many different departments offer degrees?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the id, line 1 and 2 of the address where the greatest number of students live?",
        "query_toks": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
        "question": "List the names of a teacher along with the name of a course whose teacher is in the arrange department.",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age = 31 OR Age = 32",
        "question": "Show all teacher names who are either 31 or 32 years old",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "31",
            "or",
            "age",
            "=",
            "32"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "Show the different hometowns and the number of teachers in each hometown.",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT( * ) >= 3",
        "question": "Show all hometowns with at least 3 teachers.",
        "query_toks": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "List all student ids along with the number of friends shared by each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "what are the names of teachers who did not arrange any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What is the date and detail of the most recent transcript?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "Show the different student ids and the number of friends they have.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "What are the different student ids and how many likes are there for each student?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the id, line 1 and 2 of the address where the most students live?",
        "query_toks": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_id",
            ",",
            "t1.line_1",
            ",",
            "t1.line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.current_address_id",
            "group",
            "by",
            "t1.address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Lake Careyberg'",
        "question": "What is the zip code of the address in Lake Careyberg?",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Lake Careyberg\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the names of all person sorted in the descending order using age.",
        "masked_template": "Find the names of all <mask> in the <mask> order <mask>",
        "query": "SELECT name FROM Person ORDER BY age DESC",
        "ted": 0.0,
        "db_id": "network_2",
        "query_toks": [
            "select",
            "name",
            "from",
            "person",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "person",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "question": "Find the description of the club \"Pen and Paper Gaming\".",
        "masked_template": "Find the <mask> of the <mask> and <mask>",
        "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clubdesc",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "\"Pen and Paper Gaming\""
        ],
        "query_toks_no_value": [
            "select",
            "clubdesc",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "Return the date of birth for all the guests with gender code \"Male\".",
        "masked_template": "Return the <mask> of <mask> for all the <mask> with <mask>",
        "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
        "ted": 0.0,
        "db_id": "apartment_rentals",
        "query_toks": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "gender_code",
            "=",
            "\"Male\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "gender_code",
            "=",
            "value"
        ]
    },
    {
        "question": "Find all the locations whose names contain the word \"film\".",
        "masked_template": "Find all the <mask> whose names <mask> the <mask>",
        "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE '%film%'",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "location_name",
            "from",
            "locations",
            "where",
            "location_name",
            "like",
            "\"%film%\""
        ],
        "query_toks_no_value": [
            "select",
            "location_name",
            "from",
            "locations",
            "where",
            "location_name",
            "like",
            "value"
        ]
    },
    {
        "question": "Show each location and the number of cinemas there.",
        "masked_template": "Show each <mask> and the number of <mask>",
        "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ]
    },
    {
        "question": "List all the document names which contains \"CV\".",
        "masked_template": "List all the <mask> names which <mask>",
        "query": "SELECT document_name FROM documents WHERE document_name LIKE '%CV%'",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "document_name",
            "from",
            "documents",
            "where",
            "document_name",
            "like",
            "\"%CV%\""
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            "from",
            "documents",
            "where",
            "document_name",
            "like",
            "value"
        ]
    },
    {
        "question": "Show names for all employees who have certificate of Boeing 737-800.",
        "masked_template": "Show names for all <mask> who have <mask> of <mask>",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "\"Boeing 737-800\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the full name of employee who supported the most number of customers.",
        "masked_template": "Find the <mask> name of <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.027777777777777776,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.support_rep_id",
            "group",
            "by",
            "t1.id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.support_rep_id",
            "group",
            "by",
            "t1.id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which directors had a movie in either 1999 or 2000?",
        "masked_template": "Which <mask> had a <mask> in <mask> or <mask>",
        "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
        "ted": 0.08333333333333333,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "1999",
            "or",
            "year",
            "=",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "How many papers are published in total?",
        "masked_template": "How many <mask> are <mask> in <mask>",
        "query": "SELECT count( * ) FROM papers",
        "ted": 0.0,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "papers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "papers"
        ]
    },
    {
        "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
        "masked_template": "<mask> me a list of all the <mask> names <mask> by the <mask> in <mask>",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ]
    },
    {
        "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
        "masked_template": "What is the <mask> number and <mask> to the <mask> with the <mask> number of <mask>",
        "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.027777777777777776,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t2.invoice_number",
            ",",
            "t2.invoice_date",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "invoices",
            "as",
            "t2",
            "on",
            "t1.invoice_number",
            "=",
            "t2.invoice_number",
            "group",
            "by",
            "t1.invoice_number",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.invoice_number",
            ",",
            "t2.invoice_date",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "invoices",
            "as",
            "t2",
            "on",
            "t1.invoice_number",
            "=",
            "t2.invoice_number",
            "group",
            "by",
            "t1.invoice_number",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?",
        "masked_template": "What are the <mask> names of all <mask> who have <mask> a <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t3.crs_description",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "join",
            "course",
            "as",
            "t3",
            "on",
            "t1.crs_code",
            "=",
            "t3.crs_code"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t3.crs_description",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "join",
            "course",
            "as",
            "t3",
            "on",
            "t1.crs_code",
            "=",
            "t3.crs_code"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?",
        "masked_template": "How many <mask> in <mask> in <mask> is, the <mask> of <mask> is <mask>",
        "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
        "ted": 0.041666666666666664,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "1885",
            "and",
            "ties",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "value",
            "and",
            "ties",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all the clubs ordered in descending alphabetical order?",
        "masked_template": "What are the names of all the <mask> ordered in <mask>",
        "query": "SELECT name FROM club ORDER BY name DESC",
        "ted": 0.0,
        "db_id": "sports_competition",
        "query_toks": [
            "select",
            "name",
            "from",
            "club",
            "order",
            "by",
            "name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "order",
            "by",
            "name",
            "desc"
        ]
    },
    {
        "question": "What are the names of all movies directed by Steven Spielberg?",
        "masked_template": "What are the names of all <mask> by <mask>",
        "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "director",
            "=",
            "\"Steven Spielberg\""
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "director",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the id of all the files in mp3 format?",
        "masked_template": "What are the id of all the <mask> in mp3 <mask>",
        "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "f_id",
            "from",
            "files",
            "where",
            "formats",
            "=",
            "\"mp3\""
        ],
        "query_toks_no_value": [
            "select",
            "f_id",
            "from",
            "files",
            "where",
            "formats",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the home city with the most number of drivers.",
        "masked_template": "Show the <mask> with the most number of <mask>",
        "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_bus",
        "query_toks": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of people who have a height greater than 200 or less than 190?",
        "masked_template": "What are the names of <mask> who have a <mask> than 200 or <mask> than <mask>",
        "query": "SELECT name FROM people WHERE height > 200 OR height < 190",
        "ted": 0.09090909090909091,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "height",
            ">",
            "200",
            "or",
            "height",
            "<",
            "190"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "height",
            ">",
            "value",
            "or",
            "height",
            "<",
            "value"
        ]
    },
    {
        "question": "For each company, return the company name and the name of the building its office is located in.",
        "masked_template": "For each <mask> return the <mask> name and the name of the <mask> its <mask> is <mask> in.",
        "query": "SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id"
        ]
    },
    {
        "question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?",
        "masked_template": "What are the names of <mask> that have a <mask> of <mask> or a <mask> of <mask>",
        "query": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
        "ted": 0.09090909090909091,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "name",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "5000",
            "or",
            "prominence",
            ">",
            "1000"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "value",
            "or",
            "prominence",
            ">",
            "value"
        ]
    },
    {
        "question": "Which location has the most corresponding counties?",
        "masked_template": "Which <mask> has the most <mask>",
        "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "location",
            "from",
            "county_public_safety",
            "group",
            "by",
            "location",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "county_public_safety",
            "group",
            "by",
            "location",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many classes are professor whose last name is Graztevski has?",
        "masked_template": "How many <mask> are <mask> whose <mask> name is <mask>",
        "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "class",
            "as",
            "t2",
            "on",
            "t1.emp_num",
            "=",
            "t2.prof_num",
            "where",
            "t1.emp_lname",
            "=",
            "\"Graztevski\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "class",
            "as",
            "t2",
            "on",
            "t1.emp_num",
            "=",
            "t2.prof_num",
            "where",
            "t1.emp_lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the name and email for the users who have more than one follower.",
        "masked_template": "Find the name and <mask> for the <mask> who have more than one <mask>",
        "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
        "ted": 0.027777777777777776,
        "db_id": "twitter_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Show the account id and name with at least 4 transactions.",
        "masked_template": "Show the <mask> id and name with at least 4 <mask>",
        "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the three products that have the most problems?s",
        "masked_template": "What are the <mask> that have the most <mask>",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
        "ted": 0.0,
        "db_id": "tracking_software_problems",
        "query_toks": [
            "select",
            "t2.product_name",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "product",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t2.product_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.product_name",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "product",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t2.product_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "masked_template": "How many distinct <mask> are there for all <mask>",
        "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ]
    },
    {
        "question": "Find the name and partition id for users who tweeted less than twice.",
        "masked_template": "Find the name and <mask> id for <mask> who <mask> than <mask>",
        "query": "SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) < 2",
        "ted": 0.027777777777777776,
        "db_id": "twitter_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.partitionid",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "tweets",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.uid",
            "group",
            "by",
            "t2.uid",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.partitionid",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "tweets",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.uid",
            "group",
            "by",
            "t2.uid",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ]
    },
    {
        "question": "display the country ID and number of cities for each country.",
        "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
        "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "country_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "country_id"
        ],
        "query_toks_no_value": [
            "select",
            "country_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "country_id"
        ]
    },
    {
        "question": "What are the names of companies whose headquarters are not \"USA\"?",
        "masked_template": "What are the names of <mask> whose <mask> are not <mask>",
        "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "\"USA\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the names and distances for all airplanes?",
        "masked_template": "What are the names and <mask> for all <mask>",
        "query": "SELECT name , distance FROM Aircraft",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "distance",
            "from",
            "aircraft"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "distance",
            "from",
            "aircraft"
        ]
    },
    {
        "question": "What is the code of the school where the accounting department belongs to?",
        "masked_template": "What is the <mask> of the <mask> the <mask> to?",
        "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "school_code",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "\"Accounting\""
        ],
        "query_toks_no_value": [
            "select",
            "school_code",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all colleges that have two or more players?",
        "masked_template": "What are the names of all <mask> that have two or more <mask>",
        "query": "SELECT College FROM match_season GROUP BY College HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "college",
            "from",
            "match_season",
            "group",
            "by",
            "college",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "college",
            "from",
            "match_season",
            "group",
            "by",
            "college",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many different countries are all the swimmers from?",
        "masked_template": "How many different <mask> are all the <mask>",
        "query": "SELECT count( DISTINCT nationality ) FROM swimmer",
        "ted": 0.0,
        "db_id": "swimming",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "nationality",
            ")",
            "from",
            "swimmer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "nationality",
            ")",
            "from",
            "swimmer"
        ]
    },
    {
        "question": "What is the name and hours for the project which has the most scientists assigned to it?",
        "masked_template": "What is the name and <mask> for the <mask> which has the most <mask> to it?",
        "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Where us the club named \"Tennis Club\" located?",
        "masked_template": "<mask> us the <mask> named <mask>",
        "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "\"Tennis Club\""
        ],
        "query_toks_no_value": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the names of pilots and the number of records they have.",
        "masked_template": "Show the names of <mask> and the number of <mask>",
        "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
        "ted": 0.0,
        "db_id": "pilot_record",
        "query_toks": [
            "select",
            "t2.pilot_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pilot_record",
            "as",
            "t1",
            "join",
            "pilot",
            "as",
            "t2",
            "on",
            "t1.pilot_id",
            "=",
            "t2.pilot_id",
            "group",
            "by",
            "t2.pilot_name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.pilot_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pilot_record",
            "as",
            "t1",
            "join",
            "pilot",
            "as",
            "t2",
            "on",
            "t1.pilot_id",
            "=",
            "t2.pilot_id",
            "group",
            "by",
            "t2.pilot_name"
        ]
    },
    {
        "question": "Find the name of the activity that has the largest number of student participants.",
        "masked_template": "Find the name of the <mask> that has the <mask> number of <mask>",
        "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the first and last name of the faculty who has the most students?",
        "masked_template": "What are the <mask> and <mask> name of the <mask> who has the most <mask>",
        "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.027777777777777776,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are all the different product names, and how many complains has each received?",
        "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "Show all party names and the number of members in each party.",
        "masked_template": "Show all <mask> names and the number of <mask> in each <mask>",
        "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
        "ted": 0.0,
        "db_id": "party_people",
        "query_toks": [
            "select",
            "t2.party_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "as",
            "t1",
            "join",
            "party",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.party_id",
            "group",
            "by",
            "t1.party_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.party_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "as",
            "t1",
            "join",
            "party",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.party_id",
            "group",
            "by",
            "t1.party_id"
        ]
    },
    {
        "question": "How many lessons did the customer with the first name Ray take?",
        "masked_template": "How many <mask> did the <mask> with the <mask> name Ray <mask>",
        "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "t2.first_name",
            "=",
            "\"Ray\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "t2.first_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the names of products that are in at least two events.",
        "masked_template": "Show the names of <mask> that are in at least two <mask>",
        "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "solvency_ii",
        "query_toks": [
            "select",
            "t1.product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "products_in_events",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "products_in_events",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?",
        "masked_template": "What are the names of all <mask> by the <mask> with the <mask> name <mask>",
        "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "t3.title",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "where",
            "t2.firstname",
            "=",
            "\"Marianne\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.title",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "where",
            "t2.firstname",
            "=",
            "value"
        ]
    },
    {
        "question": "Sort the names of all counties in descending alphabetical order.",
        "masked_template": "<mask> the names of all <mask> in <mask>",
        "query": "SELECT County_name FROM county ORDER BY County_name DESC",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "county_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "county_name",
            "desc"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "How many statements do we have?",
        "masked_template": "How many <mask> do we <mask>",
        "query": "SELECT count( * ) FROM Statements",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ]
    },
    {
        "question": "Show the names of people who have been on the negative side of debates at least twice.",
        "masked_template": "Show the names of <mask> who have <mask> on the <mask> of <mask> at least <mask>",
        "query": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.People_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "debate",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "debate_people",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.negative",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "debate_people",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.negative",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "What is the most common participant type?",
        "masked_template": "What is the most <mask>",
        "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "local_govt_in_alabama",
        "query_toks": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the title and issues of the books?",
        "masked_template": "What are the <mask> and <mask> of the <mask>",
        "query": "SELECT Title , Issues FROM book",
        "ted": 0.0,
        "db_id": "book_2",
        "query_toks": [
            "select",
            "title",
            ",",
            "issues",
            "from",
            "book"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "issues",
            "from",
            "book"
        ]
    },
    {
        "question": "Show the name and location for all tracks.",
        "masked_template": "Show the name and <mask> for all <mask>",
        "query": "SELECT name , LOCATION FROM track",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "name",
            ",",
            "location",
            "from",
            "track"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "location",
            "from",
            "track"
        ]
    },
    {
        "question": "Show the county name and population of all counties.",
        "masked_template": "Show the <mask> name and <mask> of all <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "Show all director names who have a movie in the year 1999 or 2000.",
        "masked_template": "Show all <mask> names who have a <mask> in the <mask> or <mask>",
        "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
        "ted": 0.0,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "1999",
            "or",
            "year",
            "=",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the county name and population of all counties.",
        "masked_template": "Show the <mask> name and <mask> of all <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "List the school color of the school that has the largest enrollment.",
        "masked_template": "List the <mask> of the <mask> that has the <mask>",
        "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "school_colors",
            "from",
            "school",
            "order",
            "by",
            "enrollment",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "school_colors",
            "from",
            "school",
            "order",
            "by",
            "enrollment",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "Show each location and the number of cinemas there.",
        "masked_template": "Show each <mask> and the number of <mask>",
        "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ]
    },
    {
        "question": "What is the station station and end station for the trips with the three smallest ids?",
        "masked_template": "What is the <mask> and end <mask> for the <mask> with the <mask>",
        "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "start_station_name",
            ",",
            "end_station_name",
            "from",
            "trip",
            "order",
            "by",
            "id",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "start_station_name",
            ",",
            "end_station_name",
            "from",
            "trip",
            "order",
            "by",
            "id",
            "limit",
            "value"
        ]
    },
    {
        "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
        "masked_template": "<mask> the <mask> that the <mask> who <mask> the <mask> number of <mask> in.",
        "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "Show the names of editors that are on at least two journal committees.",
        "masked_template": "Show the names of <mask> that are on at least two <mask>",
        "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "journal_committee",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "editor",
            "as",
            "t1",
            "join",
            "journal_committee",
            "as",
            "t2",
            "on",
            "t1.editor_id",
            "=",
            "t2.editor_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "editor",
            "as",
            "t1",
            "join",
            "journal_committee",
            "as",
            "t2",
            "on",
            "t1.editor_id",
            "=",
            "t2.editor_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many courses are offered by the Computer Info. Systems department?",
        "masked_template": "How many <mask> are <mask> by the <mask>",
        "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "department",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.dept_code",
            "=",
            "t2.dept_code",
            "where",
            "dept_name",
            "=",
            "\"Computer Info. Systems\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "department",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.dept_code",
            "=",
            "t2.dept_code",
            "where",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "How many professors are in the accounting dept?",
        "masked_template": "How many <mask> are in the <mask>",
        "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professor",
            "as",
            "t1",
            "join",
            "department",
            "as",
            "t2",
            "on",
            "t1.dept_code",
            "=",
            "t2.dept_code",
            "where",
            "dept_name",
            "=",
            "\"Accounting\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professor",
            "as",
            "t1",
            "join",
            "department",
            "as",
            "t2",
            "on",
            "t1.dept_code",
            "=",
            "t2.dept_code",
            "where",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "List the software platform shared by the greatest number of devices.",
        "masked_template": "List the <mask> by the <mask> number of <mask>",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Return the structure description of the document that has been accessed the fewest number of times.",
        "masked_template": "Return the <mask> of the <mask> that has <mask> the <mask> number of <mask>",
        "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the total number of rooms available in this inn?",
        "masked_template": "What is the total number of <mask> in <mask>",
        "query": "SELECT count( * ) FROM Rooms",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "rooms"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "rooms"
        ]
    },
    {
        "question": "What is the location of the club named \"Tennis Club\"?",
        "masked_template": "What is the <mask> of the <mask> named <mask>",
        "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "\"Tennis Club\""
        ],
        "query_toks_no_value": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
        "masked_template": "Find the <mask> to <mask> who <mask> in the <mask> of <mask>",
        "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "birthdate",
            "from",
            "employee",
            "where",
            "city",
            "=",
            "\"Edmonton\""
        ],
        "query_toks_no_value": [
            "select",
            "birthdate",
            "from",
            "employee",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the number of routes that end at John F Kennedy International Airport?",
        "masked_template": "What is the number of <mask> that end at <mask> F <mask>",
        "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "t1.name",
            "=",
            "\"John F Kennedy International Airport\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the names of people aged either 35 or 36.",
        "masked_template": "Show the names of <mask> 35 or 36.",
        "query": "SELECT Name FROM people WHERE Age = 35 OR Age = 36",
        "ted": 0.08333333333333333,
        "db_id": "debate",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "age",
            "=",
            "35",
            "or",
            "age",
            "=",
            "36"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "question": "For each type, how many ships are there?",
        "masked_template": "For each <mask> how many <mask> are <mask>",
        "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
        "ted": 0.0,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ]
    },
    {
        "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
        "masked_template": "What are the <mask> of all the <mask> in the <mask> order of <mask>",
        "query": "SELECT venue FROM MATCH ORDER BY date DESC",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ]
    },
    {
        "question": "Show all allergy types and the number of allergies in each type.",
        "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "Show all the activity names and the number of faculty involved in each activity.",
        "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
        "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ]
    },
    {
        "question": "List the name of a building along with the name of a company whose office is in the building.",
        "masked_template": "List the name of a <mask> with the name of a <mask> whose <mask> is in the <mask>",
        "query": "SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id"
        ]
    },
    {
        "question": "Show the ids of the students who don't participate in any activity.",
        "masked_template": "Show the ids of the <mask> who <mask> in any <mask>",
        "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
        "ted": 0.05555555555555555,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "stuid",
            "from",
            "participates_in"
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "stuid",
            "from",
            "participates_in"
        ]
    },
    {
        "question": "How many statements do we have?",
        "masked_template": "How many <mask> do we <mask>",
        "query": "SELECT count( * ) FROM Statements",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "Find the country that has the most stadiums.",
        "masked_template": "Find the <mask> that has the most <mask>",
        "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "swimming",
        "query_toks": [
            "select",
            "country",
            "from",
            "stadium",
            "group",
            "by",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "stadium",
            "group",
            "by",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the name of organization that has the greatest number of contact individuals?",
        "masked_template": "What is the name of <mask> that has the <mask> number of <mask>",
        "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many followers does each user have?",
        "masked_template": "How many <mask> each <mask>",
        "query": "SELECT count( * ) FROM follows",
        "ted": 0.0,
        "db_id": "twitter_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "follows"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "follows"
        ]
    },
    {
        "question": "What are the faculty ids of all the male faculty members?",
        "masked_template": "What are the <mask> ids of all the <mask>",
        "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"M\""
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
        "masked_template": "What are the names of all the <mask> in the <mask> by all <mask> in <mask>",
        "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "team_name",
            "from",
            "basketball_match",
            "order",
            "by",
            "all_home",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "team_name",
            "from",
            "basketball_match",
            "order",
            "by",
            "all_home",
            "desc"
        ]
    },
    {
        "question": "Count the number of financial transactions that the account with the name 337 has.",
        "masked_template": "Count the number of <mask> that the <mask> with the name 337 <mask>",
        "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "where",
            "t2.account_name",
            "=",
            "\"337\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "where",
            "t2.account_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What is detail of the student who registered the most number of courses?",
        "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the names of the three most recent festivals.",
        "masked_template": "Show the names of the <mask> most <mask>",
        "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
        "ted": 0.0,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "festival_name",
            "from",
            "festival_detail",
            "order",
            "by",
            "year",
            "desc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "festival_name",
            "from",
            "festival_detail",
            "order",
            "by",
            "year",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the names of all races held in 2017.",
        "masked_template": "Find the names of all <mask> in <mask>",
        "query": "SELECT name FROM races WHERE YEAR = 2017",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "races",
            "where",
            "year",
            "=",
            "2017"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "races",
            "where",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the song in the volume with the maximum weeks on top?",
        "masked_template": "What is the <mask> in the <mask> with the maximum <mask> on <mask>",
        "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "music_4",
        "query_toks": [
            "select",
            "song",
            "from",
            "volume",
            "order",
            "by",
            "weeks_on_top",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song",
            "from",
            "volume",
            "order",
            "by",
            "weeks_on_top",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the title, id, and description of the movie with the greatest number of actors?",
        "masked_template": "What are the <mask> id, and <mask> of the <mask> with the <mask> number of <mask>",
        "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Count the total number of counties.",
        "masked_template": "Count the total number of <mask>",
        "query": "SELECT count( * ) FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "county"
        ]
    },
    {
        "question": "What are the name and population of each county?",
        "masked_template": "What are the name and <mask> of each <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
        "masked_template": "<mask> the <mask> that the <mask> who <mask> the <mask> number of <mask> in.",
        "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find all the songs whose name contains the word \"the\".",
        "masked_template": "Find all the <mask> whose name <mask> the <mask>",
        "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "songs",
            "where",
            "title",
            "like",
            "\"% the %\""
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "songs",
            "where",
            "title",
            "like",
            "value"
        ]
    },
    {
        "question": "Show the countries that have managers of age above 50 or below 46.",
        "masked_template": "Show the <mask> that have <mask> of age <mask> 50 or <mask> 46.",
        "query": "SELECT Country FROM manager WHERE Age > 50 OR Age < 46",
        "ted": 0.09090909090909091,
        "db_id": "railway",
        "query_toks": [
            "select",
            "country",
            "from",
            "manager",
            "where",
            "age",
            ">",
            "50",
            "or",
            "age",
            "<",
            "46"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "manager",
            "where",
            "age",
            ">",
            "value",
            "or",
            "age",
            "<",
            "value"
        ]
    },
    {
        "question": "Show the name and location for all tracks.",
        "masked_template": "Show the name and <mask> for all <mask>",
        "query": "SELECT name , LOCATION FROM track",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "name",
            ",",
            "location",
            "from",
            "track"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "location",
            "from",
            "track"
        ]
    },
    {
        "question": "Count the total number of counties.",
        "masked_template": "Count the total number of <mask>",
        "query": "SELECT count( * ) FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "county"
        ]
    },
    {
        "question": "What are all the different product names, and how many complains has each received?",
        "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "What are the low and high estimates of film markets?",
        "masked_template": "What are the low and <mask> of <mask>",
        "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "ted": 0.0,
        "db_id": "film_rank",
        "query_toks": [
            "select",
            "low_estimate",
            ",",
            "high_estimate",
            "from",
            "film_market_estimation"
        ],
        "query_toks_no_value": [
            "select",
            "low_estimate",
            ",",
            "high_estimate",
            "from",
            "film_market_estimation"
        ]
    },
    {
        "question": "Find the name and email for the users who have more than one follower.",
        "masked_template": "Find the name and <mask> for the <mask> who have more than one <mask>",
        "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
        "ted": 0.027777777777777776,
        "db_id": "twitter_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the names of the cameras that have taken picture of the most mountains?",
        "masked_template": "What are the names of the <mask> that have <mask> of the most <mask>",
        "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "photos",
            "as",
            "t1",
            "join",
            "camera_lens",
            "as",
            "t2",
            "on",
            "t1.camera_lens_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t2.id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "photos",
            "as",
            "t1",
            "join",
            "camera_lens",
            "as",
            "t2",
            "on",
            "t1.camera_lens_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t2.id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
        "masked_template": "How many <mask> in each <mask> Return the <mask> names and the number of <mask>",
        "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "Find the name of the courses that do not have any prerequisite?",
        "masked_template": "Find the name of the <mask> that do not have any <mask>",
        "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
        "masked_template": "What is the <mask> and id of the <mask> which has the most number of <mask>",
        "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.organisation_type",
            ",",
            "t1.organisation_id",
            "from",
            "organisations",
            "as",
            "t1",
            "join",
            "research_staff",
            "as",
            "t2",
            "on",
            "t1.organisation_id",
            "=",
            "t2.employer_organisation_id",
            "group",
            "by",
            "t1.organisation_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organisation_type",
            ",",
            "t1.organisation_id",
            "from",
            "organisations",
            "as",
            "t1",
            "join",
            "research_staff",
            "as",
            "t2",
            "on",
            "t1.organisation_id",
            "=",
            "t2.employer_organisation_id",
            "group",
            "by",
            "t1.organisation_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "masked_template": "Return the name of each <mask> and the number of <mask> he or she <mask>",
        "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "physician",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.employeeid",
            "=",
            "t2.pcp",
            "group",
            "by",
            "t1.employeeid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "physician",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.employeeid",
            "=",
            "t2.pcp",
            "group",
            "by",
            "t1.employeeid"
        ]
    },
    {
        "question": "Count how many appointments have been made in total.",
        "masked_template": "Count how many <mask> have <mask> in <mask>",
        "query": "SELECT count( * ) FROM appointment",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "appointment"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "appointment"
        ]
    },
    {
        "question": "Which wineries produce at least four wines?",
        "masked_template": "Which <mask> at least <mask>",
        "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "winery",
            "from",
            "wine",
            "group",
            "by",
            "winery",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "winery",
            "from",
            "wine",
            "group",
            "by",
            "winery",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
        "masked_template": "What is the <mask> for the <mask> with <mask>",
        "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
        "ted": 0.0,
        "db_id": "behavior_monitoring",
        "query_toks": [
            "select",
            "incident_type_description",
            "from",
            "ref_incident_type",
            "where",
            "incident_type_code",
            "=",
            "\"VIOLENCE\""
        ],
        "query_toks_no_value": [
            "select",
            "incident_type_description",
            "from",
            "ref_incident_type",
            "where",
            "incident_type_code",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the name of dorms only for female (F gender).",
        "masked_template": "Find the name of <mask> for <mask> (F <mask>",
        "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "where",
            "gender",
            "=",
            "\"F\""
        ],
        "query_toks_no_value": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "where",
            "gender",
            "=",
            "value"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "What is the total number of faculty members?",
        "masked_template": "What is the total number of <mask>",
        "query": "SELECT count( * ) FROM Faculty",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ]
    },
    {
        "question": "Find the names of all the tracks that contain the word \"you\".",
        "masked_template": "Find the names of all the <mask> that <mask> the <mask>",
        "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "track",
            "where",
            "name",
            "like",
            "\"%you%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "track",
            "where",
            "name",
            "like",
            "value"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
        "masked_template": "<mask> me a list of all the <mask> names <mask> by the <mask> in <mask>",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ]
    },
    {
        "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
        "masked_template": "Find the most <mask> in the <mask> The most <mask> is the <mask> that had <mask> the <mask> number of <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all tracks that are on playlists titled Movies?",
        "masked_template": "What are the names of all <mask> that are on <mask>",
        "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "\"Movies\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "List the industry shared by the most companies.",
        "masked_template": "List the <mask> by the most <mask>",
        "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "industry",
            "from",
            "companies",
            "group",
            "by",
            "industry",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "industry",
            "from",
            "companies",
            "group",
            "by",
            "industry",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show all the faculty ranks and the number of students advised by each rank.",
        "masked_template": "Show all the <mask> and the number of <mask> by each <mask>",
        "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ],
        "query_toks_no_value": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ]
    },
    {
        "question": "Show the names of all the employees with role \"HR\".",
        "masked_template": "Show the names of all the <mask> with <mask>",
        "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "\"HR\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "value"
        ]
    },
    {
        "question": "How many different types of rooms are there?",
        "masked_template": "How many different <mask> of <mask> are <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
        "masked_template": "What are the <mask> of all the <mask> in the <mask> order of <mask>",
        "query": "SELECT venue FROM MATCH ORDER BY date DESC",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ]
    },
    {
        "question": "Show the delegate and committee information of elections.",
        "masked_template": "Show the <mask> and <mask> of <mask>",
        "query": "SELECT Delegate , Committee FROM election",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ]
    },
    {
        "question": "Show the number of audience in year 2008 or 2010.",
        "masked_template": "Show the number of <mask> in <mask> or <mask>",
        "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
        "ted": 0.08333333333333333,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "num_of_audience",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "2008",
            "or",
            "year",
            "=",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_audience",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "How many papers are published in total?",
        "masked_template": "How many <mask> are <mask> in <mask>",
        "query": "SELECT count( * ) FROM papers",
        "ted": 0.0,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "papers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "papers"
        ]
    },
    {
        "question": "What are the names of the clients who do not have any booking?",
        "masked_template": "What are the names of the <mask> who do not have any <mask>",
        "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID = T2.Client_ID",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "customer_name",
            "from",
            "clients",
            "except",
            "select",
            "t2.customer_name",
            "from",
            "bookings",
            "as",
            "t1",
            "join",
            "clients",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.client_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "clients",
            "except",
            "select",
            "t2.customer_name",
            "from",
            "bookings",
            "as",
            "t1",
            "join",
            "clients",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.client_id"
        ]
    },
    {
        "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
        "masked_template": "What are the <mask> of the <mask> whose <mask> is not <mask>",
        "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
        "ted": 0.0,
        "db_id": "book_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "book",
            "where",
            "writer",
            "!=",
            "\"Elaine Lee\""
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "book",
            "where",
            "writer",
            "!=",
            "value"
        ]
    },
    {
        "question": "Show all cities along with the number of drama workshop groups in each city.",
        "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
        "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ],
        "query_toks_no_value": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ]
    },
    {
        "question": "List the software platform shared by the greatest number of devices.",
        "masked_template": "List the <mask> by the <mask> number of <mask>",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the mail date of the document with id 7?",
        "masked_template": "What is the <mask> of the <mask> with id 7?",
        "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7",
        "ted": 0.0,
        "db_id": "cre_Doc_Control_Systems",
        "query_toks": [
            "select",
            "mailing_date",
            "from",
            "documents_mailed",
            "where",
            "document_id",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "mailing_date",
            "from",
            "documents_mailed",
            "where",
            "document_id",
            "=",
            "value"
        ]
    },
    {
        "question": "For each type, how many ships are there?",
        "masked_template": "For each <mask> how many <mask> are <mask>",
        "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
        "ted": 0.0,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ]
    },
    {
        "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
        "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
        "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ],
        "query_toks_no_value": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ]
    },
    {
        "question": "Show the census ranking of cities whose status are not \"Village\".",
        "masked_template": "Show the <mask> of <mask> whose <mask> are not <mask>",
        "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "census_ranking",
            "from",
            "city",
            "where",
            "status",
            "!=",
            "\"Village\""
        ],
        "query_toks_no_value": [
            "select",
            "census_ranking",
            "from",
            "city",
            "where",
            "status",
            "!=",
            "value"
        ]
    },
    {
        "question": "How many aircrafts exist in the database?",
        "masked_template": "How many <mask> in the <mask>",
        "query": "SELECT count( * ) FROM Aircraft",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "aircraft"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "aircraft"
        ]
    },
    {
        "question": "What are the names of all songs in English?",
        "masked_template": "What are the names of all <mask> in <mask>",
        "query": "SELECT song_name FROM song WHERE languages = 'english'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "languages",
            "=",
            "\"english\""
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "languages",
            "=",
            "value"
        ]
    },
    {
        "question": "Which district has the largest population?",
        "masked_template": "Which <mask> has the <mask>",
        "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "district_name",
            "from",
            "district",
            "order",
            "by",
            "city_population",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "district_name",
            "from",
            "district",
            "order",
            "by",
            "city_population",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the code of the course which the student whose last name is Smithson took?",
        "masked_template": "What is the <mask> of the <mask> which the <mask> whose <mask> name is <mask>",
        "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "enroll",
            "as",
            "t2",
            "on",
            "t1.class_code",
            "=",
            "t2.class_code",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t3.stu_num",
            "=",
            "t2.stu_num",
            "where",
            "t3.stu_lname",
            "=",
            "\"Smithson\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "enroll",
            "as",
            "t2",
            "on",
            "t1.class_code",
            "=",
            "t2.class_code",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t3.stu_num",
            "=",
            "t2.stu_num",
            "where",
            "t3.stu_lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Show names for all regions except for Denmark.",
        "masked_template": "Show names for all <mask> for <mask>",
        "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
        "ted": 0.0,
        "db_id": "storm_record",
        "query_toks": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "\"Denmark\""
        ],
        "query_toks_no_value": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the result description of the project whose detail is 'sint'?",
        "masked_template": "What are the <mask> of the <mask> whose <mask> is <mask>",
        "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'",
        "ted": 0.0,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.outcome_description",
            "from",
            "research_outcomes",
            "as",
            "t1",
            "join",
            "project_outcomes",
            "as",
            "t2",
            "on",
            "t1.outcome_code",
            "=",
            "t2.outcome_code",
            "join",
            "projects",
            "as",
            "t3",
            "on",
            "t2.project_id",
            "=",
            "t3.project_id",
            "where",
            "t3.project_details",
            "=",
            "\"sint\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.outcome_description",
            "from",
            "research_outcomes",
            "as",
            "t1",
            "join",
            "project_outcomes",
            "as",
            "t2",
            "on",
            "t1.outcome_code",
            "=",
            "t2.outcome_code",
            "join",
            "projects",
            "as",
            "t3",
            "on",
            "t2.project_id",
            "=",
            "t3.project_id",
            "where",
            "t3.project_details",
            "=",
            "value"
        ]
    },
    {
        "question": "For each building, show the name of the building and the number of institutions in it.",
        "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
        "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
        "ted": 0.0,
        "db_id": "protein_institute",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ]
    },
    {
        "question": "Find the names of all the products whose stock number starts with \"2\".",
        "masked_template": "Find the names of all the <mask> whose <mask> number <mask> with <mask>",
        "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE '2%'",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "where",
            "product_stock_number",
            "like",
            "\"2%\""
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "where",
            "product_stock_number",
            "like",
            "value"
        ]
    },
    {
        "question": "What are the names and ids of the tourist attractions that are visited at most once?",
        "masked_template": "What are the names and ids of the <mask> that are <mask> at most <mask>",
        "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.tourist_attraction_id",
            "from",
            "tourist_attractions",
            "as",
            "t1",
            "join",
            "visits",
            "as",
            "t2",
            "on",
            "t1.tourist_attraction_id",
            "=",
            "t2.tourist_attraction_id",
            "group",
            "by",
            "t2.tourist_attraction_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.tourist_attraction_id",
            "from",
            "tourist_attractions",
            "as",
            "t1",
            "join",
            "visits",
            "as",
            "t2",
            "on",
            "t1.tourist_attraction_id",
            "=",
            "t2.tourist_attraction_id",
            "group",
            "by",
            "t2.tourist_attraction_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "question": "How many hosts does each nationality have? List the nationality and the count.",
        "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
        "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "nationality",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "host",
            "group",
            "by",
            "nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "host",
            "group",
            "by",
            "nationality"
        ]
    },
    {
        "question": "List all headquarters and the number of companies in each headquarter.",
        "masked_template": "List all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
        "ted": 0.0,
        "db_id": "gas_company",
        "query_toks": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ],
        "query_toks_no_value": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ]
    },
    {
        "question": "List the name of all products along with the number of complaints that they have received.",
        "masked_template": "List the name of all <mask> with the number of <mask> that <mask> have <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "What are the first and last name of the faculty who has the most students?",
        "masked_template": "What are the <mask> and <mask> name of the <mask> who has the most <mask>",
        "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are all the different product names, and how many complains has each received?",
        "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "What are all the calendar dates and day Numbers?",
        "masked_template": "What are all the <mask> and day <mask>",
        "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "calendar_date",
            ",",
            "day_number",
            "from",
            "ref_calendar"
        ],
        "query_toks_no_value": [
            "select",
            "calendar_date",
            ",",
            "day_number",
            "from",
            "ref_calendar"
        ]
    },
    {
        "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
        "masked_template": "What is the <mask> and id of the <mask> that has the <mask> number of <mask> in <mask>",
        "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t1.title",
            ",",
            "t1.film_id",
            "from",
            "film",
            "as",
            "t1",
            "join",
            "inventory",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t1.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.title",
            ",",
            "t1.film_id",
            "from",
            "film",
            "as",
            "t1",
            "join",
            "inventory",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t1.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show all majors and corresponding number of students.",
        "masked_template": "Show all <mask> and <mask> number of <mask>",
        "query": "SELECT major , count( * ) FROM Student GROUP BY major",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "major",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "major"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "major"
        ]
    },
    {
        "question": "Show the names and ids of tourist attractions that are visited at most once.",
        "masked_template": "Show the names and ids of <mask> that are <mask> at most <mask>",
        "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.tourist_attraction_id",
            "from",
            "tourist_attractions",
            "as",
            "t1",
            "join",
            "visits",
            "as",
            "t2",
            "on",
            "t1.tourist_attraction_id",
            "=",
            "t2.tourist_attraction_id",
            "group",
            "by",
            "t2.tourist_attraction_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.tourist_attraction_id",
            "from",
            "tourist_attractions",
            "as",
            "t1",
            "join",
            "visits",
            "as",
            "t2",
            "on",
            "t1.tourist_attraction_id",
            "=",
            "t2.tourist_attraction_id",
            "group",
            "by",
            "t2.tourist_attraction_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<=",
            "value"
        ]
    },
    {
        "question": "What are the first names of all students that are not enrolled in courses?",
        "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ]
    },
    {
        "question": "List the names of products that are not in any event.",
        "masked_template": "List the names of <mask> that are not in any <mask>",
        "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
        "ted": 0.0,
        "db_id": "solvency_ii",
        "query_toks": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "products_in_events",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "products_in_events",
            ")"
        ]
    },
    {
        "question": "What is the number of technicians?",
        "masked_template": "What is the number of <mask>",
        "query": "SELECT count( * ) FROM technician",
        "ted": 0.0,
        "db_id": "machine_repair",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "technician"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "technician"
        ]
    },
    {
        "question": "How many vocal types are used in the song \"Le Pop\"?",
        "masked_template": "How many <mask> are <mask> in the <mask> \"Le <mask>",
        "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "\"Le Pop\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "value"
        ]
    },
    {
        "question": "Count the number of characteristics the product 'sesame' has.",
        "masked_template": "Count the number of <mask> the <mask>",
        "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
        "ted": 0.0,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t1.product_name",
            "=",
            "\"sesame\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t1.product_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.",
        "masked_template": "Return the <mask> id and <mask> number of the <mask> who has <mask> the <mask> number of <mask>",
        "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            ",",
            "t2.phone_number",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            ",",
            "t2.phone_number",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the student ID and personal name of the student with at least two enrollments.",
        "masked_template": "Find the <mask> ID and <mask> name of the <mask> with at least two <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Which project made the most number of outcomes? List the project details and the project id.",
        "masked_template": "Which <mask> the most number of <mask> List the <mask> and the <mask> id.",
        "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.project_details",
            ",",
            "t1.project_id",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "project_outcomes",
            "as",
            "t2",
            "on",
            "t1.project_id",
            "=",
            "t2.project_id",
            "group",
            "by",
            "t1.project_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.project_details",
            ",",
            "t1.project_id",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "project_outcomes",
            "as",
            "t2",
            "on",
            "t1.project_id",
            "=",
            "t2.project_id",
            "group",
            "by",
            "t1.project_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the name and code of the location with the smallest number of documents?",
        "masked_template": "What are the name and <mask> of the <mask> with the <mask> number of <mask>",
        "query": "SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count( * ) ASC LIMIT 1",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "t2.location_name",
            ",",
            "t1.location_code",
            "from",
            "document_locations",
            "as",
            "t1",
            "join",
            "ref_locations",
            "as",
            "t2",
            "on",
            "t1.location_code",
            "=",
            "t2.location_code",
            "group",
            "by",
            "t1.location_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.location_name",
            ",",
            "t1.location_code",
            "from",
            "document_locations",
            "as",
            "t1",
            "join",
            "ref_locations",
            "as",
            "t2",
            "on",
            "t1.location_code",
            "=",
            "t2.location_code",
            "group",
            "by",
            "t1.location_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the titles of all movies that have not been rated?",
        "masked_template": "What are the <mask> of all <mask> that have not <mask>",
        "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ]
    },
    {
        "question": "What is the total number of rooms available in this inn?",
        "masked_template": "What is the total number of <mask> in <mask>",
        "query": "SELECT count( * ) FROM Rooms",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "rooms"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "rooms"
        ]
    },
    {
        "question": "What are the names of technicians and the machine series that they repair?",
        "masked_template": "What are the names of <mask> and the <mask> that <mask>",
        "query": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
        "ted": 0.0,
        "db_id": "machine_repair",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.machine_series",
            "from",
            "repair_assignment",
            "as",
            "t1",
            "join",
            "machine",
            "as",
            "t2",
            "on",
            "t1.machine_id",
            "=",
            "t2.machine_id",
            "join",
            "technician",
            "as",
            "t3",
            "on",
            "t1.technician_id",
            "=",
            "t3.technician_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.machine_series",
            "from",
            "repair_assignment",
            "as",
            "t1",
            "join",
            "machine",
            "as",
            "t2",
            "on",
            "t1.machine_id",
            "=",
            "t2.machine_id",
            "join",
            "technician",
            "as",
            "t3",
            "on",
            "t1.technician_id",
            "=",
            "t3.technician_id"
        ]
    },
    {
        "question": "Find the name and hours of project that has the most number of scientists.",
        "masked_template": "Find the name and <mask> of <mask> that has the most number of <mask>",
        "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.027777777777777776,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many vocal types are used in the song \"Le Pop\"?",
        "masked_template": "How many <mask> are <mask> in the <mask> \"Le <mask>",
        "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "\"Le Pop\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "value"
        ]
    },
    {
        "question": "Show all product names without an order.",
        "masked_template": "Show all <mask> names <mask> an <mask>",
        "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "product_name",
            "from",
            "products",
            "except",
            "select",
            "t1.product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "except",
            "select",
            "t1.product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id"
        ]
    },
    {
        "question": "What are the names of enzymes in descending order?",
        "masked_template": "What are the names of <mask> in <mask>",
        "query": "SELECT name FROM enzyme ORDER BY name DESC",
        "ted": 0.0,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "name",
            "from",
            "enzyme",
            "order",
            "by",
            "name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "enzyme",
            "order",
            "by",
            "name",
            "desc"
        ]
    },
    {
        "question": "What is the first name of the staff who did not give any lesson?",
        "masked_template": "What is the <mask> name of the <mask> who did not <mask> any <mask>",
        "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ]
    },
    {
        "question": "What is detail of the student who registered the most number of courses?",
        "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the hometowns that are shared by at least two gymnasts?",
        "masked_template": "What are the <mask> that are <mask> by at least two <mask>",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "gymnast",
        "query_toks": [
            "select",
            "t2.hometown",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.gymnast_id",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.hometown",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.gymnast_id",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Find all the campuses opened in 1958.",
        "masked_template": "Find all the <mask> in <mask>",
        "query": "SELECT campus FROM campuses WHERE YEAR = 1958",
        "ted": 0.0,
        "db_id": "csu_1",
        "query_toks": [
            "select",
            "campus",
            "from",
            "campuses",
            "where",
            "year",
            "=",
            "1958"
        ],
        "query_toks_no_value": [
            "select",
            "campus",
            "from",
            "campuses",
            "where",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "Which party has two or more records?",
        "masked_template": "Which <mask> has two or more <mask>",
        "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "party",
            "from",
            "party",
            "group",
            "by",
            "party",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "party",
            "from",
            "party",
            "group",
            "by",
            "party",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?",
        "masked_template": "What are the <mask> that have a <mask> that <mask> in <mask> and a <mask> with more than 100 <mask>",
        "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
        "ted": 0.09090909090909091,
        "db_id": "shop_membership",
        "query_toks": [
            "select",
            "city",
            "from",
            "branch",
            "where",
            "open_year",
            "=",
            "2001",
            "and",
            "membership_amount",
            ">",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "branch",
            "where",
            "open_year",
            "=",
            "value",
            "and",
            "membership_amount",
            ">",
            "value"
        ]
    },
    {
        "question": "Show the name and location of track with 1 race.",
        "masked_template": "Show the name and <mask> of <mask> with 1 <mask>",
        "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
        "ted": 0.027777777777777776,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "t2.location",
            "from",
            "race",
            "as",
            "t1",
            "join",
            "track",
            "as",
            "t2",
            "on",
            "t1.track_id",
            "=",
            "t2.track_id",
            "group",
            "by",
            "t1.track_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "t2.location",
            "from",
            "race",
            "as",
            "t1",
            "join",
            "track",
            "as",
            "t2",
            "on",
            "t1.track_id",
            "=",
            "t2.track_id",
            "group",
            "by",
            "t1.track_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the id for the employee called Ebba?",
        "masked_template": "What is the id for the <mask>",
        "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "employee_name",
            "=",
            "\"Ebba\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "employee_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the total number of faculty members?",
        "masked_template": "What is the total number of <mask>",
        "query": "SELECT count( * ) FROM Faculty",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ]
    },
    {
        "question": "Count the number of documents with expenses.",
        "masked_template": "Count the number of <mask> with <mask>",
        "query": "SELECT count( * ) FROM Documents_with_expenses",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses"
        ]
    },
    {
        "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
        "masked_template": "Find the most <mask> in the <mask> The most <mask> is the <mask> that had <mask> the <mask> number of <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the titles of all movies that have no ratings.",
        "masked_template": "Find the <mask> of all <mask> that have no <mask>",
        "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ]
    },
    {
        "question": "Show all role codes with at least 3 employees.",
        "masked_template": "Show all <mask> with at least 3 <mask>",
        "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count( * ) >= 3",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "role_code",
            "from",
            "employees",
            "group",
            "by",
            "role_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "employees",
            "group",
            "by",
            "role_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many products are there in the records?",
        "masked_template": "How many <mask> are there in the <mask>",
        "query": "SELECT count( * ) FROM catalog_contents",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ]
    },
    {
        "question": "What is the name and city of the airport from most of the routes start?",
        "masked_template": "What is the name and <mask> of the <mask> most of the <mask>",
        "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.city",
            ",",
            "t2.src_apid",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.src_apid",
            "group",
            "by",
            "t2.src_apid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.city",
            ",",
            "t2.src_apid",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.src_apid",
            "group",
            "by",
            "t2.src_apid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all the races that occurred in the year 2017?",
        "masked_template": "What are the names of all the <mask> that <mask> in the <mask>",
        "query": "SELECT name FROM races WHERE YEAR = 2017",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "races",
            "where",
            "year",
            "=",
            "2017"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "races",
            "where",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "How many courses does the department of Computer Information Systmes offer?",
        "masked_template": "How many <mask> the <mask> of <mask>",
        "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "department",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.dept_code",
            "=",
            "t2.dept_code",
            "where",
            "dept_name",
            "=",
            "\"Computer Info. Systems\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "department",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.dept_code",
            "=",
            "t2.dept_code",
            "where",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "What are the names of courses without prerequisites?",
        "masked_template": "What are the names of <mask>",
        "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "Find the name, account type, and account balance of the customer who has the highest credit score.",
        "masked_template": "Find the <mask> and <mask> of the <mask> who has the <mask>",
        "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
        "ted": 0.045454545454545456,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "cust_name",
            ",",
            "acc_type",
            ",",
            "acc_bal",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            ",",
            "acc_type",
            ",",
            "acc_bal",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the product id and product type of the cheapest product?",
        "masked_template": "What are the <mask> id and <mask> of the <mask>",
        "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.",
        "masked_template": "Find the number of <mask> of <mask> is <mask> in <mask>",
        "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
        "ted": 0.041666666666666664,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "1885",
            "and",
            "ties",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "value",
            "and",
            "ties",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the name, type, and flag of the ship that was built in the most recent year?",
        "masked_template": "What is the <mask> and <mask> of the <mask> that was <mask> in the most <mask>",
        "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
        "ted": 0.045454545454545456,
        "db_id": "ship_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "type",
            ",",
            "flag",
            "from",
            "ship",
            "order",
            "by",
            "built_year",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "type",
            ",",
            "flag",
            "from",
            "ship",
            "order",
            "by",
            "built_year",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List the name of all tracks in the playlists of Movies.",
        "masked_template": "List the name of all <mask> in the <mask> of <mask>",
        "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "\"Movies\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the total number of faculty members?",
        "masked_template": "What is the total number of <mask>",
        "query": "SELECT count( * ) FROM Faculty",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ]
    },
    {
        "question": "What is detail of the student who registered the most number of courses?",
        "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all the clubs ordered in descending alphabetical order?",
        "masked_template": "What are the names of all the <mask> ordered in <mask>",
        "query": "SELECT name FROM club ORDER BY name DESC",
        "ted": 0.0,
        "db_id": "sports_competition",
        "query_toks": [
            "select",
            "name",
            "from",
            "club",
            "order",
            "by",
            "name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "order",
            "by",
            "name",
            "desc"
        ]
    },
    {
        "question": "List first name and last name of customers that have more than 2 payments.",
        "masked_template": "List <mask> name and <mask> name of <mask> that have more than 2 <mask>",
        "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
        "ted": 0.027777777777777776,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "customer_payments",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "customer_payments",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "What is the first name of all employees who do not give any lessons?",
        "masked_template": "What is the <mask> name of all <mask> who do not <mask> any <mask>",
        "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ]
    },
    {
        "question": "What is the position that is most common among players in match seasons?",
        "masked_template": "What is the <mask> that is most <mask> in <mask>",
        "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the carrier of the most expensive phone?",
        "masked_template": "What is the <mask> of the most <mask>",
        "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "phone_market",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "phone",
            "order",
            "by",
            "price",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "phone",
            "order",
            "by",
            "price",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many distinct payment methods are used by parties?",
        "masked_template": "How many distinct <mask> are <mask> by <mask>",
        "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "payment_method_code",
            ")",
            "from",
            "parties"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "payment_method_code",
            ")",
            "from",
            "parties"
        ]
    },
    {
        "question": "How many aircrafts exist in the database?",
        "masked_template": "How many <mask> in the <mask>",
        "query": "SELECT count( * ) FROM Aircraft",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "aircraft"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "aircraft"
        ]
    },
    {
        "question": "Return the name of the organization which has the most contact individuals.",
        "masked_template": "Return the name of the <mask> which has the most <mask>",
        "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show first name and id for all customers with at least 2 accounts.",
        "masked_template": "Show <mask> name and id for all <mask> with at least 2 <mask>",
        "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t2.customer_first_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_first_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the name of the technician whose team is not 'NYY'?",
        "masked_template": "What is the name of the <mask> whose <mask> is not <mask>",
        "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
        "ted": 0.0,
        "db_id": "machine_repair",
        "query_toks": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "\"NYY\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the names of all aicrafts that have never won any match?",
        "masked_template": "What are the names of all <mask> that have <mask> won any <mask>",
        "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "not",
            "in",
            "(",
            "select",
            "winning_aircraft",
            "from",
            "match",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "not",
            "in",
            "(",
            "select",
            "winning_aircraft",
            "from",
            "match",
            ")"
        ]
    },
    {
        "question": "Find the name, city, and country of the airport that has the lowest altitude.",
        "masked_template": "Find the <mask> and <mask> of the <mask> that has the <mask>",
        "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "name",
            ",",
            "city",
            ",",
            "country",
            "from",
            "airports",
            "order",
            "by",
            "elevation",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "city",
            ",",
            "country",
            "from",
            "airports",
            "order",
            "by",
            "elevation",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
        "masked_template": "What are the names of all <mask> that <mask> have <mask> to be <mask> to <mask>",
        "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "\"John Williams\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "For each user, find their name and the number of reviews written by them.",
        "masked_template": "For each <mask> find their name and the number of <mask> by <mask>",
        "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
        "ted": 0.0,
        "db_id": "epinions_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "useracct",
            "as",
            "t1",
            "join",
            "review",
            "as",
            "t2",
            "on",
            "t1.u_id",
            "=",
            "t2.u_id",
            "group",
            "by",
            "t2.u_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "useracct",
            "as",
            "t1",
            "join",
            "review",
            "as",
            "t2",
            "on",
            "t1.u_id",
            "=",
            "t2.u_id",
            "group",
            "by",
            "t2.u_id"
        ]
    },
    {
        "question": "What are the details of the student who registered for the most number of courses?",
        "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.",
        "masked_template": "For each <mask> show the name of the <mask> and name of the <mask> it is <mask>",
        "query": "SELECT T2.Name , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",
        "ted": 0.0,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "t3.festival_name",
            "from",
            "nomination",
            "as",
            "t1",
            "join",
            "artwork",
            "as",
            "t2",
            "on",
            "t1.artwork_id",
            "=",
            "t2.artwork_id",
            "join",
            "festival_detail",
            "as",
            "t3",
            "on",
            "t1.festival_id",
            "=",
            "t3.festival_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "t3.festival_name",
            "from",
            "nomination",
            "as",
            "t1",
            "join",
            "artwork",
            "as",
            "t2",
            "on",
            "t1.artwork_id",
            "=",
            "t2.artwork_id",
            "join",
            "festival_detail",
            "as",
            "t3",
            "on",
            "t1.festival_id",
            "=",
            "t3.festival_id"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "What is the oldest log id and its corresponding problem id?",
        "masked_template": "What is the <mask> log id and its <mask> id?",
        "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_software_problems",
        "query_toks": [
            "select",
            "problem_log_id",
            ",",
            "problem_id",
            "from",
            "problem_log",
            "order",
            "by",
            "log_entry_date",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "problem_log_id",
            ",",
            "problem_id",
            "from",
            "problem_log",
            "order",
            "by",
            "log_entry_date",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the id of the employee named Ebba.",
        "masked_template": "Show the id of the <mask> named <mask>",
        "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "employee_name",
            "=",
            "\"Ebba\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "employee_name",
            "=",
            "value"
        ]
    },
    {
        "question": "List the names of aircrafts and that won matches at least twice.",
        "masked_template": "List the names of <mask> and that won <mask> at least <mask>",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What parties have at least three representatives?",
        "masked_template": "What <mask> have at least <mask>",
        "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT( * ) >= 3",
        "ted": 0.0,
        "db_id": "election_representative",
        "query_toks": [
            "select",
            "party",
            "from",
            "representative",
            "group",
            "by",
            "party",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "party",
            "from",
            "representative",
            "group",
            "by",
            "party",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
        "masked_template": "What are the names of all <mask> that <mask> have <mask> to be <mask> to <mask>",
        "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "\"John Williams\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the name of the courses that do not have any prerequisite?",
        "masked_template": "Find the name of the <mask> that do not have any <mask>",
        "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
        "masked_template": "What are the <mask> number and <mask> of the <mask> who <mask> the <mask> number of <mask>",
        "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show all the faculty ranks and the number of students advised by each rank.",
        "masked_template": "Show all the <mask> and the number of <mask> by each <mask>",
        "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ],
        "query_toks_no_value": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ]
    },
    {
        "question": "What are the first and last names of the employee with the earliest date of birth?",
        "masked_template": "What are the <mask> and <mask> names of the <mask> with the <mask> of <mask>",
        "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "emp_fname",
            ",",
            "emp_lname",
            "from",
            "employee",
            "order",
            "by",
            "emp_dob",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "emp_fname",
            ",",
            "emp_lname",
            "from",
            "employee",
            "order",
            "by",
            "emp_dob",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the details of the student who registered for the most number of courses?",
        "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the most common position of players in match seasons.",
        "masked_template": "Show the most <mask> of <mask> in <mask>",
        "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the manager's first name, last name and id who won the most manager award?",
        "masked_template": "What are the <mask> name and id who won the most <mask>",
        "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all tracks that are on playlists titled Movies?",
        "masked_template": "What are the names of all <mask> that are on <mask>",
        "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "\"Movies\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "What are the authors of submissions and their colleges?",
        "masked_template": "What are the <mask> of <mask> and their <mask>",
        "query": "SELECT Author , College FROM submission",
        "ted": 0.0,
        "db_id": "workshop_paper",
        "query_toks": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ],
        "query_toks_no_value": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "List the details of the customers who do not have any policies.",
        "masked_template": "List the <mask> of the <mask> who do not have any <mask>",
        "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id",
        "ted": 0.0,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "except",
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "except",
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ]
    },
    {
        "question": "What is the total number of rooms available in this inn?",
        "masked_template": "What is the total number of <mask> in <mask>",
        "query": "SELECT count( * ) FROM Rooms",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "rooms"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "rooms"
        ]
    },
    {
        "question": "What is the total number of faculty members?",
        "masked_template": "What is the total number of <mask>",
        "query": "SELECT count( * ) FROM Faculty",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ]
    },
    {
        "question": "Show the home city with the most number of drivers.",
        "masked_template": "Show the <mask> with the most number of <mask>",
        "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_bus",
        "query_toks": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the details and star ratings of the 3 least expensive hotels.",
        "masked_template": "Show the <mask> and <mask> of the 3 least <mask>",
        "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "other_hotel_details",
            ",",
            "star_rating_code",
            "from",
            "hotels",
            "order",
            "by",
            "price_range",
            "asc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "other_hotel_details",
            ",",
            "star_rating_code",
            "from",
            "hotels",
            "order",
            "by",
            "price_range",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all employees who have a certificate to fly Boeing 737-800?",
        "masked_template": "What are the names of all <mask> who have a <mask> to fly <mask>",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "\"Boeing 737-800\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "How many different students are involved in sports?",
        "masked_template": "How many different <mask> are <mask> in <mask>",
        "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
        "ted": 0.0,
        "db_id": "game_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "stuid",
            ")",
            "from",
            "sportsinfo"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "stuid",
            ")",
            "from",
            "sportsinfo"
        ]
    },
    {
        "question": "What are the details of the car with id 1?",
        "masked_template": "What are the <mask> of the car with id 1?",
        "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "vehicle_details",
            "from",
            "vehicles",
            "where",
            "vehicle_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "vehicle_details",
            "from",
            "vehicles",
            "where",
            "vehicle_id",
            "=",
            "value"
        ]
    }
]