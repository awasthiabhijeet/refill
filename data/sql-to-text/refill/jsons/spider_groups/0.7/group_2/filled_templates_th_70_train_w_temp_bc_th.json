[
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "What are the email address, cell number, and home phone number of all professionals?",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs are involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( DISTINCT pettype ) FROM pets",
        "question": "Count the number of different pet types that are there.",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "What is the number of pets with a weight greater than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT professional_id ) FROM Treatments",
        "question": "Count the number of different professional ids that are involved in treatments",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "How many physicians are not involved in the treatments listed?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "What are the ids and cell numbers of the professionals that have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
        "question": "Show the first names of professionals and the names of the treatment type descriptions.",
        "query_toks": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "List all the distinct breed codes and the sizes of dogs.",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "What are the email address, cell number and home phone number of all professionals?",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( charge_amount ) FROM Charges",
        "question": "What is the maximum charge amount on any charge?",
        "query_toks": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What are the pet type and weight of the youngest pet?",
        "query_toks": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "What is the average age of the dogs who are undergoing treatments?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs do we have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( DISTINCT pettype ) FROM pets",
        "question": "How many different pet types do we have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max( age ) FROM Dogs )",
        "question": "Find the last name of the owner whose oldest dog is the oldest dog.",
        "query_toks": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'",
        "question": "What are the last names of all the students who are 4 years old and have a pet of type 'dog'?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "4",
            "and",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 2",
        "question": "Find the name and gender of the students who have pets with a total pet value of more than 2.",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the id, first name and last name of the owner who owns the greatest number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max( age ) FROM Dogs )",
        "question": "What are the last names of the owners who have the oldest dog?",
        "query_toks": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets have a weight greater than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets has a weight greater than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max( age ) FROM Dogs )",
        "question": "Find the last names of owners whose dogs are older than the oldest dog.",
        "query_toks": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
        "question": "What are the first names and descriptions of all the different treatment types?",
        "query_toks": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max( age ) FROM Dogs )",
        "question": "What is the last name of the owner of the oldest dog?",
        "query_toks": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",
        "question": "Find the number of pets for each student and the student id.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",
        "question": "What are the first names and ages of all students who have a pet?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "What are the cost and description of each treatment type?",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the breed codes and sizes of each dog in the database?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "What is the average age for dogs who have been given a treatment?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "Find the average age of dogs who are undergoing any treatment.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "Count the number of professionals who do not have any treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners who do not have any dogs.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT max( weight ) , petType FROM pets GROUP BY petType",
        "question": "Find the maximum weight of all pets for each pet type.",
        "query_toks": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",
        "question": "What are the different names and ages of students who have a pet?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum( T3.cost_of_treatment ) DESC LIMIT 1",
        "question": "Show the id and the zip code of the owner who has the most number of treatments.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first names of all owners who have a dog and the name of the owner?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT professional_id ) FROM Treatments",
        "question": "Count the number of distinct physicians involved in treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "Tell me the cost and description for each treatment type.",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'",
        "question": "Find all the last names of students who are 4 years old and have a pet of type 'dog'.",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "4",
            "and",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the weight of the pet that has the oldest age?",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 3",
        "question": "What are the ids, role codes and first names of the professionals who have at least 3 treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 2",
        "question": "Return the first names and genders of the students that have more than two pet in their record.",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What is the average and maximum pet age for each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "Count the number of professionals that are not involved in any treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",
        "question": "What are the ids of all the students and how many pets correspond to each of them?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "How many owners are not associated with the dogs listed?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners that do not have any dogs.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "Count the number of students who have a pet of age above 19.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the different breed codes and sizes of dogs?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
        "question": "Find the first names of all professionals who have used treatments and the treatment type description.",
        "query_toks": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first names of owners as well as the names of the dogs they are related to?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "Count the number of pets that have a number of weights higher than 11.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number and home phone number of all professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "For each owner, what are their first and last names, and what are the sizes of their dogs?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( charge_amount ) FROM Charges",
        "question": "What is the maximum charge amount across all charges?",
        "query_toks": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners who did not have any dogs.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
        "question": "Show the first name and description of the treatment type for all professionals.",
        "query_toks": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",
        "question": "How many pet does each student have? List the number and the student id.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What are the average and maximum ages of pets for each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT max( weight ) , petType FROM pets GROUP BY petType",
        "question": "What is the maximum weight for each pet type?",
        "query_toks": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id and last name of the owner that have treated the most number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Find the id and cell number of the professionals with at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 2",
        "question": "What are the first names and genders of students who had at least two pets?",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What is the full name and size code of the owner of each pet?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner has the greatest number of treatments? Tell me the owner id and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different kinds of dogs are involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Show the pet type and weight of the youngest pet.",
        "query_toks": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",
        "question": "How many pet does each student have? List the count and the student id.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Tell me the arrival date and departure date of each dog.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "Find the average age of the dogs that are treated by any treatment.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 3",
        "question": "What are the ids, role codes, and first names of the professionals who have at least 3 treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Which professionals are involved in at least two treatments? Give me the professional ID and cell number.",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "Show the average age of all dogs.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the distinct breed codes and the sizes of dogs?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "what are the pet type and weight of the youngest pet?",
        "query_toks": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "How many professionals are not involved in any treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( charge_amount ) FROM Charges",
        "question": "Find the maximum charge amount across all the charges.",
        "query_toks": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Show the ids and cell numbers of the professionals who have at least two treatments.",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 2",
        "question": "What are the first names and genders of the students that have two or more pets?",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What are the pet type and weight of the pet with the oldest age?",
        "query_toks": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT max( weight ) , petType FROM pets GROUP BY petType",
        "question": "For each pet type, what is the maximum weight of that pet type?",
        "query_toks": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
        "question": "For all the treatments of different types, what are all the first names of the professionals trying to fix them? List the name of the treatments and the type description.",
        "query_toks": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t3.treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2.treatment_type_code",
            "=",
            "t3.treatment_type_code"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( DISTINCT pettype ) FROM pets",
        "question": "How many distinct pet types are there for all pets?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 3",
        "question": "Show the ids, role codes, first names of all the professionals who have at least 3 treatments.",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners who do not have a dog.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT professional_id ) FROM Treatments",
        "question": "Count the number of different physicians involved in treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Find the weight of the pet that has the oldest age.",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT max( weight ) , petType FROM pets GROUP BY petType",
        "question": "What is the maximum weight of each pet type?",
        "query_toks": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id, first name and last name of the owner who has the most dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "Find the average and maximum pet age for each pet type.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the breed codes and sizes of all the dogs?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "Show the number of all professionals without any treatment.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "Count the total number of pet owned by students who are older than 19",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'",
        "question": "Find the last name of the student whose pet is 4 years old and has type \"dog\".",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "4",
            "and",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max( age ) FROM Dogs )",
        "question": "Find the last name of the owner that has the oldest number of dogs.",
        "query_toks": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "where",
            "t2.age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner owns the most number of dogs? List the owner id, first name and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "List the first and last name of each owner and the size of the dogs that they have.",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",
        "question": "How many pet does each student have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the ids, first names and last names of the owners with the greatest number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first name, last name, and size of the dogs owned by each owner?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t1.last_name",
            ",",
            "t2.size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < ( SELECT avg( cost_of_treatment ) FROM Treatments )",
        "question": "What are the distinct first names and last names of the professionals who are involved in treatments that cost less than the average?",
        "query_toks": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t1.last_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "where",
            "cost_of_treatment",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "cost_of_treatment",
            ")",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.first_name",
            ",",
            "t1.last_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "where",
            "cost_of_treatment",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "cost_of_treatment",
            ")",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum( T3.cost_of_treatment ) DESC LIMIT 1",
        "question": "Find the id and zip code of the owner who treats the most number of dogs.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the owner id, first name and last name of the dog with the most owners.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the pet type and weight for the pet with the oldest age?",
        "query_toks": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number and home phone of all professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( DISTINCT pettype ) FROM pets",
        "question": "How many different pet types exist?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "What is the average age of all dogs?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum( T3.cost_of_treatment ) DESC LIMIT 1",
        "question": "Return the id and zip code of the owner that is in charge of the most expensive treatment.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first names of owners and the names of the dogs they are related to?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs have been involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'",
        "question": "What are the last names of all students who are 4 years old and have a pet of type 'dog'?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "4",
            "and",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "Find the number of pets for the students with age above 19",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number, and home phone of all the professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",
        "question": "Please list the first names and ages of all students who have a pet.",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( charge_amount ) FROM Charges",
        "question": "What is the maximum charge amount in the record?",
        "query_toks": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many distinct dogs are there for all treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner has the most number of treatments related to dogs? List owner id and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question": "What are the states that are shared by owners and professionals?",
        "query_toks": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Return the arrival date and departure date for each dog.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'",
        "question": "Show the last names of all the students who are 4 years old and have a pet of type 'dog'.",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "4",
            "and",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "Find the number of distinct dogs who are undergoing treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "Count the average age of dogs that are undergoing treatments.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the id and last name of the owner who treats the most number of dogs.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT professional_id ) FROM Treatments",
        "question": "How many different professional ids do we have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( charge_amount ) FROM Charges",
        "question": "Return the maximum charge amount across all charges.",
        "query_toks": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "What is the total number of pets owned by students with age more than 19?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the weight of the pet with the oldest age?",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT professional_id ) FROM Treatments",
        "question": "How many different physicians are involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT professional_id ) FROM Treatments",
        "question": "How many distinct professional ids are there for all treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",
        "question": "Find the number of pets possessed by each student as well as the student id.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id and last name of the owner who has the most treatments?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "Find the cost of treatment and description of each treatment type.",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Show the arrival date and departure date of all dogs.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets have more than 11 pounds of weight?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum( T3.cost_of_treatment ) DESC LIMIT 1",
        "question": "Which owner paid the most number of times to treat his or her dog? List owner id and zip code.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3.cost_of_treatment",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What are the average and maximum pet age for each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "Find the first names of all owners who have a dog and the name of the owner.",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "What is the average age for all the dogs?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What are the average and maximum ages of pets in each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the ids and last names of all owners who specialized in the most treatments?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "What is the average age of dogs undergoing any treatment?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( DISTINCT pettype ) FROM pets",
        "question": "How many different types of pets are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'",
        "question": "Find the last names of all the students who are 4 years old and have a pet of type 'dog'.",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "4",
            "and",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number and home phone number for all professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "How many students are older than 19?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Find the ids and cell numbers of the professionals that have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "Show the cost of treatment and the treatment type description.",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 2",
        "question": "What are the first names and genders of all students who have at least two pet?",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets have a weight higher than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",
        "question": "What are the distinct names and ages of the students who have a pet?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            ",",
            "t1.age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question": "What are the names of all the states that have both owners and professionals?",
        "query_toks": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ]
    },
    {
        "question": "What is the maximum enrollment across all schools?",
        "masked_template": "What is the maximum <mask> all <mask>",
        "query": "SELECT max( Enrollment ) FROM university",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ]
    },
    {
        "question": "What are the average price and score of wines for each appelation?",
        "masked_template": "What are the average <mask> and <mask> of <mask> for each <mask>",
        "query": "SELECT avg( Price ) , avg( Score ) , Appelation FROM WINE GROUP BY Appelation",
        "ted": 0.045454545454545456,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "price",
            ")",
            ",",
            "avg",
            "(",
            "score",
            ")",
            ",",
            "appelation",
            "from",
            "wine",
            "group",
            "by",
            "appelation"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "price",
            ")",
            ",",
            "avg",
            "(",
            "score",
            ")",
            ",",
            "appelation",
            "from",
            "wine",
            "group",
            "by",
            "appelation"
        ]
    },
    {
        "question": "What is the average and oldest age for each gender of student?",
        "masked_template": "What is the average and <mask> age for each <mask> of <mask>",
        "query": "SELECT avg( age ) , max( age ) , sex FROM student GROUP BY sex",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            ",",
            "sex",
            "from",
            "student",
            "group",
            "by",
            "sex"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            ",",
            "sex",
            "from",
            "student",
            "group",
            "by",
            "sex"
        ]
    },
    {
        "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
        "masked_template": "Which <mask> are <mask> in at least two <mask> me the <mask> ID and <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "masked_template": "How many distinct <mask> are there for all <mask>",
        "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ]
    },
    {
        "question": "Show the number of all customers without an account.",
        "masked_template": "Show the number of all <mask> an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_card_transactions",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "How many different types of rooms are there?",
        "masked_template": "How many different <mask> of <mask> are <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "How many accelerators are not compatible with the browsers listed ?",
        "masked_template": "How many <mask> are not <mask> with the <mask> listed ?",
        "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
        "ted": 0.0,
        "db_id": "browser_web",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ]
    },
    {
        "question": "Find the name of customer who has the lowest credit score.",
        "masked_template": "Find the name of <mask> who has the <mask>",
        "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "cust_name",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "limit",
            "value"
        ]
    },
    {
        "question": "List all the distinct president votes and the vice president votes.",
        "masked_template": "List all the distinct <mask> and the <mask>",
        "query": "SELECT DISTINCT President_Vote , VICE_President_Vote FROM VOTING_RECORD",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "distinct",
            "president_vote",
            ",",
            "vice_president_vote",
            "from",
            "voting_record"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "president_vote",
            ",",
            "vice_president_vote",
            "from",
            "voting_record"
        ]
    },
    {
        "question": "What are the names of parties and their respective regions?",
        "masked_template": "What are the names of <mask> and their <mask>",
        "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
        "ted": 0.08333333333333333,
        "db_id": "party_people",
        "query_toks": [
            "select",
            "t1.party_name",
            ",",
            "t2.region_name",
            "from",
            "party",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1.region_id",
            "=",
            "t2.region_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.party_name",
            ",",
            "t2.region_name",
            "from",
            "party",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1.region_id",
            "=",
            "t2.region_id"
        ]
    },
    {
        "question": "Find the number of items without any review.",
        "masked_template": "Find the number of <mask> any <mask>",
        "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
        "ted": 0.09090909090909091,
        "db_id": "epinions_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "item",
            "where",
            "i_id",
            "not",
            "in",
            "(",
            "select",
            "i_id",
            "from",
            "review",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "item",
            "where",
            "i_id",
            "not",
            "in",
            "(",
            "select",
            "i_id",
            "from",
            "review",
            ")"
        ]
    },
    {
        "question": "Show the themes of parties and the names of the party hosts.",
        "masked_template": "Show the <mask> of <mask> and the names of the <mask>",
        "query": "SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",
        "ted": 0.05555555555555555,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "t3.party_theme",
            ",",
            "t2.name",
            "from",
            "party_host",
            "as",
            "t1",
            "join",
            "host",
            "as",
            "t2",
            "on",
            "t1.host_id",
            "=",
            "t2.host_id",
            "join",
            "party",
            "as",
            "t3",
            "on",
            "t1.party_id",
            "=",
            "t3.party_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.party_theme",
            ",",
            "t2.name",
            "from",
            "party_host",
            "as",
            "t1",
            "join",
            "host",
            "as",
            "t2",
            "on",
            "t1.host_id",
            "=",
            "t2.host_id",
            "join",
            "party",
            "as",
            "t3",
            "on",
            "t1.party_id",
            "=",
            "t3.party_id"
        ]
    },
    {
        "question": "What are the names of cities, as well as the names of the counties they correspond to?",
        "masked_template": "What are the names of <mask> as <mask> as the names of the <mask> to?",
        "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ]
    },
    {
        "question": "Show the school name and driver name for all school buses.",
        "masked_template": "Show the <mask> name and <mask> name for all <mask>",
        "query": "SELECT T2.school , T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id",
        "ted": 0.05555555555555555,
        "db_id": "school_bus",
        "query_toks": [
            "select",
            "t2.school",
            ",",
            "t3.name",
            "from",
            "school_bus",
            "as",
            "t1",
            "join",
            "school",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id",
            "join",
            "driver",
            "as",
            "t3",
            "on",
            "t1.driver_id",
            "=",
            "t3.driver_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.school",
            ",",
            "t3.name",
            "from",
            "school_bus",
            "as",
            "t1",
            "join",
            "school",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id",
            "join",
            "driver",
            "as",
            "t3",
            "on",
            "t1.driver_id",
            "=",
            "t3.driver_id"
        ]
    },
    {
        "question": "Show names of climbers and the names of mountains they climb.",
        "masked_template": "Show names of <mask> and the names of <mask>",
        "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
        "ted": 0.08333333333333333,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "climber",
            "as",
            "t1",
            "join",
            "mountain",
            "as",
            "t2",
            "on",
            "t1.mountain_id",
            "=",
            "t2.mountain_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "climber",
            "as",
            "t1",
            "join",
            "mountain",
            "as",
            "t2",
            "on",
            "t1.mountain_id",
            "=",
            "t2.mountain_id"
        ]
    },
    {
        "question": "Show names of ships involved in a mission launched after 1928.",
        "masked_template": "Show names of <mask> in a <mask>",
        "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928",
        "ted": 0.07142857142857142,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "mission",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "where",
            "t1.launched_year",
            ">",
            "1928"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "mission",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "where",
            "t1.launched_year",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the average enrollment number?",
        "masked_template": "What is the average <mask>",
        "query": "SELECT avg( enr ) FROM College",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "avg",
            "(",
            "enr",
            ")",
            "from",
            "college"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "enr",
            ")",
            "from",
            "college"
        ]
    },
    {
        "question": "List the creation year, name and budget of each department.",
        "masked_template": "List the <mask> name and <mask> of each <mask>",
        "query": "SELECT creation , name , budget_in_billions FROM department",
        "ted": 0.0,
        "db_id": "department_management",
        "query_toks": [
            "select",
            "creation",
            ",",
            "name",
            ",",
            "budget_in_billions",
            "from",
            "department"
        ],
        "query_toks_no_value": [
            "select",
            "creation",
            ",",
            "name",
            ",",
            "budget_in_billions",
            "from",
            "department"
        ]
    },
    {
        "question": "Display the first name and department name for each employee.",
        "masked_template": "<mask> the <mask> name and <mask> name for each <mask>",
        "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ]
    },
    {
        "question": "What is the average number of international passengers for an airport?",
        "masked_template": "What is the average number of <mask> for an <mask>",
        "query": "SELECT avg( International_Passengers ) FROM airport",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "avg",
            "(",
            "international_passengers",
            ")",
            "from",
            "airport"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "international_passengers",
            ")",
            "from",
            "airport"
        ]
    },
    {
        "question": "Show the unique first names, last names, and phone numbers for all customers with any account.",
        "masked_template": "Show the <mask> and <mask> numbers for all <mask> with any <mask>",
        "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name , T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
        "ted": 0.07142857142857142,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "distinct",
            "t1.customer_first_name",
            ",",
            "t1.customer_last_name",
            ",",
            "t1.phone_number",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.customer_first_name",
            ",",
            "t1.customer_last_name",
            ",",
            "t1.phone_number",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ]
    },
    {
        "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
        "masked_template": "What are the <mask> names and <mask> rep ids for <mask> 10 or more <mask>",
        "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
        "ted": 0.1,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "t1.firstname",
            ",",
            "t1.supportrepid",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.supportrepid",
            "=",
            "t2.employeeid",
            "group",
            "by",
            "t1.supportrepid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "t1.firstname",
            ",",
            "t1.supportrepid",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.supportrepid",
            "=",
            "t2.employeeid",
            "group",
            "by",
            "t1.supportrepid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Show the protein name and the institution name.",
        "masked_template": "Show the <mask> name and the <mask>",
        "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
        "ted": 0.0,
        "db_id": "protein_institute",
        "query_toks": [
            "select",
            "t2.protein_name",
            ",",
            "t1.institution",
            "from",
            "institution",
            "as",
            "t1",
            "join",
            "protein",
            "as",
            "t2",
            "on",
            "t1.institution_id",
            "=",
            "t2.institution_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.protein_name",
            ",",
            "t1.institution",
            "from",
            "institution",
            "as",
            "t1",
            "join",
            "protein",
            "as",
            "t2",
            "on",
            "t1.institution_id",
            "=",
            "t2.institution_id"
        ]
    },
    {
        "question": "Find the name of the product that has the smallest capacity.",
        "masked_template": "Find the name of the <mask> that has the <mask>",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "order",
            "by",
            "capacity",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "order",
            "by",
            "capacity",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the enrollment and primary_conference of the oldest college.",
        "masked_template": "Show the <mask> and <mask> of the <mask>",
        "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "enrollment",
            ",",
            "primary_conference",
            "from",
            "university",
            "order",
            "by",
            "founded",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "enrollment",
            ",",
            "primary_conference",
            "from",
            "university",
            "order",
            "by",
            "founded",
            "limit",
            "value"
        ]
    },
    {
        "question": "Retrieve the title of the paper that has the largest number of authors.",
        "masked_template": "<mask> the <mask> of the <mask> that has the <mask> number of <mask>",
        "query": "SELECT T2.title FROM authorship AS T1 JOIN papers AS T2 ON T1.paperid = T2.paperid WHERE T1.authorder = ( SELECT max( authorder ) FROM authorship )",
        "ted": 0.0,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "t2.title",
            "from",
            "authorship",
            "as",
            "t1",
            "join",
            "papers",
            "as",
            "t2",
            "on",
            "t1.paperid",
            "=",
            "t2.paperid",
            "where",
            "t1.authorder",
            "=",
            "(",
            "select",
            "max",
            "(",
            "authorder",
            ")",
            "from",
            "authorship",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            "from",
            "authorship",
            "as",
            "t1",
            "join",
            "papers",
            "as",
            "t2",
            "on",
            "t1.paperid",
            "=",
            "t2.paperid",
            "where",
            "t1.authorder",
            "=",
            "(",
            "select",
            "max",
            "(",
            "authorder",
            ")",
            "from",
            "authorship",
            ")"
        ]
    },
    {
        "question": "What is the id of the candidate with the lowest oppose rate?",
        "masked_template": "What is the id of the <mask> with the <mask>",
        "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "candidate_id",
            "from",
            "candidate",
            "order",
            "by",
            "oppose_rate",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_id",
            "from",
            "candidate",
            "order",
            "by",
            "oppose_rate",
            "limit",
            "value"
        ]
    },
    {
        "question": "List the season, home team, away team of all the games.",
        "masked_template": "List the <mask> of all the <mask>",
        "query": "SELECT season , home_team , away_team FROM game",
        "ted": 0.0,
        "db_id": "game_injury",
        "query_toks": [
            "select",
            "season",
            ",",
            "home_team",
            ",",
            "away_team",
            "from",
            "game"
        ],
        "query_toks_no_value": [
            "select",
            "season",
            ",",
            "home_team",
            ",",
            "away_team",
            "from",
            "game"
        ]
    },
    {
        "question": "What are the authors of submissions and their colleges?",
        "masked_template": "What are the <mask> of <mask> and their <mask>",
        "query": "SELECT Author , College FROM submission",
        "ted": 0.0,
        "db_id": "workshop_paper",
        "query_toks": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ],
        "query_toks_no_value": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ]
    },
    {
        "question": "Which part fault requires the most number of skills to fix? List part id and name.",
        "masked_template": "Which <mask> the most number of <mask> to <mask> List <mask> id and <mask>",
        "query": "SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.020833333333333332,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the count of enzymes without any interactions?",
        "masked_template": "What is the count of <mask> any <mask>",
        "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
        "ted": 0.09090909090909091,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "enzyme",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "enzyme_id",
            "from",
            "medicine_enzyme_interaction",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "enzyme",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "enzyme_id",
            "from",
            "medicine_enzyme_interaction",
            ")"
        ]
    },
    {
        "question": "Show the delegate and committee information of elections.",
        "masked_template": "Show the <mask> and <mask> of <mask>",
        "query": "SELECT Delegate , Committee FROM election",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ]
    },
    {
        "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
        "masked_template": "Return the <mask> and names of the <mask> that have more than two <mask> in.",
        "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.course_description",
            ",",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_description",
            ",",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?",
        "masked_template": "Wat is the tax <mask> and <mask> id of the <mask> to each <mask> id?",
        "query": "SELECT T1.source_system_code , T1.master_customer_id , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id",
        "ted": 0.0,
        "db_id": "local_govt_mdm",
        "query_toks": [
            "select",
            "t1.source_system_code",
            ",",
            "t1.master_customer_id",
            ",",
            "t2.council_tax_id",
            "from",
            "cmi_cross_references",
            "as",
            "t1",
            "join",
            "parking_fines",
            "as",
            "t2",
            "on",
            "t1.cmi_cross_ref_id",
            "=",
            "t2.cmi_cross_ref_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.source_system_code",
            ",",
            "t1.master_customer_id",
            ",",
            "t2.council_tax_id",
            "from",
            "cmi_cross_references",
            "as",
            "t1",
            "join",
            "parking_fines",
            "as",
            "t2",
            "on",
            "t1.cmi_cross_ref_id",
            "=",
            "t2.cmi_cross_ref_id"
        ]
    },
    {
        "question": "What is the last name of the musician that have produced the most number of songs?",
        "masked_template": "What is the <mask> name of the <mask> that have <mask> the most number of <mask>",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.08333333333333333,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "t2.lastname",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "group",
            "by",
            "lastname",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.lastname",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "group",
            "by",
            "lastname",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the total money requested by entrepreneurs with height more than 1.85?",
        "masked_template": "What is the total <mask> by <mask> with <mask> more than <mask>",
        "query": "SELECT sum( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85",
        "ted": 0.03571428571428571,
        "db_id": "entrepreneur",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "1.85"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the first names of all instructors who have taught some course and the course description.",
        "masked_template": "Find the <mask> names of all <mask> who have <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
        "ted": 0.05555555555555555,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t3.crs_description",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "join",
            "course",
            "as",
            "t3",
            "on",
            "t1.crs_code",
            "=",
            "t3.crs_code"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t3.crs_description",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "join",
            "course",
            "as",
            "t3",
            "on",
            "t1.crs_code",
            "=",
            "t3.crs_code"
        ]
    },
    {
        "question": "What are the manager's first name, last name and id who won the most manager award?",
        "masked_template": "What are the <mask> name and id who won the most <mask>",
        "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many different cities have these stations?",
        "masked_template": "How many different <mask> have <mask>",
        "query": "SELECT count( DISTINCT city ) FROM station",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "city",
            ")",
            "from",
            "station"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "city",
            ")",
            "from",
            "station"
        ]
    },
    {
        "question": "Count the number of tourists who did not visit any place.",
        "masked_template": "Count the number of <mask> who did not <mask> any <mask>",
        "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "visitors",
            "where",
            "tourist_id",
            "not",
            "in",
            "(",
            "select",
            "tourist_id",
            "from",
            "visits",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "visitors",
            "where",
            "tourist_id",
            "not",
            "in",
            "(",
            "select",
            "tourist_id",
            "from",
            "visits",
            ")"
        ]
    },
    {
        "question": "Which part fault requires the most number of skills to fix? List part id and name.",
        "masked_template": "Which <mask> the most number of <mask> to <mask> List <mask> id and <mask>",
        "query": "SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
        "masked_template": "What are the <mask> number and <mask> of the <mask> who <mask> the <mask> number of <mask>",
        "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many players have more than 1000 hours of training?",
        "masked_template": "How many <mask> have more than <mask> of <mask>",
        "query": "SELECT count( * ) FROM Player WHERE HS > 1000",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "player",
            "where",
            "hs",
            ">",
            "1000"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "player",
            "where",
            "hs",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the number of colleges with a student population greater than 15000?",
        "masked_template": "What is the number of <mask> with a <mask> than <mask>",
        "query": "SELECT count( * ) FROM College WHERE enr > 15000",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "college",
            "where",
            "enr",
            ">",
            "15000"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "college",
            "where",
            "enr",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
        "masked_template": "Find the name and <mask> of the <mask> who have <mask> with a total <mask> of more than <mask>",
        "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
        "ted": 0.027777777777777776,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "t1.cust_name",
            ",",
            "t1.acc_type",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id",
            "group",
            "by",
            "t1.cust_name",
            "having",
            "sum",
            "(",
            "t2.amount",
            ")",
            ">",
            "5000"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cust_name",
            ",",
            "t1.acc_type",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id",
            "group",
            "by",
            "t1.cust_name",
            "having",
            "sum",
            "(",
            "t2.amount",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the id and surname of the driver who participated the most number of races?",
        "masked_template": "Find the id and <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.020833333333333332,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many different colleges do attend the tryout test?",
        "masked_template": "How many different <mask> do <mask> the <mask>",
        "query": "SELECT count( DISTINCT cName ) FROM tryout",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ]
    },
    {
        "question": "Which building has the largest number of company offices? Give me the building name.",
        "masked_template": "Which <mask> has the <mask> number of <mask> me the <mask>",
        "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.08333333333333333,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id",
            "group",
            "by",
            "t1.building_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id",
            "group",
            "by",
            "t1.building_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "Show the names of all the activities Mark Giuliano participates in.",
        "masked_template": "Show the names of all the <mask> in.",
        "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
        "ted": 0.04,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t3.activity_name",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.facid",
            "join",
            "activity",
            "as",
            "t3",
            "on",
            "t3.actid",
            "=",
            "t2.actid",
            "where",
            "t1.fname",
            "=",
            "\"Mark\"",
            "and",
            "t1.lname",
            "=",
            "\"Giuliano\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.activity_name",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.facid",
            "join",
            "activity",
            "as",
            "t3",
            "on",
            "t3.actid",
            "=",
            "t2.actid",
            "where",
            "t1.fname",
            "=",
            "value",
            "and",
            "t1.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the names of furnitures whose prices are lower than the highest price.",
        "masked_template": "Find the names of <mask> whose <mask> are <mask> than the <mask>",
        "query": "SELECT T1.name FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T2.Price_in_Dollar < ( SELECT max( Price_in_Dollar ) FROM furniture_manufacte )",
        "ted": 0.029411764705882353,
        "db_id": "manufacturer",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "furniture",
            "as",
            "t1",
            "join",
            "furniture_manufacte",
            "as",
            "t2",
            "on",
            "t1.furniture_id",
            "=",
            "t2.furniture_id",
            "where",
            "t2.price_in_dollar",
            "<",
            "(",
            "select",
            "max",
            "(",
            "price_in_dollar",
            ")",
            "from",
            "furniture_manufacte",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "furniture",
            "as",
            "t1",
            "join",
            "furniture_manufacte",
            "as",
            "t2",
            "on",
            "t1.furniture_id",
            "=",
            "t2.furniture_id",
            "where",
            "t2.price_in_dollar",
            "<",
            "(",
            "select",
            "max",
            "(",
            "price_in_dollar",
            ")",
            "from",
            "furniture_manufacte",
            ")"
        ]
    },
    {
        "question": "List the name, location, mascot for all schools.",
        "masked_template": "List the <mask> for all <mask>",
        "query": "SELECT school_name , LOCATION , mascot FROM school",
        "ted": 0.0,
        "db_id": "school_finance",
        "query_toks": [
            "select",
            "school_name",
            ",",
            "location",
            ",",
            "mascot",
            "from",
            "school"
        ],
        "query_toks_no_value": [
            "select",
            "school_name",
            ",",
            "location",
            ",",
            "mascot",
            "from",
            "school"
        ]
    },
    {
        "question": "What are the names of players who have the best dribbling?",
        "masked_template": "What are the names of <mask> who have the <mask>",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling = ( SELECT max( overall_rating ) FROM Player_Attributes )",
        "ted": 0.05555555555555555,
        "db_id": "soccer_1",
        "query_toks": [
            "select",
            "distinct",
            "t1.player_name",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "player_attributes",
            "as",
            "t2",
            "on",
            "t1.player_api_id",
            "=",
            "t2.player_api_id",
            "where",
            "t2.dribbling",
            "=",
            "(",
            "select",
            "max",
            "(",
            "overall_rating",
            ")",
            "from",
            "player_attributes",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.player_name",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "player_attributes",
            "as",
            "t2",
            "on",
            "t1.player_api_id",
            "=",
            "t2.player_api_id",
            "where",
            "t2.dribbling",
            "=",
            "(",
            "select",
            "max",
            "(",
            "overall_rating",
            ")",
            "from",
            "player_attributes",
            ")"
        ]
    },
    {
        "question": "What are the names of all games played by Linda Smith?",
        "masked_template": "What are the names of all <mask> by <mask>",
        "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
        "ted": 0.04,
        "db_id": "game_1",
        "query_toks": [
            "select",
            "gname",
            "from",
            "plays_games",
            "as",
            "t1",
            "join",
            "video_games",
            "as",
            "t2",
            "on",
            "t1.gameid",
            "=",
            "t2.gameid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t3.stuid",
            "=",
            "t1.stuid",
            "where",
            "t3.lname",
            "=",
            "\"Smith\"",
            "and",
            "t3.fname",
            "=",
            "\"Linda\""
        ],
        "query_toks_no_value": [
            "select",
            "gname",
            "from",
            "plays_games",
            "as",
            "t1",
            "join",
            "video_games",
            "as",
            "t2",
            "on",
            "t1.gameid",
            "=",
            "t2.gameid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t3.stuid",
            "=",
            "t1.stuid",
            "where",
            "t3.lname",
            "=",
            "value",
            "and",
            "t3.fname",
            "=",
            "value"
        ]
    },
    {
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "masked_template": "How many distinct <mask> are there for all <mask>",
        "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ]
    },
    {
        "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
        "masked_template": "Find the <mask> and <mask> IDs of the <mask> that <mask> at least two <mask>",
        "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the numbers of races for each constructor id?",
        "masked_template": "What are the numbers of <mask> for each <mask> id?",
        "query": "SELECT count( * ) , constructorid FROM constructorStandings GROUP BY constructorid",
        "ted": 0.0625,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "constructorid",
            "from",
            "constructorstandings",
            "group",
            "by",
            "constructorid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "constructorid",
            "from",
            "constructorstandings",
            "group",
            "by",
            "constructorid"
        ]
    },
    {
        "question": "List the id and type of each thing, and the details of the organization that owns it.",
        "masked_template": "List the id and <mask> of each <mask> and the <mask> of the <mask> that <mask> it.",
        "query": "SELECT T1.thing_id , T1.type_of_Thing_Code , T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id",
        "ted": 0.0,
        "db_id": "local_govt_and_lot",
        "query_toks": [
            "select",
            "t1.thing_id",
            ",",
            "t1.type_of_thing_code",
            ",",
            "t2.organization_details",
            "from",
            "things",
            "as",
            "t1",
            "join",
            "organizations",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.thing_id",
            ",",
            "t1.type_of_thing_code",
            ",",
            "t2.organization_details",
            "from",
            "things",
            "as",
            "t1",
            "join",
            "organizations",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id"
        ]
    },
    {
        "question": "List the name, origin and owner of each program.",
        "masked_template": "List the <mask> and <mask> of each <mask>",
        "query": "SELECT name , origin , OWNER FROM program",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ]
    },
    {
        "question": "How many different types of rooms are there?",
        "masked_template": "How many different <mask> of <mask> are <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "What are the different names and credit scores of customers who have taken a loan?",
        "masked_template": "What are the different names and <mask> of <mask> who have <mask> a <mask>",
        "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "distinct",
            "t1.cust_name",
            ",",
            "t1.credit_score",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.cust_name",
            ",",
            "t1.credit_score",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id"
        ]
    },
    {
        "question": "What are the product id and product type of the cheapest product?",
        "masked_template": "What are the <mask> id and <mask> of the <mask>",
        "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the grade number and classroom number of each class in the list?",
        "masked_template": "What are the <mask> number and <mask> number of each <mask> in the <mask>",
        "query": "SELECT DISTINCT classroom , grade FROM list",
        "ted": 0.0,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "classroom",
            ",",
            "grade",
            "from",
            "list"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "classroom",
            ",",
            "grade",
            "from",
            "list"
        ]
    },
    {
        "question": "Count the number of documents that do not have expenses.",
        "masked_template": "Count the number of <mask> that do not have <mask>",
        "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "where",
            "document_id",
            "not",
            "in",
            "(",
            "select",
            "document_id",
            "from",
            "documents_with_expenses",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "where",
            "document_id",
            "not",
            "in",
            "(",
            "select",
            "document_id",
            "from",
            "documents_with_expenses",
            ")"
        ]
    },
    {
        "question": "Find the maximum age of all the students.",
        "masked_template": "Find the maximum age of all the <mask>",
        "query": "SELECT max( Age ) FROM STUDENT",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ]
    },
    {
        "question": "What is each customer's move in date, and the corresponding customer id and details?",
        "masked_template": "What is each <mask> in <mask> and the <mask> id and <mask>",
        "query": "SELECT T2.date_moved_in , T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",
        "ted": 0.0,
        "db_id": "local_govt_and_lot",
        "query_toks": [
            "select",
            "t2.date_moved_in",
            ",",
            "t1.customer_id",
            ",",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_events",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.date_moved_in",
            ",",
            "t1.customer_id",
            ",",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_events",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ]
    },
    {
        "question": "Count the number of customers who do not have an account.",
        "masked_template": "Count the number of <mask> who do not have an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "When is the last day any resident moved in?",
        "masked_template": "<mask> is the <mask> day any <mask> in?",
        "query": "SELECT max( date_moved_in ) FROM Residents",
        "ted": 0.0,
        "db_id": "local_govt_and_lot",
        "query_toks": [
            "select",
            "max",
            "(",
            "date_moved_in",
            ")",
            "from",
            "residents"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "date_moved_in",
            ")",
            "from",
            "residents"
        ]
    },
    {
        "question": "What are the first names and ids for customers who have two or more accounts?",
        "masked_template": "What are the <mask> names and ids for <mask> who have two or more <mask>",
        "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
        "ted": 0.1,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t2.customer_first_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_first_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "For each country, what is the average elevation of that country's airports?",
        "masked_template": "For each <mask> what is the average <mask> of that <mask>",
        "query": "SELECT avg( elevation ) , country FROM airports GROUP BY country",
        "ted": 0.0625,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "avg",
            "(",
            "elevation",
            ")",
            ",",
            "country",
            "from",
            "airports",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "elevation",
            ")",
            ",",
            "country",
            "from",
            "airports",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "Give me the detail and opening hour for each museum.",
        "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
        "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ]
    },
    {
        "question": "What is the maximum OMIM value in the database?",
        "masked_template": "What is the maximum <mask> in the <mask>",
        "query": "SELECT max( OMIM ) FROM enzyme",
        "ted": 0.0,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "max",
            "(",
            "omim",
            ")",
            "from",
            "enzyme"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "omim",
            ")",
            "from",
            "enzyme"
        ]
    },
    {
        "question": "What are the title, id, and description of the movie with the greatest number of actors?",
        "masked_template": "What are the <mask> id, and <mask> of the <mask> with the <mask> number of <mask>",
        "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the ids and last names of all drivers who participated in the most races?",
        "masked_template": "What are the ids and <mask> names of all <mask> who <mask> in the most <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.020833333333333332,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the last names that are used by customers and staff?",
        "masked_template": "What are the <mask> names that are <mask> by <mask> and <mask>",
        "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "last_name",
            "from",
            "customers",
            "intersect",
            "select",
            "last_name",
            "from",
            "staff"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "customers",
            "intersect",
            "select",
            "last_name",
            "from",
            "staff"
        ]
    },
    {
        "question": "Give the name of the department with the lowest budget.",
        "masked_template": "<mask> the name of the <mask> with the <mask>",
        "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "dept_name",
            "from",
            "department",
            "order",
            "by",
            "budget",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "department",
            "order",
            "by",
            "budget",
            "limit",
            "value"
        ]
    },
    {
        "question": "Count the number of customers who do not have an account.",
        "masked_template": "Count the number of <mask> who do not have an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "Find the names of all instructors who have taught some course and the course_id.",
        "masked_template": "Find the names of all <mask> who have <mask> and the <mask>",
        "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "name",
            ",",
            "course_id",
            "from",
            "instructor",
            "as",
            "t1",
            "join",
            "teaches",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "course_id",
            "from",
            "instructor",
            "as",
            "t1",
            "join",
            "teaches",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.id"
        ]
    },
    {
        "question": "What is the average unit price of all the tracks?",
        "masked_template": "What is the average <mask> of all the <mask>",
        "query": "SELECT AVG( UnitPrice ) FROM TRACK",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "unitprice",
            ")",
            "from",
            "track"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "unitprice",
            ")",
            "from",
            "track"
        ]
    },
    {
        "question": "Find the order detail for the products with price above 2000.",
        "masked_template": "Find the order <mask> for the <mask> with <mask>",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
        "ted": 0.07142857142857142,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
        "masked_template": "What are the <mask> names of all <mask> who have <mask> a <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ]
    },
    {
        "question": "How many camera lenses are not used in taking any photos?",
        "masked_template": "How many <mask> are not <mask> in <mask> any <mask>",
        "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "camera_lens",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "camera_lens_id",
            "from",
            "photos",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "camera_lens",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "camera_lens_id",
            "from",
            "photos",
            ")"
        ]
    },
    {
        "question": "Count the number of products that were never ordered.",
        "masked_template": "Count the number of <mask> that <mask>",
        "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
        "ted": 0.09090909090909091,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "order_items",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "order_items",
            ")"
        ]
    },
    {
        "question": "Find the average and minimum weight for each gender.",
        "masked_template": "Find the average and <mask> for each <mask>",
        "query": "SELECT avg( weight ) , min( weight ) , sex FROM people GROUP BY sex",
        "ted": 0.045454545454545456,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ]
    },
    {
        "question": "Find all the papers published by \"Aaron Turon\".",
        "masked_template": "Find all the <mask> by <mask>",
        "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
        "ted": 0.04,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "t3.title",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t1.fname",
            "=",
            "\"Aaron\"",
            "and",
            "t1.lname",
            "=",
            "\"Turon\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.title",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t1.fname",
            "=",
            "value",
            "and",
            "t1.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the location and nickname of each school?",
        "masked_template": "What are the <mask> and <mask> of each <mask>",
        "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "t1.location",
            ",",
            "t2.nickname",
            "from",
            "school",
            "as",
            "t1",
            "join",
            "school_details",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.location",
            ",",
            "t2.nickname",
            "from",
            "school",
            "as",
            "t1",
            "join",
            "school_details",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id"
        ]
    },
    {
        "question": "Show the role description and the id of the project staff involved in most number of project outcomes?",
        "masked_template": "Show the <mask> and the id of the <mask> in most number of <mask>",
        "query": "SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.020833333333333332,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.role_description",
            ",",
            "t2.staff_id",
            "from",
            "staff_roles",
            "as",
            "t1",
            "join",
            "project_staff",
            "as",
            "t2",
            "on",
            "t1.role_code",
            "=",
            "t2.role_code",
            "join",
            "project_outcomes",
            "as",
            "t3",
            "on",
            "t2.project_id",
            "=",
            "t3.project_id",
            "group",
            "by",
            "t2.staff_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.role_description",
            ",",
            "t2.staff_id",
            "from",
            "staff_roles",
            "as",
            "t1",
            "join",
            "project_staff",
            "as",
            "t2",
            "on",
            "t1.role_code",
            "=",
            "t2.role_code",
            "join",
            "project_outcomes",
            "as",
            "t3",
            "on",
            "t2.project_id",
            "=",
            "t3.project_id",
            "group",
            "by",
            "t2.staff_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the student ID and personal name of the student with at least two enrollments.",
        "masked_template": "Find the <mask> ID and <mask> name of the <mask> with at least two <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Return the characters and durations for each actor.",
        "masked_template": "Return the <mask> and <mask> for each <mask>",
        "query": "SELECT Character , Duration FROM actor",
        "ted": 0.0,
        "db_id": "musical",
        "query_toks": [
            "select",
            "character",
            ",",
            "duration",
            "from",
            "actor"
        ],
        "query_toks_no_value": [
            "select",
            "character",
            ",",
            "duration",
            "from",
            "actor"
        ]
    },
    {
        "question": "Return the title and inventory id of the film that is rented most often.",
        "masked_template": "Return the <mask> and <mask> id of the <mask> that is <mask> most <mask>",
        "query": "SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.020833333333333332,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t1.title",
            ",",
            "t2.inventory_id",
            "from",
            "film",
            "as",
            "t1",
            "join",
            "inventory",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "join",
            "rental",
            "as",
            "t3",
            "on",
            "t2.inventory_id",
            "=",
            "t3.inventory_id",
            "group",
            "by",
            "t2.inventory_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.title",
            ",",
            "t2.inventory_id",
            "from",
            "film",
            "as",
            "t1",
            "join",
            "inventory",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "join",
            "rental",
            "as",
            "t3",
            "on",
            "t2.inventory_id",
            "=",
            "t3.inventory_id",
            "group",
            "by",
            "t2.inventory_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the name of accounts whose checking balance is below the average checking balance.",
        "masked_template": "Find the name of <mask> whose <mask> is <mask> the average <mask>",
        "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < ( SELECT avg( balance ) FROM checking )",
        "ted": 0.058823529411764705,
        "db_id": "small_bank_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "checking",
            "as",
            "t2",
            "on",
            "t1.custid",
            "=",
            "t2.custid",
            "where",
            "t2.balance",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "balance",
            ")",
            "from",
            "checking",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "checking",
            "as",
            "t2",
            "on",
            "t1.custid",
            "=",
            "t2.custid",
            "where",
            "t2.balance",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "balance",
            ")",
            "from",
            "checking",
            ")"
        ]
    },
    {
        "question": "What is the total kills of the perpetrators with height more than 1.84.",
        "masked_template": "What is the total <mask> of the <mask> with <mask> more than <mask>",
        "query": "SELECT sum( T2.Killed ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84",
        "ted": 0.03571428571428571,
        "db_id": "perpetrator",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t2.killed",
            ")",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "perpetrator",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t1.height",
            ">",
            "1.84"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t2.killed",
            ")",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "perpetrator",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t1.height",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the average amount due for all the payments?",
        "masked_template": "What is the average <mask> due for all the <mask>",
        "query": "SELECT avg( amount_due ) FROM payments",
        "ted": 0.0,
        "db_id": "products_for_hire",
        "query_toks": [
            "select",
            "avg",
            "(",
            "amount_due",
            ")",
            "from",
            "payments"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "amount_due",
            ")",
            "from",
            "payments"
        ]
    },
    {
        "question": "What are the names of all the reviewers and movie names?",
        "masked_template": "What are the names of all the <mask> and <mask>",
        "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie",
        "ted": 0.05555555555555555,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "reviewer",
            "union",
            "select",
            "title",
            "from",
            "movie"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "reviewer",
            "union",
            "select",
            "title",
            "from",
            "movie"
        ]
    },
    {
        "question": "Find the first names of all instructors who have taught some course and the course code.",
        "masked_template": "Find the <mask> names of all <mask> who have <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ]
    },
    {
        "question": "Show the average population of all counties.",
        "masked_template": "Show the average <mask> of all <mask>",
        "query": "SELECT avg( Population ) FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "county"
        ]
    },
    {
        "question": "How many flights have a velocity larger than 200?",
        "masked_template": "How many <mask> have a <mask> than <mask>",
        "query": "SELECT count( * ) FROM flight WHERE velocity > 200",
        "ted": 0.0,
        "db_id": "flight_company",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flight",
            "where",
            "velocity",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flight",
            "where",
            "velocity",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the average and minimum weights for people of each sex?",
        "masked_template": "What are the average and <mask> for <mask> of each <mask>",
        "query": "SELECT avg( weight ) , min( weight ) , sex FROM people GROUP BY sex",
        "ted": 0.045454545454545456,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ]
    },
    {
        "question": "What are the details and star ratings of the three hotels with the lowest price ranges?",
        "masked_template": "What are the <mask> and <mask> of the <mask> with the <mask>",
        "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "other_hotel_details",
            ",",
            "star_rating_code",
            "from",
            "hotels",
            "order",
            "by",
            "price_range",
            "asc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "other_hotel_details",
            ",",
            "star_rating_code",
            "from",
            "hotels",
            "order",
            "by",
            "price_range",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the distinct registration dates and the election cycles?",
        "masked_template": "What are the distinct <mask> and the <mask>",
        "query": "SELECT DISTINCT Registration_Date , Election_Cycle FROM VOTING_RECORD",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "distinct",
            "registration_date",
            ",",
            "election_cycle",
            "from",
            "voting_record"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "registration_date",
            ",",
            "election_cycle",
            "from",
            "voting_record"
        ]
    },
    {
        "question": "Count the number of different payment method codes used by parties.",
        "masked_template": "Count the number of different <mask> by <mask>",
        "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "payment_method_code",
            ")",
            "from",
            "parties"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "payment_method_code",
            ")",
            "from",
            "parties"
        ]
    },
    {
        "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
        "masked_template": "What are the <mask> and names of the <mask> that have <mask> than 2?",
        "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.course_description",
            ",",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_description",
            ",",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "masked_template": "How many distinct <mask> are there for all <mask>",
        "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ]
    },
    {
        "question": "What is the station station and end station for the trips with the three smallest ids?",
        "masked_template": "What is the <mask> and end <mask> for the <mask> with the <mask>",
        "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "start_station_name",
            ",",
            "end_station_name",
            "from",
            "trip",
            "order",
            "by",
            "id",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "start_station_name",
            ",",
            "end_station_name",
            "from",
            "trip",
            "order",
            "by",
            "id",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the average song rating for each language?",
        "masked_template": "What is the average <mask> for each <mask>",
        "query": "SELECT avg( rating ) , languages FROM song GROUP BY languages",
        "ted": 0.0625,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "rating",
            ")",
            ",",
            "languages",
            "from",
            "song",
            "group",
            "by",
            "languages"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "rating",
            ")",
            ",",
            "languages",
            "from",
            "song",
            "group",
            "by",
            "languages"
        ]
    },
    {
        "question": "Show the names of companies and of employees.",
        "masked_template": "Show the names of <mask> and of <mask>",
        "query": "SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID",
        "ted": 0.05555555555555555,
        "db_id": "company_employee",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "employment",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "join",
            "company",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.company_id"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "employment",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "join",
            "company",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.company_id"
        ]
    },
    {
        "question": "What is the total revenue of each manufacturer?",
        "masked_template": "What is the total <mask> of each <mask>",
        "query": "SELECT sum( revenue ) , name FROM manufacturers GROUP BY name",
        "ted": 0.0625,
        "db_id": "manufactory_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "revenue",
            ")",
            ",",
            "name",
            "from",
            "manufacturers",
            "group",
            "by",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "revenue",
            ")",
            ",",
            "name",
            "from",
            "manufacturers",
            "group",
            "by",
            "name"
        ]
    },
    {
        "question": "What are the first name and last name of all the teachers?",
        "masked_template": "What are the <mask> name and <mask> name of all the <mask>",
        "query": "SELECT DISTINCT firstname , lastname FROM teachers",
        "ted": 0.0,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "teachers"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "teachers"
        ]
    },
    {
        "question": "How many budget record has a budget amount smaller than the invested amount?",
        "masked_template": "How many <mask> has a <mask> than the <mask>",
        "query": "SELECT count( * ) FROM budget WHERE budgeted < invested",
        "ted": 0.0625,
        "db_id": "school_finance",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "budget",
            "where",
            "budgeted",
            "<",
            "invested"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "budget",
            "where",
            "budgeted",
            "<",
            "invested"
        ]
    },
    {
        "question": "How many different levels do members have?",
        "masked_template": "How many different <mask> do <mask>",
        "query": "SELECT count( DISTINCT LEVEL ) FROM member",
        "ted": 0.0,
        "db_id": "shop_membership",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "level",
            ")",
            "from",
            "member"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "level",
            ")",
            "from",
            "member"
        ]
    },
    {
        "question": "What are the id and details of the customers who have at least 3 events?",
        "masked_template": "What are the id and <mask> of the <mask> who have at least 3 <mask>",
        "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
        "ted": 0.1,
        "db_id": "local_govt_and_lot",
        "query_toks": [
            "select",
            "t1.customer_id",
            ",",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_events",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_id",
            ",",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_events",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Find the number of distinct room types available.",
        "masked_template": "Find the number of distinct <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "Count the number of markets that have a number of cities lower than 300.",
        "masked_template": "Count the number of <mask> that have a number of <mask> than <mask>",
        "query": "SELECT count( * ) FROM market WHERE Number_cities < 300",
        "ted": 0.0625,
        "db_id": "film_rank",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "<",
            "300"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "<",
            "value"
        ]
    },
    {
        "question": "What are the id and name of the mountains that have at least 2 photos?",
        "masked_template": "What are the id and name of the <mask> that have at least 2 <mask>",
        "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "t1.id",
            ",",
            "t1.name",
            "from",
            "mountain",
            "as",
            "t1",
            "join",
            "photos",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.mountain_id",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.id",
            ",",
            "t1.name",
            "from",
            "mountain",
            "as",
            "t1",
            "join",
            "photos",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.mountain_id",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Return the maximum enrollment across all schools.",
        "masked_template": "Return the maximum <mask> all <mask>",
        "query": "SELECT max( Enrollment ) FROM university",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ]
    },
    {
        "question": "What are the full names of actors who had roles in more than 30 films?",
        "masked_template": "What are the <mask> names of <mask> who had <mask> in more than 30 <mask>",
        "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "actor",
            "as",
            "t2",
            "on",
            "t1.actor_id",
            "=",
            "t2.actor_id",
            "group",
            "by",
            "t2.actor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "actor",
            "as",
            "t2",
            "on",
            "t1.actor_id",
            "=",
            "t2.actor_id",
            "group",
            "by",
            "t2.actor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Count the number of colors that are not used in any products.",
        "masked_template": "Count the number of <mask> that are not <mask> in any <mask>",
        "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
        "ted": 0.0,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "not",
            "in",
            "(",
            "select",
            "color_code",
            "from",
            "products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "not",
            "in",
            "(",
            "select",
            "color_code",
            "from",
            "products",
            ")"
        ]
    },
    {
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "masked_template": "For all the <mask> of different <mask> what are all the <mask> of the <mask> to fix <mask> List the name of the <mask> and the <mask>",
        "query": "SELECT T1.fault_short_name , T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id",
        "ted": 0.05555555555555555,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_short_name",
            ",",
            "t3.skill_description",
            "from",
            "part_faults",
            "as",
            "t1",
            "join",
            "skills_required_to_fix",
            "as",
            "t2",
            "on",
            "t1.part_fault_id",
            "=",
            "t2.part_fault_id",
            "join",
            "skills",
            "as",
            "t3",
            "on",
            "t2.skill_id",
            "=",
            "t3.skill_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_short_name",
            ",",
            "t3.skill_description",
            "from",
            "part_faults",
            "as",
            "t1",
            "join",
            "skills_required_to_fix",
            "as",
            "t2",
            "on",
            "t1.part_fault_id",
            "=",
            "t2.part_fault_id",
            "join",
            "skills",
            "as",
            "t3",
            "on",
            "t2.skill_id",
            "=",
            "t3.skill_id"
        ]
    },
    {
        "question": "How many different colleges do attend the tryout test?",
        "masked_template": "How many different <mask> do <mask> the <mask>",
        "query": "SELECT count( DISTINCT cName ) FROM tryout",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ]
    },
    {
        "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
        "masked_template": "What are the <mask> of <mask> and the <mask> of the <mask> to?",
        "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ]
    },
    {
        "question": "Count the number of courses without prerequisites.",
        "masked_template": "Count the number of <mask>",
        "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "what are the order id and customer id of the oldest order?",
        "masked_template": "what are the order id and <mask> id of the <mask>",
        "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_orders",
        "query_toks": [
            "select",
            "order_id",
            ",",
            "customer_id",
            "from",
            "orders",
            "order",
            "by",
            "date_order_placed",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            ",",
            "customer_id",
            "from",
            "orders",
            "order",
            "by",
            "date_order_placed",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the number of routes for each source airport and the airport name.",
        "masked_template": "Find the number of <mask> for each <mask> and the <mask>",
        "query": "SELECT count( * ) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.name",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.src_apid",
            "group",
            "by",
            "t1.name"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.name",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.src_apid",
            "group",
            "by",
            "t1.name"
        ]
    },
    {
        "question": "Find the id and surname of the driver who participated the most number of races?",
        "masked_template": "Find the id and <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
        "masked_template": "Which <mask> two or more <mask> me their <mask> and <mask>",
        "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
        "ted": 0.027777777777777776,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Count the number of different countries that climbers are from.",
        "masked_template": "Count the number of different <mask> that <mask> are <mask>",
        "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
        "ted": 0.0,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "country",
            ")",
            "from",
            "climber"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "country",
            ")",
            "from",
            "climber"
        ]
    },
    {
        "question": "Please list the location and the winning aircraft name.",
        "masked_template": "<mask> list the <mask> and the <mask>",
        "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
        "ted": 0.08333333333333333,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "t2.location",
            ",",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft"
        ],
        "query_toks_no_value": [
            "select",
            "t2.location",
            ",",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft"
        ]
    },
    {
        "question": "What are the naems of all the projects, and how many scientists were assigned to each of them?",
        "masked_template": "What are the <mask> of all the <mask> and how many <mask> to each of <mask>",
        "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",
        "ted": 0.0,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.name",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t1.name"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.name",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t1.name"
        ]
    },
    {
        "question": "How many accelerators are not compatible with the browsers listed ?",
        "masked_template": "How many <mask> are not <mask> with the <mask> listed ?",
        "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
        "ted": 0.0,
        "db_id": "browser_web",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ]
    },
    {
        "question": "Find the titles of all the papers written by \"Aaron Turon\".",
        "masked_template": "Find the <mask> of all the <mask> by <mask>",
        "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
        "ted": 0.04,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "t3.title",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t1.fname",
            "=",
            "\"Aaron\"",
            "and",
            "t1.lname",
            "=",
            "\"Turon\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.title",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t1.fname",
            "=",
            "value",
            "and",
            "t1.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the average credit score for customers who have taken a loan?",
        "masked_template": "What is the average <mask> for <mask> who have <mask> a <mask>",
        "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "credit_score",
            ")",
            "from",
            "customer",
            "where",
            "cust_id",
            "in",
            "(",
            "select",
            "cust_id",
            "from",
            "loan",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "credit_score",
            ")",
            "from",
            "customer",
            "where",
            "cust_id",
            "in",
            "(",
            "select",
            "cust_id",
            "from",
            "loan",
            ")"
        ]
    },
    {
        "question": "Report the first name and last name of all the students.",
        "masked_template": "<mask> the <mask> name and <mask> name of all the <mask>",
        "query": "SELECT DISTINCT firstname , lastname FROM list",
        "ted": 0.0,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "list"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "list"
        ]
    },
    {
        "question": "Find the average elevation of all airports for each country.",
        "masked_template": "Find the average <mask> of all <mask> for each <mask>",
        "query": "SELECT avg( elevation ) , country FROM airports GROUP BY country",
        "ted": 0.0625,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "avg",
            "(",
            "elevation",
            ")",
            ",",
            "country",
            "from",
            "airports",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "elevation",
            ")",
            ",",
            "country",
            "from",
            "airports",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "For each player, what are their name, season, and country that they belong to?",
        "masked_template": "For each <mask> what are their <mask> and <mask> that <mask> to?",
        "query": "SELECT T2.Season , T2.Player , T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "t2.season",
            ",",
            "t2.player",
            ",",
            "t1.country_name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "match_season",
            "as",
            "t2",
            "on",
            "t1.country_id",
            "=",
            "t2.country"
        ],
        "query_toks_no_value": [
            "select",
            "t2.season",
            ",",
            "t2.player",
            ",",
            "t1.country_name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "match_season",
            "as",
            "t2",
            "on",
            "t1.country_id",
            "=",
            "t2.country"
        ]
    },
    {
        "question": "Find the average ram mib size of the chip models that are never used by any phone.",
        "masked_template": "Find the average ram mib <mask> of the <mask> that are <mask> by any <mask>",
        "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
        "ted": 0.045454545454545456,
        "db_id": "phone_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "ram_mib",
            ")",
            "from",
            "chip_model",
            "where",
            "model_name",
            "not",
            "in",
            "(",
            "select",
            "chip_model",
            "from",
            "phone",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "ram_mib",
            ")",
            "from",
            "chip_model",
            "where",
            "model_name",
            "not",
            "in",
            "(",
            "select",
            "chip_model",
            "from",
            "phone",
            ")"
        ]
    },
    {
        "question": "What are the maximum price and score of wines in each year?",
        "masked_template": "What are the maximum <mask> and <mask> of <mask> in each <mask>",
        "query": "SELECT max( Price ) , max( Score ) , YEAR FROM WINE GROUP BY YEAR",
        "ted": 0.045454545454545456,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "max",
            "(",
            "price",
            ")",
            ",",
            "max",
            "(",
            "score",
            ")",
            ",",
            "year",
            "from",
            "wine",
            "group",
            "by",
            "year"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "price",
            ")",
            ",",
            "max",
            "(",
            "score",
            ")",
            ",",
            "year",
            "from",
            "wine",
            "group",
            "by",
            "year"
        ]
    },
    {
        "question": "Show the account id and name with at least 4 transactions.",
        "masked_template": "Show the <mask> id and name with at least 4 <mask>",
        "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many different types of sports do we offer?",
        "masked_template": "How many different <mask> of <mask> do we <mask>",
        "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
        "ted": 0.0,
        "db_id": "game_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "sportname",
            ")",
            "from",
            "sportsinfo"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "sportname",
            ")",
            "from",
            "sportsinfo"
        ]
    },
    {
        "question": "What is the id of the trip that has the shortest duration?",
        "masked_template": "What is the id of the <mask> that has the <mask>",
        "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "id",
            "from",
            "trip",
            "order",
            "by",
            "duration",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "trip",
            "order",
            "by",
            "duration",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
        "masked_template": "Which <mask> log <mask> the most number of <mask> List the <mask> log id, <mask> and <mask>",
        "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_log_entry_id",
            ",",
            "t1.fault_description",
            ",",
            "t1.fault_log_entry_datetime",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id",
            "group",
            "by",
            "t1.fault_log_entry_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_log_entry_id",
            ",",
            "t1.fault_description",
            ",",
            "t1.fault_log_entry_datetime",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id",
            "group",
            "by",
            "t1.fault_log_entry_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the distinct names and nationalities of the architects who have ever built a mill?",
        "masked_template": "What are the distinct names and <mask> of the <mask> who have <mask> a <mask>",
        "query": "SELECT DISTINCT T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id",
        "ted": 0.0,
        "db_id": "architecture",
        "query_toks": [
            "select",
            "distinct",
            "t1.name",
            ",",
            "t1.nationality",
            "from",
            "architect",
            "as",
            "t1",
            "join",
            "mill",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.architect_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.name",
            ",",
            "t1.nationality",
            "from",
            "architect",
            "as",
            "t1",
            "join",
            "mill",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.architect_id"
        ]
    },
    {
        "question": "Show the account id and name with at least 4 transactions.",
        "masked_template": "Show the <mask> id and name with at least 4 <mask>",
        "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
        "ted": 0.1,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many assets does each maintenance contract contain? List the number and the contract id.",
        "masked_template": "How many <mask> each <mask> List the number and the <mask> id.",
        "query": "SELECT count( * ) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.maintenance_contract_id",
            "from",
            "maintenance_contracts",
            "as",
            "t1",
            "join",
            "assets",
            "as",
            "t2",
            "on",
            "t1.maintenance_contract_id",
            "=",
            "t2.maintenance_contract_id",
            "group",
            "by",
            "t1.maintenance_contract_id"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.maintenance_contract_id",
            "from",
            "maintenance_contracts",
            "as",
            "t1",
            "join",
            "assets",
            "as",
            "t2",
            "on",
            "t1.maintenance_contract_id",
            "=",
            "t2.maintenance_contract_id",
            "group",
            "by",
            "t1.maintenance_contract_id"
        ]
    },
    {
        "question": "How many assets does each third party company supply? List the count and the company id.",
        "masked_template": "How many <mask> each <mask> List the count and the <mask> id.",
        "query": "SELECT count( * ) , T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.company_id",
            "from",
            "third_party_companies",
            "as",
            "t1",
            "join",
            "assets",
            "as",
            "t2",
            "on",
            "t1.company_id",
            "=",
            "t2.supplier_company_id",
            "group",
            "by",
            "t1.company_id"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.company_id",
            "from",
            "third_party_companies",
            "as",
            "t1",
            "join",
            "assets",
            "as",
            "t2",
            "on",
            "t1.company_id",
            "=",
            "t2.supplier_company_id",
            "group",
            "by",
            "t1.company_id"
        ]
    },
    {
        "question": "What are the ids and last names of all drivers who participated in the most races?",
        "masked_template": "What are the ids and <mask> names of all <mask> who <mask> in the most <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Count the number of distinct governors.",
        "masked_template": "Count the number of distinct <mask>",
        "query": "SELECT count( DISTINCT Governor ) FROM party",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "governor",
            ")",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "governor",
            ")",
            "from",
            "party"
        ]
    },
    {
        "question": "Find the number of funiture types produced by each manufacturer as well as the company names.",
        "masked_template": "Find the number of <mask> by each <mask> as <mask> as the <mask>",
        "query": "SELECT count( * ) , T1.name FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.manufacturer_id = T2.manufacturer_id GROUP BY T1.manufacturer_id",
        "ted": 0.0,
        "db_id": "manufacturer",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.name",
            "from",
            "manufacturer",
            "as",
            "t1",
            "join",
            "furniture_manufacte",
            "as",
            "t2",
            "on",
            "t1.manufacturer_id",
            "=",
            "t2.manufacturer_id",
            "group",
            "by",
            "t1.manufacturer_id"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.name",
            "from",
            "manufacturer",
            "as",
            "t1",
            "join",
            "furniture_manufacte",
            "as",
            "t2",
            "on",
            "t1.manufacturer_id",
            "=",
            "t2.manufacturer_id",
            "group",
            "by",
            "t1.manufacturer_id"
        ]
    },
    {
        "question": "What are the name, origin and owner of each program?",
        "masked_template": "What are the <mask> and <mask> of each <mask>",
        "query": "SELECT name , origin , OWNER FROM program",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ]
    },
    {
        "question": "Give the total money requested by entrepreneurs who are taller than 1.85.",
        "masked_template": "<mask> the total <mask> by <mask> who are <mask> than <mask>",
        "query": "SELECT sum( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85",
        "ted": 0.03571428571428571,
        "db_id": "entrepreneur",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "1.85"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
        "masked_template": "What are the <mask> of <mask> and the <mask> of the <mask> to?",
        "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ]
    },
    {
        "question": "Give the full name and customer id of the customer with the fewest accounts.",
        "masked_template": "<mask> the <mask> name and <mask> id of the <mask> with the <mask>",
        "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
        "ted": 0.025,
        "db_id": "customers_card_transactions",
        "query_toks": [
            "select",
            "t2.customer_first_name",
            ",",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_first_name",
            ",",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Count the number of different countries that climbers are from.",
        "masked_template": "Count the number of different <mask> that <mask> are <mask>",
        "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
        "ted": 0.0,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "country",
            ")",
            "from",
            "climber"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "country",
            ")",
            "from",
            "climber"
        ]
    },
    {
        "question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
        "masked_template": "Find the <mask> of the <mask> Cup <mask> which was <mask> by <mask> ( <mask> )\".",
        "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
        "ted": 0.04,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "t3.venue",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city",
            "join",
            "match",
            "as",
            "t3",
            "on",
            "t2.match_id",
            "=",
            "t3.match_id",
            "where",
            "t1.city",
            "=",
            "\"Nanjing ( Jiangsu ) \"",
            "and",
            "t3.competition",
            "=",
            "\"1994 FIFA World Cup qualification\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.venue",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city",
            "join",
            "match",
            "as",
            "t3",
            "on",
            "t2.match_id",
            "=",
            "t3.match_id",
            "where",
            "t1.city",
            "=",
            "value",
            "and",
            "t3.competition",
            "=",
            "value"
        ]
    }
]