{
    "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype": [
        {
            "db_id": "dorm_1",
            "query": "SELECT avg( age ) , max( age ) , sex FROM student GROUP BY sex",
            "question": "What is the average and oldest age for each gender of student?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT avg( age ) , max( age ) , sex FROM student GROUP BY sex",
            "question": "Find the average and oldest age for students with different sex.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT avg( age ) , min( age ) , CLASS FROM captain GROUP BY CLASS",
            "question": "What are the average and minimum age of captains in different class?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "ship_1",
            "query": "SELECT avg( age ) , min( age ) , CLASS FROM captain GROUP BY CLASS",
            "question": "Return the average and minimum age of captains in each class.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "wine_1",
            "query": "SELECT max( Price ) , max( Score ) , YEAR FROM WINE GROUP BY YEAR",
            "question": "What are the maximum price and score of wines in each year?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "wine_1",
            "query": "SELECT max( Price ) , max( Score ) , YEAR FROM WINE GROUP BY YEAR",
            "question": "What are the maximum price and score of wines for each year?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "wine_1",
            "query": "SELECT avg( Price ) , avg( Score ) , Appelation FROM WINE GROUP BY Appelation",
            "question": "What are the average price and score of wines for each appelation?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "wine_1",
            "query": "SELECT avg( Price ) , avg( Score ) , Appelation FROM WINE GROUP BY Appelation",
            "question": "What are the average price and score of wines grouped by appelation?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT avg( weight ) , min( weight ) , sex FROM people GROUP BY sex",
            "question": "What are the average and minimum weights for people of each sex?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT avg( weight ) , min( weight ) , sex FROM people GROUP BY sex",
            "question": "Find the average and minimum weight for each gender.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "college_2",
            "query": "SELECT max( capacity ) , avg( capacity ) , building FROM classroom GROUP BY building",
            "question": "What are the greatest and average capacity for rooms in each building?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , sum( student_capacity ) , gender FROM dorm GROUP BY gender",
            "question": "Find the number of dorms and total capacity for each gender.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , sum( student_capacity ) , gender FROM dorm GROUP BY gender",
            "question": "How many dorms are there and what is the total capacity for each gender?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , avg( age ) , city_code FROM student GROUP BY city_code",
            "question": "Find the number and average age of students living in each city.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , avg( age ) , city_code FROM student GROUP BY city_code",
            "question": "How many students live in each city and what are their average ages?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT max( capacity ) , avg( capacity ) , building FROM classroom GROUP BY building",
            "question": "Find the maximum and average capacity among rooms in each building.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , max( revenue ) , Headquarter FROM manufacturers GROUP BY Headquarter",
            "question": "Find the name and revenue of the company that earns the highest revenue in each city.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , max( revenue ) , Headquarter FROM manufacturers GROUP BY Headquarter",
            "question": "What are the names and revenues of the companies with the highest revenues in each headquarter city?",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )": [
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "How many students did not have any course enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "How many documents do not have any expense?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "Count the number of documents that do not have expenses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Count the number of courses without prerequisites.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "Count the number of students who did not enroll in any course.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "How many customers have no payment histories?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "List the number of customers that did not have any payment history.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers do not have an account?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "What is the count of enzymes without any interactions?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "How many enzymes do not have any interactions?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the number of scientists who are not assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Show the number of all customers without an account.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
            "question": "How many students are not involved in any behavior incident?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM institution WHERE institution_id NOT IN ( SELECT institution_id FROM protein )",
            "question": "How many institutions do not have an associated protein in our record?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "How many scientists do not have any projects assigned to them?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events )",
            "question": "How many events did not have any participants?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items that did not receive any review.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers don't have an account?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Count the number of customers who do not have an account.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "Count the number of colors that are not used in any products.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "How many products were not included in any order?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "Count the number of products that were never ordered.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the number of users who did not write any review.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "Count the number of tourists who did not visit any place.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "How many courses that do not have prerequisite?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
            "question": "How many games are free of injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "Cound the number of artists who have not released an album.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "How many artists do not have any album?",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
            "question": "How many camera lenses are not used in taking any photos?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
            "question": "How many customers did not have any event?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
            "question": "How many accelerators are not compatible with the browsers listed ?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM people WHERE people_id NOT IN ( SELECT People_ID FROM body_builder )",
            "question": "How many persons are not body builders?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM department WHERE department_id NOT IN ( SELECT department_id FROM management ) ",
            "question": "How many departments are led by heads who are not mentioned?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "How many tourists did not make any visit?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "How many apartments do not have any facility?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "Count the number of universities that do not participate in the baketball match.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "How many colors are never used by any product?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "How many schools do not participate in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items without any review.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "Find the number of apartments that have no facility.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who do not have any loan.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have never taken a loan?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
            "question": "Find the average ram mib size of the chip models that are never used by any phone.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who do not have any tweet.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations )",
            "question": "How many rooms have not had any reservation yet?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations )",
            "question": "Find the number of rooms that do not have any reservation.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "What are the famous titles of artists who do not have any volumes?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Book_ID NOT IN ( SELECT Book_ID FROM publication )",
            "question": "List the titles of books that are not published.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "List the names of clubs that do not have any players.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "What are the names of parties that have no members?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "Show member names without any registered branch.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "What are the names of all clubs that do not have any players?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all info of students who registered courses but not attended courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE editor_id NOT IN ( SELECT editor_id FROM journal_committee )",
            "question": "List the names of editors that are not on any journal committee.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all details of the students who registered but did not attend any course?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "Show names of parties that does not have any members.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "What are the names of the members that have never registered at any branch?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "What is all the information about employees who have never had a job in the past?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "display all the information of those employees who did not have any job in the past.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "Find the famous titles of artists that do not have any volume.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN ( SELECT Pilot_ID FROM pilot_record )",
            "question": "List the names of pilots that do not have any record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market )",
            "question": "List the names of phones that are not on any market.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record )",
            "question": "Find the names of the swimmers who have no record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "What are the names of the technicians that have not been assigned to repair machines?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "What are the names of parties that do not have delegates in election?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "List the authors who do not have submission to any workshop.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "Show the name of storms which don't have affected region in record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "What are the names of regions that were not affected?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "Show the name for regions not affected.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN ( SELECT journalist_ID FROM news_report )",
            "question": "List the names of journalists who have not reported any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "What are the prices of products that have never gotten a complaint?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "What are the names of hosts who did not host any party in our record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "List the names of hosts who did not serve as a host of any party in our record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "Find the prices of products which has never received a single complaint.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees )",
            "question": "Find the states which do not have any employee in their record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "What are the names of counties that do not contain any cities?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "List the names of counties that do not have any cities.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "What are the names of all the dorms that don't have any amenities?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "Find the name of dorms that do not have any amenity",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Show all track names that have had no races.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Return the names of tracks that have no had any races.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who have some loan.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have taken a loan?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "What are the titles of all movies that have not been rated?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "Find the titles of all movies that have no ratings.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "railway",
            "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train )",
            "question": "List the object number of railways that do not have any trains.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium WHERE id NOT IN ( SELECT stadium_id FROM event )",
            "question": "Find the names of stadiums which have never had any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "Give the names of people who did not participate in the candidate election.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "what are the names of people who did not participate in the candidate election.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN ( SELECT asset_id FROM Fault_Log )",
            "question": "Which assets did not incur any fault log? List the asset model.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
            "question": "List the names of people that are not perpetrators.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "What are the names of people who are not entrepreneurs?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "List the names of people that are not entrepreneurs.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "List the names of technicians who have not been assigned to repair machines.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM school_bus )",
            "question": "Show the names of the drivers without a school bus.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "What are the names of storms that did not affect any regions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution )",
            "question": "Show the name of buildings that do not have any institution.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the titles of courses without prerequisites?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "What are the carriers of devices that are not in stock anywhere?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "What are the names of documents that do not have any sections?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the names of courses without prerequisites?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "List the carriers of devices that have no devices in stock.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "Find the name of instructors who didn't teach any courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "Find all the name of documents without any sections.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
            "question": "List the names of members who did not participate in any round.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "What are the details of the project with no outcomes?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "train_station",
            "query": "SELECT name FROM station WHERE station_id NOT IN ( SELECT station_id FROM train_station )",
            "question": "Show station names without any trains.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "List the official names of cities that have not held any competition.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "What are the official names of cities that have not hosted a farm competition?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "What are the names of instructors who didn't teach?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "What are the names of shops that do not have any devices in stock?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "List the names of shops that have no devices in stock.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "List the names of buildings that have no company office.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "Which schools do not have any player? Give me the school locations.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "What are the names of teams that do no have match season record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "Return the names of teams that have no match season record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "List the locations of schools that do not have any player.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "What are the names of all aicrafts that have never won any match?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "List the names of mountains that do not have any climber.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "What are the names of countains that no climber has climbed?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election )",
            "question": "List the names of representatives that have not participated in elections listed here.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "List the names of aircrafts and that did not win any match.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "What are the first names of all students that are not enrolled in courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "Find the first name of students not enrolled in any course.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
            "question": "List the name of artworks that are not nominated.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM member_attendance )",
            "question": "List the names of members who did not attend any performance.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
            "question": "List the names of products that are not in any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "Which buildings do not have any company office? Give me the building names.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people )",
            "question": "List the names of people that have not been on the affirmative side of debates.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who had some tweets.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "Which projects have no outcome? List the project details.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "Which authors did not submit to any workshop?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "What are the names of musicals who have no actors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "Select the project names which are not assigned yet.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "What are the names of projects that have not been assigned?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "List the name of musicals that do not have actors.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the name of scientists who are not assigned to any project.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "What are the names of scientists who have not been assigned a project?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the names of the items that did not receive any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "List the names of wrestlers that have not been eliminated.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN ( SELECT Player_ID FROM player_coach )",
            "question": "List the names of players that do not have coaches.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "What are the names of artists that have not had any exhibitions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "What are the names of wrestlers who have never been eliminated?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "List the name of ships that are not involved in any mission",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school WHERE school_id NOT IN ( SELECT school_id FROM endowment )",
            "question": "List the names of the schools without any endowment.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "What are the titles of films that do not have a film market estimation?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "Show names for artists without any exhibition.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
            "question": "List the names of people that are not employed by any company",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "List the title of films that do not have any market estimation.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "What are the names of the ships that are not involved in any missions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "List the id of students who never attends courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are the  ids of every student who has never attended a course?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "Which parties did not have any delegates in elections?",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "formula_1",
            "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and surname of the driver who participated the most number of races?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the ids and last names of all drivers who participated in the most races?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and name of the stadium where the largest number of injury accidents occurred.",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and name of the stadium where the most injury accidents happened?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "For each staff id, what is the description of the role that is involved with the most number of projects?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which part fault requires the most number of skills to fix? List part id and name.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the role description and the id of the project staff involved in most number of project outcomes?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the title and inventory id of the film that is rented most often.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count( * ) LIMIT 1",
            "question": "Find the name and capacity of the dorm with least number of amenities.",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count( * ) LIMIT 1",
            "question": "What is the name and capacity of the dorm with the fewest amount of amenities?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY sum( T3.order_quantity ) DESC LIMIT 1",
            "question": "What are the name and phone of the customer with the most ordered product quantity?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.headquartered_city FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id GROUP BY T3.headquartered_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city with the most number of flagship stores?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T3.city FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id GROUP BY T3.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city has the most customers living in?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T3.city FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T2.address_id = T3.address_id GROUP BY T3.city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the city where the most customers live.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and open year for the branch with most number of memberships registered in 2016?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.name FROM inst AS T1 JOIN authorship AS T2 ON T1.instid = T2.instid JOIN papers AS T3 ON T2.paperid = T3.paperid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which institution has the most papers? Find the name of the institution.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.name FROM inst AS T1 JOIN authorship AS T2 ON T1.instid = T2.instid JOIN papers AS T3 ON T2.paperid = T3.paperid GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of the organization that has published the largest number of papers.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "company_office",
            "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the name of the building that has the most company offices.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "company_office",
            "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which building has the largest number of company offices? Give me the building name.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.country FROM inst AS T1 JOIN authorship AS T2 ON T1.instid = T2.instid JOIN papers AS T3 ON T2.paperid = T3.paperid GROUP BY T1.country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Retrieve the country that has published the most papers.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and opening year for the branch that registered the most members in 2016?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.headquartered_city FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id GROUP BY T3.headquartered_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the city with the most number of stores.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "swimming",
            "query": "SELECT T3.name FROM record AS T1 JOIN event AS T2 ON T1.event_id = T2.id JOIN stadium AS T3 ON T3.id = T2.stadium_id GROUP BY T2.stadium_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the names of stadiums that the most swimmers have been to.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T1.country FROM inst AS T1 JOIN authorship AS T2 ON T1.instid = T2.instid JOIN papers AS T3 ON T2.paperid = T3.paperid GROUP BY T1.country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the country that the most papers are affiliated with.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY firstname ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the first name of the band mate that has performed in most songs.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY firstname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first name of the band mate who perfomed in the most songs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the name and id of the team with the most victories in 2008 postseason?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the last name of the musician that have produced the most number of songs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the last name of the musician who was in the most songs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the last name of the artist who sang the most songs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the last name of the musician that have produced the most songs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and id of the team that won the most times in 2008 postseason.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id GROUP BY T3.characteristic_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name of the characteristic that is most common across all products.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id GROUP BY T3.characteristic_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the characteristic name used by most number of the products?",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code": [
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
            "question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
            "question": "Find the first names of all instructors who have taught some course and the course description.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "phone_market",
            "query": "SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID",
            "question": "Show the names of phones and the districts of markets they are on.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "company_employee",
            "query": "SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID",
            "question": "Show the names of companies and of employees.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name , T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id",
            "question": "show the train name and station name for each train.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",
            "question": "Show the themes of parties and the names of the party hosts.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "party_host",
            "query": "SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",
            "question": "For each party, return its theme and the name of its host.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
            "question": "What are the names of technicians and the machine series that they repair?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_short_name , T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id",
            "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id",
            "question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id",
            "question": "List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT T2.Name , T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID",
            "question": "Show the names of members and the location of the performances they attended.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT T2.Name , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
            "question": "For each journal_committee, find the editor name and the journal theme.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT T2.Name , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
            "question": "Show the names of editors and the theme of journals for which they serve on committees.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "news_report",
            "query": "SELECT T3.Name , T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID",
            "question": "Show the names of journalists and the dates of the events they reported.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
            "question": "Show names of technicians and series of machines they are assigned to repair.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT T2.Name , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",
            "question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "device",
            "query": "SELECT T3.Shop_Name , T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",
            "question": "Show names of shops and the carriers of devices they have in stock.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "school_bus",
            "query": "SELECT T2.school , T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id",
            "question": "Show the school name and driver name for all school buses.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T3.Pilot_name , T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID",
            "question": "Show the names of pilots and models of aircrafts they have flied with.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "company_office",
            "query": "SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",
            "question": "For each company, return the company name and the name of the building its office is located in.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "company_office",
            "query": "SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",
            "question": "List the name of a building along with the name of a company whose office is in the building.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID",
            "question": "Show the names of players and names of their coaches.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "device",
            "query": "SELECT T3.Shop_Name , T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",
            "question": "What are the names of device shops, and what are the carriers that they carry devices in stock for?",
            "ted": 0.05555555555555555
        }
    ],
    "SELECT avg( age ) FROM Dogs": [
        {
            "db_id": "school_player",
            "query": "SELECT avg( Enrollment ) FROM school",
            "question": "What is the average enrollment of schools?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT avg( Number_of_hosts ) FROM party",
            "question": "Compute the average number of hosts for parties.",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT avg( Snatch ) FROM body_builder",
            "question": "What is the average snatch score of body builders?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT avg( Scores ) FROM submission",
            "question": "Compute the average score of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT avg( Scores ) FROM submission",
            "question": "What is the average score of submissions?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( HS ) FROM Player",
            "question": "What is the average training hours of all players?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( HS ) FROM Player",
            "question": "How many hours do the players train on average?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT avg( Number_of_hosts ) FROM party",
            "question": "What is the average number of hosts for parties?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT avg( Years_working ) FROM journalist",
            "question": "What is the average number of years spent working as a journalist?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( Gold ) FROM club_rank",
            "question": "What is the average number of gold medals for clubs?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT avg( age ) FROM Person",
            "question": "What is the average age for all people in the table?",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT avg( balance ) FROM checking",
            "question": "What is the average balance in checking accounts?",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT avg( balance ) FROM checking",
            "question": "Find the average checking balance.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT avg( hours ) FROM projects",
            "question": "What is the average hours across all projects?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT avg( hours ) FROM projects",
            "question": "Find the average hours of all projects.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT avg( Quantity ) FROM stock",
            "question": "What is the average quantity of stocks?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT avg( Quantity ) FROM stock",
            "question": "Give the average quantity of stocks.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( no_of_customers ) FROM bank",
            "question": "What is the average number of bank customers?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( enr ) FROM College",
            "question": "How many students, on average, does each college have enrolled?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( enr ) FROM College",
            "question": "What is the average enrollment number?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( price ) FROM products",
            "question": "What is the average price across all products?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( price ) FROM products",
            "question": "Compute the average price of all the products.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT avg( length_feet ) FROM bridge",
            "question": "What is the average length in feet of the bridges?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( Gold ) FROM club_rank",
            "question": "What is the average number of gold medals for a club?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT avg( order_quantity ) FROM order_items",
            "question": "What is the average amount of items ordered in each order?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM TRACK",
            "question": "What is the average unit price of all the tracks?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT avg( order_quantity ) FROM order_items",
            "question": "Find the average order quantity per order.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM TRACK",
            "question": "Find the average unit price for a track.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT avg( Enrollment ) FROM school",
            "question": "Take the average of the school enrollment.",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT avg( Attendance ) FROM performance",
            "question": "What is the average number of attendees for performances?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( no_of_customers ) FROM bank",
            "question": "Find the average number of customers cross all banks.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT avg( Population ) FROM county",
            "question": "Show the average population of all counties.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT avg( weight ) FROM Player",
            "question": "What is the average weight of all players?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT avg( International_Passengers ) FROM airport",
            "question": "What is the average number of international passengers for an airport?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT avg( pages_per_minute_color ) FROM product",
            "question": "What is the average pages per minute color?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT avg( International_Passengers ) FROM airport",
            "question": "What is the average number of international passengers of all airports?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT avg( amount_due ) FROM payments",
            "question": "What is the average amount due for all the payments?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT avg( pages_per_minute_color ) FROM product",
            "question": "What is the average number of pages per minute color?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT avg( Age ) FROM artist",
            "question": "Return the average age across all artists.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT avg( Age ) FROM artist",
            "question": "What is the average age of all artists?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT avg( Population ) FROM county",
            "question": "On average how large is the population of the counties?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT avg( Num_of_Audience ) FROM festival_detail",
            "question": "What is the average number of audience for festivals?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT avg( age ) FROM Person",
            "question": "What is the average age for all person?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT avg( Horizontal_Bar_Points ) FROM gymnast",
            "question": "Return the average horizontal bar points across all gymnasts.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT avg( Speed ) FROM roller_coaster",
            "question": "What is the average speed of roller coasters?",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT avg( Horizontal_Bar_Points ) FROM gymnast",
            "question": "What is the average horizontal bar points for all gymnasts?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT avg( access_count ) FROM documents",
            "question": "What is the average access count of documents?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT avg( Gross_in_dollar ) FROM film",
            "question": "Return the average gross sales in dollars across all films.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT avg( Product_Price ) FROM Products",
            "question": "What is the average price for products?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT avg( access_count ) FROM documents",
            "question": "Find the average access count across all documents?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT avg( Gross_in_dollar ) FROM film",
            "question": "What is the average ticket sales gross in dollars of films?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT avg( Age ) FROM manager",
            "question": "What is the average age for all managers?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( bedroom_count ) FROM Apartments",
            "question": "What is the average number of bedrooms of all apartments?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT avg( Money_Requested ) FROM entrepreneur",
            "question": "Return the average money requested across all entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT avg( Money_Requested ) FROM entrepreneur",
            "question": "What is the average money requested by all entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT avg( Injured ) FROM perpetrator",
            "question": "What is the average number of people injured by all perpetrators?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT avg( Profits_billion ) FROM Companies",
            "question": "What are the average profits of companies?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( bedroom_count ) FROM Apartments",
            "question": "Find the average number of bedrooms of all the apartments.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT avg( Profits_billion ) FROM Companies",
            "question": "Compute the average profits companies make.",
            "ted": 0.0
        }
    ],
    "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max( age ) FROM Dogs )": [
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.start_date = ( SELECT max( start_date ) FROM policies )",
            "question": "Which customer is associated with the latest policy?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T2.title FROM authorship AS T1 JOIN papers AS T2 ON T1.paperid = T2.paperid WHERE T1.authorder = ( SELECT max( authorder ) FROM authorship )",
            "question": "Which paper has the most authors? Give me the paper title.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T2.title FROM authorship AS T1 JOIN papers AS T2 ON T1.paperid = T2.paperid WHERE T1.authorder = ( SELECT max( authorder ) FROM authorship )",
            "question": "Retrieve the title of the paper that has the largest number of authors.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.start_date = ( SELECT max( start_date ) FROM policies )",
            "question": "Find the customer who started a policy most recently.",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT T1.name FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T2.Price_in_Dollar < ( SELECT max( Price_in_Dollar ) FROM furniture_manufacte )",
            "question": "Find the names of furnitures whose prices are lower than the highest price.",
            "ted": 0.029411764705882353
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling = ( SELECT max( overall_rating ) FROM Player_Attributes )",
            "question": "What are the names of players who have the best dribbling?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < ( SELECT avg( balance ) FROM checking )",
            "question": "Find the name of accounts whose checking balance is below the average checking balance.",
            "ted": 0.058823529411764705
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT T2.team_name FROM university AS T1 JOIN basketball_match AS T2 ON T1.school_id = T2.school_id WHERE enrollment < ( SELECT avg( enrollment ) FROM university )",
            "question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.",
            "ted": 0.058823529411764705
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < ( SELECT avg( balance ) FROM checking )",
            "question": "What are the names of customers with checking balances lower than the average checking balance?",
            "ted": 0.058823529411764705
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > ( SELECT avg( rating ) FROM review )",
            "question": "Find the titles of items whose rating is higher than the average review rating of all items.",
            "ted": 0.058823529411764705
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT T2.team_name FROM university AS T1 JOIN basketball_match AS T2 ON T1.school_id = T2.school_id WHERE enrollment < ( SELECT avg( enrollment ) FROM university )",
            "question": "What are the names of teams from universities that have a below average enrollment?",
            "ted": 0.058823529411764705
        }
    ],
    "select avg( age ) from student where stuid not in ( select stuid from has_pet )": [
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have never taken a loan?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
            "question": "Find the average ram mib size of the chip models that are never used by any phone.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who do not have any tweet.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who do not have any loan.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items that did not receive any review.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have taken a loan?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "How many enzymes do not have any interactions?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "What is the count of enzymes without any interactions?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who have some loan.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events )",
            "question": "How many events did not have any participants?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
            "question": "How many camera lenses are not used in taking any photos?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "How many courses that do not have prerequisite?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
            "question": "How many customers did not have any event?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "Count the number of tourists who did not visit any place.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "How many tourists did not make any visit?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "How many students did not have any course enrollment?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who had some tweets.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers do not have an account?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "How many scientists do not have any projects assigned to them?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "Count the number of students who did not enroll in any course.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "Count the number of products that were never ordered.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the number of users who did not write any review.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items without any review.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "How many products were not included in any order?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Count the number of customers who do not have an account.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers don't have an account?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Show the number of all customers without an account.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
            "question": "How many accelerators are not compatible with the browsers listed ?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "How many artists do not have any album?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "How many documents do not have any expense?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "Count the number of documents that do not have expenses.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM institution WHERE institution_id NOT IN ( SELECT institution_id FROM protein )",
            "question": "How many institutions do not have an associated protein in our record?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
            "question": "How many students are not involved in any behavior incident?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the number of scientists who are not assigned to any project.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "Cound the number of artists who have not released an album.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "List the number of customers that did not have any payment history.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Count the number of courses without prerequisites.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "Count the number of colors that are not used in any products.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "How many customers have no payment histories?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM department WHERE department_id NOT IN ( SELECT department_id FROM management ) ",
            "question": "How many departments are led by heads who are not mentioned?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "Count the number of universities that do not participate in the baketball match.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "How many schools do not participate in the basketball match?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "How many colors are never used by any product?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "How many apartments do not have any facility?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM people WHERE people_id NOT IN ( SELECT People_ID FROM body_builder )",
            "question": "How many persons are not body builders?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
            "question": "How many games are free of injury accidents?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "Find the number of apartments that have no facility.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "Show names for artists without any exhibition.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution )",
            "question": "Show the name of buildings that do not have any institution.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN ( SELECT asset_id FROM Fault_Log )",
            "question": "Which assets did not incur any fault log? List the asset model.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school WHERE school_id NOT IN ( SELECT school_id FROM endowment )",
            "question": "List the names of the schools without any endowment.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "What are the names of all the dorms that don't have any amenities?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "What are the names of artists that have not had any exhibitions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "Find the name of dorms that do not have any amenity",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "List the names of counties that do not have any cities.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium WHERE id NOT IN ( SELECT stadium_id FROM event )",
            "question": "Find the names of stadiums which have never had any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE editor_id NOT IN ( SELECT editor_id FROM journal_committee )",
            "question": "List the names of editors that are not on any journal committee.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "What are the names of wrestlers who have never been eliminated?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "List the names of wrestlers that have not been eliminated.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "Find the famous titles of artists that do not have any volume.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record )",
            "question": "Find the names of the swimmers who have no record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "What are the names of counties that do not contain any cities?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "What are the famous titles of artists who do not have any volumes?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "What are the carriers of devices that are not in stock anywhere?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN ( SELECT Player_ID FROM player_coach )",
            "question": "List the names of players that do not have coaches.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Return the names of tracks that have no had any races.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "railway",
            "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train )",
            "question": "List the object number of railways that do not have any trains.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "Find the titles of all movies that have no ratings.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the names of the items that did not receive any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Show all track names that have had no races.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "What are the names of parties that do not have delegates in election?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "List the names of hosts who did not serve as a host of any party in our record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "Give the names of people who did not participate in the candidate election.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "Which parties did not have any delegates in elections?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN ( SELECT journalist_ID FROM news_report )",
            "question": "List the names of journalists who have not reported any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "Show member names without any registered branch.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
            "question": "List the names of people that are not perpetrators.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "What are the names of people who are not entrepreneurs?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "List the names of people that are not entrepreneurs.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "What are the names of the members that have never registered at any branch?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "What are the names of the technicians that have not been assigned to repair machines?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "List the names of technicians who have not been assigned to repair machines.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "What are the names of storms that did not affect any regions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "List the carriers of devices that have no devices in stock.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees )",
            "question": "Find the states which do not have any employee in their record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "List the name of musicals that do not have actors.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "Which authors did not submit to any workshop?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "What are the names of musicals who have no actors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "List the authors who do not have submission to any workshop.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "Show the name of storms which don't have affected region in record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "What are the names of regions that were not affected?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "What are the prices of products that have never gotten a complaint?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "Find the prices of products which has never received a single complaint.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "Show the name for regions not affected.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN ( SELECT Pilot_ID FROM pilot_record )",
            "question": "List the names of pilots that do not have any record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "What are the names of parties that have no members?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "Show names of parties that does not have any members.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market )",
            "question": "List the names of phones that are not on any market.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "what are the names of people who did not participate in the candidate election.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "What are the names of hosts who did not host any party in our record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Book_ID NOT IN ( SELECT Book_ID FROM publication )",
            "question": "List the titles of books that are not published.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all details of the students who registered but did not attend any course?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "What are the titles of all movies that have not been rated?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "What are the names of shops that do not have any devices in stock?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "Find the first name of students not enrolled in any course.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "What are the first names of all students that are not enrolled in courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM member_attendance )",
            "question": "List the names of members who did not attend any performance.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "List the names of aircrafts and that did not win any match.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "train_station",
            "query": "SELECT name FROM station WHERE station_id NOT IN ( SELECT station_id FROM train_station )",
            "question": "Show station names without any trains.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "What are the names of all aicrafts that have never won any match?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all info of students who registered courses but not attended courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "What are the official names of cities that have not hosted a farm competition?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the titles of courses without prerequisites?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "List the locations of schools that do not have any player.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "Which schools do not have any player? Give me the school locations.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "List the id of students who never attends courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are the  ids of every student who has never attended a course?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "List the name of ships that are not involved in any mission",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the names of courses without prerequisites?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "What are the names of the ships that are not involved in any missions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "List the title of films that do not have any market estimation.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
            "question": "List the names of members who did not participate in any round.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "Find all the name of documents without any sections.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "What are the names of documents that do not have any sections?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "What are the details of the project with no outcomes?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "Which projects have no outcome? List the project details.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "List the names of buildings that have no company office.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "What are the names of teams that do no have match season record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "Return the names of teams that have no match season record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "Which buildings do not have any company office? Give me the building names.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
            "question": "List the names of products that are not in any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "List the names of mountains that do not have any climber.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "What are the names of countains that no climber has climbed?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
            "question": "List the name of artworks that are not nominated.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election )",
            "question": "List the names of representatives that have not participated in elections listed here.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "What are the titles of films that do not have a film market estimation?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
            "question": "List the names of people that are not employed by any company",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "Find the name of instructors who didn't teach any courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "List the official names of cities that have not held any competition.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM school_bus )",
            "question": "Show the names of the drivers without a school bus.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "What are the names of instructors who didn't teach?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "What are the names of all clubs that do not have any players?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "What is all the information about employees who have never had a job in the past?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "What are the names of scientists who have not been assigned a project?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "display all the information of those employees who did not have any job in the past.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "List the names of shops that have no devices in stock.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "List the names of clubs that do not have any players.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "Select the project names which are not assigned yet.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "What are the names of projects that have not been assigned?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people )",
            "question": "List the names of people that have not been on the affirmative side of debates.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the name of scientists who are not assigned to any project.",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT weight FROM pets ORDER BY pet_age LIMIT 1": [
        {
            "db_id": "bike_1",
            "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
            "question": "What is the id of the shortest trip?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
            "question": "What are the three most costly procedures?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
            "question": "Find the three most expensive procedures.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
            "question": "Which catalog content has the smallest capacity? Return the catalog entry name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
            "question": "What are the aircrafts with top 3 shortest lengthes? List their names.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
            "question": "What is the id of the trip that has the shortest duration?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3",
            "question": "List the publication dates of publications with 3 lowest prices.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1",
            "question": "What is the joined year of the pilot of the highest rank?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
            "question": "What is the name of the 3 employees who get paid the least?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
            "question": "What is the name of the youngest captain?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
            "question": "Show the 3 counties with the smallest population.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
            "question": "What are the numbers of the shortest flights?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
            "question": "Show the flight number of flights with three lowest distances.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
            "question": "Of all the claims, what was the earliest date when any claim was made?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
            "question": "Tell me the the date when the first claim was made.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
            "question": "What are the 3 counties that have the smallest population? Give me the county names.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
            "question": "What is the weight of the shortest person?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
            "question": "Return the weight of the shortest person.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
            "question": "Give the name of the department with the lowest budget.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1",
            "question": "What is the party of the youngest people?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
            "question": "Which department has the lowest budget?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
            "question": "Which district has the least area?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
            "question": "Find the name of the product that has the smallest capacity.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
            "question": "What is the name of the district with the smallest area?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
            "question": "Return the name of the youngest captain.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
            "question": "What was the date of the earliest payment?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
            "question": "What is the name of the highest rated wine?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
            "question": "Give the name of the wine with the highest score.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
            "question": "Which winery is the wine that has the highest score from?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
            "question": "What is the name of the customer with the worst credit score?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
            "question": "Find the name of customer who has the lowest credit score.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
            "question": "What is the winery at which the wine with the highest score was made?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
            "question": "Show the name of aircrafts with top three lowest distances.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
            "question": "What is the id of the candidate with the lowest oppose rate?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
            "question": "Return the issue date of the volume that has spent the fewest weeks on top.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
            "question": "What is the issue date of the volume with the minimum weeks on top?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
            "question": "What is the name of the wrestler with the fewest days held?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
            "question": "Return the name of the wrestler who had the lowest number of days held.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
            "question": "Find the name of the first 5 customers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
            "question": "Show the name of employees with three lowest salaries.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
            "question": "Find the id of the candidate who got the lowest oppose rate.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
            "question": "Find the patient who has the most recent undergoing treatment?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
            "question": "Which patient is undergoing the most recent treatment?",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1",
            "question": "List the name of the school with the smallest enrollment.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
            "question": "When did the first staff for the projects started working?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
            "question": "When did the first staff member start working?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
            "question": "When was the first asset acquired?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
            "question": "When did the first payment happen?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1",
            "question": "What is the name of the youngest editor?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
            "question": "Which team has the oldest player?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
            "question": "What is the name of the project with the most hours?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
            "question": "What is the shop name corresponding to the shop that opened in the most recent year?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
            "question": "List the name of the shop with the latest open year.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
            "question": "List the names of the top 5 oldest people.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
            "question": "Find the id of the song that lasts the longest.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
            "question": "What is the id of the longest song?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
            "question": "Return the age of the person with the greatest height.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
            "question": "Find the name of project that continues for the longest time.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_host",
            "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
            "question": "Which party had the most hosts? Give me the party location.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
            "question": "What is the duration of the oldest actor?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
            "question": "What are the names of the five oldest people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name of the race that occurred most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name of the race held most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
            "question": "Which program was launched most recently? Return the program name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
            "question": "find the name of the program that was launched most recently.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
            "question": "Show me the owner of the channel with the highest rating.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
            "question": "What is the owner of the channel that has the highest rating ratio?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
            "question": "List the name of the county with the largest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
            "question": "What is the name of the county with the greatest population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
            "question": "List the names of the city with the top 5 white percentages.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
            "question": "What are the names of the five cities with the greatest proportion of white people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1",
            "question": "Show the park of the roller coaster with the highest speed.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_host",
            "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
            "question": "What is the location of the party with the most hosts?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
            "question": "Tell me the name of the most pricy product.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1",
            "question": "List the publisher of the publication with the highest price.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
            "question": "What is the last date of the staff leaving the projects?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
            "question": "What is the last date that a staff member left a project?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1",
            "question": "Find the name of the room with the maximum occupancy.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1",
            "question": "What is the name of the room that can accommodate the most people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
            "question": "Return the name of the mountain with the greatest height.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
            "question": "Return the duration of the actor with the greatest age.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
            "question": "Find the GDP of the city with the largest regional population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
            "question": "what is the GDP of the city with the largest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
            "question": "What is the author of the submission with the highest score?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "Which country is the airport that has the highest altitude located in?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
            "question": "What is the name of the most expensive product?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
            "question": "What is the age of the tallest person?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
            "question": "Show the name of the county with the biggest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
            "question": "Find the name of the user who has the largest number of followers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
            "question": "List the teams of the players with the top 5 largest ages.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
            "question": "Find the team of the player of the highest age.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
            "question": "Find the name of the stadium that has the maximum capacity.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
            "question": "Find the name of the dorm with the largest capacity.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
            "question": "What are the ids of the top three products that were purchased in the largest amount?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
            "question": "Give the ids of the three products purchased in the largest amounts.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
            "question": "What is the name of the artist who joined latest?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
            "question": "Return the name of the artist who has the latest join year.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "aircraft",
            "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
            "question": "What is all the information on the airport with the largest number of international passengers?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "aircraft",
            "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
            "question": "Show all information on the airport that has the largest number of international passengers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
            "question": "What is the largest payment amount?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
            "question": "Return the amount of the largest payment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
            "question": "What are the speeds of the longest roller coaster?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
            "question": "What is id of the city that hosted events in the most recent year?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
            "question": "Find the city that hosted some events in the most recent year. What is the id of this city?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
            "question": "Return the minister who left office at the latest time.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
            "question": "Which minister left office the latest?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
            "question": "What is the name of the event that happened in the most recent year?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
            "question": "Find the branch name of the bank that has the most number of customers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
            "question": "What is the name of the bank branch with the greatest number of customers?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
            "question": "Which three cities have the largest regional population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
            "question": "What are the three largest cities in terms of regional population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
            "question": "Find the author who achieved the highest score in a submission.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
            "question": "What are the teams that have the 5 oldest players?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
            "question": "What is the name of the highest mountain?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
            "question": "List the school color of the school that has the largest enrollment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
            "question": "What is the location of the festival with the largest number of audience?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
            "question": "List the names of 5 users followed by the largest number of other users.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
            "question": "What are the names of the schools with the top 3 largest class sizes?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
            "question": "What are the names of schools with the top 3 largest size?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
            "question": "Give the name of the highest paid instructor.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
            "question": "What is the entry name of the most expensive catalog (in USD)?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
            "question": "Find the entry name of the catalog with the highest price (in USD).",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
            "question": "Who is the instructor with the highest salary?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
            "question": "What is the product with the highest height? Give me the catalog entry name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
            "question": "Which catalog content has the highest height? Give me the catalog entry name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
            "question": "Show the details of the top 3 most expensive hotels.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
            "question": "Which county has the largest population? Give me the name of the county.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
            "question": "What is the name of the player with the largest number of votes?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
            "question": "What is the nationality of the journalist with the largest number of years working?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_office",
            "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
            "question": "Find the stories of the building with the largest height.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
            "question": "What is the date of the performance with the highest number of attendees?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "Find the name of the most expensive product.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_office",
            "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
            "question": "What is the stories of highest building?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
            "question": "What are the names of the dorm with the largest capacity?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1",
            "question": "What is the name of the tallest building?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
            "question": "What is the name of the product with the highest price?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
            "question": "What is the name of the district with the most residents?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
            "question": "Which district has the largest population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
            "question": "What is the school color of the school with the largest enrollment?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
            "question": "Show the names of the three most recent festivals.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
            "question": "What are the details of the three most expensive hotels?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "What is the country of the airport with the highest elevation?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
            "question": "What is the apartment number of the apartment with the most beds?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
            "question": "What is the starting year for the oldest technician?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
            "question": "Return the highest acc percent across all basketball matches.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
            "question": "What is the carrier of the most expensive phone?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1",
            "question": "What are the clean and jerk score of the body builder with the highest total score?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
            "question": "What are names for top three branches with most number of membership?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
            "question": "Return the song in the volume that has spent the most weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
            "question": "What is the headquarter of the company with the largest sales?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
            "question": "Return the apartment number with the largest number of bedrooms.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
            "question": "What is the song in the volume with the maximum weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
            "question": "Return the poll source corresponding to the candidate who has the oppose rate.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
            "question": "What is the starting year of the oldest technicians?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
            "question": "which poll source does the highest oppose rate come from?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
            "question": "Return the famous release date for the oldest artist.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
            "question": "What is the famous release date of the artist with the oldest age?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
            "question": "Return the top 3 greatest support rates.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
            "question": "what are the top 3 highest support rates?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "railway",
            "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
            "question": "What is the name of the oldest manager?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
            "question": "Which problem log was created most recently? Give me the log id.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
            "question": "What is the id of the problem log that is created most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
            "question": "Find the id of the appointment with the most recent start date?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
            "question": "What is the id of the appointment that started most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
            "question": "What is the id of the candidate who most recently accessed the course?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1",
            "question": "What is the location of the perpetrator with the largest kills.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
            "question": "What are the names for the 3 branches that have the most memberships?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
            "question": "Find id of the candidate who most recently accessed the course?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
            "question": "What is the id of the most recent order?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
            "question": "Return the founded year for the school with the largest enrollment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
            "question": "What is the ship with the largest amount of tonnage called?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
            "question": "What is the highest acc percent score in the competition?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
            "question": "Find the name of the youngest organization.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
            "question": "What is the name of the organization that was formed most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
            "question": "Find the id of the order made most recently.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
            "question": "What is the name of the ship with the largest tonnage?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
            "question": "When was the school with the largest enrollment founded?",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT count( DISTINCT dog_id ) FROM Treatments": [
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "How many different teams have had eliminated wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "How many distinct governors are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "How many different types of rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the unique types of player positions in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergy entries are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many different allergy types exist?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many distinct allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges were represented at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "Count the number of distinct governors.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "How many distinct currency codes are there for all drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges do attend the tryout test?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "How many different types of transactions are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "From the trip record, find the number of unique bikes.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "How many different bike ids are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "What is the number of distinct cities the stations are located at?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "How many different cities have these stations?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "Count the number of different affected regions.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "How many regions are affected?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "Find the number of distinct currency codes used in drama workshop groups.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "Show the number of transaction types.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "Find the number of distinct room types available.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of artists who have had volumes.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many different types of sports do we offer?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many students play sports?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "How many distinct countries are the climbers from?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "Count the number of different countries that climbers are from.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many different students are involved in sports?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "How many different levels do members have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "What is the count of distinct employees with certificates?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "How many distinct companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists have volumes?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many students play video games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "How many distinct payment methods are used by parties?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( DISTINCT nationality ) FROM swimmer",
            "question": "How many different countries are all the swimmers from?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many different students play games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "Count the number of different payment method codes used by parties.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the different types of player positions?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( DISTINCT Party ) FROM representative",
            "question": "How many distinct parties are there for representatives?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "how many different positions are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different position for players are listed?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( DISTINCT Birth_Place ) FROM people",
            "question": "How many distinct birth places are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "How many employees have certificate.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "What is the number of distinct teams that suffer elimination?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "Show the number of card types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "How many distinct president votes are recorded?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "Find the distinct number of president votes.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "Count the number of different hometowns of these people.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "How many distinct hometowns did these people have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT Status_of_Thing_Code ) FROM Timed_Status_of_Things",
            "question": "How many different status codes of things are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "How many students have advisors?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "Count the number of students who have advisors.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "How many departments offer courses?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have an account?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "what is the number of different channel owners?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "Count the number of departments which offer courses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "How many different instructors have taught some course?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "Count the number of distinct instructors who have taught a course.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different positions of players are there?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "What are the different membership levels?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "Count the number of distinct player positions.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct students are enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct students enrolled in courses.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "Count the number of distinct channel owners.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "How many different card types are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who hold an account.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of distinct artists who have volumes.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT COUNT( DISTINCT transaction_type_code ) FROM TRANSACTIONS",
            "question": "How many distinct transaction types are used in the transactions?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "Give me the number of faculty members who participate in an activity",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "How many faculty members participate in an activity?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many different advisors are listed?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many advisors are there?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT u_id ) FROM review",
            "question": "How many different users wrote some reviews?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "How many unique labels are there for albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "What are the unique labels for the albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists do the volumes associate to?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT i_id ) FROM review",
            "question": "How many different items were reviewed by some users?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "Find the number of distinct bed types available in this inn.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "How many different types of beds are there?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( DISTINCT client ) FROM web_client_accelerator",
            "question": "How many different kinds of clients are supported by the web clients accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Find the number of different product types.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Count the number of distinct product types.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT brand ) FROM camera_lens",
            "question": "How many different kinds of lens brands are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( DISTINCT SOURCE ) FROM injury_accident",
            "question": "How many different kinds of information sources are there for injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( DISTINCT UID ) FROM tweets",
            "question": "Find the number of users who posted some tweets.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( DISTINCT source_system_code ) FROM CMI_cross_references",
            "question": "How many different source system code for the cmi cross references are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many sports do we have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( DISTINCT participant_id ) FROM participants_in_Events",
            "question": "What are all the distinct participant ids who attended any events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "Count the number of distinct claim outcome codes.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "Count the number of distinct names associated with the photos.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many type of jobs do they have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "How many different statuses do cities have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "Count the number of different statuses.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "Count the number of different account types.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "Count the number of different last names actors have.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities do people originate from?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many distinct FDA approval statuses are there for the medicines?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "How many different last names do the actors and actresses have?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many different FDA approval statuses exist for medicines?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "How many schools are in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT incident_type_code ) FROM Behavior_Incident",
            "question": "How many distinct incident type codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "How many distinct claim outcome codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "Count the number of schools that have had basketball matches.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "Count the number of different complaint type codes.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "How many distinct complaint type codes are there in the database?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT student_id ) FROM Students_in_Detention",
            "question": "How many distinct students have been in detention?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "How many distinct types of accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "In how many different states are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "Find the number of different states which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "In how many different cities are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "Count the number of different film ratings.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "Count the number of different scientists assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "Find the number of distinct projects.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "How many kinds of different ratings are listed?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "How many different projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( DISTINCT LOCATION ) FROM perpetrator",
            "question": "How many distinct locations of perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "How many different software platforms are there for devices?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "Count the number of different software platforms.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "Find the number of different cities that employees live in.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "Count the number of different directors.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "How many movie directors are there?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "Count the number of different languages in these films.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "How many languages are in these films?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "How many parties do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "Count the number of different parties.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "Find the number of different cities which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many different jobs are listed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "How many distinct names are associated with all the photos?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( DISTINCT temporary_acting ) FROM management",
            "question": "How many acting statuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "How many distinct cities does the employees live in?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "How many different scientists are assigned to any project?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Count the number of different affiliation types.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "Find the number of distinct gender for dorms.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "What is the number of distinct publication dates?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Find how many different affiliation types there are.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "How many dorms have amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "Find the number of dorms that have some amenity.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have opened an account?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many different roles are there on the project staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many kinds of roles are there for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( DISTINCT payment_method ) FROM customers",
            "question": "How many different payment methods are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "How many different genders are there in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "Count the number of different ranks of captain.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "How many schools are there in the department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many different classes are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many unique classes are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "How many courses are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "What are the number of different course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many departments does the college has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many different departments are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "Count the number of different companies.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "How many different captain ranks are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "how many schools exist in total?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "Count the number of different teams involved in match season.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who have an account.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "Count the number of distinct company industries.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities are they from?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "How many different industries are the companies in?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "How many distinct publication dates are there in our record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "How many distinct teams are involved in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT count( DISTINCT services ) FROM station",
            "question": "How many different services are provided by all stations?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "How many video game types exist?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products_for_hire",
            "question": "How many different product types are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "What is the count of different game types?",
            "ted": 0.0
        }
    ],
    "SELECT count( * ) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid": [
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
            "question": "For each product which has problems, what are the number of problems and the product id?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",
            "question": "What are the names of the scientists, and how many projects are each of them working on?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",
            "question": "Find the number of projects which each scientist is working on and scientist's name.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
            "question": "How many movie reviews does each director get?",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "What are the names of customers with accounts, and how many checking accounts do each of them have?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",
            "question": "What are the naems of all the projects, and how many scientists were assigned to each of them?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",
            "question": "Find the number of scientists involved for each project name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name",
            "question": "For each airport name, how many routes start at that airport?",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "Find the number of checking accounts for each account name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name",
            "question": "Find the number of routes for each source airport and the airport name.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "How many products are there for each manufacturer?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
            "question": "Find the number of medications prescribed for each brand.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
            "question": "How many medications are prescribed for each brand?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name",
            "question": "Find number of tracks in each genre?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
            "question": "How many assets does each maintenance contract contain? List the number and the contract id.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id",
            "question": "How many assets does each third party company supply? List the count and the company id.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
            "question": "For each director, how many reviews have they received?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "Find the number of products for each manufacturer, showing the name of each company.",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT count( * ) , T1.name FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.manufacturer_id = T2.manufacturer_id GROUP BY T1.manufacturer_id",
            "question": "Find the number of funiture types produced by each manufacturer as well as the company names.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name",
            "question": "How many tracks are in each genre?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",
            "question": "How many classes are held in each department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",
            "question": "Find the number of classes in each department.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) , T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id",
            "question": "For each project id, how many tasks are there?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
            "question": "For each product with some problems, list the count of problems and the product id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) , T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id",
            "question": "How many tasks does each project have? List the task count and the project detail.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",
            "question": "What is the number of professors for different school?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",
            "question": "How many different professors are there for the different schools?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT min( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos",
            "question": "What is minimum hours of the students playing in different position?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( T1.crs_credit ) , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",
            "question": "What are the total number of credits offered by each department?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.price ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "Find the average prices of all products from each manufacture, and list each company's name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "What are the names of customers with accounts, and what are the total savings balances for each?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "Find the total saving balance for each account name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.price ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "What are the average prices of products for each manufacturer?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",
            "question": "What are the average prices of products, grouped by manufacturer name?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( amount ) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",
            "question": "What are the names of the different bank branches, and what are their total loan amounts?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( amount ) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",
            "question": "Find the total amount of loans offered by each bank branch.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",
            "question": "Select the average price of each manufacturer's products, showing the manufacturer's name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( T1.crs_credit ) , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",
            "question": "Find the total credits of all classes offered by each department.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT min( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos",
            "question": "For each position, what is the minimum time students spent practicing?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( DISTINCT T1.name ) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter",
            "question": "How many different products are produced in each headquarter city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( DISTINCT T1.name ) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter",
            "question": "Find the number of different products that are produced by companies at different headquarter cities.",
            "ted": 0.06666666666666667
        }
    ],
    "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2": [
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "Show the account id and name with at least 4 transactions.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count( * ) >= 3",
            "question": "What are the ids and names of the architects who built at least 3 bridges ?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
            "question": "What are the id and details of the customers who have at least 3 events?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count( * ) >= 1",
            "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Find the student ID and personal name of the student with at least two enrollments.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Show the names and ids of tourist attractions that are visited at least two times.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show first name and id for all customers with at least 2 accounts.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the id and name of the mountains that have at least 2 photos?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "What are the ids and names of accounts with 4 or more transactions?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the first names and ids for customers who have two or more accounts?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count( * ) > 2",
            "question": "Which parts have more than 2 faults? Show the part name and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT( * ) > 1",
            "question": "Show id and location of railways that are associated with more than one train.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "List first name and last name of customers that have more than 2 payments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "Show the names and ids of tourist attractions that are visited at most once.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "Return the order ids and details for orderes with two or more invoices.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
            "question": "Find the name and email for the users who have more than one follower.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "What are the full names of actors who had roles in more than 30 films?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "What is the order id and order details for the order more than two invoices.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) < 2",
            "question": "Find the name and partition id for users who tweeted less than twice.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "What are the first and last names of all customers with more than 2 payments?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "What are the names and ids of the tourist attractions that are visited at most once?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count( * ) > 1",
            "question": "What are the ids and names of the companies that operated more than one flight?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "What are the student IDs and middle names of the students enrolled in at most two courses?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "What is the project id and detail for the project with at least two documents?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "what are name and phone number of patients who had more than one appointment?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "What are the GDP and population of the city that already served as a host more than once?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Find the the customer details and id for the customers who had more than one policy.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "What are the names and locations of tracks that have had exactly 1 race?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "Find the student ID and middle name for all the students with at most two enrollments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count( * ) > 1",
            "question": "What are the ids and details of events that have more than one participants?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "Show the name and location of track with 1 race.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "Find the organisation ids and details of the organisations which are involved in",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id HAVING max( T1.precipitation ) > 50",
            "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT( * ) > 1",
            "question": "Show names of pilots that have more than one record.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg( T1.price ) >= 150",
            "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Roles.role_description , count( Employees.employee_id ) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count( Employees.employee_id ) > 1",
            "question": "List roles that have more than one employee. List the role description and number of employees.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg( T1.price ) >= 150",
            "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
            "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show id, first and last names for all customers with at least two cards.",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT( * ) >= 3 ORDER BY T2.Name",
            "question": "What are the names and ids of artists with 3 or more albums, listed in alphabetical order?",
            "ted": 0.1
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.score , T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT( * ) >= 3 ORDER BY T2.Name",
            "question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.",
            "ted": 0.1
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the ids and full names of customers who hold two or more cards?",
            "ted": 0.1
        }
    ],
    "SELECT count( DISTINCT professional_id ) FROM Treatments": [
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "How many different teams have had eliminated wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "How many distinct governors are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "How many different types of rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the unique types of player positions in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergy entries are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many different allergy types exist?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many distinct allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges were represented at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "Count the number of distinct governors.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "How many distinct currency codes are there for all drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges do attend the tryout test?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "How many different types of transactions are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "From the trip record, find the number of unique bikes.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "How many different bike ids are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "What is the number of distinct cities the stations are located at?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "How many different cities have these stations?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "Count the number of different affected regions.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "How many regions are affected?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "Find the number of distinct currency codes used in drama workshop groups.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "Show the number of transaction types.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "Find the number of distinct room types available.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of artists who have had volumes.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many different types of sports do we offer?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many students play sports?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "How many distinct countries are the climbers from?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "Count the number of different countries that climbers are from.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many different students are involved in sports?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "How many different levels do members have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "What is the count of distinct employees with certificates?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "How many distinct companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists have volumes?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many students play video games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "How many distinct payment methods are used by parties?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( DISTINCT nationality ) FROM swimmer",
            "question": "How many different countries are all the swimmers from?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many different students play games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "Count the number of different payment method codes used by parties.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the different types of player positions?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( DISTINCT Party ) FROM representative",
            "question": "How many distinct parties are there for representatives?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "how many different positions are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different position for players are listed?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( DISTINCT Birth_Place ) FROM people",
            "question": "How many distinct birth places are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "How many employees have certificate.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "What is the number of distinct teams that suffer elimination?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "Show the number of card types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "How many distinct president votes are recorded?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "Find the distinct number of president votes.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "Count the number of different hometowns of these people.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "How many distinct hometowns did these people have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT Status_of_Thing_Code ) FROM Timed_Status_of_Things",
            "question": "How many different status codes of things are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "How many students have advisors?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "Count the number of students who have advisors.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "How many departments offer courses?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have an account?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "what is the number of different channel owners?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "Count the number of departments which offer courses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "How many different instructors have taught some course?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "Count the number of distinct instructors who have taught a course.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different positions of players are there?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "What are the different membership levels?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "Count the number of distinct player positions.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct students are enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct students enrolled in courses.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "Count the number of distinct channel owners.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "How many different card types are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who hold an account.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of distinct artists who have volumes.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT COUNT( DISTINCT transaction_type_code ) FROM TRANSACTIONS",
            "question": "How many distinct transaction types are used in the transactions?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "Give me the number of faculty members who participate in an activity",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "How many faculty members participate in an activity?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many different advisors are listed?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many advisors are there?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT u_id ) FROM review",
            "question": "How many different users wrote some reviews?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "How many unique labels are there for albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "What are the unique labels for the albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists do the volumes associate to?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT i_id ) FROM review",
            "question": "How many different items were reviewed by some users?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "Find the number of distinct bed types available in this inn.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "How many different types of beds are there?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( DISTINCT client ) FROM web_client_accelerator",
            "question": "How many different kinds of clients are supported by the web clients accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Find the number of different product types.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Count the number of distinct product types.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT brand ) FROM camera_lens",
            "question": "How many different kinds of lens brands are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( DISTINCT SOURCE ) FROM injury_accident",
            "question": "How many different kinds of information sources are there for injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( DISTINCT UID ) FROM tweets",
            "question": "Find the number of users who posted some tweets.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( DISTINCT source_system_code ) FROM CMI_cross_references",
            "question": "How many different source system code for the cmi cross references are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many sports do we have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( DISTINCT participant_id ) FROM participants_in_Events",
            "question": "What are all the distinct participant ids who attended any events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "Count the number of distinct claim outcome codes.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "Count the number of distinct names associated with the photos.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many type of jobs do they have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "How many different statuses do cities have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "Count the number of different statuses.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "Count the number of different account types.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "Count the number of different last names actors have.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities do people originate from?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many distinct FDA approval statuses are there for the medicines?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "How many different last names do the actors and actresses have?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many different FDA approval statuses exist for medicines?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "How many schools are in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT incident_type_code ) FROM Behavior_Incident",
            "question": "How many distinct incident type codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "How many distinct claim outcome codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "Count the number of schools that have had basketball matches.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "Count the number of different complaint type codes.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "How many distinct complaint type codes are there in the database?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT student_id ) FROM Students_in_Detention",
            "question": "How many distinct students have been in detention?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "How many distinct types of accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "In how many different states are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "Find the number of different states which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "In how many different cities are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "Count the number of different film ratings.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "Count the number of different scientists assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "Find the number of distinct projects.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "How many kinds of different ratings are listed?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "How many different projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( DISTINCT LOCATION ) FROM perpetrator",
            "question": "How many distinct locations of perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "How many different software platforms are there for devices?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "Count the number of different software platforms.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "Find the number of different cities that employees live in.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "Count the number of different directors.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "How many movie directors are there?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "Count the number of different languages in these films.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "How many languages are in these films?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "How many parties do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "Count the number of different parties.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "Find the number of different cities which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many different jobs are listed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "How many distinct names are associated with all the photos?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( DISTINCT temporary_acting ) FROM management",
            "question": "How many acting statuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "How many distinct cities does the employees live in?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "How many different scientists are assigned to any project?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Count the number of different affiliation types.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "Find the number of distinct gender for dorms.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "What is the number of distinct publication dates?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Find how many different affiliation types there are.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "How many dorms have amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "Find the number of dorms that have some amenity.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have opened an account?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many different roles are there on the project staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many kinds of roles are there for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( DISTINCT payment_method ) FROM customers",
            "question": "How many different payment methods are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "How many different genders are there in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "Count the number of different ranks of captain.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "How many schools are there in the department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many different classes are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many unique classes are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "How many courses are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "What are the number of different course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many departments does the college has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many different departments are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "Count the number of different companies.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "How many different captain ranks are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "how many schools exist in total?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "Count the number of different teams involved in match season.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who have an account.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "Count the number of distinct company industries.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities are they from?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "How many different industries are the companies in?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "How many distinct publication dates are there in our record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "How many distinct teams are involved in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT count( DISTINCT services ) FROM station",
            "question": "How many different services are provided by all stations?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "How many video game types exist?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products_for_hire",
            "question": "How many different product types are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "What is the count of different game types?",
            "ted": 0.0
        }
    ],
    "SELECT date_arrived , date_departed FROM Dogs": [
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "List all document type codes and document type names.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "Show the delegate and committee information of elections.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Delegate , Committee FROM election",
            "question": "What are the delegate and committee information for each election record?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "Show all calendar dates and day Numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
            "question": "What are all the calendar dates and day Numbers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "Show the ids and names of all documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "What are the reigns and days held of all wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
            "question": "What are all the document type codes and document type names?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "What are the ids and details of all statements?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title , Issues FROM book",
            "question": "What are the title and issues of the books?",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality , Age FROM journalist",
            "question": "What are the nationalities and ages of journalists?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction , share_count FROM TRANSACTIONS",
            "question": "Show all date and share count of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "What are the names and locations of all tracks?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "List all location codes and location names.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , location_name FROM Ref_locations",
            "question": "What are all the location codes and location names?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION FROM track",
            "question": "Show the name and location for all tracks.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "What are the characters and duration of actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id , document_name FROM Documents",
            "question": "What are the ids and names for each of the documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
            "question": "List all statement ids and statement details.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "What are the name and population of each county?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name , Population FROM county",
            "question": "Show the county name and population of all counties.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT POSITION , Team FROM pilot",
            "question": "What are the positions and teams of pilots?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the type and nationality of ships?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE , Nationality FROM ship",
            "question": "What are the types and nationalities of every ship?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "What are the authors of submissions and their colleges?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "What are the names and locations of all enzymes listed?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , LOCATION FROM enzyme",
            "question": "List the names and the locations that the enzymes can make an effect.",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author , College FROM submission",
            "question": "For each submission, show the author and their affiliated college.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
            "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "What are the themes and locations of parties?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Party_Theme , LOCATION FROM party",
            "question": "Give me the theme and location of each party.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters , Industry FROM company",
            "question": "What are the headquarters and industries of all companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date , LOCATION FROM performance",
            "question": "What are the dates and locations of performances?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "What are the low and high estimates of film markets?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
            "question": "Return the low and high estimates for all film markets.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "Show all account ids and account details.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT account_id , account_details FROM Accounts",
            "question": "What are the ids and details of all accounts?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Character , Duration FROM actor",
            "question": "Return the characters and durations for each actor.",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Gender , Occupation FROM player",
            "question": "What are the gender and occupation of players?",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Memory_in_G , Carrier FROM phone",
            "question": "What are the memories and carriers of phones?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT lot_details , investor_id FROM LOTS",
            "question": "Return the lot details and investor ids.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "What are the names and distances for all airplanes?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT cell_mobile_number , email_address FROM STUDENTS",
            "question": "Return the cell phone number and email address for all students.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Leader_Name , College_Location FROM college",
            "question": "Show the leader names and locations of colleges.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name , Country FROM member",
            "question": "What are the names and countries of members?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT local_authority , services FROM station",
            "question": "list the local authorities and services provided by all stations.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Name , Arrival FROM train",
            "question": "What are the names and arrival times of trains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "Show the names and details of all the staff members.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name , Other_Details FROM Staff",
            "question": "What is the name and detail of each staff member?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Wheels , LOCATION FROM railway",
            "question": "List the wheels and locations of the railways.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "What are the full names of all students",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname FROM Student",
            "question": "Show first name and last name for all students.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "What are the allergies and their types?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "What are the first and last names for all customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergy , allergytype FROM Allergy_type",
            "question": "Show all allergies and their types.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , last_name FROM Customers",
            "question": "List the first name and last name of all customers.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "What are the names and location of the wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name , LOCATION FROM wrestler",
            "question": "Give the names and locations of all wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft",
            "question": "Show name and distance for all aircrafts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
            "question": "What are the planned delivery date and actual delivery date for each booking?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types and countries of competitions?",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name , Product_Type_Code FROM Products",
            "question": "What are the names and type codes of products?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "What are the title and director of each film?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT title , directed_by FROM film",
            "question": "Show the title and director for all films.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Date , Venue FROM debate",
            "question": "What are the date and venue of each debate?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "List ids and details for all projects.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id , project_details FROM Projects",
            "question": "What are the ids and details for each project?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "List all budget type codes and descriptions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",
            "question": "What are the type codes and descriptions of each budget type?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name , Age FROM editor",
            "question": "What are the names and ages of editors?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "What are the names and buying prices of all the products?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name , typical_buying_price FROM products",
            "question": "Return the names and typical buying prices for all products.",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name , LOCATION FROM festival_detail",
            "question": "What are the names and locations of festivals?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "List the grapes and appelations of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Grape , Appelation FROM WINE",
            "question": "What are the grapes and appelations of each wine?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "List the names and scores of all wines.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name , Score FROM WINE",
            "question": "What are the names and scores of all wines?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "List the area and county of all appelations.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Area , County FROM APPELLATIONS",
            "question": "What are the areas and counties for all appelations?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type , Country FROM competition",
            "question": "What are the types of every competition and in which countries are they located?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_id , receipt_date FROM Documents",
            "question": "List all document ids and receipt dates of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign , Days_held FROM wrestler",
            "question": "Show the reign and days held of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "Tell me the the claim date and settlement date for each settlement case.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Show the players and the years played.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player , Years_Played FROM player",
            "question": "Who are the different players and how many years has each played?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT service_id , event_details FROM EVENTS",
            "question": "List the service id and details for the events.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "What are the first names and last names of all the guests?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "What are the names and prices of all products in the store?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT guest_first_name , guest_last_name FROM Guests",
            "question": "Return the first names and last names of all guests",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "Return the dates of ceremony and the results of all music festivals",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "What are the start date and end date of each apartment booking?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "What are the log id and entry description of each problem?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",
            "question": "Show the start dates and end dates of all the apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT LENGTH , Height FROM roller_coaster",
            "question": "What are the lengths and heights of roller coasters?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "List the companies and the investors of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Company , Investor FROM entrepreneur",
            "question": "What are the companies and investors that correspond to each entrepreneur?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What is the team and starting year for each technician?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_description FROM problem_log",
            "question": "List all the log ids and their descriptions from the problem logs.",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team , Starting_Year FROM technician",
            "question": "What are the team and starting year of technicians?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "Return the apartment number and the number of rooms for each apartment.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number , room_count FROM Apartments",
            "question": "What are the apartment number and the room count of each apartment?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name , Party FROM representative",
            "question": "What are the names and parties of representatives?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Date_of_ceremony , RESULT FROM music_festival",
            "question": "What are the dates of ceremony and results for each music festival?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "Show the country name and capital of all countries.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",
            "question": "What are the claim dates and settlement dates of all the settlements?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Date , Vote_Percent FROM election",
            "question": "List the dates and vote percents of elections.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM products",
            "question": "Select the names and the prices of all the products in the store.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "What are the login names and family names of course author and tutors?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "List all the dates of enrollment and completion of students.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",
            "question": "What are all the dates of enrollment and completion in record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Country_name , Capital FROM country",
            "question": "What are the names and capitals of each country?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name , family_name FROM Course_Authors_and_Tutors",
            "question": "List all the login names and family names of course author and tutors.",
            "ted": 0.0
        }
    ],
    "SELECT max( charge_amount ) FROM Charges": [
        {
            "db_id": "voter_2",
            "query": "SELECT max( Age ) FROM STUDENT",
            "question": "Find the maximum age of all the students.",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT max( OMIM ) FROM enzyme",
            "question": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT max( OMIM ) FROM enzyme",
            "question": "What is the maximum OMIM value in the database?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT max( date_moved_in ) FROM Residents",
            "question": "When is the last day any resident moved in?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT max( YEAR ) FROM perpetrator",
            "question": "In which year did the most recent crime happen?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT max( Enrollment ) FROM university",
            "question": "Return the maximum enrollment across all schools.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT max( amount_of_transaction ) FROM TRANSACTIONS",
            "question": "Show the maximum amount of transaction.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT max( group_equity_shareholding ) FROM operate_company",
            "question": "What is maximum group equity shareholding of the companies?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT max( Enrollment ) FROM university",
            "question": "What is the maximum enrollment across all schools?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT max( Age ) FROM STUDENT",
            "question": "What is the oldest age among the students?",
            "ted": 0.0
        }
    ],
    "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog'": [
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region AS T1 JOIN party AS T2 ON T1.region_id = T2.region_id JOIN party_events AS T3 ON T2.party_id = T3.party_id WHERE T1.region_name = 'United Kingdom' AND T3.Event_Name = 'Annaual Meeting'",
            "question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
            "question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Tracy' AND T3.lname = 'Kim'",
            "question": "Find the number of clubs where \"Tracy Kim\" is a member.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Tracy' AND T3.lname = 'Kim'",
            "question": "For how many clubs is \"Tracy Kim\" a member?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
            "question": "How many clubs does \"Linda Smith\" belong to?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Atsushi' AND T1.lname = 'Ohori'",
            "question": "How many papers have \"Atsushi Ohori\" published?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
            "question": "How many clubs does \"Linda Smith\" have membership for?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
            "question": "Find the number of female students (with F sex) living in Smith Hall",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
            "question": "How many female students live in Smith Hall?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
            "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Atsushi' AND T1.lname = 'Ohori'",
            "question": "How many papers are \"Atsushi Ohori\" the author of?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region AS T1 JOIN party AS T2 ON T1.region_id = T2.region_id JOIN party_events AS T3 ON T2.party_id = T3.party_id WHERE T1.region_name = 'United Kingdom' AND T3.Event_Name = 'Annaual Meeting'",
            "question": "How many Annual Meeting events happened in the United Kingdom region?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T1.clubname ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Eric' AND T3.lname = 'Tai'",
            "question": "How many clubs does the student named \"Eric Tai\" belong to?",
            "ted": 0.037037037037037035
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T1.clubname ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Eric' AND T3.lname = 'Tai'",
            "question": "Count the number of clubs for which the student named \"Eric Tai\" is a member.",
            "ted": 0.037037037037037035
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
            "question": "What is the first name of students enrolled in class ACCT-211 and got grade C?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
            "question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "game_1",
            "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
            "question": "Show all game names played by Linda Smith",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
            "question": "What are the first names of all students who took ACCT-211 and received a C?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "game_1",
            "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
            "question": "What are the names of all games played by Linda Smith?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Stephanie' AND T1.lname = 'Weirich'",
            "question": "Which papers have \"Stephanie Weirich\" as an author?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "Show the names of all the activities Mark Giuliano participates in.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = 'Solveig' AND T2.title = 'A Bar In Amsterdam'",
            "question": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
            "question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Stephanie' AND T1.lname = 'Weirich'",
            "question": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "What are the names of the activities Mark Giuliano is involved in",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
            "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Jeremy' AND T1.lname = 'Gibbons'",
            "question": "What are the titles of papers published by \"Jeremy Gibbons\"?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Jeremy' AND T1.lname = 'Gibbons'",
            "question": "Find the titles of all the papers written by \"Jeremy Gibbons\"",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
            "question": "Find all the papers published by \"Aaron Turon\".",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
            "question": "Find the titles of all the papers written by \"Aaron Turon\".",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Matthias' AND T1.lname = 'Blume'",
            "question": "What is the name of the institution that \"Matthias Blume\" belongs to?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Matthias' AND T1.lname = 'Blume'",
            "question": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
            "question": "Which institution does \"Katsuhiro Ueno\" belong to?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
            "question": "List all characteristics of product named \"sesame\" with type code \"Grade\".",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
            "question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = 'Heilo' AND T2.title = 'Der Kapitan'",
            "question": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' AND T3.name = 'MPEG audio file'",
            "question": "What are the names of all Rock tracks that are stored on MPEG audio files?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
            "question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = 'Heilo' AND T2.title = 'Der Kapitan'",
            "question": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = 'Solveig' AND T2.title = 'A Bar In Amsterdam'",
            "question": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
            "question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
            "question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id WHERE T3.name = 'CACHEbox' AND T2.name = 'Internet Explorer'",
            "question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
            "question": "Find the papers which have \"Olin Shivers\" as an author.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' AND T3.name = 'MPEG audio file'",
            "question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "city_record",
            "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
            "question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
            "question": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
            "question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "city_record",
            "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
            "question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Davis' AND T3.lname = 'Steven'",
            "question": "What are the names of the clubs that have \"Davis Steven\" as a member?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Davis' AND T3.lname = 'Steven'",
            "question": "List the clubs having \"Davis Steven\" as a member.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
            "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "activity_1",
            "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
            "question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.age < 18",
            "question": "How many members of club \"Bootup Baltimore\" are younger than 18?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
            "question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
            "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "activity_1",
            "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
            "question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
            "question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.age > 18",
            "question": "Count the number of members in club \"Bootup Baltimore\" whose age is above 18.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.age < 18",
            "question": "Count the number of members in club \"Bootup Baltimore\" whose age is below 18.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code JOIN ref_colors AS T3 ON T1.color_code = T3.color_code WHERE T3.color_description = 'white' AND T2.unit_of_measure != 'Handful'",
            "question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code JOIN ref_colors AS T3 ON T1.color_code = T3.color_code WHERE T3.color_description = 'white' AND T2.unit_of_measure != 'Handful'",
            "question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.age > 18",
            "question": "How many members of \"Bootup Baltimore\" are older than 18?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
            "question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
            "question": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.sex = 'F'",
            "question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.sex = 'F'",
            "question": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T3.sex = 'M'",
            "question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T3.sex = 'M'",
            "question": "What are the first name and last name of each male member in club \"Hopkins Student Enterprises\"?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.major = '600'",
            "question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands' AND T1.StagePosition = 'back'",
            "question": "What are the first and last names of the performer who was in the back stage position for the song \"Badlands\"?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.major = '600'",
            "question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",
            "question": "What are the first names and office of the professors who are in the history department and have a Ph.D?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands' AND T1.StagePosition = 'back'",
            "question": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T2.position = 'CTO'",
            "question": "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",
            "question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Der Kapitan' AND T1.StagePosition = 'back'",
            "question": "What is the first and last name of the artist who performed back stage for the song \"Der Kapitan\"?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T2.position = 'CTO'",
            "question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T2.position = 'President'",
            "question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Der Kapitan' AND T1.StagePosition = 'back'",
            "question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T2.position = 'President'",
            "question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
            "question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
            "question": "What is the first name of the student whose last name starts with the letter S and is taking ACCT-211?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' OR T2.Tourist_Details = 'Vivian'",
            "question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' OR T2.Tourist_Details = 'Vivian'",
            "question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T1.dept_code = T3.dept_code WHERE T3.dept_name = 'History' AND T1.prof_high_degree != 'Ph.D.'",
            "question": "Find the first name and office of history professor who did not get a Ph.D. degree.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T1.dept_code = T3.dept_code WHERE T3.dept_name = 'History' AND T1.prof_high_degree != 'Ph.D.'",
            "question": "What are the first names and offices of history professors who don't have Ph.D.s?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.season , T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'",
            "question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = 'PUR'",
            "question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' AND T2.compatible_since_year > 1998",
            "question": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998 ?",
            "ted": 0.09615384615384616
        }
    ],
    "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the title, id, and description of the movie with the greatest number of actors?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most number of actors or actresses? List the film name, film id and description.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and nationality of the architect who built most mills?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the manager's first name, last name and id who won the most manager award?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Which 3 players won the most player awards? List their full name and id.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the first name, last name and id for the top three players won the most player awards.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the source for the most number of flight routes.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name, phone number and email address for the customer with the most orders.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer last name, id and phone number with most number of orders?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id and full name of the customer with the most accounts.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the customer id, first and last name with most number of accounts.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name , T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id, name and IATA code of the airport that had most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and city of the airport which is the destination of the most number of routes.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport that the most routes end at?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the ids, types, and details of the organization with the most research staff?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and city of the airport from most of the routes start?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Return the id and full name of the customer who has the fewest accounts.",
            "ted": 0.025
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which staff handled least number of payments? List the full name and the id.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the customer id, first and last name with least number of accounts.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the full name and customer id of the customer with the fewest accounts.",
            "ted": 0.025
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the customer first, last name and id with least number of accounts.",
            "ted": 0.025
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Give the full name and staff id of the staff who has handled the fewest payments.",
            "ted": 0.025
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address , count( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address , count( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 3",
            "question": "What is the name, address, and number of students in the departments that have the 3 most students?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.first_name , T2.last_name , count( T1.reports_to ) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count( T1.reports_to ) DESC LIMIT 1",
            "question": "What are the first and last names of all the employees and how many people report to them?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.first_name , T2.last_name , count( T1.reports_to ) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count( T1.reports_to ) DESC LIMIT 1",
            "question": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , COUNT( * ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT( * ) DESC LIMIT 10",
            "question": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , COUNT( * ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT( * ) DESC LIMIT 10",
            "question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.service_id , T1.service_details , count( * ) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the maximum number that a certain service is provided? List the service id, details and number.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.city , count( * ) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which city has the most addresses? List the city name, number of addresses, and city id.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.city , count( * ) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum( amount ) ASC LIMIT 1",
            "question": "What is the full name and id of the customer who has the lowest total amount of payment?",
            "ted": 0.05
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum( amount ) ASC LIMIT 1",
            "question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.",
            "ted": 0.05
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , SUM( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM( T2.total ) DESC LIMIT 10",
            "question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name , SUM( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM( T2.total ) DESC LIMIT 10",
            "question": "What are the top 10 customers' first and last names with the highest gross sales, and also what are the sales?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name , T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC",
            "question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.",
            "ted": 0.1
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name , T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY count( * ) DESC",
            "question": "What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?",
            "ted": 0.1
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and builder of the railway that are associated with the most trains.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which product has the most problems? Give me the number of problems and the product name.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many problems does the product with the most problems have? List the number of the problems and product name.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and address of the department that has the highest number of students.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "Find the names of the top 10 airlines that operate the most number of routes.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date for the invoice with most number of transactions?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the description and code of the service type that is performed the most times.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the description and code of the type of service that is performed the most often?",
            "ted": 0.1
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and country for the artist with most number of exhibitions?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
            "question": "For the airline ids with the top 10 most routes operated, what are their names?",
            "ted": 0.1
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the id and details of the investor that has the largest number of transactions.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
            "question": "Show the id and details for the investors who have the top 3 number of transactions.",
            "ted": 0.1
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and hours for the project which has the most scientists assigned to it?",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the salaray and name of the employee that is certified to fly the most planes?",
            "ted": 0.1
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and hours of project that has the most number of scientists.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
            "ted": 0.1
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the salary and name of the employee who has the most number of aircraft certificates?",
            "ted": 0.1
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the first and last name of the faculty who has the most students?",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name of employee who supported the most number of customers.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the description and code of the attraction type most tourist attractions belong to.",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the full name of the employee who has the most customers?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the faculty participating in the most activities?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student participating in the most activities?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Tell me the first and last name of the student who has the most activities.",
            "ted": 0.1
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
            "ted": 0.1
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first and last name of the student who played the most sports?",
            "ted": 0.1
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the first name and last name of the student who have most number of sports?",
            "ted": 0.1
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give me the the first and last name of the faculty who advises the most students.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
            "ted": 0.1
        },
        {
            "db_id": "riding_club",
            "query": "SELECT T1.club_id , T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many gold medals has the club with the most coaches won?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the full name and id of the college that has the most baseball players.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the name and max speed of the storm that affected the most regions.",
            "ted": 0.1
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the storm name and max speed which affected the greatest number of regions?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and first name of the student that has the most number of assessment notes?",
            "ted": 0.1
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which student visited restaurant most often? List student's first name and last name.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the student ID and login name of the student with the most course enrollments",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the student ID and login name of the student who are enrolled in the most courses?",
            "ted": 0.1
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT T1.product_name , T1.product_price FROM products AS T1 JOIN regular_order_products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name and price of the product that has been ordered the greatest number of times.",
            "ted": 0.1
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the browser that is compatible with the most web accelerators?",
            "ted": 0.1
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that has been reviewed the most?",
            "ted": 0.1
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the movie that is rated by most of times?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
            "ted": 0.1
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "what is the full name and id of the college with the largest number of baseball players?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type and id of the organization that has the most research staff?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and last name of the student that has the most behavior incidents?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the details and id of the project with the most outcomes?",
            "ted": 0.1
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the code and description of the most frequent behavior incident type?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name and address of the department with the most students?",
            "ted": 0.1
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.booking_id , T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the full names of the 3 instructors who teach the most courses?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the first and last names of the instructors who teach the top 3 number of courses?",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which film has the most copies in the inventory? List both title and id.",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which project made the most number of outcomes? List the project details and the project id.",
            "ted": 0.1
        }
    ],
    "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code": [
        {
            "db_id": "soccer_1",
            "query": "SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",
            "question": "List all country and league names.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
            "question": "Find the first names of all instructors who have taught some course and the course code.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
            "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
            "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
            "question": "What are the ids of all students for courses and what are the names of those courses?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
            "question": "Find the names of all instructors who have taught some course and the course_id.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
            "question": "Please show the names and the players of clubs.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
            "question": "Show locations and nicknames of schools.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
            "question": "What are the first and last names of all the candidates?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
            "question": "what are the first name and last name of all candidates?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
            "question": "What are the names and players of all the clubs?",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT T1.name , T2.price_in_dollar FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID",
            "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
            "question": "Display the first name and department name for each employee.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
            "question": "What are the first name and department name of all employees?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
            "question": "Give the names of wrestlers and their elimination moves.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
            "question": "Return the day Number and stored date for all the documents.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
            "question": "What is the day Number and date of all the documents?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
            "question": "Show the authors of submissions and the acceptance results of their submissions.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "Show white percentages of cities and the crime rates of counties they are in.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
            "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "What are the names of cities, as well as the names of the counties they correspond to?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
            "question": "What are the phones and emails of workshop groups in which services are performed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
            "question": "Give me the detail and opening hour for each museum.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
            "question": "What are the location and nickname of each school?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
            "question": "Show the protein name and the institution name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.name , T1.type FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id",
            "question": "What are the names and types of the companies that have ever operated a flight?",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.premises_type , T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",
            "question": "Show the premise type and address type code for all customer addresses.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
            "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
            "question": "For each delegate, find the names of the party they are part of.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
            "question": "Show the delegates and the names of the party they belong to.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T1.Name , T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID",
            "question": "Show the names of members and the decoration themes they have.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
            "question": "What are the delegate and name of the county they belong to, for each county?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
            "question": "Show the delegates and the names of county they belong to.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T2.Name , T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID",
            "question": "Show the names of members and names of colleges they go to.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",
            "question": "List member names and their party names.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",
            "question": "What are the names of members and their corresponding parties?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
            "question": "For each trip, return its ending station's installation date.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
            "question": "What is the installation date for each ending station on all the trips?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
            "question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
            "question": "What are the details and ways to get to tourist attractions related to royal family?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
            "question": "Show all party names and their region names.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
            "question": "What are the names of parties and their respective regions?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
            "question": "What are the details and opening hours of the museums?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
            "question": "What are the countries of markets and their corresponding years of market estimation?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
            "question": "For each submission, find its author and acceptance result.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
            "question": "What are the names of wrestlers and the elimination moves?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "What are the names of climbers and the corresponding names of mountains that they climb?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "Show the names of climbers and the heights of mountains they climb.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "What are the names of climbers and the corresponding heights of the mountains that they climb?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
            "question": "Please list the countries and years of film market estimations.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
            "question": "Please list the location and the winning aircraft name.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Name , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID",
            "question": "Show the names of trains and locations of railways they are in.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT T2.Name , T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID",
            "question": "What are the names of representatives and the dates of elections they participated in.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
            "question": "What is the location and name of the winning aircraft?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",
            "question": "Show names of actors and names of musicals they are in.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "Show names of climbers and the names of mountains they climb.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT T1.Title , T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID",
            "question": "Show the title and publication dates of books.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
            "question": "For each player, show the team and the location of school they belong to.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",
            "question": "What are the names of actors and the musicals that they are in?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
            "question": "Show the years and the official names of the host cities of competitions.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
            "question": "Give the years and official names of the cities of each competition.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
            "question": "What are the team and the location of school each player belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T2.Name , T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID",
            "question": "Show the names of roller coasters and names of country they are in.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
            "question": "What are the titles of films and corresponding types of market estimations?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
            "question": "Please show the titles of films and the types of market estimations.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "Show names of cities and names of counties they are in.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Show distinct first and last names for all customers with an account.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What are the full names of customers who have accounts?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "architecture",
            "query": "SELECT DISTINCT T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id",
            "question": "What are the distinct names and nationalities of the architects who have ever built a mill?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
            "question": "What are the different names and credit scores of customers who have taken a loan?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
            "question": "Find the name and credit score of the customers who have some loans.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "architecture",
            "query": "SELECT max( T1.length_meters ) , T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id = T2.id",
            "question": "What is the maximum length in meters for the bridges and what are the architects' names?",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT count( * ) FROM pets WHERE weight > 11": [
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM head WHERE age > 56",
            "question": "How many heads of the departments are older than 56 ?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE WHERE Credits > 2",
            "question": "How many courses have more than 2 credits?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM COURSE WHERE Credits > 2",
            "question": "Count the number of courses with more than 2 credits.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE focal_length_mm > 15",
            "question": "How many camera lenses have a focal length longer than 15 mm?",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT count( * ) FROM flight WHERE velocity > 200",
            "question": "How many flights have a velocity larger than 200?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Rating WHERE stars > 3",
            "question": "What is the total number of ratings that has more than 3 stars?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Rating WHERE stars > 3",
            "question": "How many movie ratings have more than 3 stars?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM Player WHERE HS > 1000",
            "question": "How many different players trained for more than 1000 hours?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College WHERE enr > 15000",
            "question": "How many colleges has more than 15000 students?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM College WHERE enr > 15000",
            "question": "What is the number of colleges with a student population greater than 15000?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM storm WHERE Number_Deaths > 0",
            "question": "How many storms had death records?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( * ) FROM storm WHERE Number_Deaths > 0",
            "question": "Count the number of storms in which at least 1 person died.",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE season > 2007",
            "question": "How many games are held after season 2007?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM Player WHERE HS > 1000",
            "question": "How many players have more than 1000 hours of training?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM market WHERE Number_cities < 300",
            "question": "Count the number of markets that have a number of cities lower than 300.",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student WHERE age = 18",
            "question": "How many students are 18 years old?",
            "ted": 0.0625
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM inventory WHERE store_id = 1",
            "question": "Count the number of items store 1 has in stock.",
            "ted": 0.0625
        },
        {
            "db_id": "document_management",
            "query": "SELECT count( * ) FROM users WHERE user_login = 1",
            "question": "How many users are logged in?",
            "ted": 0.0625
        },
        {
            "db_id": "document_management",
            "query": "SELECT count( * ) FROM users WHERE user_login = 1",
            "question": "Count the number of users that are logged in.",
            "ted": 0.0625
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM inventory WHERE store_id = 1",
            "question": "How many items in inventory does store 1 have?",
            "ted": 0.0625
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT count( * ) FROM Student WHERE Advisor = 1121",
            "question": "Advisor 1121 has how many students?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student WHERE age = 18",
            "question": "How many students are age 18?",
            "ted": 0.0625
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM browser WHERE market_share >= 5",
            "question": "How many main stream browsers whose market share is at least 5 exist?",
            "ted": 0.0625
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM exhibition WHERE YEAR >= 2005",
            "question": "Count the number of exhibitions that happened in or after 2005.",
            "ted": 0.0625
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT count( * ) FROM exhibition WHERE YEAR >= 2005",
            "question": "How many exhibition are there in year 2005 or after?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Movie WHERE YEAR < 2000",
            "question": "How many movies were made before 2000?",
            "ted": 0.0625
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) FROM Movie WHERE YEAR < 2000",
            "question": "How many movies were made before 2000?",
            "ted": 0.0625
        },
        {
            "db_id": "wedding",
            "query": "SELECT count( * ) FROM wedding WHERE YEAR = 2016",
            "question": "How many weddings are there in year 2016?",
            "ted": 0.0625
        },
        {
            "db_id": "wedding",
            "query": "SELECT count( * ) FROM Church WHERE Open_Date < 1850",
            "question": "How many churches opened before 1850 are there?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) FROM products WHERE price >= 180",
            "question": "How many products have prices of at least 180?",
            "ted": 0.0625
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( patient ) FROM stay WHERE room = 112",
            "question": "How many patients stay in room 112?",
            "ted": 0.0625
        },
        {
            "db_id": "school_finance",
            "query": "SELECT count( * ) FROM budget WHERE budgeted < invested",
            "question": "How many budget record has a budget amount smaller than the invested amount?",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT avg( Working_Horses ) FROM farm WHERE Total_Horses > 5000",
            "question": "What is the average number of working horses of farms with more than 5000 total number of horses?",
            "ted": 0.0625
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Draft_Copies WHERE document_id = 2",
            "question": "How many draft copies does the document with id 2 have?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) FROM products WHERE price >= 180",
            "question": "Compute the number of products with a price larger than or equal to $180.",
            "ted": 0.0625
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT avg( Num_of_Factories ) FROM manufacturer WHERE num_of_shops > 20",
            "question": "Find the average number of factories for the manufacturers that have more than 20 shops.",
            "ted": 0.0625
        },
        {
            "db_id": "film_rank",
            "query": "SELECT count( * ) FROM market WHERE Number_cities < 300",
            "question": "How many markets have number of cities smaller than 300?",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club_rank WHERE Total < 10",
            "question": "How many clubs have total medals less than 10?",
            "ted": 0.0625
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( * ) FROM club_rank WHERE Total < 10",
            "question": "What is the total number of clubs that have less than 10 medals in total?",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT avg( Working_Horses ) FROM farm WHERE Total_Horses > 5000",
            "question": "Give the average number of working horses on farms with more than 5000 total horses.",
            "ted": 0.0625
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( patient ) FROM stay WHERE room = 112",
            "question": "Count the number of patients who stayed in room 112.",
            "ted": 0.0625
        }
    ],
    "SELECT major , age FROM student WHERE stuid NOT IN ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' )": [],
    "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'dog'": [
        {
            "db_id": "activity_1",
            "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
            "question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
            "question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Matthias' AND T1.lname = 'Blume'",
            "question": "What is the name of the institution that \"Matthias Blume\" belongs to?",
            "ted": 0.019230769230769232
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Matthias' AND T1.lname = 'Blume'",
            "question": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.",
            "ted": 0.019230769230769232
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
            "question": "Which institution does \"Katsuhiro Ueno\" belong to?",
            "ted": 0.019230769230769232
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
            "question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?",
            "ted": 0.019230769230769232
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Davis' AND T3.lname = 'Steven'",
            "question": "What are the names of the clubs that have \"Davis Steven\" as a member?",
            "ted": 0.019230769230769232
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Davis' AND T3.lname = 'Steven'",
            "question": "List the clubs having \"Davis Steven\" as a member.",
            "ted": 0.019230769230769232
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
            "question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
            "question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
            "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
            "question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
            "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
            "question": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
            "question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
            "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T1.clubname ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Eric' AND T3.lname = 'Tai'",
            "question": "How many clubs does the student named \"Eric Tai\" belong to?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( DISTINCT T1.clubname ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Eric' AND T3.lname = 'Tai'",
            "question": "Count the number of clubs for which the student named \"Eric Tai\" is a member.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "city_record",
            "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
            "question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Tracy' AND T3.lname = 'Kim'",
            "question": "Find the number of clubs where \"Tracy Kim\" is a member.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
            "question": "How many female students live in Smith Hall?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
            "question": "How many clubs does \"Linda Smith\" have membership for?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = 'Solveig' AND T2.title = 'A Bar In Amsterdam'",
            "question": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
            "question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Stephanie' AND T1.lname = 'Weirich'",
            "question": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Stephanie' AND T1.lname = 'Weirich'",
            "question": "Which papers have \"Stephanie Weirich\" as an author?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000",
            "question": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
            "question": "How many clubs does \"Linda Smith\" belong to?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
            "question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
            "question": "Find the papers which have \"Olin Shivers\" as an author.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "city_record",
            "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
            "question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' AND T3.name = 'MPEG audio file'",
            "question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' AND T3.name = 'MPEG audio file'",
            "question": "What are the names of all Rock tracks that are stored on MPEG audio files?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Tracy' AND T3.lname = 'Kim'",
            "question": "For how many clubs is \"Tracy Kim\" a member?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "game_1",
            "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
            "question": "Show all game names played by Linda Smith",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
            "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000",
            "question": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id WHERE T3.name = 'CACHEbox' AND T2.name = 'Internet Explorer'",
            "question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
            "question": "Find all the papers published by \"Aaron Turon\".",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region AS T1 JOIN party AS T2 ON T1.region_id = T2.region_id JOIN party_events AS T3 ON T2.party_id = T3.party_id WHERE T1.region_name = 'United Kingdom' AND T3.Event_Name = 'Annaual Meeting'",
            "question": "How many Annual Meeting events happened in the United Kingdom region?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
            "question": "Find the number of female students (with F sex) living in Smith Hall",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region AS T1 JOIN party AS T2 ON T1.region_id = T2.region_id JOIN party_events AS T3 ON T2.party_id = T3.party_id WHERE T1.region_name = 'United Kingdom' AND T3.Event_Name = 'Annaual Meeting'",
            "question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
            "question": "What is the first name of students enrolled in class ACCT-211 and got grade C?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
            "question": "What are the first names of all students who took ACCT-211 and received a C?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
            "question": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Atsushi' AND T1.lname = 'Ohori'",
            "question": "How many papers are \"Atsushi Ohori\" the author of?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Atsushi' AND T1.lname = 'Ohori'",
            "question": "How many papers have \"Atsushi Ohori\" published?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
            "question": "Find the titles of all the papers written by \"Aaron Turon\".",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
            "question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
            "question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
            "question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = 'Solveig' AND T2.title = 'A Bar In Amsterdam'",
            "question": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
            "question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = 'Heilo' AND T2.title = 'Der Kapitan'",
            "question": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = 'Heilo' AND T2.title = 'Der Kapitan'",
            "question": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Jeremy' AND T1.lname = 'Gibbons'",
            "question": "What are the titles of papers published by \"Jeremy Gibbons\"?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "Show the names of all the activities Mark Giuliano participates in.",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "What are the names of the activities Mark Giuliano is involved in",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "game_1",
            "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
            "question": "What are the names of all games played by Linda Smith?",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
            "question": "List all characteristics of product named \"sesame\" with type code \"Grade\".",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Jeremy' AND T1.lname = 'Gibbons'",
            "question": "Find the titles of all the papers written by \"Jeremy Gibbons\"",
            "ted": 0.057692307692307696
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' OR T2.Tourist_Details = 'Vivian'",
            "question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' OR T2.Tourist_Details = 'Vivian'",
            "question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.season , T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'",
            "question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?",
            "ted": 0.07407407407407407
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code JOIN ref_colors AS T3 ON T1.color_code = T3.color_code WHERE T3.color_description = 'white' AND T2.unit_of_measure != 'Handful'",
            "question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code JOIN ref_colors AS T3 ON T1.color_code = T3.color_code WHERE T3.color_description = 'white' AND T2.unit_of_measure != 'Handful'",
            "question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT DISTINCT T1.first_name , T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN customer AS T3 ON T2.customer_id = T3.customer_id WHERE T3.first_name = 'APRIL' AND T3.last_name = 'BURNS'",
            "question": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental.",
            "ted": 0.08928571428571429
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT DISTINCT T1.first_name , T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN customer AS T3 ON T2.customer_id = T3.customer_id WHERE T3.first_name = 'APRIL' AND T3.last_name = 'BURNS'",
            "question": "What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?",
            "ted": 0.08928571428571429
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",
            "question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Der Kapitan' AND T1.StagePosition = 'back'",
            "question": "What is the first and last name of the artist who performed back stage for the song \"Der Kapitan\"?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Der Kapitan' AND T1.StagePosition = 'back'",
            "question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",
            "question": "What are the first names and office of the professors who are in the history department and have a Ph.D?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T2.position = 'CTO'",
            "question": "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T2.position = 'CTO'",
            "question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T2.position = 'President'",
            "question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T2.position = 'President'",
            "question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands' AND T1.StagePosition = 'back'",
            "question": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = 'Badlands' AND T1.StagePosition = 'back'",
            "question": "What are the first and last names of the performer who was in the back stage position for the song \"Badlands\"?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.sex = 'F'",
            "question": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.major = '600'",
            "question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.major = '600'",
            "question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T3.sex = 'M'",
            "question": "What are the first name and last name of each male member in club \"Hopkins Student Enterprises\"?",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Hopkins Student Enterprises' AND T3.sex = 'M'",
            "question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "club_1",
            "query": "SELECT T3.fname , T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore' AND T3.sex = 'F'",
            "question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.",
            "ted": 0.09259259259259259
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
            "question": "What is the first name of the student whose last name starts with the letter S and is taking ACCT-211?",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100",
            "question": "What are the response received dates for the documents described as 'Regular' or granted with more than 100?",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
            "question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100",
            "question": "What is the response received date for the document described as Regular that was granted more than 100 dollars?",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "phone_1",
            "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = 'Text' OR T1.RAM_MiB > 32",
            "question": "List the hardware model name for the phones that have screen mode type \"Text\" or RAM size greater than 32.",
            "ted": 0.09615384615384616
        }
    ],
    "SELECT DISTINCT breed_code , size_code FROM dogs": [
        {
            "db_id": "student_1",
            "query": "SELECT DISTINCT classroom , grade FROM list",
            "question": "What are the grade number and classroom number of each class in the list?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT Registration_Date , Election_Cycle FROM VOTING_RECORD",
            "question": "What are the distinct registration dates and the election cycles?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT DISTINCT firstname , lastname FROM teachers",
            "question": "What are the first name and last name of all the teachers?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT DISTINCT firstname , lastname FROM list",
            "question": "Report the first name and last name of all the students.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT DISTINCT firstname , lastname FROM list",
            "question": "Show each student's first name and last name.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT Registration_Date , Election_Cycle FROM VOTING_RECORD",
            "question": "Report the distinct registration date and the election cycle.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT DISTINCT firstname , lastname FROM teachers",
            "question": "Report the first name and last name of all the teachers.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT President_Vote , VICE_President_Vote FROM VOTING_RECORD",
            "question": "Report the distinct president vote and the vice president vote.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT President_Vote , VICE_President_Vote FROM VOTING_RECORD",
            "question": "List all the distinct president votes and the vice president votes.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT DISTINCT classroom , grade FROM list",
            "question": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.",
            "ted": 0.0
        }
    ],
    "SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 3": [
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show id, first and last names for all customers with at least two cards.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the ids and full names of customers who hold two or more cards?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.score , T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count( * ) = 1",
            "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.",
            "ted": 0.025
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) > 1",
            "question": "Find the title, credit, and department name of courses that have more than one prerequisites?",
            "ted": 0.025
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) > 1",
            "question": "What is the title, credit value, and department name for courses with more than one prerequisite?",
            "ted": 0.025
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count( * ) = 1",
            "question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.",
            "ted": 0.025
        },
        {
            "db_id": "department_management",
            "query": "SELECT T1.department_id , T1.name , count( * ) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING count( * ) > 1",
            "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
            "ted": 0.1
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
            "ted": 0.1
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
            "ted": 0.1
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Show the names and ids of tourist attractions that are visited at least two times.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the first names and ids for customers who have two or more accounts?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show first name and id for all customers with at least 2 accounts.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Find the student ID and personal name of the student with at least two enrollments.",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
            "ted": 0.1
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
            "ted": 0.1
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "Show the account id and name with at least 4 transactions.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "What are the ids and names of accounts with 4 or more transactions?",
            "ted": 0.1
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
            "question": "What are the id and details of the customers who have at least 3 events?",
            "ted": 0.1
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "ted": 0.1
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the id and name of the mountains that have at least 2 photos?",
            "ted": 0.1
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "ted": 0.1
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count( * ) >= 3",
            "question": "What are the ids and names of the architects who built at least 3 bridges ?",
            "ted": 0.1
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
            "ted": 0.1
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count( * ) >= 1",
            "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
            "ted": 0.1
        }
    ],
    "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id": [
        {
            "db_id": "soccer_1",
            "query": "SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",
            "question": "List all country and league names.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
            "question": "Find the first names of all instructors who have taught some course and the course code.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
            "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
            "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
            "question": "What are the ids of all students for courses and what are the names of those courses?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
            "question": "Find the names of all instructors who have taught some course and the course_id.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
            "question": "Please show the names and the players of clubs.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
            "question": "Show locations and nicknames of schools.",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
            "question": "What are the first and last names of all the candidates?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
            "question": "what are the first name and last name of all candidates?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
            "question": "What are the names and players of all the clubs?",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT T1.name , T2.price_in_dollar FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID",
            "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
            "question": "Display the first name and department name for each employee.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
            "question": "What are the first name and department name of all employees?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
            "question": "Give the names of wrestlers and their elimination moves.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
            "question": "Return the day Number and stored date for all the documents.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
            "question": "What is the day Number and date of all the documents?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
            "question": "Show the authors of submissions and the acceptance results of their submissions.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "Show white percentages of cities and the crime rates of counties they are in.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
            "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "What are the names of cities, as well as the names of the counties they correspond to?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
            "question": "What are the phones and emails of workshop groups in which services are performed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
            "question": "Give me the detail and opening hour for each museum.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
            "question": "What are the location and nickname of each school?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
            "question": "Show the protein name and the institution name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.name , T1.type FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id",
            "question": "What are the names and types of the companies that have ever operated a flight?",
            "ted": 0.0
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.premises_type , T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",
            "question": "Show the premise type and address type code for all customer addresses.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
            "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
            "question": "For each delegate, find the names of the party they are part of.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
            "question": "Show the delegates and the names of the party they belong to.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T1.Name , T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID",
            "question": "Show the names of members and the decoration themes they have.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
            "question": "What are the delegate and name of the county they belong to, for each county?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
            "question": "Show the delegates and the names of county they belong to.",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T2.Name , T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID",
            "question": "Show the names of members and names of colleges they go to.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",
            "question": "List member names and their party names.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",
            "question": "What are the names of members and their corresponding parties?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
            "question": "For each trip, return its ending station's installation date.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
            "question": "What is the installation date for each ending station on all the trips?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
            "question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
            "question": "What are the details and ways to get to tourist attractions related to royal family?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
            "question": "Show all party names and their region names.",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
            "question": "What are the names of parties and their respective regions?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
            "question": "What are the details and opening hours of the museums?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
            "question": "What are the countries of markets and their corresponding years of market estimation?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
            "question": "For each submission, find its author and acceptance result.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
            "question": "What are the names of wrestlers and the elimination moves?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "What are the names of climbers and the corresponding names of mountains that they climb?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "Show the names of climbers and the heights of mountains they climb.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "What are the names of climbers and the corresponding heights of the mountains that they climb?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
            "question": "Please list the countries and years of film market estimations.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
            "question": "Please list the location and the winning aircraft name.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Name , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID",
            "question": "Show the names of trains and locations of railways they are in.",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT T2.Name , T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID",
            "question": "What are the names of representatives and the dates of elections they participated in.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
            "question": "What is the location and name of the winning aircraft?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",
            "question": "Show names of actors and names of musicals they are in.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "Show names of climbers and the names of mountains they climb.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT T1.Title , T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID",
            "question": "Show the title and publication dates of books.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
            "question": "For each player, show the team and the location of school they belong to.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",
            "question": "What are the names of actors and the musicals that they are in?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
            "question": "Show the years and the official names of the host cities of competitions.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
            "question": "Give the years and official names of the cities of each competition.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
            "question": "What are the team and the location of school each player belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T2.Name , T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID",
            "question": "Show the names of roller coasters and names of country they are in.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
            "question": "What are the titles of films and corresponding types of market estimations?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
            "question": "Please show the titles of films and the types of market estimations.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "Show names of cities and names of counties they are in.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Show distinct first and last names for all customers with an account.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What are the full names of customers who have accounts?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "architecture",
            "query": "SELECT DISTINCT T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id",
            "question": "What are the distinct names and nationalities of the architects who have ever built a mill?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
            "question": "What are the different names and credit scores of customers who have taken a loan?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "loan_1",
            "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
            "question": "Find the name and credit score of the customers who have some loans.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "architecture",
            "query": "SELECT max( T1.length_meters ) , T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id = T2.id",
            "question": "What is the maximum length in meters for the bridges and what are the architects' names?",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 2": [
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "List first name and last name of customers that have more than 2 payments.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count( * ) > 1",
            "question": "What are the ids and details of events that have more than one participants?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Find the the customer details and id for the customers who had more than one policy.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
            "question": "Find the name and email for the users who have more than one follower.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count( * ) > 1",
            "question": "What are the ids and names of the companies that operated more than one flight?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "what are name and phone number of patients who had more than one appointment?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count( * ) > 2",
            "question": "Which parts have more than 2 faults? Show the part name and id.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "What are the first and last names of all customers with more than 2 payments?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "What is the project id and detail for the project with at least two documents?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "What are the GDP and population of the city that already served as a host more than once?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "Return the order ids and details for orderes with two or more invoices.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "What is the order id and order details for the order more than two invoices.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT( * ) > 1",
            "question": "Show id and location of railways that are associated with more than one train.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "What are the full names of actors who had roles in more than 30 films?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the first names and ids for customers who have two or more accounts?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show first name and id for all customers with at least 2 accounts.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "What are the names and locations of tracks that have had exactly 1 race?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Show the names and ids of tourist attractions that are visited at least two times.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "Show the names and ids of tourist attractions that are visited at most once.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "What are the names and ids of the tourist attractions that are visited at most once?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "Find the organisation ids and details of the organisations which are involved in",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id HAVING max( T1.precipitation ) > 50",
            "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Find the student ID and personal name of the student with at least two enrollments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "Find the student ID and middle name for all the students with at most two enrollments.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "Show the name and location of track with 1 race.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
            "question": "What are the id and details of the customers who have at least 3 events?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "What are the ids and names of accounts with 4 or more transactions?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "Show the account id and name with at least 4 transactions.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "What are the student IDs and middle names of the students enrolled in at most two courses?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count( * ) >= 1",
            "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count( * ) >= 3",
            "question": "What are the ids and names of the architects who built at least 3 bridges ?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the id and name of the mountains that have at least 2 photos?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) < 2",
            "question": "Find the name and partition id for users who tweeted less than twice.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
            "ted": 0.027777777777777776
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT( * ) > 1",
            "question": "Show names of pilots that have more than one record.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Roles.role_description , count( Employees.employee_id ) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count( Employees.employee_id ) > 1",
            "question": "List roles that have more than one employee. List the role description and number of employees.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
            "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",
            "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.customer_name , count( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count( * ) >= 2",
            "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) > 1",
            "question": "Find the title, credit, and department name of courses that have more than one prerequisites?",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) > 1",
            "question": "What is the title, credit value, and department name for courses with more than one prerequisite?",
            "ted": 0.1
        }
    ],
    "SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'": [
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country , elevation FROM airports WHERE city = 'New York'",
            "question": "What is the name, city, country, and elevation for every airport in the city of New York?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country , elevation FROM airports WHERE city = 'New York'",
            "question": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' )": [],
    "select T1.fname from student as T1 join has_pet as T2 on T1.stuid = T2.stuid join pets as T3 on T3.petid = T2.petid where T3.pettype = 'cat' intersect select T1.fname from student as T1 join has_pet as T2 on T1.stuid = T2.stuid join pets as T3 on T3.petid = T2.petid where T3.pettype = 'dog'": [
        {
            "db_id": "storm_record",
            "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'",
            "question": "What are the names of the storms that affected both the regions of Afghanistan and Albania?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'",
            "question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'",
            "question": "What are the names of any scientists who worked on projects named 'Matter of Time' and 'A Puzzling Pattern'?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'",
            "question": "Find the name of the scientist who worked on both a project named 'Matter of Time' and a project named 'A Puzzling Parallax'.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'",
            "question": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'City Mall' INTERSECT SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'Village Store'",
            "question": "What are the names of the districts that have both mall and village store style shops?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'",
            "question": "For grants that have descriptions of Regular and Initial Applications, what are their start dates?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'",
            "question": "What are the names of the branches that have some members with a hometown in Louisville, Kentucky and also those from Hiram, Goergia?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Marcelle'",
            "question": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'",
            "question": "What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'",
            "question": "Find the name of the storm that affected both Afghanistan and Albania regions.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Heathrow' INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Heathrow' INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "Find the name of dorms which have both TV Lounge and Study Room as amenities.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "What is the name of the dorm with both a TV Lounge and Study Room listed as amenities?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "Find the name of tracks which are in both Movies and music playlists.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "What are the names of all the tracks that are in both the Movies and music playlists?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = 'Ananthapuri Express' INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = 'Guruvayur Express'",
            "question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'City Mall' INTERSECT SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'Village Store'",
            "question": "Find the names of districts where have both city mall and village store type stores.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'",
            "question": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'",
            "question": "What are the first names of the faculty members playing both Canoeing and Kayaking?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'",
            "question": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Marcelle'",
            "question": "What are the names of the tourist attractions Vincent and Marcelle visit?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Thiago Motta'",
            "question": "List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Lasta Massif'",
            "question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'",
            "question": "Find the first names of the faculty members who participate in Canoeing and Kayaking.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'",
            "question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'",
            "question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'",
            "question": "Find the titles of albums that contain tracks of both the Reggae and Rock genres.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'New policy application'",
            "question": "Which customers have used both the service named \"Close a policy\" and the service named \"Upgrade a policy\"? Give me the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry'",
            "question": "Find the name of physicians who are affiliated with both Surgery and Psychiatry departments.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'New policy application'",
            "question": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\".",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry'",
            "question": "Which physicians are affiliated with both Surgery and Psychiatry departments? Tell me their names.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "What are the names of all tracks that are on the Movies playlist but not in the music playlist?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Alison' EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Rosalind'",
            "question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "What is the name of each dorm that has a TV Lounge but no study rooms?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Alison' EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Rosalind'",
            "question": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'",
            "question": "What are the names of the tourist attractions that have parking or shopping as their feature details?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'",
            "question": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "Find the name of dorms which have TV Lounge but no Study Room as amenity.",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "Find the name of tracks which are in Movies playlist but not in music playlist.",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT T3.name FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID JOIN manufacturer AS T3 ON T2.manufacturer_id = T3.manufacturer_id WHERE T1.num_of_component < 6 INTERSECT SELECT T3.name FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID JOIN manufacturer AS T3 ON T2.manufacturer_id = T3.manufacturer_id WHERE T1.num_of_component > 10",
            "question": "Find the name of the company that produces both furnitures with less than 6 components and furnitures with more than 10 components.",
            "ted": 0.06976744186046512
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' INTERSECT SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?",
            "ted": 0.0851063829787234
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' INTERSECT SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix?",
            "ted": 0.0851063829787234
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'rem' EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'aut'",
            "question": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.",
            "ted": 0.09574468085106383
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'rem' EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'aut'",
            "question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?",
            "ted": 0.09574468085106383
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' EXCEPT SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?",
            "ted": 0.09574468085106383
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' EXCEPT SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?",
            "ted": 0.09574468085106383
        }
    ],
    "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 4 AND T3.pettype = 'dog'": [
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = 'PUR'",
            "question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Stephanie' AND T1.lname = 'Weirich'",
            "question": "Which papers have \"Stephanie Weirich\" as an author?",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Stephanie' AND T1.lname = 'Weirich'",
            "question": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.",
            "ted": 0.04
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
            "question": "What are the first names of all students who took ACCT-211 and received a C?",
            "ted": 0.04
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
            "question": "What is the first name of students enrolled in class ACCT-211 and got grade C?",
            "ted": 0.04
        },
        {
            "db_id": "city_record",
            "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
            "question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
            "ted": 0.04
        },
        {
            "db_id": "game_1",
            "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
            "question": "Show all game names played by Linda Smith",
            "ted": 0.04
        },
        {
            "db_id": "game_1",
            "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = 'Smith' AND T3.Fname = 'Linda'",
            "question": "What are the names of all games played by Linda Smith?",
            "ted": 0.04
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
            "question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?",
            "ted": 0.04
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
            "question": "List all characteristics of product named \"sesame\" with type code \"Grade\".",
            "ted": 0.04
        },
        {
            "db_id": "city_record",
            "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = 'Nanjing ( Jiangsu ) ' AND T3.competition = '1994 FIFA World Cup qualification'",
            "question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
            "question": "Find the papers which have \"Olin Shivers\" as an author.",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
            "question": "Find the titles of all the papers written by \"Aaron Turon\".",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Aaron' AND T1.lname = 'Turon'",
            "question": "Find all the papers published by \"Aaron Turon\".",
            "ted": 0.04
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' AND T3.name = 'MPEG audio file'",
            "question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.",
            "ted": 0.04
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' AND T3.name = 'MPEG audio file'",
            "question": "What are the names of all Rock tracks that are stored on MPEG audio files?",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
            "question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Jeremy' AND T1.lname = 'Gibbons'",
            "question": "Find the titles of all the papers written by \"Jeremy Gibbons\"",
            "ted": 0.04
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Jeremy' AND T1.lname = 'Gibbons'",
            "question": "What are the titles of papers published by \"Jeremy Gibbons\"?",
            "ted": 0.04
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
            "question": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
            "ted": 0.04
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = 'Solveig' AND T2.title = 'A Bar In Amsterdam'",
            "question": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?",
            "ted": 0.04
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
            "question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
            "ted": 0.04
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = 'Solveig' AND T2.title = 'A Bar In Amsterdam'",
            "question": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?",
            "ted": 0.04
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id WHERE T3.name = 'CACHEbox' AND T2.name = 'Internet Explorer'",
            "question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?",
            "ted": 0.04
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "Show the names of all the activities Mark Giuliano participates in.",
            "ted": 0.04
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "What are the names of the activities Mark Giuliano is involved in",
            "ted": 0.04
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
            "question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?",
            "ted": 0.04
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = 'Heilo' AND T2.title = 'Der Kapitan'",
            "question": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?",
            "ted": 0.04
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
            "question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?",
            "ted": 0.04
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = 'Heilo' AND T2.title = 'Der Kapitan'",
            "question": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?",
            "ted": 0.04
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
            "question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.",
            "ted": 0.06
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code JOIN ref_colors AS T3 ON T1.color_code = T3.color_code WHERE T3.color_description = 'white' AND T2.unit_of_measure != 'Handful'",
            "question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?",
            "ted": 0.06
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code JOIN ref_colors AS T3 ON T1.color_code = T3.color_code WHERE T3.color_description = 'white' AND T2.unit_of_measure != 'Handful'",
            "question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".",
            "ted": 0.06
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
            "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
            "ted": 0.06
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
            "question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?",
            "ted": 0.06
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
            "question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".",
            "ted": 0.06
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
            "question": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.",
            "ted": 0.06
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
            "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
            "ted": 0.06
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
            "question": "How many clubs does \"Linda Smith\" belong to?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
            "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
            "question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region AS T1 JOIN party AS T2 ON T1.region_id = T2.region_id JOIN party_events AS T3 ON T2.party_id = T3.party_id WHERE T1.region_name = 'United Kingdom' AND T3.Event_Name = 'Annaual Meeting'",
            "question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Davis' AND T3.lname = 'Steven'",
            "question": "List the clubs having \"Davis Steven\" as a member.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( * ) FROM region AS T1 JOIN party AS T2 ON T1.region_id = T2.region_id JOIN party_events AS T3 ON T2.party_id = T3.party_id WHERE T1.region_name = 'United Kingdom' AND T3.Event_Name = 'Annaual Meeting'",
            "question": "How many Annual Meeting events happened in the United Kingdom region?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "club_1",
            "query": "SELECT DISTINCT T1.clubname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Davis' AND T3.lname = 'Steven'",
            "question": "What are the names of the clubs that have \"Davis Steven\" as a member?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Tracy' AND T3.lname = 'Kim'",
            "question": "For how many clubs is \"Tracy Kim\" a member?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
            "question": "How many clubs does \"Linda Smith\" have membership for?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Tracy' AND T3.lname = 'Kim'",
            "question": "Find the number of clubs where \"Tracy Kim\" is a member.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Atsushi' AND T1.lname = 'Ohori'",
            "question": "How many papers are \"Atsushi Ohori\" the author of?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Matthias' AND T1.lname = 'Blume'",
            "question": "What is the name of the institution that \"Matthias Blume\" belongs to?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Matthias' AND T1.lname = 'Blume'",
            "question": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
            "question": "Which institution does \"Katsuhiro Ueno\" belong to?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT count( * ) FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Atsushi' AND T1.lname = 'Ohori'",
            "question": "How many papers have \"Atsushi Ohori\" published?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
            "question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
            "question": "How many female students live in Smith Hall?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
            "question": "Find the number of female students (with F sex) living in Smith Hall",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
            "question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?",
            "ted": 0.08
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
            "question": "What is the first name of the student whose last name starts with the letter S and is taking ACCT-211?",
            "ted": 0.08
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
            "question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "activity_1",
            "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
            "question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "activity_1",
            "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
            "question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.",
            "ted": 0.09615384615384616
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
            "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.",
            "ted": 0.09615384615384616
        }
    ],
    "SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id": [
        {
            "db_id": "ship_mission",
            "query": "SELECT T1.Code , T1.Fate , T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID",
            "question": "Show codes and fates of missions, and names of ships involved.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Season , T2.Player , T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country",
            "question": "Show the season, the player, and the name of the country that player belongs to.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Season , T2.Player , T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country",
            "question": "For each player, what are their name, season, and country that they belong to?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Season , T1.Player , T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id",
            "question": "Show the season, the player, and the name of the team that players belong to.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Season , T1.Player , T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id",
            "question": "Who are the different players, what season do they play in, and what is the name of the team they are on?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T2.budget_type_code , T2.budget_type_description , T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code",
            "question": "Show the budget type code and description and the corresponding document id.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T1.name , T1.date , T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id",
            "question": "Show the name and date for each race and its track name.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.source_system_code , T1.master_customer_id , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id",
            "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.guest_first_name , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id",
            "question": "What are the guest first name, start date, and end date of each apartment booking?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.guest_first_name , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id",
            "question": "Show the guest first names, start dates, and end dates of all the apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.department_name , T2.city , T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id = T1.location_id",
            "question": "What are the department names, cities, and state provinces for each department?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.apt_number , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id",
            "question": "What are the apartment number, start date, and end date of each apartment booking?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.apt_number , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id",
            "question": "Show the apartment numbers, start dates, and end dates of all the apartment bookings.",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT T1.Code , T1.Fate , T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID",
            "question": "What are the mission codes, fates, and names of the ships involved?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.department_name , T2.city , T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id = T1.location_id",
            "question": "display the department name, city, and state province for each department.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T2.date_moved_in , T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What is each customer's move in date, and the corresponding customer id and details?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.thing_id , T1.type_of_Thing_Code , T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id",
            "question": "List the id and type of each thing, and the details of the organization that owns it.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT T1.name , T1.date , T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id",
            "question": "What are the names and dates of races, and the names of the tracks where they are held?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_type_name , T1.document_type_description , T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code",
            "question": "Return the type name, type description, and date of creation for each document.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_type_name , T1.document_type_description , T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code",
            "question": "What is the document type name and the document type description and creation date for all the documents?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T2.budget_type_code , T2.budget_type_description , T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code",
            "question": "Return the budget type codes, budget type descriptions and document ids for documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.invoice_date , T1.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id",
            "question": "Show invoice dates and order id and details for all invoices.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details , T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id",
            "question": "What are the statement ids, statement details, and account details, for all accounts?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.statement_id , T2.statement_details , T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id",
            "question": "Show statement id, statement detail, account detail for accounts.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.invoice_date , T1.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id",
            "question": "What are the invoice dates, order ids, and order details for all invoices?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name , T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Show the unique first names, last names, and phone numbers for all customers with any account.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name , T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What are the distinct first names, last names, and phone numbers for customers with accounts?",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum( T3.cost_of_treatment ) DESC LIMIT 1": [
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY sum( T3.order_quantity ) DESC LIMIT 1",
            "question": "What are the name and phone of the customer with the most ordered product quantity?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the role description and the id of the project staff involved in most number of project outcomes?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and name of the stadium where the largest number of injury accidents occurred.",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which part fault requires the most number of skills to fix? List part id and name.",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and surname of the driver who participated the most number of races?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the ids and last names of all drivers who participated in the most races?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the title and inventory id of the film that is rented most often.",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.id , T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the id and name of the stadium where the most injury accidents happened?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "For each staff id, what is the description of the role that is involved with the most number of projects?",
            "ted": 0.020833333333333332
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count( * ) LIMIT 1",
            "question": "What is the name and capacity of the dorm with the fewest amount of amenities?",
            "ted": 0.041666666666666664
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count( * ) LIMIT 1",
            "question": "Find the name and capacity of the dorm with least number of amenities.",
            "ted": 0.041666666666666664
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T1.dept_code = T3.dept_code GROUP BY T1.dept_code ORDER BY sum( T1.crs_credit ) DESC LIMIT 1",
            "question": "Which department offers the most credits all together?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_name ORDER BY sum( T3.order_quantity ) DESC LIMIT 1",
            "question": "What is the name of the customer that has purchased the most items?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_name ORDER BY sum( T3.order_quantity ) DESC LIMIT 1",
            "question": "Give me the name of the customer who ordered the most items in total.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "college_1",
            "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T1.dept_code = T3.dept_code GROUP BY T1.dept_code ORDER BY sum( T1.crs_credit ) DESC LIMIT 1",
            "question": "Find the name of the department that offers the largest number of credits of all classes.",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT count( DISTINCT pettype ) FROM pets": [
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "How many different teams have had eliminated wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "How many distinct governors are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "How many different types of rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the unique types of player positions in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergy entries are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many different allergy types exist?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many distinct allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges were represented at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "Count the number of distinct governors.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "How many distinct currency codes are there for all drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges do attend the tryout test?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "How many different types of transactions are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "From the trip record, find the number of unique bikes.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "How many different bike ids are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "What is the number of distinct cities the stations are located at?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "How many different cities have these stations?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "Count the number of different affected regions.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "How many regions are affected?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "Find the number of distinct currency codes used in drama workshop groups.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "Show the number of transaction types.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "Find the number of distinct room types available.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of artists who have had volumes.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many different types of sports do we offer?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many students play sports?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "How many distinct countries are the climbers from?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "Count the number of different countries that climbers are from.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many different students are involved in sports?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "How many different levels do members have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "What is the count of distinct employees with certificates?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "How many distinct companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists have volumes?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many students play video games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "How many distinct payment methods are used by parties?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( DISTINCT nationality ) FROM swimmer",
            "question": "How many different countries are all the swimmers from?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many different students play games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "Count the number of different payment method codes used by parties.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the different types of player positions?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( DISTINCT Party ) FROM representative",
            "question": "How many distinct parties are there for representatives?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "how many different positions are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different position for players are listed?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( DISTINCT Birth_Place ) FROM people",
            "question": "How many distinct birth places are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "How many employees have certificate.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "What is the number of distinct teams that suffer elimination?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "Show the number of card types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "How many distinct president votes are recorded?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "Find the distinct number of president votes.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "Count the number of different hometowns of these people.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "How many distinct hometowns did these people have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT Status_of_Thing_Code ) FROM Timed_Status_of_Things",
            "question": "How many different status codes of things are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "How many students have advisors?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "Count the number of students who have advisors.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "How many departments offer courses?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have an account?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "what is the number of different channel owners?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "Count the number of departments which offer courses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "How many different instructors have taught some course?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "Count the number of distinct instructors who have taught a course.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different positions of players are there?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "What are the different membership levels?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "Count the number of distinct player positions.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct students are enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct students enrolled in courses.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "Count the number of distinct channel owners.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "How many different card types are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who hold an account.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of distinct artists who have volumes.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT COUNT( DISTINCT transaction_type_code ) FROM TRANSACTIONS",
            "question": "How many distinct transaction types are used in the transactions?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "Give me the number of faculty members who participate in an activity",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "How many faculty members participate in an activity?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many different advisors are listed?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many advisors are there?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT u_id ) FROM review",
            "question": "How many different users wrote some reviews?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "How many unique labels are there for albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "What are the unique labels for the albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists do the volumes associate to?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT i_id ) FROM review",
            "question": "How many different items were reviewed by some users?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "Find the number of distinct bed types available in this inn.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "How many different types of beds are there?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( DISTINCT client ) FROM web_client_accelerator",
            "question": "How many different kinds of clients are supported by the web clients accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Find the number of different product types.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Count the number of distinct product types.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT brand ) FROM camera_lens",
            "question": "How many different kinds of lens brands are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( DISTINCT SOURCE ) FROM injury_accident",
            "question": "How many different kinds of information sources are there for injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( DISTINCT UID ) FROM tweets",
            "question": "Find the number of users who posted some tweets.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( DISTINCT source_system_code ) FROM CMI_cross_references",
            "question": "How many different source system code for the cmi cross references are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many sports do we have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( DISTINCT participant_id ) FROM participants_in_Events",
            "question": "What are all the distinct participant ids who attended any events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "Count the number of distinct claim outcome codes.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "Count the number of distinct names associated with the photos.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many type of jobs do they have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "How many different statuses do cities have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "Count the number of different statuses.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "Count the number of different account types.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "Count the number of different last names actors have.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities do people originate from?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many distinct FDA approval statuses are there for the medicines?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "How many different last names do the actors and actresses have?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many different FDA approval statuses exist for medicines?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "How many schools are in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT incident_type_code ) FROM Behavior_Incident",
            "question": "How many distinct incident type codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "How many distinct claim outcome codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "Count the number of schools that have had basketball matches.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "Count the number of different complaint type codes.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "How many distinct complaint type codes are there in the database?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT student_id ) FROM Students_in_Detention",
            "question": "How many distinct students have been in detention?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "How many distinct types of accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "In how many different states are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "Find the number of different states which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "In how many different cities are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "Count the number of different film ratings.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "Count the number of different scientists assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "Find the number of distinct projects.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "How many kinds of different ratings are listed?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "How many different projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( DISTINCT LOCATION ) FROM perpetrator",
            "question": "How many distinct locations of perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "How many different software platforms are there for devices?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "Count the number of different software platforms.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "Find the number of different cities that employees live in.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "Count the number of different directors.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "How many movie directors are there?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "Count the number of different languages in these films.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "How many languages are in these films?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "How many parties do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "Count the number of different parties.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "Find the number of different cities which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many different jobs are listed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "How many distinct names are associated with all the photos?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( DISTINCT temporary_acting ) FROM management",
            "question": "How many acting statuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "How many distinct cities does the employees live in?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "How many different scientists are assigned to any project?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Count the number of different affiliation types.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "Find the number of distinct gender for dorms.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "What is the number of distinct publication dates?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Find how many different affiliation types there are.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "How many dorms have amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "Find the number of dorms that have some amenity.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have opened an account?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many different roles are there on the project staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many kinds of roles are there for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( DISTINCT payment_method ) FROM customers",
            "question": "How many different payment methods are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "How many different genders are there in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "Count the number of different ranks of captain.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "How many schools are there in the department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many different classes are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many unique classes are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "How many courses are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "What are the number of different course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many departments does the college has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many different departments are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "Count the number of different companies.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "How many different captain ranks are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "how many schools exist in total?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "Count the number of different teams involved in match season.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who have an account.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "Count the number of distinct company industries.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities are they from?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "How many different industries are the companies in?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "How many distinct publication dates are there in our record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "How many distinct teams are involved in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT count( DISTINCT services ) FROM station",
            "question": "How many different services are provided by all stations?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "How many video game types exist?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products_for_hire",
            "question": "How many different product types are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "What is the count of different game types?",
            "ted": 0.0
        }
    ],
    "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19": [
        {
            "db_id": "shop_membership",
            "query": "SELECT count( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
            "question": "What are the total purchases for members rated at level 6?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
            "question": "How many courses does the student with id 171 actually attend?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
            "question": "How many courses do the student whose id is 171 attend?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
            "question": "What is the total number of purchases for members with level 6?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT sum( T2.Killed ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84",
            "question": "What is the total kills of the perpetrators with height more than 1.84.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT sum( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85",
            "question": "Give the total money requested by entrepreneurs who are taller than 1.85.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT sum( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85",
            "question": "What is the total money requested by entrepreneurs with height more than 1.85?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "body_builder",
            "query": "SELECT avg( T1.Total ) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200",
            "question": "What is the average total score of body builders with height bigger than 200?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "film_rank",
            "query": "SELECT avg( T2.Number_cities ) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Low_Estimate > 10000",
            "question": "What is the average number of cities of markets with low film market estimate bigger than 10000?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "film_rank",
            "query": "SELECT avg( T2.Number_cities ) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Low_Estimate > 10000",
            "question": "Give the average number of cities within markets that had a low market estimation larger than 10000?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( DISTINCT T1.injury ) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id = T2.id WHERE T2.season > 2010",
            "question": "How many distinct kinds of injuries happened after season 2010?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT T2.Delegate ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000",
            "question": "How many distinct delegates are from counties with population larger than 50000?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT T2.Delegate ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000",
            "question": "Count the number of distinct delegates who are from counties with population above 50000.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4",
            "question": "Show the facility codes of apartments with more than 4 bedrooms.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Weeks_on_Top > 2",
            "question": "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Weeks_on_Top > 2",
            "question": "Please show the date of ceremony of the volumes that last more than 2 weeks on top.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928",
            "question": "What are the names of ships that were involved in a mission launched after 1928?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928",
            "question": "Show names of ships involved in a mission launched after 1928.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000",
            "question": "What are the star rating descriptions of the hotels with price above 10000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000",
            "question": "Find the the name of the customers who have a loan with amount more than 3000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000",
            "question": "Please show the themes of competitions with host cities having populations larger than 1000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000",
            "question": "What are the themes of competitions that have corresponding host cities with more than 1000 residents?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000",
            "question": "What are the names of customers who have a loan of more than 3000 in amount?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2",
            "question": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100",
            "question": "Show details of all investors if they make any transaction with share count greater than 100.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "body_builder",
            "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total > 300",
            "question": "What are the names of body builders whose total score is higher than 300?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000",
            "question": "What are the purchase details of transactions with amount bigger than 10000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election_representative",
            "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE Votes > 10000",
            "question": "What are the names of representatives with more than 10000 votes in election?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4",
            "question": "What are the facility codes of the apartments with more than four bedrooms?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
            "question": "Find the order detail for the products with price above 2000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2",
            "question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000",
            "question": "Give me the star rating descriptions of the hotels that cost more than 10000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2",
            "question": "What are the famous title of the artists associated with volumes with more than 2 weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100",
            "question": "Give me the descriptions of the service types that cost more than 100.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010",
            "question": "Find the cities which were once a host city after 2010?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010",
            "question": "Which cities served as a host city after 2010?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "book_2",
            "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000",
            "question": "Show writers who have published a book with price more than 4000000.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50",
            "question": "What are the times of elimination for wrestlers with over 50 days held?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2",
            "question": "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100",
            "question": "What are the descriptions of the service types with product price above 100?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT avg( T2.Weeks_on_Top ) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 25",
            "question": "Return the average number of weeks on top for volumes by artists that are at most 25 years old.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT avg( T2.Weeks_on_Top ) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 25",
            "question": "What is the average weeks on top of volumes associated with the artist aged 25 or younger?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3",
            "question": "What are the names of the reviewers who have rated a movie more than 3 stars before?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
            "question": "Show the crime rate of counties with a city having white percentage more than 90.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
            "question": "What are the crime rates of counties that contain cities that have white percentages of over 90?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50",
            "question": "Show times of elimination of wrestlers with days held more than 50.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Total_Points > 57.5",
            "question": "Give the different hometowns of gymnasts that have a total point score of above 57.5.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Total_Points > 57.5",
            "question": "What are the distinct hometowns of gymnasts with total points more than 57.5?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
            "question": "What are the order details of the products with price higher than 2000?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3",
            "question": "Find the names of reviewers who had given higher than 3 star ratings.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Rank_in_Round > 3",
            "question": "Show the names of members that have a rank in round higher than 3.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "Count the total number of policies used by the customer named \"Dayana Robel\".",
            "ted": 0.1
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "How many policies are listed for the customer named \"Dayana Robel\"?",
            "ted": 0.1
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students are affected by food related allergies?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems are there for product voluptatem?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems did the product called \"voluptatem\" have in record?",
            "ted": 0.1
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many vocal types are used in the song \"Le Pop\"?",
            "ted": 0.1
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "Find the number of vocal types used in song \"Le Pop\"",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "Count the number of tracks that are of the media type \"AAC audio file\".",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums does Billy Cobham has?",
            "ted": 0.1
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums has Billy Cobam released?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "How many tracks are in the AAC audio file media type?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Count the number of tracks that are part of the rock genre.",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "How many tracks belong to rock genre?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Find the number of albums by the artist \"Metallica\".",
            "ted": 0.1
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lessons did the customer with the first name Ray take?",
            "ted": 0.1
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lesson does customer with first name Ray took?",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "Count the number of stores the chain South has.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "How many department stores does the store chain South have?",
            "ted": 0.1
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Hom many albums does the artist \"Metallica\" have?",
            "ted": 0.1
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.1
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "What are the types of vocals used in the song \"Demon Kitty Rag\"?",
            "ted": 0.1
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.1
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students have a food allergy?",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "Count the number of trips that did not end in San Francisco city.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "What is the number of routes whose destinations are Italian airports?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes does the professor whose last name is Graztevski teach?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "Count the number of financial transactions that the account with the name 337 has.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "How many transaction does account with name 337 have?",
            "ted": 0.1
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS'",
            "question": "How many documents were shipped by USPS?",
            "ted": 0.1
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids",
            "question": "List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.",
            "ted": 0.1
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids",
            "question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?",
            "ted": 0.1
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT count( * ) FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'England'",
            "question": "How many leagues are there in England?",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "How many cities are in Australia?",
            "ted": 0.1
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "Count the number of cities in Australia.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "Find the number of professors in accounting department.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "How many professors are in the accounting dept?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes are professor whose last name is Graztevski has?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "What is the number of routes that end at John F Kennedy International Airport?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses are offered by the Computer Info. Systems department?",
            "ted": 0.1
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "Find the number of vocal types used in song \"Demon Kitty Rag\"?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "Find the number of routes that have destination John F Kennedy International Airport.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "Find the number of routes with destination airports in Italy.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "How many students enrolled in class ACCT-211?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "What are the total number of students enrolled in ACCT-211?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "How many routes end in a Canadian airport?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "Find the number of routes whose destination airports are in Canada.",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "How many routes does American Airlines operate?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "Find the number of routes operated by American Airlines.",
            "ted": 0.1
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "How many characteristics does the product named \"sesame\" have?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses does the department of Computer Information Systmes offer?",
            "ted": 0.1
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "Count the number of characteristics the product 'sesame' has.",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students attend course English?",
            "ted": 0.1
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students are attending English courses?",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "How many trips did not end in San Francisco?",
            "ted": 0.1
        }
    ],
    "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals": [
        {
            "db_id": "e_learning",
            "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
            "question": "Find the common personal name of course authors and students.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
            "question": "What are ids of the faculty members who not only participate in an activity but also advise a student.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
            "question": "Show the ids of all the faculty members who participate in an activity and advise a student.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
            "question": "Show ids of students who play video game and play sports.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
            "question": "What are the ids of all students who played video games and sports?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
            "question": "What are the last names that are used by customers and staff?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
            "question": "Which last names are both used by customers and by staff?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
            "question": "What are the personal names used both by some course authors and some students?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
            "question": "Find the common login name of course authors and students.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
            "question": "What are the login names used both by some course authors and some students?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
            "question": "What are the names of all cities and states?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Show the ids of the employees who don't authorize destruction for any document.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
            "question": "What are the ids of instructors who didnt' teach?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
            "question": "Which faculty do not participate in any activity? Find their faculty ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
            "question": "Find the id of instructors who didn't teach any courses?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "e_government",
            "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
            "question": "Find the name of all the cities and states.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
            "question": "Show ids of students who don't play video game.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
            "question": "What are the ids of all students who don't play sports?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
            "question": "What are the ids of all students who are not video game players?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Show the ids of all employees who don't destroy any document.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Which employees do not destroy any document? Find their employee ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
            "question": "Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
            "question": "Find the id of the courses that do not have any prerequisite?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "movie_1",
            "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie",
            "question": "What are the names of all the reviewers and movie names?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
            "question": "Show the ids of the students who don't participate in any activity.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
            "question": "What are the names of all people who do not have friends?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
            "question": "What are the ids of the students who are not involved in any activity",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
            "question": "What are the ids of courses without prerequisites?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
            "question": "Show ids for all employees who don't have a certificate.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
            "question": "Show the ids of the faculty who don't participate in any activity.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "movie_1",
            "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie",
            "question": "Return all reviewer names and movie names together in a single list.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases",
            "question": "What are the details of all sales and purchases?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
            "question": "Which organizations are not a parent organization of others? List the organization id.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers",
            "question": "Return the phone numbers for all customers and suppliers.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers",
            "question": "What are the phone numbers of all customers and suppliers.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
            "question": "Which students are unaffected by allergies?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff",
            "question": "What are the phone numbers of all customers and all staff members?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
            "question": "What are the student ids of students who don't have any allergies?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
            "question": "Show student ids who don't have any sports.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
            "question": "What are the ids of the students who either registered or attended a course?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
            "question": "What are the id of students who registered courses or attended courses?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff",
            "question": "Find the phone number of all the customers and staff.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
            "question": "What are the ids of the faculty members who do not advise any student.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
            "question": "What are the ids of all employees that don't have certificates?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
            "question": "Show ids for the faculty members who don't advise any student.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
            "question": "What are the names of the customers and staff members?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
            "question": "Show customer ids who don't have an account.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
            "question": "Find the names of all the customers and staff members.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
            "question": "Return the ids of documents that do not have expenses.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
            "question": "What are the ids of documents which don't have expense budgets?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines",
            "question": "Which cmi cross reference id is not related to any parking taxes?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
            "question": "What are the customer ids for customers who do not have an account?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
            "question": "Who is the person that has no friend?",
            "ted": 0.05555555555555555
        }
    ],
    "SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1": [
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
            "question": "Select the name and price of the cheapest product.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
            "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
            "question": "Show the enrollment and primary_conference of the oldest college.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
            "question": "what are the order id and customer id of the oldest order?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
            "question": "Find the order id and customer id associated with the oldest order.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
            "question": "What is the station station and end station for the trips with the three smallest ids?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
            "question": "Give me the start station and end station for the trips with the three oldest id.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
            "question": "Give the id and product type of the product with the lowest price.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
            "question": "Show the details and star ratings of the 3 least expensive hotels.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
            "question": "What are the product id and product type of the cheapest product?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
            "question": "What are the room name and base price of the room with the lowest base price?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
            "question": "What is the name and price of the cheapest product?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
            "question": "What is the oldest log id and its corresponding problem id?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
            "question": "Find the oldest log id and its corresponding problem id.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
            "question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name , email FROM user_profiles ORDER BY followers LIMIT 1",
            "question": "Find the name and email of the user followed by the least number of people.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
            "question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
            "question": "Which room has cheapest base price? List the room's name and the base price.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
            "question": "What are the details and star ratings of the three hotels with the lowest price ranges?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
            "question": "Which city has the lowest GDP? Please list the city name and its GDP.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Model_name , RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1",
            "question": "Which model has the least amount of RAM? List the model name and the amount of RAM.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
            "question": "Which part has the least chargeable amount? List the part id and amount.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
            "question": "What are the first and last names of the employee with the earliest date of birth?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
            "question": "What are the first and last names of the top 10 longest-serving employees?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
            "question": "List top 10 employee work longest in the company. List employee's first and last name.",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT name , Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1",
            "question": "Find the name and component amount of the least popular furniture.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
            "question": "What is the first and last name of the oldest employee?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
            "question": "What is the city with the smallest GDP? Return the city and its GDP.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
            "question": "What is the id and name of the aircraft that can cover the maximum distance?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
            "question": "Show the id and name of the aircraft with the maximum distance.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
            "question": "Which film has the highest rental rate? And what is the rate?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "wedding",
            "query": "SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3",
            "question": "Show the name and opening year for three churches that opened most recently.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
            "question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "What is the name and category code of the product with the highest price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",
            "question": "What are the ids of the trips that lasted the longest and how long did they last?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "Find the name and category of the most expensive product.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name and date of the most recent race?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
            "question": "Find the id and name of the most expensive base price room.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name and date of the race that occurred most recently?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
            "question": "Which room has the highest base price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",
            "question": "What are the ids and durations of the trips with the top 3 durations?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
            "question": "What are the dates that have the 5 highest cloud cover rates and what are the rates?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
            "question": "What are the title and rental rate of the film with the highest rental rate?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "news_report",
            "query": "SELECT venue , name FROM event ORDER BY Event_Attendance DESC LIMIT 2",
            "question": "List the event venues and names that have the top 2 most number of people attended.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
            "question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
            "question": "What are the name and the nationality of the host of the highest age?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
            "question": "What are the name and id of the three highest priced rooms?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT open_year , name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1",
            "question": "Which manufacturer has the most number of shops? List its name and year of opening.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cinema",
            "query": "SELECT name , LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",
            "question": "What are the name and location of the cinema with the largest capacity?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
            "question": "Show the id and name of the employee with maximum salary.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
            "question": "What is the id and name of the employee with the highest salary?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
            "question": "Show the names and main services for train stations that have the top three total number of passengers.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
            "question": "Find the name and building of the department with the highest budget.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
            "question": "Show the name and the nationality of the oldest host.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
            "question": "What is the flight number and its distance for the one with the maximum price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
            "question": "Show the flight number and distance of the flight with maximum price.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1",
            "question": "Which restaurants have highest rating? List the restaurant name and its rating.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "school_finance",
            "query": "SELECT amount , donator_name FROM endowment ORDER BY amount DESC LIMIT 1",
            "question": "List the amount and donor name for the largest amount of donation.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
            "question": "Find the name and id of the top 3 expensive rooms.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
            "question": "What is the department name and corresponding building for the department with the greatest budget?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT name , furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
            "question": "Return the name and id of the furniture with the highest market rate.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
            "question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
            "question": "Who is the youngest employee in the company? List employee's first and last name.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
            "question": "What is the name of the song that was released most recently?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
            "question": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
            "question": "What is the name of the song that was released in the most recent year?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
            "question": "What is the official name and status of the city with the most residents?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
            "question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
            "question": "What si the youngest employee's first and last name?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
            "question": "List the official name and status of the city with the largest population.",
            "ted": 0.05555555555555555
        }
    ],
    "select count( * ) , T1.stuid from student as T1 join has_pet as T2 on T1.stuid = T2.stuid group by T1.stuid": [
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
            "question": "For each product which has problems, what are the number of problems and the product id?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",
            "question": "What are the names of the scientists, and how many projects are each of them working on?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",
            "question": "Find the number of projects which each scientist is working on and scientist's name.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
            "question": "How many movie reviews does each director get?",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "What are the names of customers with accounts, and how many checking accounts do each of them have?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",
            "question": "What are the naems of all the projects, and how many scientists were assigned to each of them?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",
            "question": "Find the number of scientists involved for each project name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name",
            "question": "For each airport name, how many routes start at that airport?",
            "ted": 0.0
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT count( * ) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "Find the number of checking accounts for each account name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name",
            "question": "Find the number of routes for each source airport and the airport name.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "How many products are there for each manufacturer?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
            "question": "Find the number of medications prescribed for each brand.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
            "question": "How many medications are prescribed for each brand?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name",
            "question": "Find number of tracks in each genre?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
            "question": "How many assets does each maintenance contract contain? List the number and the contract id.",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT count( * ) , T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id",
            "question": "How many assets does each third party company supply? List the count and the company id.",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT count( * ) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
            "question": "For each director, how many reviews have they received?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "Find the number of products for each manufacturer, showing the name of each company.",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT count( * ) , T1.name FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.manufacturer_id = T2.manufacturer_id GROUP BY T1.manufacturer_id",
            "question": "Find the number of funiture types produced by each manufacturer as well as the company names.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name",
            "question": "How many tracks are in each genre?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",
            "question": "How many classes are held in each department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",
            "question": "Find the number of classes in each department.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) , T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id",
            "question": "For each project id, how many tasks are there?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
            "question": "For each product with some problems, list the count of problems and the product id.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) , T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id",
            "question": "How many tasks does each project have? List the task count and the project detail.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",
            "question": "What is the number of professors for different school?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",
            "question": "How many different professors are there for the different schools?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT min( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos",
            "question": "What is minimum hours of the students playing in different position?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( T1.crs_credit ) , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",
            "question": "What are the total number of credits offered by each department?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.price ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "Find the average prices of all products from each manufacture, and list each company's name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "What are the names of customers with accounts, and what are the total savings balances for each?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name",
            "question": "Find the total saving balance for each account name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.price ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
            "question": "What are the average prices of products for each manufacturer?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",
            "question": "What are the average prices of products, grouped by manufacturer name?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( amount ) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",
            "question": "What are the names of the different bank branches, and what are their total loan amounts?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( amount ) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",
            "question": "Find the total amount of loans offered by each bank branch.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",
            "question": "Select the average price of each manufacturer's products, showing the manufacturer's name.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( T1.crs_credit ) , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",
            "question": "Find the total credits of all classes offered by each department.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT min( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos",
            "question": "For each position, what is the minimum time students spent practicing?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( DISTINCT T1.name ) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter",
            "question": "How many different products are produced in each headquarter city?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( DISTINCT T1.name ) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter",
            "question": "Find the number of different products that are produced by companies at different headquarter cities.",
            "ted": 0.06666666666666667
        }
    ],
    "SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 2": [
        {
            "db_id": "loan_1",
            "query": "SELECT state , acc_type , credit_score FROM customer WHERE no_of_loans = 0",
            "question": "What are the states, account types, and credit scores for customers who have 0 loans?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state , acc_type , credit_score FROM customer WHERE no_of_loans = 0",
            "question": "Find the state, account type, and credit score of the customer whose number of loan is 0.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name , dates_active , number_deaths FROM storm WHERE number_deaths >= 1",
            "question": "What are the names, dates active, and number of deaths for storms that had 1 or more death?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , last_name , salary FROM employees WHERE salary < 6000",
            "question": "What are the full names and salaries for any employees earning less than 6000?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , last_name , salary FROM employees WHERE salary < 6000",
            "question": "List the full name (first and last name), and salary for those employees who earn below 6000.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name , dates_active , number_deaths FROM storm WHERE number_deaths >= 1",
            "question": "List name, dates active, and number of deaths for all storms with at least 1 death.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name , role_code , date_of_birth FROM Employees WHERE employee_Name = 'Armani'",
            "question": "What are the name, role code, and date of birth of the employee named 'Armani'?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name , role_code , date_of_birth FROM Employees WHERE employee_Name = 'Armani'",
            "question": "Show the name, role code, and date of birth for the employee with name 'Armani'.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_ID , Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'",
            "question": "Which Payments were processed with Visa? List the payment Id, the date and the amount.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_ID , Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'",
            "question": "Give me the payment Id, the date and the amount for all the payments processed with Visa.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT product , chromosome , porphyria FROM enzyme WHERE LOCATION = 'Cytosol'",
            "question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "activity_1",
            "query": "SELECT Fname , Lname , phone FROM Faculty WHERE Sex = 'F'",
            "question": "What are the first name, last name, and phone number of all the female faculty members?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "activity_1",
            "query": "SELECT Fname , Lname , phone FROM Faculty WHERE Sex = 'F'",
            "question": "Show the first name, last name, and phone number for all female faculty members.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , last_name , salary FROM employees WHERE commission_pct = 'null'",
            "question": "Return the full names and salaries of employees with null commissions.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT product , chromosome , porphyria FROM enzyme WHERE LOCATION = 'Cytosol'",
            "question": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname , Age FROM Student WHERE Sex = 'F'",
            "question": "Show first name, last name, age for all female students. Their sex is F.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , last_name , salary FROM employees WHERE commission_pct = 'null'",
            "question": "What are the full name (first and last name) and salary for all employees who does not have any value for commission?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Fname , Lname , Age FROM Student WHERE Sex = 'F'",
            "question": "What are the full names and ages for all female students whose sex is F?",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT max( weight ) , petType FROM pets GROUP BY petType": [
        {
            "db_id": "wine_1",
            "query": "SELECT count( * ) , Grape FROM WINE GROUP BY Grape",
            "question": "What are the numbers of wines for different grapes?",
            "ted": 0.0625
        },
        {
            "db_id": "formula_1",
            "query": "SELECT count( * ) , constructorid FROM constructorStandings GROUP BY constructorid",
            "question": "For each constructor id, how many races are there?",
            "ted": 0.0625
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT avg( product_price ) , product_category_code FROM products GROUP BY product_category_code",
            "question": "Return the average price of products that have each category code.",
            "ted": 0.0625
        },
        {
            "db_id": "city_record",
            "query": "SELECT count( * ) , Competition FROM MATCH GROUP BY Competition",
            "question": "For each competition, count the number of matches.",
            "ted": 0.0625
        },
        {
            "db_id": "city_record",
            "query": "SELECT count( * ) , Competition FROM MATCH GROUP BY Competition",
            "question": "Find the number of matches in different competitions.",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) , founder FROM manufacturers GROUP BY founder",
            "question": "What is the total revenue of companies started by founder?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT AVG( Price ) , Manufacturer FROM Products GROUP BY Manufacturer",
            "question": "Select the average price of each manufacturer's products, showing only the manufacturer's code.",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) , founder FROM manufacturers GROUP BY founder",
            "question": "Find the total revenue of companies of each founder.",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT AVG( Price ) , Manufacturer FROM Products GROUP BY Manufacturer",
            "question": "What are the average prices of products, grouped by manufacturer code?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT count( * ) , formats FROM files GROUP BY formats",
            "question": "How many songs were released for each format?",
            "ted": 0.0625
        },
        {
            "db_id": "document_management",
            "query": "SELECT count( * ) , role_code FROM users GROUP BY role_code",
            "question": "Find the number of users in each role.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT sum( grant_amount ) , organisation_id FROM Grants GROUP BY organisation_id",
            "question": "What is the total amount of grants given by each organisations? Also list the organisation id.",
            "ted": 0.0625
        },
        {
            "db_id": "document_management",
            "query": "SELECT count( * ) , role_code FROM users GROUP BY role_code",
            "question": "What are the different role codes for users, and how many users have each?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) , customer_id FROM Accounts GROUP BY customer_id",
            "question": "Count the number of accounts corresponding to each customer id.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT sum( grant_amount ) , organisation_id FROM Grants GROUP BY organisation_id",
            "question": "What is the total amount of grant money given to each organization and what is its id?",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) , customer_id FROM Accounts GROUP BY customer_id",
            "question": "How many accounts does each customer have? List the number and customer id.",
            "ted": 0.0625
        },
        {
            "db_id": "network_2",
            "query": "SELECT avg( age ) , job FROM Person GROUP BY job",
            "question": "How old is the average person for each job?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT avg( elevation ) , country FROM airports GROUP BY country",
            "question": "Find the average elevation of all airports for each country.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_4",
            "query": "SELECT avg( elevation ) , country FROM airports GROUP BY country",
            "question": "For each country, what is the average elevation of that country's airports?",
            "ted": 0.0625
        },
        {
            "db_id": "network_2",
            "query": "SELECT min( age ) , job FROM Person GROUP BY job",
            "question": "What is minimum age for different job title?",
            "ted": 0.0625
        },
        {
            "db_id": "formula_1",
            "query": "SELECT count( * ) , constructorid FROM constructorStandings GROUP BY constructorid",
            "question": "What are the numbers of races for each constructor id?",
            "ted": 0.0625
        },
        {
            "db_id": "formula_1",
            "query": "SELECT count( * ) , nationality FROM constructors GROUP BY nationality",
            "question": "For each nationality, how many different constructors are there?",
            "ted": 0.0625
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) , classroom FROM list GROUP BY classroom",
            "question": "How many students does one classroom have?",
            "ted": 0.0625
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) , classroom FROM list GROUP BY classroom",
            "question": "Find the number of students in one classroom.",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT count( * ) , gender FROM artist GROUP BY gender",
            "question": "What is the number of artists for each gender?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT count( * ) , gender FROM artist GROUP BY gender",
            "question": "How many artists are male and how many are female?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( rating ) , languages FROM song GROUP BY languages",
            "question": "What is the average rating of songs for each language?",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( rating ) , languages FROM song GROUP BY languages",
            "question": "What is the average song rating for each language?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) , name FROM manufacturers GROUP BY name",
            "question": "What is the total revenue of each manufacturer?",
            "ted": 0.0625
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) , name FROM manufacturers GROUP BY name",
            "question": "Find the total revenue for each manufacturer.",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( crs_credit ) , dept_code FROM course GROUP BY dept_code",
            "question": "How many credits does the department offer?",
            "ted": 0.0625
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , major FROM student GROUP BY major",
            "question": "How many students are there in each major?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT avg( age ) , sex FROM Student GROUP BY sex",
            "question": "What are the average ages for male and female students?",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) , time_of_day FROM broadcast GROUP BY time_of_day",
            "question": "how many programs are broadcast in each time section of the day?",
            "ted": 0.0625
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , major FROM student GROUP BY major",
            "question": "Find the number of students in each major.",
            "ted": 0.0625
        },
        {
            "db_id": "music_1",
            "query": "SELECT count( * ) , formats FROM files GROUP BY formats",
            "question": "For each file format, return the number of artists who released songs in that format.",
            "ted": 0.0625
        },
        {
            "db_id": "wine_1",
            "query": "SELECT count( * ) , Grape FROM WINE GROUP BY Grape",
            "question": "How many wines are there for each grape?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( crs_credit ) , dept_code FROM course GROUP BY dept_code",
            "question": "What is the total credit does each department offer?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , crs_code FROM CLASS GROUP BY crs_code",
            "question": "How many sections does each course have?",
            "ted": 0.0625
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT avg( product_price ) , product_category_code FROM products GROUP BY product_category_code",
            "question": "What is the average price of the products for each category?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , crs_code FROM CLASS GROUP BY crs_code",
            "question": "How many sections does each course has?",
            "ted": 0.0625
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT avg( age ) , city_code FROM student GROUP BY city_code",
            "question": "What is the average age for each city and what are those cities?",
            "ted": 0.0625
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT avg( age ) , city_code FROM student GROUP BY city_code",
            "question": "Find the average age of all students living in the each city.",
            "ted": 0.0625
        },
        {
            "db_id": "formula_1",
            "query": "SELECT count( * ) , nationality FROM constructors GROUP BY nationality",
            "question": "What are the numbers of constructors for different nationalities?",
            "ted": 0.0625
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT avg( age ) , sex FROM Student GROUP BY sex",
            "question": "Show the average age for male and female students.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( * ) , time_of_day FROM broadcast GROUP BY time_of_day",
            "question": "Count the number of programs broadcast for each time section of a day.",
            "ted": 0.0625
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT count( * ) , address FROM member GROUP BY address",
            "question": "Find the number of members living in each address.",
            "ted": 0.0625
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT sum( enrollment ) , affiliation FROM university GROUP BY affiliation",
            "question": "Find the total student enrollment for different affiliation type schools.",
            "ted": 0.0625
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) , flag FROM ship GROUP BY flag",
            "question": "What are the different ship flags, and how many ships have each?",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT sum( Rating_in_percent ) , OWNER FROM channel GROUP BY OWNER",
            "question": "Find the total rating ratio for each channel owner.",
            "ted": 0.0625
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) , dept_name FROM student GROUP BY dept_name",
            "question": "Find the total number of students in each department.",
            "ted": 0.0625
        },
        {
            "db_id": "wine_1",
            "query": "SELECT avg( Price ) , YEAR FROM WINE GROUP BY YEAR",
            "question": "What is the average prices of wines for each each?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) , rank FROM captain GROUP BY rank",
            "question": "Count the number of captains that have each rank.",
            "ted": 0.0625
        },
        {
            "db_id": "college_2",
            "query": "SELECT sum( credits ) , dept_name FROM course GROUP BY dept_name",
            "question": "How many total credits are offered by each department?",
            "ted": 0.0625
        },
        {
            "db_id": "college_2",
            "query": "SELECT sum( credits ) , dept_name FROM course GROUP BY dept_name",
            "question": "Find the total credits of courses provided by different department.",
            "ted": 0.0625
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) , flag FROM ship GROUP BY flag",
            "question": "Group by ships by flag, and return number of ships that have each flag.",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM student GROUP BY dept_code",
            "question": "Find the number of students for each department.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT sum( Rating_in_percent ) , OWNER FROM channel GROUP BY OWNER",
            "question": "What is the total rating of channel for each channel owner?",
            "ted": 0.0625
        },
        {
            "db_id": "wine_1",
            "query": "SELECT avg( Price ) , YEAR FROM WINE GROUP BY YEAR",
            "question": "What are the average prices of wines for different years?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( stu_hrs ) , dept_code FROM student GROUP BY dept_code",
            "question": "How many hours do the students spend studying in each department?",
            "ted": 0.0625
        },
        {
            "db_id": "station_weather",
            "query": "SELECT avg( high_temperature ) , day_of_week FROM weekly_weather GROUP BY day_of_week",
            "question": "What is the average high temperature for each day of week?",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT sum( stu_hrs ) , dept_code FROM student GROUP BY dept_code",
            "question": "Find the total number of hours have done for all students in each department.",
            "ted": 0.0625
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM student GROUP BY dept_code",
            "question": "How many students are in each department?",
            "ted": 0.0625
        },
        {
            "db_id": "flight_company",
            "query": "SELECT count( * ) , country FROM airport GROUP BY country",
            "question": "how many airports are there in each country?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( * ) , rank FROM captain GROUP BY rank",
            "question": "How many captains are in each rank?",
            "ted": 0.0625
        },
        {
            "db_id": "network_2",
            "query": "SELECT min( age ) , job FROM Person GROUP BY job",
            "question": "How old is the youngest person for each job?",
            "ted": 0.0625
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) , dept_name FROM student GROUP BY dept_name",
            "question": "How many students are in each department?",
            "ted": 0.0625
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT sum( enrollment ) , affiliation FROM university GROUP BY affiliation",
            "question": "What are the total enrollments of universities of each affiliation type?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT MIN( salary ) , department_id FROM employees GROUP BY department_id",
            "question": "What is the minimum salary in each department?",
            "ted": 0.0625
        },
        {
            "db_id": "network_2",
            "query": "SELECT avg( age ) , job FROM Person GROUP BY job",
            "question": "What is average age for different job title?",
            "ted": 0.0625
        },
        {
            "db_id": "network_2",
            "query": "SELECT avg( age ) , gender FROM Person GROUP BY gender",
            "question": "How old is each gender, on average?",
            "ted": 0.0625
        },
        {
            "db_id": "network_2",
            "query": "SELECT avg( age ) , gender FROM Person GROUP BY gender",
            "question": "What is the average age for each gender?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT MIN( salary ) , department_id FROM employees GROUP BY department_id",
            "question": "return the smallest salary for every departments.",
            "ted": 0.0625
        }
    ],
    "SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid": [
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "Show distinct first and last names for all customers with an account.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
            "question": "What are the full names of customers who have accounts?",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT DISTINCT T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id",
            "question": "What are the distinct names and nationalities of the architects who have ever built a mill?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
            "question": "What are the different names and credit scores of customers who have taken a loan?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",
            "question": "Find the name and credit score of the customers who have some loans.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.name , T1.type FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id",
            "question": "What are the names and types of the companies that have ever operated a flight?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "What are the names of climbers and the corresponding names of mountains that they climb?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT T2.Name , T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID",
            "question": "Show the names of roller coasters and names of country they are in.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "Show the names of climbers and the heights of mountains they climb.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "Show names of cities and names of counties they are in.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "What are the names of climbers and the corresponding heights of the mountains that they climb?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T1.student_id , T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
            "question": "What are the ids of all students for courses and what are the names of those courses?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
            "question": "For each trip, return its ending station's installation date.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
            "question": "What are the names and players of all the clubs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
            "question": "What are the first and last names of all the candidates?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
            "question": "what are the first name and last name of all candidates?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
            "question": "Please list the location and the winning aircraft name.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
            "question": "For each delegate, find the names of the party they are part of.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
            "question": "Show the delegates and the names of the party they belong to.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
            "question": "What is the location and name of the winning aircraft?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
            "question": "What are the details and ways to get to tourist attractions related to royal family?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
            "question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
            "question": "Please show the names and the players of clubs.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
            "question": "Show names of climbers and the names of mountains they climb.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
            "question": "Give me the detail and opening hour for each museum.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
            "question": "For each submission, find its author and acceptance result.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
            "question": "What are the names of parties and their respective regions?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",
            "question": "Show all party names and their region names.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T2.Name , T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID",
            "question": "Show the names of members and names of colleges they go to.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT T1.Name , T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID",
            "question": "Show the names of members and the decoration themes they have.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
            "question": "Return the day Number and stored date for all the documents.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
            "question": "What is the day Number and date of all the documents?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "Show white percentages of cities and the crime rates of counties they are in.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
            "question": "What are the countries of markets and their corresponding years of market estimation?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
            "question": "Show the authors of submissions and the acceptance results of their submissions.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
            "question": "Please list the countries and years of film market estimations.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
            "question": "Please show the titles of films and the types of market estimations.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",
            "question": "What are the names of members and their corresponding parties?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
            "question": "What are the details and opening hours of the museums?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
            "question": "Find the first names of all instructors who have taught some course and the course code.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
            "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T2.premises_type , T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",
            "question": "Show the premise type and address type code for all customer addresses.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",
            "question": "List member names and their party names.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "book_2",
            "query": "SELECT T1.Title , T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID",
            "question": "Show the title and publication dates of books.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "film_rank",
            "query": "SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
            "question": "What are the titles of films and corresponding types of market estimations?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
            "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
            "question": "What is the installation date for each ending station on all the trips?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
            "question": "What are the phones and emails of workshop groups in which services are performed?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
            "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
            "question": "Show the delegates and the names of county they belong to.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
            "question": "Give the names of wrestlers and their elimination moves.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "architecture",
            "query": "SELECT max( T1.length_meters ) , T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id = T2.id",
            "question": "What is the maximum length in meters for the bridges and what are the architects' names?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
            "question": "Show the protein name and the institution name.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "wrestler",
            "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
            "question": "What are the names of wrestlers and the elimination moves?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "election_representative",
            "query": "SELECT T2.Name , T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID",
            "question": "What are the names of representatives and the dates of elections they participated in.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",
            "question": "List all country and league names.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Name , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID",
            "question": "Show the names of trains and locations of railways they are in.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
            "question": "What are the location and nickname of each school?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",
            "question": "What are the names of actors and the musicals that they are in?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "college_2",
            "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
            "question": "Find the names of all instructors who have taught some course and the course_id.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "college_2",
            "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
            "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
            "question": "What are the team and the location of school each player belongs to?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
            "question": "Show locations and nicknames of schools.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",
            "question": "Show names of actors and names of musicals they are in.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
            "question": "Give the years and official names of the cities of each competition.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
            "question": "What are the first name and department name of all employees?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
            "question": "What are the delegate and name of the county they belong to, for each county?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "hr_1",
            "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
            "question": "Display the first name and department name for each employee.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "school_player",
            "query": "SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
            "question": "For each player, show the team and the location of school they belong to.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT T1.name , T2.price_in_dollar FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID",
            "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
            "question": "What are the names of cities, as well as the names of the counties they correspond to?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "farm",
            "query": "SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
            "question": "Show the years and the official names of the host cities of competitions.",
            "ted": 0.08333333333333333
        }
    ],
    "SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Pennsylvania' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) > 2": [],
    "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )": [
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "How many students did not have any course enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "How many documents do not have any expense?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "Count the number of documents that do not have expenses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Count the number of courses without prerequisites.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "Count the number of students who did not enroll in any course.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "How many customers have no payment histories?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "List the number of customers that did not have any payment history.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers do not have an account?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "What is the count of enzymes without any interactions?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "How many enzymes do not have any interactions?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the number of scientists who are not assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Show the number of all customers without an account.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
            "question": "How many students are not involved in any behavior incident?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM institution WHERE institution_id NOT IN ( SELECT institution_id FROM protein )",
            "question": "How many institutions do not have an associated protein in our record?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "How many scientists do not have any projects assigned to them?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events )",
            "question": "How many events did not have any participants?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items that did not receive any review.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers don't have an account?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Count the number of customers who do not have an account.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "Count the number of colors that are not used in any products.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "How many products were not included in any order?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "Count the number of products that were never ordered.",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the number of users who did not write any review.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "Count the number of tourists who did not visit any place.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "How many courses that do not have prerequisite?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
            "question": "How many games are free of injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "Cound the number of artists who have not released an album.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "How many artists do not have any album?",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
            "question": "How many camera lenses are not used in taking any photos?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
            "question": "How many customers did not have any event?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
            "question": "How many accelerators are not compatible with the browsers listed ?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM people WHERE people_id NOT IN ( SELECT People_ID FROM body_builder )",
            "question": "How many persons are not body builders?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM department WHERE department_id NOT IN ( SELECT department_id FROM management ) ",
            "question": "How many departments are led by heads who are not mentioned?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "How many tourists did not make any visit?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "How many apartments do not have any facility?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "Count the number of universities that do not participate in the baketball match.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "How many colors are never used by any product?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "How many schools do not participate in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items without any review.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "Find the number of apartments that have no facility.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who do not have any loan.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have never taken a loan?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
            "question": "Find the average ram mib size of the chip models that are never used by any phone.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who do not have any tweet.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations )",
            "question": "How many rooms have not had any reservation yet?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations )",
            "question": "Find the number of rooms that do not have any reservation.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "What are the famous titles of artists who do not have any volumes?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Book_ID NOT IN ( SELECT Book_ID FROM publication )",
            "question": "List the titles of books that are not published.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "List the names of clubs that do not have any players.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "What are the names of parties that have no members?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "Show member names without any registered branch.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player )",
            "question": "What are the names of all clubs that do not have any players?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all info of students who registered courses but not attended courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor WHERE editor_id NOT IN ( SELECT editor_id FROM journal_committee )",
            "question": "List the names of editors that are not on any journal committee.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are all details of the students who registered but did not attend any course?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_people",
            "query": "SELECT party_name FROM party WHERE party_id NOT IN ( SELECT party_id FROM Member )",
            "question": "Show names of parties that does not have any members.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch )",
            "question": "What are the names of the members that have never registered at any branch?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "What is all the information about employees who have never had a job in the past?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history )",
            "question": "display all the information of those employees who did not have any job in the past.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
            "question": "Find the famous titles of artists that do not have any volume.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN ( SELECT Pilot_ID FROM pilot_record )",
            "question": "List the names of pilots that do not have any record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market )",
            "question": "List the names of phones that are not on any market.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record )",
            "question": "Find the names of the swimmers who have no record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "What are the names of the technicians that have not been assigned to repair machines?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "What are the names of parties that do not have delegates in election?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "List the authors who do not have submission to any workshop.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "Show the name of storms which don't have affected region in record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "What are the names of regions that were not affected?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region )",
            "question": "Show the name for regions not affected.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN ( SELECT journalist_ID FROM news_report )",
            "question": "List the names of journalists who have not reported any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "What are the prices of products that have never gotten a complaint?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "What are the names of hosts who did not host any party in our record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN ( SELECT Host_ID FROM party_host )",
            "question": "List the names of hosts who did not serve as a host of any party in our record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_price FROM products WHERE product_id NOT IN ( SELECT product_id FROM complaints )",
            "question": "Find the prices of products which has never received a single complaint.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees )",
            "question": "Find the states which do not have any employee in their record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "What are the names of counties that do not contain any cities?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
            "question": "List the names of counties that do not have any cities.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "What are the names of all the dorms that don't have any amenities?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity )",
            "question": "Find the name of dorms that do not have any amenity",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Show all track names that have had no races.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "race_track",
            "query": "SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race )",
            "question": "Return the names of tracks that have no had any races.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who have some loan.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have taken a loan?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "What are the titles of all movies that have not been rated?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
            "question": "Find the titles of all movies that have no ratings.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "railway",
            "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train )",
            "question": "List the object number of railways that do not have any trains.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium WHERE id NOT IN ( SELECT stadium_id FROM event )",
            "question": "Find the names of stadiums which have never had any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "Give the names of people who did not participate in the candidate election.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
            "question": "what are the names of people who did not participate in the candidate election.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN ( SELECT asset_id FROM Fault_Log )",
            "question": "Which assets did not incur any fault log? List the asset model.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
            "question": "List the names of people that are not perpetrators.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "What are the names of people who are not entrepreneurs?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur )",
            "question": "List the names of people that are not entrepreneurs.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment )",
            "question": "List the names of technicians who have not been assigned to repair machines.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM school_bus )",
            "question": "Show the names of the drivers without a school bus.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "storm_record",
            "query": "SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region )",
            "question": "What are the names of storms that did not affect any regions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution )",
            "question": "Show the name of buildings that do not have any institution.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the titles of courses without prerequisites?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "What are the carriers of devices that are not in stock anywhere?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "What are the names of documents that do not have any sections?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Find the name of the courses that do not have any prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "What are the names of courses without prerequisites?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN ( SELECT Device_ID FROM stock )",
            "question": "List the carriers of devices that have no devices in stock.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "Find the name of instructors who didn't teach any courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
            "question": "Find all the name of documents without any sections.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
            "question": "List the names of members who did not participate in any round.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "What are the details of the project with no outcomes?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "train_station",
            "query": "SELECT name FROM station WHERE station_id NOT IN ( SELECT station_id FROM train_station )",
            "question": "Show station names without any trains.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "List the official names of cities that have not held any competition.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition )",
            "question": "What are the official names of cities that have not hosted a farm competition?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
            "question": "What are the names of instructors who didn't teach?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "What are the names of shops that do not have any devices in stock?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM stock )",
            "question": "List the names of shops that have no devices in stock.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "List the names of buildings that have no company office.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "Which schools do not have any player? Give me the school locations.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "What are the names of teams that do no have match season record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "match_season",
            "query": "SELECT Name FROM team WHERE Team_id NOT IN ( SELECT Team FROM match_season )",
            "question": "Return the names of teams that have no match season record.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_player",
            "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
            "question": "List the locations of schools that do not have any player.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "What are the names of all aicrafts that have never won any match?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "List the names of mountains that do not have any climber.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
            "question": "What are the names of countains that no climber has climbed?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election )",
            "question": "List the names of representatives that have not participated in elections listed here.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "aircraft",
            "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
            "question": "List the names of aircrafts and that did not win any match.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "What are the first names of all students that are not enrolled in courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_3",
            "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
            "question": "Find the first name of students not enrolled in any course.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
            "question": "List the name of artworks that are not nominated.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM member_attendance )",
            "question": "List the names of members who did not attend any performance.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
            "question": "List the names of products that are not in any event.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
            "question": "Which buildings do not have any company office? Give me the building names.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "debate",
            "query": "SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people )",
            "question": "List the names of people that have not been on the affirmative side of debates.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who had some tweets.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
            "question": "Which projects have no outcome? List the project details.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance )",
            "question": "Which authors did not submit to any workshop?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "What are the names of musicals who have no actors?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "Select the project names which are not assigned yet.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo )",
            "question": "What are the names of projects that have not been assigned?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN ( SELECT Musical_ID FROM actor )",
            "question": "List the name of musicals that do not have actors.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the name of scientists who are not assigned to any project.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT Name FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "What are the names of scientists who have not been assigned a project?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the names of the items that did not receive any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the names of users who did not leave any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "List the names of wrestlers that have not been eliminated.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN ( SELECT Player_ID FROM player_coach )",
            "question": "List the names of players that do not have coaches.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "What are the names of artists that have not had any exhibitions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM elimination )",
            "question": "What are the names of wrestlers who have never been eliminated?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "List the name of ships that are not involved in any mission",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school WHERE school_id NOT IN ( SELECT school_id FROM endowment )",
            "question": "List the names of the schools without any endowment.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "What are the titles of films that do not have a film market estimation?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition )",
            "question": "Show names for artists without any exhibition.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
            "question": "List the names of people that are not employed by any company",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
            "question": "List the title of films that do not have any market estimation.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission )",
            "question": "What are the names of the ships that are not involved in any missions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "List the id of students who never attends courses?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM students WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
            "question": "What are the  ids of every student who has never attended a course?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "election",
            "query": "SELECT Party FROM party WHERE Party_ID NOT IN ( SELECT Party FROM election )",
            "question": "Which parties did not have any delegates in elections?",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog'": [
        {
            "db_id": "storm_record",
            "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'",
            "question": "What are the names of the storms that affected both the regions of Afghanistan and Albania?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'",
            "question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'",
            "question": "What are the names of any scientists who worked on projects named 'Matter of Time' and 'A Puzzling Pattern'?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'",
            "question": "Find the name of the scientist who worked on both a project named 'Matter of Time' and a project named 'A Puzzling Parallax'.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'",
            "question": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'City Mall' INTERSECT SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'Village Store'",
            "question": "What are the names of the districts that have both mall and village store style shops?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'",
            "question": "For grants that have descriptions of Regular and Initial Applications, what are their start dates?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'",
            "question": "What are the names of the branches that have some members with a hometown in Louisville, Kentucky and also those from Hiram, Goergia?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Marcelle'",
            "question": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'",
            "question": "What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'",
            "question": "Find the name of the storm that affected both Afghanistan and Albania regions.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Heathrow' INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Heathrow' INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = 'London Gatwick'",
            "question": "What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "Find the name of dorms which have both TV Lounge and Study Room as amenities.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "What is the name of the dorm with both a TV Lounge and Study Room listed as amenities?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "Find the name of tracks which are in both Movies and music playlists.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "What are the names of all the tracks that are in both the Movies and music playlists?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = 'Ananthapuri Express' INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = 'Guruvayur Express'",
            "question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'City Mall' INTERSECT SELECT T3.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Type = 'Village Store'",
            "question": "Find the names of districts where have both city mall and village store type stores.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'",
            "question": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'",
            "question": "What are the first names of the faculty members playing both Canoeing and Kayaking?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'",
            "question": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Vincent' INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Marcelle'",
            "question": "What are the names of the tourist attractions Vincent and Marcelle visit?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Thiago Motta'",
            "question": "List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Lasta Massif'",
            "question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'",
            "question": "Find the first names of the faculty members who participate in Canoeing and Kayaking.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'",
            "question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'",
            "question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'",
            "question": "Find the titles of albums that contain tracks of both the Reggae and Rock genres.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'New policy application'",
            "question": "Which customers have used both the service named \"Close a policy\" and the service named \"Upgrade a policy\"? Give me the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry'",
            "question": "Find the name of physicians who are affiliated with both Surgery and Psychiatry departments.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'New policy application'",
            "question": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\".",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry'",
            "question": "Which physicians are affiliated with both Surgery and Psychiatry departments? Tell me their names.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "What are the names of all tracks that are on the Movies playlist but not in the music playlist?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Alison' EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Rosalind'",
            "question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "What is the name of each dorm that has a TV Lounge but no study rooms?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Alison' EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = 'Rosalind'",
            "question": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'",
            "question": "What are the names of the tourist attractions that have parking or shopping as their feature details?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'",
            "question": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
            "question": "Find the name of dorms which have TV Lounge but no Study Room as amenity.",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
            "question": "Find the name of tracks which are in Movies playlist but not in music playlist.",
            "ted": 0.011627906976744186
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT T3.name FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID JOIN manufacturer AS T3 ON T2.manufacturer_id = T3.manufacturer_id WHERE T1.num_of_component < 6 INTERSECT SELECT T3.name FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID JOIN manufacturer AS T3 ON T2.manufacturer_id = T3.manufacturer_id WHERE T1.num_of_component > 10",
            "question": "Find the name of the company that produces both furnitures with less than 6 components and furnitures with more than 10 components.",
            "ted": 0.06976744186046512
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' INTERSECT SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?",
            "ted": 0.0851063829787234
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' INTERSECT SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix?",
            "ted": 0.0851063829787234
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'rem' EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'aut'",
            "question": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.",
            "ted": 0.09574468085106383
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'rem' EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = 'aut'",
            "question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?",
            "ted": 0.09574468085106383
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' EXCEPT SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?",
            "ted": 0.09574468085106383
        },
        {
            "db_id": "formula_1",
            "query": "SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Australian Grand Prix' EXCEPT SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Chinese Grand Prix'",
            "question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?",
            "ted": 0.09574468085106383
        }
    ],
    "SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < ( SELECT avg( cost_of_treatment ) FROM Treatments )": [],
    "SELECT email_address , cell_number , home_phone FROM professionals": [
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , date_in_location_from , date_in_locaton_to FROM Document_locations",
            "question": "Show the location code, the starting date and ending data in that location for all the documents.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name , CLASS , rank FROM captain",
            "question": "What are the names, classes, and ranks of all captains?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , CLASS , date FROM race",
            "question": "What are the names, classes, and dates for all races?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , Fname , Lname FROM Faculty",
            "question": "What are the rank, first name, and last name of the faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT season , home_team , away_team FROM game",
            "question": "List the season, home team, away team of all the games.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , document_type_name , document_type_description FROM Ref_document_types",
            "question": "Show all document type codes, document type names, document type descriptions.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name , origin , OWNER FROM program",
            "question": "What are the name, origin and owner of each program?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name , origin , OWNER FROM program",
            "question": "List the name, origin and owner of each program.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code , date_in_location_from , date_in_locaton_to FROM Document_locations",
            "question": "What are each document's location code, and starting date and ending data in that location?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code , document_type_name , document_type_description FROM Ref_document_types",
            "question": "What are the codes, names, and descriptions of the different document types?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank , Fname , Lname FROM Faculty",
            "question": "Show the rank, first name, and last name for all the faculty.",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT name , open_date , organized_by FROM Church",
            "question": "Show the name, open date, and organizer for all churches.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT customer_event_id , date_moved_in , property_id FROM customer_events",
            "question": "List the customer event id and the corresponding move in date and property id.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT Participant_ID , Participant_Type_Code , Participant_Details FROM Participants",
            "question": "What are all the the participant ids, type code and details?",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT name , openning_year , capacity FROM cinema",
            "question": "Show name, opening year, and capacity for each cinema.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT id , name , market_share FROM browser",
            "question": "List the ids, names and market shares of all browsers.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name , LOCATION , mascot FROM school",
            "question": "List the name, location, mascot for all schools.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT id , color , name FROM photos",
            "question": "List the id, color scheme, and name for all the photos.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , LOCATION , number_of_platforms FROM station",
            "question": "Show the name, location, and number of platforms for all stations.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name , CLASS , rank FROM captain",
            "question": "Find the name, class and rank of all captains.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , CLASS , date FROM race",
            "question": "Show name, class, and date for all races.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , TIME , service FROM train",
            "question": "Show the name, time, and service for all trains.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , middle_name , last_name FROM Staff",
            "question": "What are the first, middle, and last names of all staff?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT first_name , middle_name , last_name FROM Staff",
            "question": "List the first name middle name and last name of all staff.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , role_name , role_description FROM ROLES",
            "question": "What are all the role codes, role names, and role descriptions?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , customer_id , account_name FROM Accounts",
            "question": "Show ids, customer ids, names for all accounts.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code , role_name , role_description FROM ROLES",
            "question": "List all role codes, role names, and role descriptions.",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT creation , name , budget_in_billions FROM department",
            "question": "List the creation year, name and budget of each department.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT name , home_city , age FROM driver",
            "question": "Show the name, home city, and age for all drivers.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT account_id , customer_id , account_name FROM Accounts",
            "question": "What are the account ids, customer ids, and account names for all the accounts?",
            "ted": 0.0
        }
    ],
    "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )": [
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have taken a loan?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who have some loan.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who had some tweets.",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT avg( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets )",
            "question": "Find the average number of followers for the users who do not have any tweet.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "What is the average credit score for customers who have never taken a loan?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
            "question": "Find the average ram mib size of the chip models that are never used by any phone.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id NOT IN ( SELECT cust_id FROM loan )",
            "question": "Find the average credit score of the customers who do not have any loan.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "How many scientists do not have any projects assigned to them?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )",
            "question": "How many customers did not have any event?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "What is the count of enzymes without any interactions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "Count the number of colors that are not used in any products.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
            "question": "How many colors are never used by any product?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "Count the number of courses without prerequisites.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
            "question": "How many courses that do not have prerequisite?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "How many schools do not participate in the basketball match?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match )",
            "question": "Count the number of universities that do not participate in the baketball match.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
            "question": "How many enzymes do not have any interactions?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) FROM scientists WHERE ssn NOT IN ( SELECT scientist FROM AssignedTo )",
            "question": "Find the number of scientists who are not assigned to any project.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "Count the number of tourists who did not visit any place.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "Count the number of documents that do not have expenses.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers don't have an account?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
            "question": "How many documents do not have any expense?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Count the number of customers who do not have an account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
            "question": "How many tourists did not make any visit?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "How many products were not included in any order?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
            "question": "Count the number of products that were never ordered.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events )",
            "question": "How many events did not have any participants?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "How many artists do not have any album?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT count( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM )",
            "question": "Cound the number of artists who have not released an album.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items that did not receive any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT count( * ) FROM institution WHERE institution_id NOT IN ( SELECT institution_id FROM protein )",
            "question": "How many institutions do not have an associated protein in our record?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review )",
            "question": "Find the number of users who did not write any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
            "question": "Find the number of items without any review.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "List the number of customers that did not have any payment history.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ) ",
            "question": "How many customers have no payment histories?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
            "question": "How many accelerators are not compatible with the browsers listed ?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
            "question": "How many students are not involved in any behavior incident?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( * ) FROM department WHERE department_id NOT IN ( SELECT department_id FROM management ) ",
            "question": "How many departments are led by heads who are not mentioned?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
            "question": "How many games are free of injury accidents?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
            "question": "How many camera lenses are not used in taking any photos?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "Show the number of all customers without an account.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
            "question": "How many customers do not have an account?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "Find the number of apartments that have no facility.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( * ) FROM people WHERE people_id NOT IN ( SELECT People_ID FROM body_builder )",
            "question": "How many persons are not body builders?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "How many students did not have any course enrollment?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
            "question": "Count the number of students who did not enroll in any course.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT count( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities )",
            "question": "How many apartments do not have any facility?",
            "ted": 0.09090909090909091
        }
    ]
}