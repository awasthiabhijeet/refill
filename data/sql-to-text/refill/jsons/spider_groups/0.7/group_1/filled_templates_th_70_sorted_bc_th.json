[
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> singer </tab> ) , ordered by ( ( <col> net worth millions </col> ) in ascending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "List the names of singers in ascending order of net worth.",
                5.1028876304626465
            ],
            [
                "Find the names of all the singers ordered in ascending order of net worth.",
                8.478630065917969
            ],
            [
                "List the names of all the singers in ascending order of net worth.",
                7.759859561920166
            ],
            [
                "Give me a list of all the names of singers in ascending order of net worth.",
                6.745779037475586
            ],
            [
                "What are the names of singers ordered by their net worth in ascending order?",
                6.641951084136963
            ],
            [
                "What are the names of singers in ascending order of their net worth?",
                6.370283603668213
            ],
            [
                "Show the names of singers ordered by their net worth in ascending order.",
                6.360342025756836
            ],
            [
                "Return all the singer names sorted by the net worth count in ascending order.",
                6.134824752807617
            ],
            [
                "What are the different singers' names in ascending order of net worth?",
                5.750838756561279
            ],
            [
                "What are the names of the singers in ascending order of the net worth?",
                5.712362766265869
            ],
            [
                "List all the name of singers in ascending order of the net worth.",
                5.606542110443115
            ],
            [
                "List the names of the singers in ascending order of net worth.",
                5.5100016593933105
            ],
            [
                "What are the names of the singers in ascending order of net worth?",
                5.493997097015381
            ],
            [
                "What are the names of the singers in ascending order of net worth?",
                5.493997097015381
            ],
            [
                "What are the names of the singers in ascending order of net worth?",
                5.493997097015381
            ],
            [
                "List the singers' names in ascending order of net worth.",
                5.338315963745117
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888584136963
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888584136963
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888584136963
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888584136963
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888584136963
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888584136963
            ],
            [
                "List the names of singers in ascending order of net worth.",
                5.102888107299805
            ],
            [
                "What are the names of singers in ascending order of net worth?",
                5.101973056793213
            ],
            [
                "What are the names of singers in ascending order of net worth?",
                5.101972579956055
            ],
            [
                "List the names of singers in ascending order of the net worth.",
                4.982296943664551
            ],
            [
                "Please list all singers in ascending order of net worth.",
                2.7043263912200928
            ],
            [
                "What are all the singers in ascending order of net worth?",
                1.3518489599227905
            ],
            [
                "List singers ordered by net worth in ascending order.",
                -2.8778836727142334
            ],
            [
                "List in ascending order all the singers' names.",
                -7.299308776855469
            ],
            [
                "Find the names of all singers sorted by their 100 highest earning years in ascending order.",
                -11.637674331665039
            ]
        ],
        "templates": [
            "",
            {
                "question": "Find the first names of all the authors ordered in alphabetical order.",
                "masked_template": "Find the <mask> names of all the <mask> ordered in <mask>",
                "query": "SELECT fname FROM authors ORDER BY fname",
                "ted": 0.0,
                "db_id": "icfp_1",
                "query_toks": [
                    "select",
                    "fname",
                    "from",
                    "authors",
                    "order",
                    "by",
                    "fname"
                ],
                "query_toks_no_value": [
                    "select",
                    "fname",
                    "from",
                    "authors",
                    "order",
                    "by",
                    "fname"
                ]
            },
            {
                "question": "List the names of all the customers in alphabetical order.",
                "masked_template": "List the names of all the <mask> in <mask>",
                "query": "SELECT customer_details FROM customers ORDER BY customer_details",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims",
                "query_toks": [
                    "select",
                    "customer_details",
                    "from",
                    "customers",
                    "order",
                    "by",
                    "customer_details"
                ],
                "query_toks_no_value": [
                    "select",
                    "customer_details",
                    "from",
                    "customers",
                    "order",
                    "by",
                    "customer_details"
                ]
            },
            {
                "question": "Give me a list of all the last names of authors sorted in alphabetical order",
                "masked_template": "<mask> me a list of all the <mask> names of <mask> in <mask> order",
                "query": "SELECT lname FROM authors ORDER BY lname",
                "ted": 0.0,
                "db_id": "icfp_1",
                "query_toks": [
                    "select",
                    "lname",
                    "from",
                    "authors",
                    "order",
                    "by",
                    "lname"
                ],
                "query_toks_no_value": [
                    "select",
                    "lname",
                    "from",
                    "authors",
                    "order",
                    "by",
                    "lname"
                ]
            },
            {
                "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
                "masked_template": "What are the names of <mask> ordered by the <mask>",
                "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
                "ted": 0.0,
                "db_id": "e_government",
                "query_toks": [
                    "select",
                    "organization_name",
                    "from",
                    "organizations",
                    "order",
                    "by",
                    "date_formed",
                    "asc"
                ],
                "query_toks_no_value": [
                    "select",
                    "organization_name",
                    "from",
                    "organizations",
                    "order",
                    "by",
                    "date_formed",
                    "asc"
                ]
            },
            {
                "question": "What are the titles of all the albums alphabetically ascending?",
                "masked_template": "What are the <mask> of all the <mask>",
                "query": "SELECT title FROM albums ORDER BY title",
                "ted": 0.0,
                "db_id": "store_1",
                "query_toks": [
                    "select",
                    "title",
                    "from",
                    "albums",
                    "order",
                    "by",
                    "title"
                ],
                "query_toks_no_value": [
                    "select",
                    "title",
                    "from",
                    "albums",
                    "order",
                    "by",
                    "title"
                ]
            },
            {
                "question": "Show the shop addresses ordered by their opening year.",
                "masked_template": "Show the <mask> ordered by their <mask>",
                "query": "SELECT address FROM shop ORDER BY open_year",
                "ted": 0.0,
                "db_id": "coffee_shop"
            },
            {
                "question": "Return all the apartment numbers sorted by the room count in ascending order.",
                "masked_template": "Return all the <mask> numbers <mask> by the <mask> count in <mask>",
                "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are the different dorm amenity names in alphabetical order?",
                "masked_template": "What are the different <mask> names in <mask>",
                "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?",
                "masked_template": "What are the names of the <mask> of <mask> in <mask> order of the <mask>",
                "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "List all the name of organizations in order of the date formed.",
                "masked_template": "List all the name of <mask> in order of the <mask>",
                "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "List the titles of the books in ascending order of issues.",
                "masked_template": "List the <mask> of the <mask> in <mask> order of <mask>",
                "query": "SELECT Title FROM book ORDER BY Issues ASC",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "What are the first names of the people in alphabetical order?",
                "masked_template": "What are the <mask> names of the <mask> in <mask>",
                "query": "SELECT first_name FROM people ORDER BY first_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the names of the technicians by ascending order of age?",
                "masked_template": "What are the names of the <mask> by <mask> order of <mask>",
                "query": "SELECT Name FROM technician ORDER BY Age ASC",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "What are the names of the courses in alphabetical order?",
                "masked_template": "What are the names of the <mask> in <mask>",
                "query": "SELECT course_name FROM courses ORDER BY course_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Sort the apartment numbers in ascending order of room count.",
                "masked_template": "<mask> the <mask> numbers in <mask> order of <mask>",
                "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "List the names of pilots in ascending order of rank.",
                "masked_template": "List the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "List the carriers of devices in ascending alphabetical order.",
                "masked_template": "List the <mask> of <mask> in <mask>",
                "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "List the names of members in ascending alphabetical order.",
                "masked_template": "List the names of <mask> in <mask>",
                "query": "SELECT Name FROM member ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "List the names of roller coasters by ascending order of length.",
                "masked_template": "List the names of <mask> by <mask> order of <mask>",
                "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "List the first names of people in alphabetical order?",
                "masked_template": "List the <mask> names of <mask> in <mask>",
                "query": "SELECT first_name FROM people ORDER BY first_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Sort the customer names in alphabetical order.",
                "masked_template": "<mask> the <mask> names in <mask>",
                "query": "SELECT customer_details FROM customers ORDER BY customer_details",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims"
            },
            {
                "question": "Give the names of mountains in alphabetical order.",
                "masked_template": "<mask> the names of <mask> in <mask>",
                "query": "SELECT Name FROM mountain ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "What are the names of managers in ascending order of level?",
                "masked_template": "What are the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
                "ted": 0.0,
                "db_id": "railway"
            },
            {
                "question": "What are the names of mountains in ascending alphabetical order?",
                "masked_template": "What are the names of <mask> in <mask>",
                "query": "SELECT Name FROM mountain ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
                "masked_template": "<mask> the <mask> and <mask> in <mask> order of the <mask>",
                "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Please list all album titles in alphabetical order.",
                "masked_template": "<mask> list all <mask> in <mask>",
                "query": "SELECT Title FROM ALBUM ORDER BY Title",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "What are all the album titles, in alphabetical order?",
                "masked_template": "What are all the <mask> in <mask>",
                "query": "SELECT Title FROM ALBUM ORDER BY Title",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "List every album ordered by album title in ascending order.",
                "masked_template": "List <mask> ordered by <mask> in <mask>",
                "query": "SELECT title FROM albums ORDER BY title",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "List in alphabetic order all different amenities.",
                "masked_template": "List in <mask> order all different <mask>",
                "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.",
                "masked_template": "Find the names of all <mask> by their 100 <mask> in <mask>",
                "query": "SELECT name FROM swimmer ORDER BY meter_100",
                "ted": 0.0,
                "db_id": "swimming"
            }
        ],
        "best_hyp": "What are the names of singers in ascending order of net worth?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "List the names of singers in ascending order of net worth.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year = 1968 OR Birth_Year = 1960",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( ( <col> birth year </col> ) equal to ( <val> 1968 </val> ) ) or ( ( <col> birth year </col> ) equal to ( <val> 1960 </val> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of singers born in either 1968 or 1960?",
                8.293030738830566
            ],
            [
                "What are the names of all singers who were born in either 1968 or 1960?",
                10.89544677734375
            ],
            [
                "Show the names of singers that have a birth year of either 1968 or 1960.",
                10.302830696105957
            ],
            [
                "What are the names of singers who have a birth year of either 1968 or 1960?",
                10.276047706604004
            ],
            [
                "Find the names of the singers who were born in either 1968 or 1960.",
                9.953285217285156
            ],
            [
                "Show all singers' names who have a birth year in the year 1968 or 1960.",
                9.822490692138672
            ],
            [
                "Show the names of singers if the birth year is 1968 or the birthday is 1960",
                9.546868324279785
            ],
            [
                "What are the names of singers that were born in either 1968 or 1960?",
                9.49636459350586
            ],
            [
                "What are the names of singers that have a birth year of either 1968 or a birthday of 1960?",
                9.397802352905273
            ],
            [
                "What are the names of singers born in either 1968 or 1960? Tell me their birth year.",
                8.8806734085083
            ],
            [
                "Show the names of singers who were born in 1968 or 1960.",
                8.39295768737793
            ],
            [
                "Show the names of singers born in either 1968 or 1960.",
                8.136512756347656
            ],
            [
                "Show the names of singers born in either 1968 or 1960.",
                8.136512756347656
            ],
            [
                "Show the names of singers with birth year either 1968 or 1960.",
                7.663827896118164
            ],
            [
                "Show the names of singers born between 1968 or 1960.",
                7.6523942947387695
            ],
            [
                "find the names of singers who are born between 1968 or 1960.",
                7.5555243492126465
            ],
            [
                "Which singers were born in either 1968 or 1960? Find their names.",
                7.399731636047363
            ],
            [
                "Which singers had a birth year in either 1968 or 1960?",
                6.7852396965026855
            ],
            [
                "Who are the singers who were born in 1968 or 1960?",
                6.721110820770264
            ],
            [
                "Find the names of singers with birth year either 1968 or 1960",
                5.304007530212402
            ],
            [
                "Show all singers with a birth year in either 1968 or 1960 and a birthday in 1960.",
                4.66614294052124
            ],
            [
                "Show the names of singers born after 1968 or 1960.",
                3.632030487060547
            ],
            [
                "Find the ids of the singers who are on birthdays in year 1968 or 1960.",
                0.48391959071159363
            ],
            [
                "What are the names of the singers born either in 1968 or 1960?",
                -5.487723350524902
            ],
            [
                "Find the name all singers with birth year either 1968 or 1960.",
                -6.637351989746094
            ],
            [
                "What are the names of singers with at least 100 songs in year 1968 or 1960?",
                -7.0456743240356445
            ],
            [
                "What are the names that have a singer that was born in 1968 or a singer with more than 100 records?",
                -11.509917259216309
            ],
            [
                "Show the names of singers of age either 24 or 25.",
                -11.867465019226074
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?",
                "masked_template": "What are the names of all <mask> with a <mask> than 10 or have more than <mask>",
                "query": "SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000",
                "ted": 0.09090909090909091,
                "db_id": "store_product",
                "query_toks": [
                    "select",
                    "district_name",
                    "from",
                    "district",
                    "where",
                    "city_area",
                    ">",
                    "10",
                    "or",
                    "city_population",
                    ">",
                    "100000"
                ],
                "query_toks_no_value": [
                    "select",
                    "district_name",
                    "from",
                    "district",
                    "where",
                    "city_area",
                    ">",
                    "value",
                    "or",
                    "city_population",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show the countries that have managers of age above 50 or below 46.",
                "masked_template": "Show the <mask> that have <mask> of age <mask> 50 or <mask> 46.",
                "query": "SELECT Country FROM manager WHERE Age > 50 OR Age < 46",
                "ted": 0.09090909090909091,
                "db_id": "railway",
                "query_toks": [
                    "select",
                    "country",
                    "from",
                    "manager",
                    "where",
                    "age",
                    ">",
                    "50",
                    "or",
                    "age",
                    "<",
                    "46"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    "from",
                    "manager",
                    "where",
                    "age",
                    ">",
                    "value",
                    "or",
                    "age",
                    "<",
                    "value"
                ]
            },
            {
                "question": "What are the names of people who have a height greater than 200 or less than 190?",
                "masked_template": "What are the names of <mask> who have a <mask> than 200 or <mask> than <mask>",
                "query": "SELECT name FROM people WHERE height > 200 OR height < 190",
                "ted": 0.09090909090909091,
                "db_id": "candidate_poll",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "height",
                    ">",
                    "200",
                    "or",
                    "height",
                    "<",
                    "190"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "height",
                    ">",
                    "value",
                    "or",
                    "height",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Find the names of the products with length smaller than 3 or height greater than 5.",
                "masked_template": "Find the names of the <mask> with <mask> than 3 or <mask> than 5.",
                "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5",
                "ted": 0.09090909090909091,
                "db_id": "product_catalog",
                "query_toks": [
                    "select",
                    "catalog_entry_name",
                    "from",
                    "catalog_contents",
                    "where",
                    "length",
                    "<",
                    "3",
                    "or",
                    "width",
                    ">",
                    "5"
                ],
                "query_toks_no_value": [
                    "select",
                    "catalog_entry_name",
                    "from",
                    "catalog_contents",
                    "where",
                    "length",
                    "<",
                    "value",
                    "or",
                    "width",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show all director names who have a movie in the year 1999 or 2000.",
                "masked_template": "Show all <mask> names who have a <mask> in the <mask> or <mask>",
                "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
                "ted": 0.0,
                "db_id": "culture_company",
                "query_toks": [
                    "select",
                    "director",
                    "from",
                    "movie",
                    "where",
                    "year",
                    "=",
                    "1999",
                    "or",
                    "year",
                    "=",
                    "2000"
                ],
                "query_toks_no_value": [
                    "select",
                    "director",
                    "from",
                    "movie",
                    "where",
                    "year",
                    "=",
                    "value",
                    "or",
                    "year",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
                "masked_template": "Show the <mask> of <mask> if the <mask> count is <mask> than 100 or the <mask> is <mask> than <mask>",
                "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",
                "ted": 0.09090909090909091,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "What are the official names of cities that have population over 1500 or less than 500?",
                "masked_template": "What are the <mask> names of <mask> that have <mask> or <mask> than <mask>",
                "query": "SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500",
                "ted": 0.09090909090909091,
                "db_id": "farm"
            },
            {
                "question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?",
                "masked_template": "What are the names of <mask> that have a <mask> of <mask> or a <mask> of <mask>",
                "query": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
                "ted": 0.09090909090909091,
                "db_id": "climbing"
            },
            {
                "question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.",
                "masked_template": "What <mask> are on <mask> with <mask> 1 and <mask> 1? <mask> me their <mask>",
                "query": "SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1",
                "ted": 0.045454545454545456,
                "db_id": "hospital_1"
            },
            {
                "question": "Show the minister who took office after 1961 or before 1959.",
                "masked_template": "Show the <mask> who <mask> or <mask>",
                "query": "SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959",
                "ted": 0.09090909090909091,
                "db_id": "party_people"
            },
            {
                "question": "Show the number of audience in year 2008 or 2010.",
                "masked_template": "Show the number of <mask> in <mask> or <mask>",
                "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "Show the name of technicians aged either 36 or 37",
                "masked_template": "Show the name of <mask> 36 or 37",
                "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "Show the names of mountains with height more than 5000 or prominence more than 1000.",
                "masked_template": "Show the names of <mask> with <mask> more than <mask> or <mask> more than <mask>",
                "query": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
                "ted": 0.09090909090909091,
                "db_id": "climbing"
            },
            {
                "question": "Show the names of people aged either 35 or 36.",
                "masked_template": "Show the names of <mask> 35 or 36.",
                "query": "SELECT Name FROM people WHERE Age = 35 OR Age = 36",
                "ted": 0.0,
                "db_id": "debate"
            },
            {
                "question": "find the names of people who are taller than 200 or lower than 190.",
                "masked_template": "find the names of <mask> who are <mask> than 200 or <mask> than <mask>",
                "query": "SELECT name FROM people WHERE height > 200 OR height < 190",
                "ted": 0.09090909090909091,
                "db_id": "candidate_poll"
            },
            {
                "question": "Which catalog contents have length below 3 or above 5? Find the catalog entry names.",
                "masked_template": "Which <mask> have <mask> 3 or <mask> 5? Find the <mask>",
                "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5",
                "ted": 0.09090909090909091,
                "db_id": "product_catalog"
            },
            {
                "question": "Which directors had a movie in either 1999 or 2000?",
                "masked_template": "Which <mask> had a <mask> in <mask> or <mask>",
                "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
                "ted": 0.0,
                "db_id": "culture_company"
            },
            {
                "question": "Who are the ministers who took office after 1961 or before 1959?",
                "masked_template": "Who are the <mask> who <mask> or <mask>",
                "query": "SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959",
                "ted": 0.09090909090909091,
                "db_id": "party_people"
            },
            {
                "question": "Find the official names of cities with population bigger than 1500 or smaller than 500.",
                "masked_template": "Find the <mask> names of <mask> with <mask> than <mask> or <mask> than <mask>",
                "query": "SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500",
                "ted": 0.09090909090909091,
                "db_id": "farm"
            },
            {
                "question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.",
                "masked_template": "Show all <mask> with a <mask> in <mask> and a <mask> with more than 100 <mask>",
                "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
                "ted": 0.09090909090909091,
                "db_id": "shop_membership"
            },
            {
                "question": "Show the statuses of roller coasters longer than 3300 or higher than 100.",
                "masked_template": "Show the <mask> of <mask> than <mask> or <mask> than <mask>",
                "query": "SELECT Status FROM roller_coaster WHERE LENGTH > 3300 OR Height > 100",
                "ted": 0.09090909090909091,
                "db_id": "roller_coaster"
            },
            {
                "question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.",
                "masked_template": "Find the ids of the <mask> who are on <mask> in <mask> 1 and <mask> 1.",
                "query": "SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1",
                "ted": 0.045454545454545456,
                "db_id": "hospital_1"
            },
            {
                "question": "What are the names of the technicians aged either 36 or 37?",
                "masked_template": "What are the names of the <mask> 36 or 37?",
                "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "Find the name all districts with city area greater than 10 or population larger than 100000",
                "masked_template": "Find the name all <mask> with <mask> than 10 or <mask> than <mask>",
                "query": "SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000",
                "ted": 0.09090909090909091,
                "db_id": "store_product"
            },
            {
                "question": "What are the dates of transactions with at least 100 share count or amount bigger than 100?",
                "masked_template": "What are the <mask> of <mask> with at least 100 <mask> count or <mask> than <mask>",
                "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",
                "ted": 0.09090909090909091,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?",
                "masked_template": "What are the <mask> that have a <mask> that <mask> in <mask> and a <mask> with more than 100 <mask>",
                "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
                "ted": 0.09090909090909091,
                "db_id": "shop_membership"
            },
            {
                "question": "Show the names of editors of age either 24 or 25.",
                "masked_template": "Show the names of <mask> of age <mask> 24 or 25.",
                "query": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
                "ted": 0.0,
                "db_id": "journal_committee"
            }
        ],
        "best_hyp": "Show the names of singers of age either 24 or 25.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of singers born in either 1968 or 1960?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "proc_query": "( <col> country </col> ) , ( the number of ( all items ) ) that belongs to ( <tab> singer </tab> ) , grouped by ( <col> country </col> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "For each country, how many singers are from that country?",
                10.477782249450684
            ],
            [
                "What are the different countries and how many singers are there for each country?",
                10.68215560913086
            ],
            [
                "What are the different countries of singers and how many singers belong to each country?",
                10.68202018737793
            ],
            [
                "Show all countries and the number of singers in each country.",
                10.67392635345459
            ],
            [
                "For each country, report the total number of singers from that country.",
                10.663494110107422
            ],
            [
                "List all countries along with the number of singers from each country.",
                10.609116554260254
            ],
            [
                "Show the different countries and the number of singers from each country.",
                10.427282333374023
            ],
            [
                "For each country, how many singers are from there?",
                10.340251922607422
            ],
            [
                "Show each country and the number of singers from that country.",
                10.269688606262207
            ],
            [
                "Please show the countries and the number of singers from each country.",
                10.263476371765137
            ],
            [
                "Show all countries and corresponding number of singers.",
                10.178707122802734
            ],
            [
                "What are the countries and how many singers belong to each country?",
                10.127424240112305
            ],
            [
                "For each country, what are the countries and how many singers are from there?",
                10.044445991516113
            ],
            [
                "How many singers belong to each country?",
                9.873780250549316
            ],
            [
                "How many singers are from each country?",
                9.747179985046387
            ],
            [
                "How many singers are from each country? List the country and the number.",
                9.733057975769043
            ],
            [
                "Show different countries of singers along with the number of singers from each country.",
                9.604588508605957
            ],
            [
                "List all countries and the number of singers in each country",
                9.44342041015625
            ],
            [
                "For each country, return the country and the count of singers from that country.",
                9.245986938476562
            ],
            [
                "Show different countries along with the number of singers of each country.",
                9.099956512451172
            ],
            [
                "What are the countries and the number of singers from each country?",
                8.54415225982666
            ],
            [
                "For each country, show the country number and find how many singers are from it.",
                8.089649200439453
            ],
            [
                "Find the number of singers for each country.",
                7.148802757263184
            ],
            [
                "find the number of singers from each country.",
                6.558119773864746
            ],
            [
                "Show countries and the number of singers in each country.",
                5.756298542022705
            ],
            [
                "Show the countries and number of singers in each country.",
                5.365827560424805
            ],
            [
                "Show different countries of singers and the number of singers of each country",
                5.3640546798706055
            ],
            [
                "Show the different countries and number of singers from each country.",
                4.993010997772217
            ],
            [
                "Show the country id and count of singers in each country",
                2.2951948642730713
            ],
            [
                "Find all countries of singers and number of singers from each country.",
                2.1718103885650635
            ],
            [
                "Show the country ID and number of singers for each country",
                0.956342875957489
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the different budget type codes, and how many documents are there for each?",
                "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses",
                "query_toks": [
                    "select",
                    "budget_type_code",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "documents_with_expenses",
                    "group",
                    "by",
                    "budget_type_code"
                ],
                "query_toks_no_value": [
                    "select",
                    "budget_type_code",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "documents_with_expenses",
                    "group",
                    "by",
                    "budget_type_code"
                ]
            },
            {
                "question": "What are the different classes of races, and how many races correspond to each?",
                "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track",
                "query_toks": [
                    "select",
                    "class",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "race",
                    "group",
                    "by",
                    "class"
                ],
                "query_toks_no_value": [
                    "select",
                    "class",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "race",
                    "group",
                    "by",
                    "class"
                ]
            },
            {
                "question": "Show all allergy types and the number of allergies in each type.",
                "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1",
                "query_toks": [
                    "select",
                    "allergytype",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "allergy_type",
                    "group",
                    "by",
                    "allergytype"
                ],
                "query_toks_no_value": [
                    "select",
                    "allergytype",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "allergy_type",
                    "group",
                    "by",
                    "allergytype"
                ]
            },
            {
                "question": "For each advisor, report the total number of students advised by him or her.",
                "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
                "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
                "ted": 0.0,
                "db_id": "voter_2",
                "query_toks": [
                    "select",
                    "advisor",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "student",
                    "group",
                    "by",
                    "advisor"
                ],
                "query_toks_no_value": [
                    "select",
                    "advisor",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "student",
                    "group",
                    "by",
                    "advisor"
                ]
            },
            {
                "question": "List all directors along with the number of films directed by each director.",
                "masked_template": "List all <mask> with the number of <mask> by each <mask>",
                "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
                "ted": 0.0,
                "db_id": "cinema",
                "query_toks": [
                    "select",
                    "directed_by",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "film",
                    "group",
                    "by",
                    "directed_by"
                ],
                "query_toks_no_value": [
                    "select",
                    "directed_by",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "film",
                    "group",
                    "by",
                    "directed_by"
                ]
            },
            {
                "question": "Show the different countries and the number of members from each.",
                "masked_template": "Show the different <mask> and the number of <mask>",
                "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "For each type, how many ships are there?",
                "masked_template": "For each <mask> how many <mask> are <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "Show each location and the number of cinemas there.",
                "masked_template": "Show each <mask> and the number of <mask>",
                "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "Please show the police forces and the number of counties with each police force.",
                "masked_template": "<mask> show the <mask> and the number of <mask> with each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Show all majors and corresponding number of students.",
                "masked_template": "Show all <mask> and <mask> number of <mask>",
                "query": "SELECT major , count( * ) FROM Student GROUP BY major",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "What are the allergy types and how many allergies correspond to each one?",
                "masked_template": "What are the <mask> and how many <mask> to each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
                "masked_template": "For each <mask> what are the <mask> and how many <mask> are <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "How many counties correspond to each police force?",
                "masked_template": "How many <mask> to each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "How many medicines are offered by each trade name?",
                "masked_template": "How many <mask> are <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "How many hosts does each nationality have? List the nationality and the count.",
                "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show different carriers of phones together with the number of phones with each carrier.",
                "masked_template": "Show different <mask> of <mask> with the number of <mask> with each <mask>",
                "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "List all headquarters and the number of companies in each headquarter.",
                "masked_template": "List all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "For each denomination, return the denomination and the count of schools with that denomination.",
                "masked_template": "For each <mask> return the <mask> and the count of <mask> with that <mask>",
                "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Show different nationalities along with the number of hosts of each nationality.",
                "masked_template": "Show different <mask> with the number of <mask> of each <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "What are the number of rooms for each bed type?",
                "masked_template": "What are the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "For each classroom, show the classroom number and find how many students are using it.",
                "masked_template": "For each <mask> show the <mask> number and find how many <mask> are <mask> it.",
                "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
                "ted": 0.0,
                "db_id": "student_1"
            },
            {
                "question": "Find the number of rooms for each bed type.",
                "masked_template": "Find the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "find the number of medicines offered by each trade.",
                "masked_template": "find the number of <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "Show budget type codes and the number of documents in each budget type.",
                "masked_template": "Show <mask> and the number of <mask> in each <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Show the race class and number of races in each class.",
                "masked_template": "Show the <mask> and number of <mask> in each <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show different types of ships and the number of ships of each type.",
                "masked_template": "Show different <mask> of <mask> and the number of <mask> of each <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "Show the different headquarters and number of companies at each headquarter.",
                "masked_template": "Show the different <mask> and number of <mask> at each <mask>",
                "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "Give the country id and corresponding count of cities in each country.",
                "masked_template": "<mask> the <mask> id and <mask> count of <mask> in each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Find all types of store and number of them.",
                "masked_template": "Find all <mask> of <mask> and number of <mask>",
                "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "display the country ID and number of cities for each country.",
                "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            }
        ],
        "best_hyp": "How many singers are from each country?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "For each country, how many singers are from that country?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> conductor </tab> ) , ordered by ( ( <col> year of work </col> ) in descending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of all the conductor in descending order of year of work?",
                9.923965454101562
            ],
            [
                "Give me a list of all the conductor names ordered by the year of work in descending order.",
                11.088923454284668
            ],
            [
                "List all conductor names ordered by their years of work in descending order.",
                10.766069412231445
            ],
            [
                "List the names of all conductor in descending order of year of work.",
                10.712294578552246
            ],
            [
                "Find the names of all conductor in the descending order of year of work.",
                10.694822311401367
            ],
            [
                "Show the names of all conductor in descending order of year of work.",
                10.659862518310547
            ],
            [
                "Show the names of all the conductor in descending order of their year of work.",
                10.530264854431152
            ],
            [
                "List all conductor names in descending order of year of work.",
                10.402981758117676
            ],
            [
                "What are the names of the conductor in descending order of year of work?",
                10.318408966064453
            ],
            [
                "What are the names of all the conductor in the descending order of year of work?",
                10.173896789550781
            ],
            [
                "What are the names of all the conductor in the descending order of year of work?",
                10.173896789550781
            ],
            [
                "What are the names of all the conductor in descending order of year of work?",
                9.92397689819336
            ],
            [
                "What are the names of all the conductor in descending order of year of work?",
                9.92397689819336
            ],
            [
                "What are the names of all the conductor in descending order of year of work?",
                9.92397689819336
            ],
            [
                "Show the names of all the conductor in descending order of year of work.",
                9.423712730407715
            ],
            [
                "List the conductor names in descending order of the year of work.",
                9.40351390838623
            ],
            [
                "Find all conductor names sorted by year of work in descending order.",
                9.35948657989502
            ],
            [
                "List the names of all the conductor in descending order of year of work.",
                9.097617149353027
            ],
            [
                "List the names of all the conductor in descending order of year of work.",
                9.097617149353027
            ],
            [
                "List the names of all the conductor in descending order of year of work.",
                9.097617149353027
            ],
            [
                "Find the name of conductor in the descending order of year of work.",
                8.268796920776367
            ],
            [
                "List all the conductor names by the most recent year of work.",
                6.952807426452637
            ],
            [
                "What are the names of the conductor ordered by year of work?",
                6.84489631652832
            ],
            [
                "What are the names of all the conductor ordered by year of work?",
                5.613392353057861
            ],
            [
                "What are the names of all the conductor ordered in descending year of work?",
                5.443059921264648
            ],
            [
                "List all conductor names by their years of work from old to young",
                3.429379940032959
            ],
            [
                "List names of all conductor in the descending order by all years of work.",
                2.9267730712890625
            ],
            [
                "List names of all conductor in the order of their year of work in the most recent year.",
                2.493504524230957
            ],
            [
                "Return the names of all the conductor ordered by age descending.",
                -4.078551292419434
            ],
            [
                "What are the names of all the conductor by age in descending order?",
                -11.471646308898926
            ],
            [
                "What are the names of all the conductor by age?",
                -12.078597068786621
            ]
        ],
        "templates": [
            "",
            {
                "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
                "masked_template": "<mask> me a list of all the <mask> names <mask> by the <mask> in <mask>",
                "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
                "ted": 0.0,
                "db_id": "program_share",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "channel",
                    "order",
                    "by",
                    "rating_in_percent",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "channel",
                    "order",
                    "by",
                    "rating_in_percent",
                    "desc"
                ]
            },
            {
                "question": "List all channel names ordered by their rating in percent from big to small.",
                "masked_template": "List all <mask> names ordered by their <mask> in <mask> big to <mask>",
                "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
                "ted": 0.0,
                "db_id": "program_share",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "channel",
                    "order",
                    "by",
                    "rating_in_percent",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "channel",
                    "order",
                    "by",
                    "rating_in_percent",
                    "desc"
                ]
            },
            {
                "question": "Sort the names of all counties in descending alphabetical order.",
                "masked_template": "<mask> the names of all <mask> in <mask>",
                "query": "SELECT County_name FROM county ORDER BY County_name DESC",
                "ted": 0.0,
                "db_id": "election",
                "query_toks": [
                    "select",
                    "county_name",
                    "from",
                    "county",
                    "order",
                    "by",
                    "county_name",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "county_name",
                    "from",
                    "county",
                    "order",
                    "by",
                    "county_name",
                    "desc"
                ]
            },
            {
                "question": "Find the names of all person sorted in the descending order using age.",
                "masked_template": "Find the names of all <mask> in the <mask> order <mask>",
                "query": "SELECT name FROM Person ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "network_2",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "person",
                    "order",
                    "by",
                    "age",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "person",
                    "order",
                    "by",
                    "age",
                    "desc"
                ]
            },
            {
                "question": "Show the case burden of counties in descending order of population.",
                "masked_template": "Show the <mask> of <mask> in <mask> order of <mask>",
                "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety",
                "query_toks": [
                    "select",
                    "case_burden",
                    "from",
                    "county_public_safety",
                    "order",
                    "by",
                    "population",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "case_burden",
                    "from",
                    "county_public_safety",
                    "order",
                    "by",
                    "population",
                    "desc"
                ]
            },
            {
                "question": "Show the working years of managers in descending order of their level.",
                "masked_template": "Show the <mask> of <mask> in <mask> order of their <mask>",
                "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
                "ted": 0.0,
                "db_id": "railway"
            },
            {
                "question": "List all club names in descending alphabetical order.",
                "masked_template": "List all <mask> names in <mask>",
                "query": "SELECT name FROM club ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What are the names of the counties of public safety, ordered by population descending?",
                "masked_template": "What are the names of the <mask> of <mask> ordered by <mask>",
                "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
                "masked_template": "What are the names of all the <mask> in the <mask> by all <mask> in <mask>",
                "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
                "ted": 0.0,
                "db_id": "university_basketball"
            },
            {
                "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
                "masked_template": "What are the <mask> of all the <mask> in the <mask> order of <mask>",
                "query": "SELECT venue FROM MATCH ORDER BY date DESC",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "What are the names of buildings sorted in descending order of building height?",
                "masked_template": "What are the names of <mask> in <mask> order of <mask>",
                "query": "SELECT name FROM buildings ORDER BY Height DESC",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What are the characters of actors in descending order of age?",
                "masked_template": "What are the <mask> of <mask> in <mask> order of <mask>",
                "query": "SELECT Character FROM actor ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "What are the names of enzymes in descending order?",
                "masked_template": "What are the names of <mask> in <mask>",
                "query": "SELECT name FROM enzyme ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "Show the name of drivers in descending order of age.",
                "masked_template": "Show the name of <mask> in <mask> order of <mask>",
                "query": "SELECT name FROM driver ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "school_bus"
            },
            {
                "question": "Sort the company names in descending order of the company's market value.",
                "masked_template": "<mask> the <mask> names in <mask> order of the <mask>",
                "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "Find all information about student addresses, and sort by monthly rental in descending order.",
                "masked_template": "Find all <mask> and <mask> by <mask> in <mask>",
                "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "List the names of counties in descending order of population.",
                "masked_template": "List the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "List the name of enzymes in descending lexicographical order.",
                "masked_template": "List the name of <mask> in <mask>",
                "query": "SELECT name FROM enzyme ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "List the votes of elections in descending order.",
                "masked_template": "List the <mask> of <mask> in <mask>",
                "query": "SELECT Votes FROM election ORDER BY Votes DESC",
                "ted": 0.0,
                "db_id": "election_representative"
            },
            {
                "question": "Find the first name of students in the descending order of age.",
                "masked_template": "Find the <mask> name of <mask> in the <mask> order of <mask>",
                "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "List all the event names by year from the most recent to the oldest.",
                "masked_template": "List all the <mask> names by <mask> the most <mask> to the <mask>",
                "query": "SELECT name FROM event ORDER BY YEAR DESC",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "What are the names of the wrestlers, ordered descending by days held?",
                "masked_template": "What are the names of the <mask> ordered <mask> by <mask>",
                "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
                "ted": 0.0,
                "db_id": "wrestler"
            },
            {
                "question": "What are the case burdens of counties, ordered descending by population?",
                "masked_template": "What are the <mask> of <mask> ordered <mask> by <mask>",
                "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the names of all the clubs ordered in descending alphabetical order?",
                "masked_template": "What are the names of all the <mask> ordered in <mask>",
                "query": "SELECT name FROM club ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "Sort all captain names by their ages from old to young.",
                "masked_template": "<mask> all <mask> names by their <mask> old to <mask>",
                "query": "SELECT name FROM captain ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
                "masked_template": "List names of all <mask> in the <mask> ordered by all <mask> in <mask>",
                "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
                "ted": 0.0,
                "db_id": "university_basketball"
            },
            {
                "question": "List venues of all matches in the order of their dates starting from the most recent one.",
                "masked_template": "List <mask> of all <mask> in the order of their <mask> the most <mask>",
                "query": "SELECT venue FROM MATCH ORDER BY date DESC",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "Return the characters for actors, ordered by age descending.",
                "masked_template": "Return the <mask> for <mask> ordered by age <mask>",
                "query": "SELECT Character FROM actor ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "What are the names of everybody sorted by age in descending order?",
                "masked_template": "What are the names of <mask> by age in <mask>",
                "query": "SELECT name FROM Person ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "What are the names of captains, sorted by age descending?",
                "masked_template": "What are the names of <mask> by age <mask>",
                "query": "SELECT name FROM captain ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "ship_1"
            }
        ],
        "best_hyp": "What are the names of all the conductor in the descending order of year of work?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of all the conductor in descending order of year of work?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "select avg( capacity ) , max( capacity ) from stadium",
        "proc_query": "( the <col> average </col> of ( <col> capacity </col> ) ) , ( the maximum of ( <col> capacity </col> ) ) that belongs to ( <tab> stadium </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the average and maximum capacity of stadiums?",
                6.831940650939941
            ],
            [
                "What is the average and maximum capacity of all stadiums?",
                8.271985054016113
            ],
            [
                "What are the average and maximum capacity of all stadiums?",
                8.142717361450195
            ],
            [
                "what are the average and maximum capacity of all stadiums?",
                8.070928573608398
            ],
            [
                "Find the average and maximum capacity of all stadiums.",
                7.571937561035156
            ],
            [
                "What is the average and maximum number of capacity of all the stadiums?",
                7.39441442489624
            ],
            [
                "Return the average capacity as well as the maximum capacity of all stadiums",
                7.3605828285217285
            ],
            [
                "Tell me the average and maximum capacity count across all the stadiums",
                7.200010776519775
            ],
            [
                "What is the average and maximum capacity of stadiums?",
                6.831925392150879
            ],
            [
                "What are the average and maximum capacity of stadiums?",
                6.817923545837402
            ],
            [
                "What are the average and maximum capacity of stadiums?",
                6.817923545837402
            ],
            [
                "Tell me the average and maximum capacity of stadiums.",
                6.4413676261901855
            ],
            [
                "Return the average and maximum capacity across all stadiums",
                4.034453392028809
            ],
            [
                "What is average and maximum capacity of all stadiums?",
                3.909162759780884
            ],
            [
                "Show the average low capacity and maximum capacity in stadiums per capacity",
                -11.95118522644043
            ]
        ],
        "templates": [
            "",
            {
                "question": "What is the average and largest salary of all employees?",
                "masked_template": "What is the average and <mask> of all <mask>",
                "query": "SELECT avg( salary ) , max( salary ) FROM Employee",
                "ted": 0.0,
                "db_id": "flight_1",
                "query_toks": [
                    "select",
                    "avg",
                    "(",
                    "salary",
                    ")",
                    ",",
                    "max",
                    "(",
                    "salary",
                    ")",
                    "from",
                    "employee"
                ],
                "query_toks_no_value": [
                    "select",
                    "avg",
                    "(",
                    "salary",
                    ")",
                    ",",
                    "max",
                    "(",
                    "salary",
                    ")",
                    "from",
                    "employee"
                ]
            },
            {
                "question": "What are the average score and average staff number of all shops?",
                "masked_template": "What are the average <mask> and average <mask> number of all <mask>",
                "query": "SELECT avg( num_of_staff ) , avg( score ) FROM shop",
                "ted": 0.07142857142857142,
                "db_id": "coffee_shop",
                "query_toks": [
                    "select",
                    "avg",
                    "(",
                    "num_of_staff",
                    ")",
                    ",",
                    "avg",
                    "(",
                    "score",
                    ")",
                    "from",
                    "shop"
                ],
                "query_toks_no_value": [
                    "select",
                    "avg",
                    "(",
                    "num_of_staff",
                    ")",
                    ",",
                    "avg",
                    "(",
                    "score",
                    ")",
                    "from",
                    "shop"
                ]
            },
            {
                "question": "what are the average and maximum attendances of all events?",
                "masked_template": "what are the average and maximum <mask> of all <mask>",
                "query": "SELECT avg( Event_Attendance ) , max( Event_Attendance ) FROM event",
                "ted": 0.0,
                "db_id": "news_report",
                "query_toks": [
                    "select",
                    "avg",
                    "(",
                    "event_attendance",
                    ")",
                    ",",
                    "max",
                    "(",
                    "event_attendance",
                    ")",
                    "from",
                    "event"
                ],
                "query_toks_no_value": [
                    "select",
                    "avg",
                    "(",
                    "event_attendance",
                    ")",
                    ",",
                    "max",
                    "(",
                    "event_attendance",
                    ")",
                    "from",
                    "event"
                ]
            },
            {
                "question": "Find the average and maximum rating of all reviews.",
                "masked_template": "Find the average and maximum <mask> of all <mask>",
                "query": "SELECT avg( rating ) , max( rating ) FROM review",
                "ted": 0.0,
                "db_id": "epinions_1",
                "query_toks": [
                    "select",
                    "avg",
                    "(",
                    "rating",
                    ")",
                    ",",
                    "max",
                    "(",
                    "rating",
                    ")",
                    "from",
                    "review"
                ],
                "query_toks_no_value": [
                    "select",
                    "avg",
                    "(",
                    "rating",
                    ")",
                    ",",
                    "max",
                    "(",
                    "rating",
                    ")",
                    "from",
                    "review"
                ]
            },
            {
                "question": "What is the minimum and maximum number of bathrooms of all the apartments?",
                "masked_template": "What is the <mask> and maximum number of <mask> of all the <mask>",
                "query": "SELECT min( bathroom_count ) , max( bathroom_count ) FROM Apartments",
                "ted": 0.07142857142857142,
                "db_id": "apartment_rentals",
                "query_toks": [
                    "select",
                    "min",
                    "(",
                    "bathroom_count",
                    ")",
                    ",",
                    "max",
                    "(",
                    "bathroom_count",
                    ")",
                    "from",
                    "apartments"
                ],
                "query_toks_no_value": [
                    "select",
                    "min",
                    "(",
                    "bathroom_count",
                    ")",
                    ",",
                    "max",
                    "(",
                    "bathroom_count",
                    ")",
                    "from",
                    "apartments"
                ]
            },
            {
                "question": "Return the average transaction amount, as well as the total amount of all transactions.",
                "masked_template": "Return the average <mask> as <mask> as the total <mask> of all <mask>",
                "query": "SELECT avg( transaction_amount ) , sum( transaction_amount ) FROM Financial_transactions",
                "ted": 0.07142857142857142,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "Give me the minimum and maximum bathroom count among all the apartments.",
                "masked_template": "<mask> me the <mask> and maximum <mask> count <mask> all the <mask>",
                "query": "SELECT min( bathroom_count ) , max( bathroom_count ) FROM Apartments",
                "ted": 0.07142857142857142,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What is the average and total transaction amount?",
                "masked_template": "What is the average and total <mask>",
                "query": "SELECT avg( transaction_amount ) , sum( transaction_amount ) FROM Financial_transactions",
                "ted": 0.07142857142857142,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "What are the minimum and maximum crime rate of counties?",
                "masked_template": "What are the <mask> and maximum <mask> of <mask>",
                "query": "SELECT min( Crime_rate ) , max( Crime_rate ) FROM county_public_safety",
                "ted": 0.07142857142857142,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the average and minimum price (in Euro) of all products?",
                "masked_template": "What are the average and <mask> (in <mask> of all <mask>",
                "query": "SELECT avg( price_in_euros ) , min( price_in_euros ) FROM catalog_contents",
                "ted": 0.07142857142857142,
                "db_id": "product_catalog"
            },
            {
                "question": "Give me the average and minimum price (in Euro) of the products.",
                "masked_template": "<mask> me the average and <mask> (in <mask> of the <mask>",
                "query": "SELECT avg( price_in_euros ) , min( price_in_euros ) FROM catalog_contents",
                "ted": 0.07142857142857142,
                "db_id": "product_catalog"
            },
            {
                "question": "Return the minimum and maximum crime rates across all counties.",
                "masked_template": "Return the <mask> and maximum <mask> all <mask>",
                "query": "SELECT min( Crime_rate ) , max( Crime_rate ) FROM county_public_safety",
                "ted": 0.07142857142857142,
                "db_id": "county_public_safety"
            },
            {
                "question": "What is average and maximum salary of all employees.",
                "masked_template": "What is average and maximum <mask> of all <mask>",
                "query": "SELECT avg( salary ) , max( salary ) FROM Employee",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "show the lowest low temperature and highest wind speed in miles per hour.",
                "masked_template": "show the <mask> low <mask> and <mask> in <mask> per <mask>",
                "query": "SELECT min( low_temperature ) , max( wind_speed_mph ) FROM weekly_weather",
                "ted": 0.07142857142857142,
                "db_id": "station_weather"
            }
        ],
        "best_hyp": "What are the average and maximum capacity of stadiums?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the average and maximum capacity of stadiums?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "proc_query": "( <col> location </col> ) , ( <col> name </col> ) that belongs to ( <tab> stadium </tab> ) , that have ( ( <col> capacity </col> ) between ( <val> 5000 </val> ) and ( <val> 10000 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the locations and names of stadiums with capacity between 5000 and 10000?",
                10.507743835449219
            ],
            [
                "What are the location and name for all stadiums that can seat between 5000 and 10000 people?",
                11.137632369995117
            ],
            [
                "What are the location and name of all stadiums with capacity between 5000 and 10000?",
                11.11609935760498
            ],
            [
                "List the location and name of stadiums that have the capacity of between 5000 and 10000",
                10.712573051452637
            ],
            [
                "What are the location and name of stadiums with capacity between 5000 and 10000?",
                10.659015655517578
            ],
            [
                "What are the locations and names of stadiums with capacity between 5000 and 10000?",
                10.507745742797852
            ],
            [
                "Find the location and name of stadiums with capacity between 5000 and 10000.",
                10.325471878051758
            ],
            [
                "Find the location and name of stadiums with capacity between 5000 and 10000.",
                10.325471878051758
            ],
            [
                "Show the location and name for stadiums that can seat between 5000 and 10000 people",
                10.0581636428833
            ],
            [
                "Find the location and name of stadiums with capacity between 5000 and 10000",
                9.500722885131836
            ],
            [
                "Which stadium has capacity between 5000 and 10000? List each location and name.",
                8.93992805480957
            ],
            [
                "What are the location and name of stadiums for stadiums with maximum capacity between 5000 and 10000",
                5.673824310302734
            ],
            [
                "Find the location and name of the stadiums which can sit 50 to 100 people and their capacity is between 5000 and 10000",
                -7.2185821533203125
            ],
            [
                "What are the location and name for stadiums which can seat between 5000 to 100 people?",
                -10.061720848083496
            ],
            [
                "What are the location and name of all the stadiums that can seat more than 160 and can accommodate more than two people?",
                -11.544252395629883
            ],
            [
                "Find all the stadiums that have a capacity bigger than 160 and can accommodate more than 2,000 people. Show location and name.",
                -11.7578763961792
            ],
            [
                "Return the names and ids of all stadiums whose capacity is between 600 and 10000",
                -11.80285358428955
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
                "masked_template": "What are the <mask> names and <mask> for all <mask> that <mask> and <mask>",
                "query": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
                "ted": 0.0,
                "db_id": "store_product",
                "query_toks": [
                    "select",
                    "district_name",
                    ",",
                    "city_population",
                    "from",
                    "district",
                    "where",
                    "city_population",
                    "between",
                    "200000",
                    "and",
                    "2000000"
                ],
                "query_toks_no_value": [
                    "select",
                    "district_name",
                    ",",
                    "city_population",
                    "from",
                    "district",
                    "where",
                    "city_population",
                    "between",
                    "value",
                    "and",
                    "value"
                ]
            },
            {
                "question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?",
                "masked_template": "What are the <mask> and <mask> names of all <mask> with <mask> and <mask>",
                "query": "SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000",
                "ted": 0.0,
                "db_id": "driving_school",
                "query_toks": [
                    "select",
                    "first_name",
                    ",",
                    "last_name",
                    "from",
                    "customers",
                    "where",
                    "amount_outstanding",
                    "between",
                    "1000",
                    "and",
                    "3000"
                ],
                "query_toks_no_value": [
                    "select",
                    "first_name",
                    ",",
                    "last_name",
                    "from",
                    "customers",
                    "where",
                    "amount_outstanding",
                    "between",
                    "value",
                    "and",
                    "value"
                ]
            },
            {
                "question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.",
                "masked_template": "List the <mask> name and <mask> name of <mask> have the <mask> of <mask> and <mask>",
                "query": "SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000",
                "ted": 0.0,
                "db_id": "driving_school",
                "query_toks": [
                    "select",
                    "first_name",
                    ",",
                    "last_name",
                    "from",
                    "customers",
                    "where",
                    "amount_outstanding",
                    "between",
                    "1000",
                    "and",
                    "3000"
                ],
                "query_toks_no_value": [
                    "select",
                    "first_name",
                    ",",
                    "last_name",
                    "from",
                    "customers",
                    "where",
                    "amount_outstanding",
                    "between",
                    "value",
                    "and",
                    "value"
                ]
            },
            {
                "question": "What are the name and level of catalog structure with level number between 5 and 10",
                "masked_template": "What are the name and <mask> of <mask> with <mask> number <mask> 5 and 10",
                "query": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
                "ted": 0.0,
                "db_id": "product_catalog",
                "query_toks": [
                    "select",
                    "catalog_level_name",
                    ",",
                    "catalog_level_number",
                    "from",
                    "catalog_structure",
                    "where",
                    "catalog_level_number",
                    "between",
                    "5",
                    "and",
                    "10"
                ],
                "query_toks_no_value": [
                    "select",
                    "catalog_level_name",
                    ",",
                    "catalog_level_number",
                    "from",
                    "catalog_structure",
                    "where",
                    "catalog_level_number",
                    "between",
                    "value",
                    "and",
                    "value"
                ]
            },
            {
                "question": "What are the names and ids of products costing between 600 and 700?",
                "masked_template": "What are the names and ids of <mask> 600 and <mask>",
                "query": "SELECT product_name , product_id FROM products WHERE product_price BETWEEN 600 AND 700",
                "ted": 0.0,
                "db_id": "department_store",
                "query_toks": [
                    "select",
                    "product_name",
                    ",",
                    "product_id",
                    "from",
                    "products",
                    "where",
                    "product_price",
                    "between",
                    "600",
                    "and",
                    "700"
                ],
                "query_toks_no_value": [
                    "select",
                    "product_name",
                    ",",
                    "product_id",
                    "from",
                    "products",
                    "where",
                    "product_price",
                    "between",
                    "value",
                    "and",
                    "value"
                ]
            },
            {
                "question": "Find the name and level of catalog structure with level between 5 and 10.",
                "masked_template": "Find the name and <mask> of <mask> with <mask> 5 and 10.",
                "query": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
                "ted": 0.0,
                "db_id": "product_catalog"
            },
            {
                "question": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.",
                "masked_template": "<mask> job <mask> the difference <mask> and maximum <mask> for <mask> which max <mask> the <mask> to <mask>",
                "query": "SELECT job_title , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
                "ted": 0.07142857142857142,
                "db_id": "hr_1"
            },
            {
                "question": "Show the organizer and name for churches that opened between 1830 and 1840.",
                "masked_template": "Show the <mask> and name for <mask> that <mask> and <mask>",
                "query": "SELECT organized_by , name FROM church WHERE open_date BETWEEN 1830 AND 1840",
                "ted": 0.0,
                "db_id": "wedding"
            },
            {
                "question": "Find the name and population of district with population between 200000 and 2000000",
                "masked_template": "Find the name and <mask> of <mask> with <mask> and <mask>",
                "query": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.",
                "masked_template": "Which <mask> age is <mask> than 18 and is <mask> in <mask> List each <mask> and <mask>",
                "query": "SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major = 600",
                "ted": 0.07692307692307693,
                "db_id": "restaurant_1"
            },
            {
                "question": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?",
                "masked_template": "What are the job <mask> and <mask> of <mask> for <mask> with maximum <mask> and <mask>",
                "query": "SELECT job_title , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
                "ted": 0.07142857142857142,
                "db_id": "hr_1"
            },
            {
                "question": "Find the room number of the rooms which can sit 50 to 100 students and their buildings.",
                "masked_template": "Find the <mask> number of the <mask> which can sit 50 to 100 <mask> and their <mask>",
                "query": "SELECT building , room_number FROM classroom WHERE capacity BETWEEN 50 AND 100",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?",
                "masked_template": "What are the <mask> numbers and <mask> for <mask> which can <mask> 50 to 100 <mask>",
                "query": "SELECT building , room_number FROM classroom WHERE capacity BETWEEN 50 AND 100",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.",
                "masked_template": "What are the <mask> names and ids of all the <mask> that <mask> more than 160 and can <mask> more than two <mask>",
                "query": "SELECT roomName , RoomId FROM Rooms WHERE basePrice > 160 AND maxOccupancy > 2",
                "ted": 0.07692307692307693,
                "db_id": "inn_1"
            },
            {
                "question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.",
                "masked_template": "Find all the <mask> that have a <mask> than 160 and can <mask> more than 2 <mask> names and <mask>",
                "query": "SELECT roomName , RoomId FROM Rooms WHERE basePrice > 160 AND maxOccupancy > 2",
                "ted": 0.07692307692307693,
                "db_id": "inn_1"
            },
            {
                "question": "Return the names and ids of all products whose price is between 600 and 700.",
                "masked_template": "Return the names and ids of all <mask> whose <mask> is <mask> 600 and <mask>",
                "query": "SELECT product_name , product_id FROM products WHERE product_price BETWEEN 600 AND 700",
                "ted": 0.0,
                "db_id": "department_store"
            }
        ],
        "best_hyp": "Find the location and name of stadiums with capacity between 5000 and 10000.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the locations and names of stadiums with capacity between 5000 and 10000?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2038 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2026",
        "proc_query": "( <col> record company </col> ) that belongs to ( <tab> orchestra </tab> ) , that have ( ( <col> year of founded </col> ) less than ( <val> 2038 </val> ) ), and intersect with ( ( <col> record company </col> ) that belongs to ( <tab> orchestra </tab> ) , that have ( ( <col> year of founded </col> ) greater than ( <val> 2026 </val> ) ))",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "Show the record companies that have both an orchestra that was founded before 2038 and an orchestra founded after 2026.",
                9.402427673339844
            ],
            [
                "Show the record companies that have both an orchestra founded before 2038 and one that was founded after 2026.",
                9.691911697387695
            ],
            [
                "Which record companies have both an orchestra founded before 2038 and an orchestra that was founded after 2026?",
                9.283668518066406
            ],
            [
                "Which record companies correspond to both musicians that have a founded year before 2038 and musicians that are founded after 2026?",
                8.081059455871582
            ],
            [
                "What are the record companies that have both musicians that are founded before 2038 and musicians that were founded after 2026?",
                7.298656463623047
            ],
            [
                "What are the record companies owned by both musicians founded before 2038 and musicians founded after 2026?",
                7.0454816818237305
            ],
            [
                "Show the record companies owned by musicians founded before 2038 and musicians founded after 2026.",
                6.861804008483887
            ],
            [
                "Show the record companies that have both musicians founded before 2038 and musicians founded after 2026.",
                6.256481170654297
            ],
            [
                "Show the record companies that have both musicians founded before 2038 and musicians founded after 2026.",
                6.256480693817139
            ],
            [
                "Show the record companies owned by both musicians founded before 2038 and musicians founded after 2026",
                5.9882941246032715
            ],
            [
                "What are the names of the record companies that have both musicians with founded year before 2038 and musicians with founding year after 2026?",
                5.905095100402832
            ],
            [
                "Which record company has both musicians founded before 2038 and musicians founded after 2026?",
                5.1761393547058105
            ],
            [
                "Show the names of record companies that have both musicians with founded year before 2038 and musicians with founding year after 2026",
                4.77497673034668
            ],
            [
                "Show the record companies shared by musicians with founded year before 2038 and musicians with founding year after 2026",
                4.768383026123047
            ],
            [
                "Show the record companies that have both musicians with founded year before 2038 and musicians with founding year after 2026",
                4.0411152839660645
            ],
            [
                "Which record companies are both associated with the orchestra that was founded before 2038 and the music companies that were founded after 2026?",
                4.034780979156494
            ],
            [
                "Show the record companies owned by artists with founded year before 2038 and artists founded after 2026",
                2.5026566982269287
            ],
            [
                "Which record companies did both musicians founded before 2038 and musicians founded after 2026?",
                1.3633495569229126
            ],
            [
                "Show the record companies that have both an orchestra with founded year than 2038 and an orchestra founded before 2026.",
                -9.656881332397461
            ],
            [
                "Which record company has both an orchestra with founded year than 2038 and an orchestra founded before 2026?",
                -10.779434204101562
            ],
            [
                "List all of the record companies with a history of at least 20 years and an orchestra founded after 2026.",
                -11.578048706054688
            ],
            [
                "What are the record companies with both an orchestra having more than 20 years of founded and an orchestra founded before 2026?",
                -11.784138679504395
            ],
            [
                "Show all the record companies in both year 2038 and year 2026",
                -11.849262237548828
            ],
            [
                "Show the record companies that have albums with founded year more than 2038 and albums with founding year than 2026",
                -11.928962707519531
            ],
            [
                "What are the record companies that have both musicians with more than 20 years of founded and musicians with less than 2026?",
                -11.945307731628418
            ],
            [
                "Find the record companies that have both musicians with more than 20 years of founded and musicians with less than 2026.",
                -11.971962928771973
            ],
            [
                "Show the record companies that have both artists of age 50 and musicians of age 46.",
                -12.063685417175293
            ],
            [
                "Which record companies have both artists of age 45 and musicians of age 35?",
                -12.08460807800293
            ],
            [
                "Show the record companies that have both musicians with more than 10 years of founded and musicians with less than 3 years of founding",
                -12.086784362792969
            ],
            [
                "Show the names which are in both the record companies with id 3 and the record company with id 1.",
                -12.10764217376709
            ],
            [
                "What are the names of both record companies that have more than 20 20 years of history and more than 10 years of existence?",
                -12.1744384765625
            ]
        ],
        "templates": [
            "",
            {
                "question": "Show the country where people older than 30 and younger than 25 are from.",
                "masked_template": "Show the <mask> than 30 and <mask> than 25 are <mask>",
                "query": "SELECT country FROM people WHERE age < 25 INTERSECT SELECT country FROM people WHERE age > 30",
                "ted": 0.0,
                "db_id": "wedding",
                "query_toks": [
                    "select",
                    "country",
                    "from",
                    "people",
                    "where",
                    "age",
                    "<",
                    "25",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "people",
                    "where",
                    "age",
                    ">",
                    "30"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    "from",
                    "people",
                    "where",
                    "age",
                    "<",
                    "value",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "people",
                    "where",
                    "age",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?",
                "masked_template": "Which <mask> names are <mask> in the <mask> with the id 3 and the <mask> with the id 1?",
                "query": "SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1",
                "ted": 0.058823529411764705,
                "db_id": "party_people",
                "query_toks": [
                    "select",
                    "member_name",
                    "from",
                    "member",
                    "where",
                    "party_id",
                    "=",
                    "3",
                    "intersect",
                    "select",
                    "member_name",
                    "from",
                    "member",
                    "where",
                    "party_id",
                    "=",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "member_name",
                    "from",
                    "member",
                    "where",
                    "party_id",
                    "=",
                    "value",
                    "intersect",
                    "select",
                    "member_name",
                    "from",
                    "member",
                    "where",
                    "party_id",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?",
                "masked_template": "Which <mask> to both <mask> that have a <mask> and <mask> that have a <mask> than <mask>",
                "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
                "ted": 0.058823529411764705,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    ">",
                    "1500",
                    "intersect",
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    "<",
                    "500"
                ],
                "query_toks_no_value": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    "<",
                    "value"
                ]
            },
            {
                "question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?",
                "masked_template": "What are the <mask> that have both <mask> that are <mask> than <mask> and <mask> than <mask>",
                "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
                "ted": 0.058823529411764705,
                "db_id": "climbing",
                "query_toks": [
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    ">",
                    "5600",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    "<",
                    "5200"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    "<",
                    "value"
                ]
            },
            {
                "question": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?",
                "masked_template": "What are the <mask> by both <mask> and <mask>",
                "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
                "ted": 0.0,
                "db_id": "school_player",
                "query_toks": [
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    "<",
                    "1890",
                    "intersect",
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    ">",
                    "1900"
                ],
                "query_toks_no_value": [
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    "<",
                    "value",
                    "intersect",
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show the hometowns shared by people older than 23 and younger than 20.",
                "masked_template": "Show the <mask> by <mask> than 23 and <mask> than 20.",
                "query": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
                "ted": 0.058823529411764705,
                "db_id": "gymnast"
            },
            {
                "question": "Show the nations that have both hosts older than 45 and hosts younger than 35.",
                "masked_template": "Show the <mask> that have both <mask> than 45 and <mask> than 35.",
                "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
                "ted": 0.058823529411764705,
                "db_id": "party_host"
            },
            {
                "question": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.",
                "masked_template": "Show the <mask> that have both <mask> and <mask>",
                "query": "SELECT POSITION FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year > 2005",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "Show the denomination shared by schools founded before 1890 and schools founded after 1900",
                "masked_template": "Show the <mask> by <mask> and <mask>",
                "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?",
                "masked_template": "What are the <mask> of the <mask> that have both <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
                "ted": 0.058823529411764705,
                "db_id": "ship_mission"
            },
            {
                "question": "Which address has both members younger than 30 and members older than 40?",
                "masked_template": "Which <mask> has both <mask> than 30 and <mask> than 40?",
                "query": "SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40",
                "ted": 0.0,
                "db_id": "coffee_shop"
            },
            {
                "question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.",
                "masked_template": "Show the <mask> of <mask> that have both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
                "ted": 0.058823529411764705,
                "db_id": "ship_mission"
            },
            {
                "question": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.",
                "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> with <mask>",
                "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
                "ted": 0.058823529411764705,
                "db_id": "device"
            },
            {
                "question": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000",
                "ted": 0.058823529411764705,
                "db_id": "solvency_ii"
            },
            {
                "question": "Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?",
                "masked_template": "Which <mask> both <mask> that <mask> the <mask> and <mask> that <mask>",
                "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
                "ted": 0.058823529411764705,
                "db_id": "device"
            },
            {
                "question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.",
                "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> than <mask>",
                "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
                "ted": 0.058823529411764705,
                "db_id": "farm"
            },
            {
                "question": "From which hometowns did both people older than 23 and younger than 20 come from?",
                "masked_template": "<mask> which <mask> did both <mask> than 23 and <mask> than 20 <mask>",
                "query": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
                "ted": 0.058823529411764705,
                "db_id": "gymnast"
            },
            {
                "question": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than 32 and <mask> with <mask> than 64.",
                "query": "SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?",
                "masked_template": "Which <mask> has both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT country FROM stadium WHERE capacity > 60000 INTERSECT SELECT country FROM stadium WHERE capacity < 50000",
                "ted": 0.058823529411764705,
                "db_id": "swimming"
            },
            {
                "question": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85.",
                "masked_template": "List all of the <mask> ids with a <mask> of at least <mask> and an <mask> than 85.",
                "query": "SELECT player_api_id FROM Player WHERE height >= 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85",
                "ted": 0.029411764705882353,
                "db_id": "soccer_1"
            },
            {
                "question": "What are the positions with both players having more than 20 points and less than 10 points.",
                "masked_template": "What are the <mask> with both <mask> having more than 20 <mask> and <mask> than 10 <mask>",
                "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
                "ted": 0.058823529411764705,
                "db_id": "sports_competition"
            },
            {
                "question": "Show all the locations where some cinemas were opened in both year 2010 and year 2011.",
                "masked_template": "Show all the <mask> in both <mask> and <mask>",
                "query": "SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011",
                "ted": 0.058823529411764705,
                "db_id": "cinema"
            },
            {
                "question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.",
                "masked_template": "Show the <mask> that have <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
                "ted": 0.058823529411764705,
                "db_id": "climbing"
            },
            {
                "question": "What are the locations that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?",
                "masked_template": "What are the <mask> that have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000",
                "ted": 0.058823529411764705,
                "db_id": "race_track"
            },
            {
                "question": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.",
                "masked_template": "Find the <mask> have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000",
                "ted": 0.058823529411764705,
                "db_id": "race_track"
            },
            {
                "question": "Show the countries that have both managers of age above 50 and managers of age below 46.",
                "masked_template": "Show the <mask> that have both <mask> of age <mask> 50 and <mask> of age <mask> 46.",
                "query": "SELECT Country FROM manager WHERE Age > 50 INTERSECT SELECT Country FROM manager WHERE Age < 46",
                "ted": 0.058823529411764705,
                "db_id": "railway"
            },
            {
                "question": "Which nations have both hosts of age above 45 and hosts of age below 35?",
                "masked_template": "Which <mask> have both <mask> of age <mask> 45 and <mask> of age <mask> 35?",
                "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
                "ted": 0.058823529411764705,
                "db_id": "party_host"
            },
            {
                "question": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.",
                "masked_template": "Show the <mask> that have both <mask> with more than 10 <mask> of <mask> and <mask> with <mask> than 3 <mask> of <mask>",
                "query": "SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3",
                "ted": 0.058823529411764705,
                "db_id": "news_report"
            },
            {
                "question": "Show the member names which are in both the party with id 3 and the party with id 1.",
                "masked_template": "Show the <mask> names which are in both the <mask> with id 3 and the <mask> with id 1.",
                "query": "SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1",
                "ted": 0.058823529411764705,
                "db_id": "party_people"
            },
            {
                "question": "What are the positions of both players that have more than 20 20 points and less than 10 points?",
                "masked_template": "What are the <mask> of both <mask> that have more than 20 20 <mask> and <mask> than 10 <mask>",
                "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
                "ted": 0.058823529411764705,
                "db_id": "sports_competition"
            }
        ],
        "best_hyp": "What are the record companies that have both musicians with more than 20 years of founded and musicians with less than 2026?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Show the record companies that have both an orchestra that was founded before 2038 and an orchestra founded after 2026.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "proc_query": "( the number of ( all items ) ) that belongs to ( <tab> singer </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "How many singers are there?",
                10.227757453918457
            ],
            [
                "How many singers do we have?",
                10.470980644226074
            ],
            [
                "How many singers do we have?",
                10.470980644226074
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "How many singers are there?",
                10.22775650024414
            ],
            [
                "What is the total number of singers?",
                10.180512428283691
            ],
            [
                "What is the total number of singers?",
                10.180512428283691
            ],
            [
                "Return the total number of distinct singers.",
                9.005209922790527
            ],
            [
                "Find the total number of singers.",
                9.00313949584961
            ],
            [
                "Count the number of singers.",
                8.461353302001953
            ],
            [
                "Count the number of singers.",
                8.461353302001953
            ],
            [
                "Count the number of singers.",
                8.461353302001953
            ],
            [
                "Count the number of singers.",
                8.461353302001953
            ],
            [
                "Show the number of singers.",
                7.682431221008301
            ],
            [
                "What is the number of singers?",
                7.318440914154053
            ],
            [
                "Count how many singers have appeared in our record.",
                7.301403045654297
            ],
            [
                "How many distinct singers are listed in the database?",
                6.936944961547852
            ],
            [
                "How many CSU singers are there?",
                6.599042892456055
            ],
            [
                "Find the number of singers in total",
                6.365987300872803
            ],
            [
                "Find the number of singers.",
                6.01124382019043
            ],
            [
                "Find the number of distinct singers.",
                5.794485569000244
            ]
        ],
        "templates": [
            "",
            {
                "question": "How many statements do we have?",
                "masked_template": "How many <mask> do we <mask>",
                "query": "SELECT count( * ) FROM Statements",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "statements"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "statements"
                ]
            },
            {
                "question": "How many video games do you have?",
                "masked_template": "How many <mask> do you <mask>",
                "query": "SELECT count( * ) FROM Video_games",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "How many products are there in the records?",
                "masked_template": "How many <mask> are there in the <mask>",
                "query": "SELECT count( * ) FROM catalog_contents",
                "ted": 0.0,
                "db_id": "product_catalog",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "catalog_contents"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "catalog_contents"
                ]
            },
            {
                "question": "How many papers are published in total?",
                "masked_template": "How many <mask> are <mask> in <mask>",
                "query": "SELECT count( * ) FROM papers",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "How many council taxes are collected for renting arrears ?",
                "masked_template": "How many <mask> are <mask> for <mask> ?",
                "query": "SELECT count( * ) FROM rent_arrears",
                "ted": 0.0,
                "db_id": "local_govt_mdm"
            },
            {
                "question": "How many aircrafts exist in the database?",
                "masked_template": "How many <mask> in the <mask>",
                "query": "SELECT count( * ) FROM Aircraft",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "how many ships are there?",
                "masked_template": "how many <mask> are <mask>",
                "query": "SELECT count( * ) FROM ship",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "How many dorms are in the database?",
                "masked_template": "How many <mask> are in the <mask>",
                "query": "SELECT count( * ) FROM dorm",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "How many followers does each user have?",
                "masked_template": "How many <mask> each <mask>",
                "query": "SELECT count( * ) FROM follows",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "How many staff in total?",
                "masked_template": "How many <mask> in <mask>",
                "query": "SELECT count( * ) FROM Staff",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "How many video games exist?",
                "masked_template": "How many <mask>",
                "query": "SELECT count( * ) FROM Video_games",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "How many documents have expenses?",
                "masked_template": "How many <mask> have <mask>",
                "query": "SELECT count( * ) FROM Documents_with_expenses",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "How many counties are there in total?",
                "masked_template": "How many <mask> are there in <mask>",
                "query": "SELECT count( * ) FROM county",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "How many schools are there?",
                "masked_template": "How many <mask> are <mask>",
                "query": "SELECT count( * ) FROM school",
                "ted": 0.0,
                "db_id": "school_finance"
            },
            {
                "question": "What is the total number of faculty members?",
                "masked_template": "What is the total number of <mask>",
                "query": "SELECT count( * ) FROM Faculty",
                "ted": 0.0,
                "db_id": "activity_1",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "faculty"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "faculty"
                ]
            },
            {
                "question": "What is the total number of rooms available in this inn?",
                "masked_template": "What is the total number of <mask> in <mask>",
                "query": "SELECT count( * ) FROM Rooms",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Return the total number of distinct customers.",
                "masked_template": "Return the total number of distinct <mask>",
                "query": "SELECT count( * ) FROM customers",
                "ted": 0.0,
                "db_id": "customers_and_addresses",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "customers"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "customers"
                ]
            },
            {
                "question": "Find the total number of catalog contents.",
                "masked_template": "Find the total number of <mask>",
                "query": "SELECT count( * ) FROM catalog_contents",
                "ted": 0.0,
                "db_id": "product_catalog",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "catalog_contents"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "catalog_contents"
                ]
            },
            {
                "question": "Count the number of documents with expenses.",
                "masked_template": "Count the number of <mask> with <mask>",
                "query": "SELECT count( * ) FROM Documents_with_expenses",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Count the number of budget codes.",
                "masked_template": "Count the number of <mask>",
                "query": "SELECT count( * ) FROM Ref_budget_codes",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Count the number of total papers.",
                "masked_template": "Count the number of total <mask>",
                "query": "SELECT count( * ) FROM papers",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "Count the total number of counties.",
                "masked_template": "Count the total number of <mask>",
                "query": "SELECT count( * ) FROM county",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Show the number of trains",
                "masked_template": "Show the number of <mask>",
                "query": "SELECT count( * ) FROM train",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "What is the number of technicians?",
                "masked_template": "What is the number of <mask>",
                "query": "SELECT count( * ) FROM technician",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "Count how many appointments have been made in total.",
                "masked_template": "Count how many <mask> have <mask> in <mask>",
                "query": "SELECT count( * ) FROM appointment",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "How many distinct courses are enrolled in by students?",
                "masked_template": "How many distinct <mask> are <mask> in by <mask>",
                "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "How many CSU campuses are there?",
                "masked_template": "How many CSU <mask> are <mask>",
                "query": "SELECT count( * ) FROM campuses",
                "ted": 0.0,
                "db_id": "csu_1"
            },
            {
                "question": "Find the number of students in total.",
                "masked_template": "Find the number of <mask> in <mask>",
                "query": "SELECT count( * ) FROM STUDENT",
                "ted": 0.0,
                "db_id": "voter_2"
            },
            {
                "question": "Find the number of reviews.",
                "masked_template": "Find the number of <mask>",
                "query": "SELECT count( * ) FROM review",
                "ted": 0.0,
                "db_id": "epinions_1"
            },
            {
                "question": "Find the number of distinct amenities.",
                "masked_template": "Find the number of distinct <mask>",
                "query": "SELECT count( * ) FROM dorm_amenity",
                "ted": 0.0,
                "db_id": "dorm_1"
            }
        ],
        "best_hyp": "How many singers are there?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many singers are there?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "proc_query": "( <col> name </col> of <tab> stadium </tab> ) , ( the number of ( all items ) ) that belongs to ( ( <tab> concert </tab> ) , and ( ( <tab> stadium </tab> ) satisfied that ( ( <col> stadium id </col> of <tab> concert </tab> ) equal to ( <col> stadium id </col> of <tab> stadium </tab> ) ) ) ) , grouped by ( <col> stadium id </col> of <tab> concert </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "Show the names of stadiums and the number of concerts in each stadium.",
                9.655327796936035
            ],
            [
                "How many concerts are held at each stadium? List the stadium name and the number of concerts.",
                10.998017311096191
            ],
            [
                "List the name of all stadiums along with the number of concerts that have taken place there",
                10.92353630065918
            ],
            [
                "Show all stadium names along with the number of concerts in each stadium.",
                10.856921195983887
            ],
            [
                "For each stadium, show the name of the stadium and the number of concerts in it.",
                10.780016899108887
            ],
            [
                "Show all the stadium names and the number of concerts in each stadium.",
                10.698041915893555
            ],
            [
                "What are all the different stadiums and how many concerts has each stadium held?",
                10.639373779296875
            ],
            [
                "How many concerts are there in each stadium? Return both the stadium name and the number.",
                10.617203712463379
            ],
            [
                "For each stadium, show the name of the stadium and the number of concerts there.",
                10.555168151855469
            ],
            [
                "How many concerts do each stadium have? List their names and number of performances.",
                10.46804428100586
            ],
            [
                "Show all stadium names and the number of concerts in each stadium.",
                10.462135314941406
            ],
            [
                "How many concerts happened in each stadium? Return the stadium names and the number of concerts.",
                10.359028816223145
            ],
            [
                "Show the names of stadiums and the number of concerts they have.",
                10.3572359085083
            ],
            [
                "Show stadium names along with the number of concerts for each stadium.",
                10.21201229095459
            ],
            [
                "For each stadium, find their name and the number of concerts held there.",
                9.838509559631348
            ],
            [
                "How many concerts are there for each stadium?",
                9.699588775634766
            ],
            [
                "How many concerts are held in each stadium?",
                9.672367095947266
            ],
            [
                "What are the stadium names and the number of concerts in each stadium?",
                9.65294075012207
            ],
            [
                "Show the name of stadiums and the number of concerts in each stadium.",
                9.613719940185547
            ],
            [
                "Show stadium names and the number of concerts for each stadium.",
                9.292046546936035
            ],
            [
                "Show all the stadiums and the number of concerts held in each stadium",
                8.573782920837402
            ],
            [
                "What are the different stadiums and how many concerts have taken place there?",
                8.440390586853027
            ],
            [
                "Show the name and number of concerts in each stadium",
                8.43441390991211
            ],
            [
                "How many concerts has each stadium held?",
                8.42851448059082
            ],
            [
                "Find the number of concerts each stadium belongs to. Show the stadium name along with the stadium id.",
                8.315505027770996
            ],
            [
                "Find the name of each stadium and number of concerts held there.",
                5.50822114944458
            ],
            [
                "Return the name of each stadium and the number of times he or she visited there.",
                2.72947096824646
            ],
            [
                "List the id of stadiums where artists have been to and the number of their performances.",
                -0.26386839151382446
            ],
            [
                "Show the id of each stadium along with the number of times he or she visited there",
                -0.7825024724006653
            ],
            [
                "Show the stadium name with the number of gas stations.",
                -5.533685684204102
            ],
            [
                "How many concerts each stadium correspond to? List the stadium id and the number of concerts.",
                -8.263825416564941
            ]
        ],
        "templates": [
            "",
            {
                "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
                "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
                "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "ted": 0.0,
                "db_id": "activity_1",
                "query_toks": [
                    "select",
                    "t1.rank",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "faculty",
                    "as",
                    "t1",
                    "join",
                    "student",
                    "as",
                    "t2",
                    "on",
                    "t1.facid",
                    "=",
                    "t2.advisor",
                    "group",
                    "by",
                    "t1.rank"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.rank",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "faculty",
                    "as",
                    "t1",
                    "join",
                    "student",
                    "as",
                    "t2",
                    "on",
                    "t1.facid",
                    "=",
                    "t2.advisor",
                    "group",
                    "by",
                    "t1.rank"
                ]
            },
            {
                "question": "List the name of all products along with the number of complaints that they have received.",
                "masked_template": "List the name of all <mask> with the number of <mask> that <mask> have <mask>",
                "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "ted": 0.0,
                "db_id": "customer_complaints",
                "query_toks": [
                    "select",
                    "t1.product_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "products",
                    "as",
                    "t1",
                    "join",
                    "complaints",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "group",
                    "by",
                    "t1.product_name"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.product_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "products",
                    "as",
                    "t1",
                    "join",
                    "complaints",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "group",
                    "by",
                    "t1.product_name"
                ]
            },
            {
                "question": "Show all cities along with the number of drama workshop groups in each city.",
                "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "t1.city_town",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "addresses",
                    "as",
                    "t1",
                    "join",
                    "drama_workshop_groups",
                    "as",
                    "t2",
                    "on",
                    "t1.address_id",
                    "=",
                    "t2.address_id",
                    "group",
                    "by",
                    "t1.city_town"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.city_town",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "addresses",
                    "as",
                    "t1",
                    "join",
                    "drama_workshop_groups",
                    "as",
                    "t2",
                    "on",
                    "t1.address_id",
                    "=",
                    "t2.address_id",
                    "group",
                    "by",
                    "t1.city_town"
                ]
            },
            {
                "question": "For each building, show the name of the building and the number of institutions in it.",
                "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
                "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
                "ted": 0.0,
                "db_id": "protein_institute",
                "query_toks": [
                    "select",
                    "t1.name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "building",
                    "as",
                    "t1",
                    "join",
                    "institution",
                    "as",
                    "t2",
                    "on",
                    "t1.building_id",
                    "=",
                    "t2.building_id",
                    "group",
                    "by",
                    "t1.building_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "building",
                    "as",
                    "t1",
                    "join",
                    "institution",
                    "as",
                    "t2",
                    "on",
                    "t1.building_id",
                    "=",
                    "t2.building_id",
                    "group",
                    "by",
                    "t1.building_id"
                ]
            },
            {
                "question": "Show all the activity names and the number of faculty involved in each activity.",
                "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
                "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
                "ted": 0.0,
                "db_id": "activity_1",
                "query_toks": [
                    "select",
                    "t1.activity_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "activity",
                    "as",
                    "t1",
                    "join",
                    "faculty_participates_in",
                    "as",
                    "t2",
                    "on",
                    "t1.actid",
                    "=",
                    "t2.actid",
                    "group",
                    "by",
                    "t1.actid"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.activity_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "activity",
                    "as",
                    "t1",
                    "join",
                    "faculty_participates_in",
                    "as",
                    "t2",
                    "on",
                    "t1.actid",
                    "=",
                    "t2.actid",
                    "group",
                    "by",
                    "t1.actid"
                ]
            },
            {
                "question": "What are all the different product names, and how many complains has each received?",
                "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
                "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "ted": 0.0,
                "db_id": "customer_complaints"
            },
            {
                "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
                "masked_template": "How many <mask> are there in each <mask> Return both the <mask> and the <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "For every student who is registered for some course, how many courses are they registered for?",
                "masked_template": "For <mask> who is <mask> for <mask> how many <mask> are <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
                "masked_template": "How many <mask> do each <mask> of? List their names and number of <mask> of.",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Show all party names and the number of members in each party.",
                "masked_template": "Show all <mask> names and the number of <mask> in each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
                "masked_template": "How many <mask> in each <mask> Return the <mask> names and the number of <mask>",
                "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show the names of pilots and the number of records they have.",
                "masked_template": "Show the names of <mask> and the number of <mask>",
                "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "Show institution names along with the number of proteins for each institution.",
                "masked_template": "Show <mask> names <mask> with the number of <mask> for each <mask>",
                "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "For each user, find their name and the number of reviews written by them.",
                "masked_template": "For each <mask> find their name and the number of <mask> by <mask>",
                "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
                "ted": 0.0,
                "db_id": "epinions_1"
            },
            {
                "question": "How many events are there for each party?",
                "masked_template": "How many <mask> are there for each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "How many members are in each party?",
                "masked_template": "How many <mask> are in each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "What are the faculty id and the number of students each faculty has?",
                "masked_template": "What are the <mask> id and the number of <mask> each <mask>",
                "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show the name of track and the number of races in each track.",
                "masked_template": "Show the name of <mask> and the number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show party names and the number of events for each party.",
                "masked_template": "Show <mask> names and the number of <mask> for each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Show all the faculty ranks and the number of students advised by each rank.",
                "masked_template": "Show all the <mask> and the number of <mask> by each <mask>",
                "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are the different card types, and how many transactions have been made with each?",
                "masked_template": "What are the different <mask> and how many <mask> have <mask> with <mask>",
                "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
                "ted": 0.0,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "Show the station name and number of trains in each station.",
                "masked_template": "Show the <mask> name and number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "How many exhibitions has each artist had?",
                "masked_template": "How many <mask> has each <mask>",
                "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
                "masked_template": "Find the number of <mask> each <mask> to. Show the number <mask> with the <mask> id.",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "Find the name of each user and number of tweets tweeted by each of them.",
                "masked_template": "Find the name of each <mask> and number of <mask> by each of <mask>",
                "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "Return the name of each physician and the number of patients he or she treats.",
                "masked_template": "Return the name of each <mask> and the number of <mask> he or she <mask>",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "List the id of students who registered some courses and the number of their registered courses?",
                "masked_template": "List the id of <mask> who <mask> and the number of their <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
                "masked_template": "Show the <mask> id of each <mask> with the number of <mask> he or she <mask>",
                "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show the company name with the number of gas station.",
                "masked_template": "Show the <mask> name with the number of gas <mask>",
                "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
                "masked_template": "How many <mask> each <mask> to? List the <mask> id and the number of <mask>",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.0,
                "db_id": "insurance_policies"
            }
        ],
        "best_hyp": "For each stadium, show the name of the stadium and the number of concerts in it.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Show the names of stadiums and the number of concerts in each stadium.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> singer id </col> ) not in ( ( <col> singer id </col> ) that belongs to ( <tab> song </tab> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of singers who have never sung a song?",
                9.654633522033691
            ],
            [
                "What are the names of all singers that are not in any song?",
                11.043224334716797
            ],
            [
                "what are the names of singers who did not appear in any song?",
                10.410762786865234
            ],
            [
                "Find the names of all singers that have no songs.",
                10.382284164428711
            ],
            [
                "List the names of singers that are not in any song.",
                9.822423934936523
            ],
            [
                "Find the names of singers who did not appear in any song.",
                9.722914695739746
            ],
            [
                "What are the names of singers who do not have any song?",
                9.559642791748047
            ],
            [
                "What are the names of all singers that have never won any song?",
                9.552926063537598
            ],
            [
                "Find the name of the singers that do not have any song.",
                9.48714542388916
            ],
            [
                "List the names of singers that do not have any song.",
                9.426910400390625
            ],
            [
                "List the names of singers that do not have any song.",
                9.426910400390625
            ],
            [
                "List the names of singers that are not produced by any song.",
                9.341991424560547
            ],
            [
                "What are the names of singers that do not have any song?",
                9.321826934814453
            ],
            [
                "What are the names of singers that do not have any song?",
                9.321826934814453
            ],
            [
                "What are the names of singers that do not have a song?",
                8.906318664550781
            ],
            [
                "List the names of singers who did not appear in any song",
                8.812134742736816
            ],
            [
                "Which singers do not have any song? Tell me the singers' names.",
                8.4542818069458
            ],
            [
                "Find the names of singers that do not have any song.",
                8.320990562438965
            ],
            [
                "What are the names of the singers with no songs?",
                8.238568305969238
            ],
            [
                "List the names of singers that have no songs.",
                7.887962818145752
            ],
            [
                "Find all the name of singers without any song.",
                7.829028606414795
            ],
            [
                "Which singers have no songs? List the singers' names.",
                7.559700012207031
            ],
            [
                "What are the names of all singers that have not sung songs?",
                6.711910247802734
            ],
            [
                "List the names of singers who did not win any song",
                6.34584379196167
            ],
            [
                "What are the names of singers who have never sung songs?",
                6.338217735290527
            ],
            [
                "What are the names of singers who have never sung songs?",
                6.338217735290527
            ],
            [
                "What are the names of singers who have never sung songs?",
                6.338217735290527
            ],
            [
                "List the names of singers that are not in any song",
                5.5057291984558105
            ],
            [
                "List the names of singers that are not in any song",
                5.5057291984558105
            ],
            [
                "Find the name of singers who are not in any song",
                4.883951663970947
            ],
            [
                "What are all names of singers who sang songs but not produced any songs?",
                1.2282017469406128
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the first names of all students that are not enrolled in courses?",
                "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
                "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
                "ted": 0.0,
                "db_id": "college_3",
                "query_toks": [
                    "select",
                    "fname",
                    "from",
                    "student",
                    "where",
                    "stuid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "stuid",
                    "from",
                    "enrolled_in",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "fname",
                    "from",
                    "student",
                    "where",
                    "stuid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "stuid",
                    "from",
                    "enrolled_in",
                    ")"
                ]
            },
            {
                "question": "what are the names of people who did not participate in the candidate election.",
                "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
                "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
                "ted": 0.0,
                "db_id": "candidate_poll",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ]
            },
            {
                "question": "Find the titles of all movies that have no ratings.",
                "masked_template": "Find the <mask> of all <mask> that have no <mask>",
                "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
                "ted": 0.0,
                "db_id": "movie_1",
                "query_toks": [
                    "select",
                    "title",
                    "from",
                    "movie",
                    "where",
                    "mid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "mid",
                    "from",
                    "rating",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "title",
                    "from",
                    "movie",
                    "where",
                    "mid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "mid",
                    "from",
                    "rating",
                    ")"
                ]
            },
            {
                "question": "List the name of artworks that are not nominated.",
                "masked_template": "List the name of <mask> that are not <mask>",
                "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
                "ted": 0.0,
                "db_id": "entertainment_awards",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "artwork",
                    "where",
                    "artwork_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "artwork_id",
                    "from",
                    "nomination",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "artwork",
                    "where",
                    "artwork_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "artwork_id",
                    "from",
                    "nomination",
                    ")"
                ]
            },
            {
                "question": "Give the names of people who did not participate in the candidate election.",
                "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
                "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
                "ted": 0.0,
                "db_id": "candidate_poll",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ]
            },
            {
                "question": "What are the famous titles of artists who do not have any volumes?",
                "masked_template": "What are the <mask> of <mask> who do not have any <mask>",
                "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What are the names of all aicrafts that have never won any match?",
                "masked_template": "What are the names of all <mask> that have <mask> won any <mask>",
                "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "Find the name of the courses that do not have any prerequisite?",
                "masked_template": "Find the name of the <mask> that do not have any <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the names of mountains that do not have any climber.",
                "masked_template": "List the names of <mask> that do not have any <mask>",
                "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "List the locations of schools that do not have any player.",
                "masked_template": "List the <mask> of <mask> that do not have any <mask>",
                "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "List the names of people that are not employed by any company",
                "masked_template": "List the names of <mask> that are not <mask> by any <mask>",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "What are the names of counties that do not contain any cities?",
                "masked_template": "What are the names of <mask> that do not <mask> any <mask>",
                "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the names of documents that do not have any sections?",
                "masked_template": "What are the names of <mask> that do not have any <mask>",
                "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "What are the titles of films that do not have a film market estimation?",
                "masked_template": "What are the <mask> of <mask> that do not have a <mask>",
                "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "List the names of members who did not participate in any round.",
                "masked_template": "List the names of <mask> who did not <mask> in any <mask>",
                "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "Which schools do not have any player? Give me the school locations.",
                "masked_template": "Which <mask> do not have any <mask> me the <mask>",
                "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Find the famous titles of artists that do not have any volume.",
                "masked_template": "Find the <mask> of <mask> that do not have any <mask>",
                "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What are the details of the project with no outcomes?",
                "masked_template": "What are the <mask> of the <mask> with no <mask>",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "List the names of buildings that have no company office.",
                "masked_template": "List the names of <mask> that have no <mask>",
                "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "Find all the name of documents without any sections.",
                "masked_template": "Find all the name of <mask> any <mask>",
                "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Which projects have no outcome? List the project details.",
                "masked_template": "Which <mask> have no <mask> List the <mask>",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the titles of all movies that have not been rated?",
                "masked_template": "What are the <mask> of all <mask> that have not <mask>",
                "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "List the names of aircrafts and that did not win any match.",
                "masked_template": "List the names of <mask> and that did not win any <mask>",
                "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What are the titles of courses without prerequisites?",
                "masked_template": "What are the <mask> of <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of instructors who didn't teach?",
                "masked_template": "What are the names of <mask> who <mask>",
                "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of courses without prerequisites?",
                "masked_template": "What are the names of <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the names of products that are not in any event.",
                "masked_template": "List the names of <mask> that are not in any <mask>",
                "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "List the names of people that are not perpetrators.",
                "masked_template": "List the names of <mask> that are not <mask>",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
                "ted": 0.0,
                "db_id": "perpetrator"
            },
            {
                "question": "Find the first name of students not enrolled in any course.",
                "masked_template": "Find the <mask> name of <mask> not <mask> in any <mask>",
                "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "What are all info of students who registered courses but not attended courses?",
                "masked_template": "What are all <mask> of <mask> who <mask> but not <mask>",
                "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
                "ted": 0.0,
                "db_id": "student_assessment"
            }
        ],
        "best_hyp": "What are the names of singers that do not have a song?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of singers who have never sung a song?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> conductor </tab> ) , ordered by ( ( <col> age </col> ) in ascending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of all the conductor in ascending order of age?",
                9.687886238098145
            ],
            [
                "What are all the conductor names in ascending order of age?",
                10.957809448242188
            ],
            [
                "List all the names of the conductor in ascending order of age.",
                10.927104949951172
            ],
            [
                "List all the conductor names in ascending order of age.",
                10.854948043823242
            ],
            [
                "List the names of all conductor in ascending order of age.",
                10.646780967712402
            ],
            [
                "Please list all conductor names in ascending order of age.",
                10.582883834838867
            ],
            [
                "What are the different conductor names in ascending order of age?",
                10.18935489654541
            ],
            [
                "What are the names of the conductor in ascending order of age?",
                10.102520942687988
            ],
            [
                "What are the names of the conductor in ascending order of age?",
                10.102520942687988
            ],
            [
                "What are the names of the conductor in ascending order of age?",
                10.102520942687988
            ],
            [
                "List all conductor names ordered by age in ascending order.",
                10.015003204345703
            ],
            [
                "List the names of the conductor in ascending order of age.",
                9.90070629119873
            ],
            [
                "What are the names of the conductor in ascending order of the age?",
                9.746227264404297
            ],
            [
                "What are the names of all the conductor in ascending order of age?",
                9.68789005279541
            ],
            [
                "What are the names of all the conductor in ascending order of age?",
                9.68789005279541
            ],
            [
                "Show the names of all the conductor in ascending order of age.",
                9.224688529968262
            ],
            [
                "List the names of all the conductor in ascending order of age.",
                8.935479164123535
            ],
            [
                "List the names of all the conductor in ascending order of age.",
                8.935479164123535
            ],
            [
                "List the names of all the conductor in ascending order of age.",
                8.935479164123535
            ],
            [
                "List the names of all the conductor in ascending order of age.",
                8.935479164123535
            ],
            [
                "List the names of all the conductor in ascending order of age.",
                8.935479164123535
            ],
            [
                "List the names of all the conductor in ascending order of age.",
                8.935478210449219
            ],
            [
                "List the conductor names in ascending order of age.",
                8.010512351989746
            ],
            [
                "What are the names of all the conductor ordered by age ascending?",
                7.604045867919922
            ],
            [
                "List the names of the conductor and their age in ascending order of the age.",
                6.941591739654541
            ],
            [
                "Find the names of all the conductor ordered in ascending order of age.",
                3.8838067054748535
            ],
            [
                "Return all the conductor numbers sorted by the age count in ascending order.",
                0.571547269821167
            ],
            [
                "Find the names of all conductor by their 100th birthday in ascending order.",
                -9.07070255279541
            ],
            [
                "Give me a list of all the names of the conductor in ascending order.",
                -11.544365882873535
            ],
            [
                "List in ascending order all different conductor names.",
                -11.90242862701416
            ],
            [
                "What are the names of all the conductor?",
                -11.964507102966309
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are all the album titles, in alphabetical order?",
                "masked_template": "What are all the <mask> in <mask>",
                "query": "SELECT Title FROM ALBUM ORDER BY Title",
                "ted": 0.0,
                "db_id": "chinook_1",
                "query_toks": [
                    "select",
                    "title",
                    "from",
                    "album",
                    "order",
                    "by",
                    "title"
                ],
                "query_toks_no_value": [
                    "select",
                    "title",
                    "from",
                    "album",
                    "order",
                    "by",
                    "title"
                ]
            },
            {
                "question": "List all the name of organizations in order of the date formed.",
                "masked_template": "List all the name of <mask> in order of the <mask>",
                "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
                "ted": 0.0,
                "db_id": "e_government",
                "query_toks": [
                    "select",
                    "organization_name",
                    "from",
                    "organizations",
                    "order",
                    "by",
                    "date_formed",
                    "asc"
                ],
                "query_toks_no_value": [
                    "select",
                    "organization_name",
                    "from",
                    "organizations",
                    "order",
                    "by",
                    "date_formed",
                    "asc"
                ]
            },
            {
                "question": "Sort the customer names in alphabetical order.",
                "masked_template": "<mask> the <mask> names in <mask>",
                "query": "SELECT customer_details FROM customers ORDER BY customer_details",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims",
                "query_toks": [
                    "select",
                    "customer_details",
                    "from",
                    "customers",
                    "order",
                    "by",
                    "customer_details"
                ],
                "query_toks_no_value": [
                    "select",
                    "customer_details",
                    "from",
                    "customers",
                    "order",
                    "by",
                    "customer_details"
                ]
            },
            {
                "question": "List the carriers of devices in ascending alphabetical order.",
                "masked_template": "List the <mask> of <mask> in <mask>",
                "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
                "ted": 0.0,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "carrier",
                    "from",
                    "device",
                    "order",
                    "by",
                    "carrier",
                    "asc"
                ],
                "query_toks_no_value": [
                    "select",
                    "carrier",
                    "from",
                    "device",
                    "order",
                    "by",
                    "carrier",
                    "asc"
                ]
            },
            {
                "question": "Please list all album titles in alphabetical order.",
                "masked_template": "<mask> list all <mask> in <mask>",
                "query": "SELECT Title FROM ALBUM ORDER BY Title",
                "ted": 0.0,
                "db_id": "chinook_1",
                "query_toks": [
                    "select",
                    "title",
                    "from",
                    "album",
                    "order",
                    "by",
                    "title"
                ],
                "query_toks_no_value": [
                    "select",
                    "title",
                    "from",
                    "album",
                    "order",
                    "by",
                    "title"
                ]
            },
            {
                "question": "What are the different dorm amenity names in alphabetical order?",
                "masked_template": "What are the different <mask> names in <mask>",
                "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "What are the first names of the people in alphabetical order?",
                "masked_template": "What are the <mask> names of the <mask> in <mask>",
                "query": "SELECT first_name FROM people ORDER BY first_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the names of the technicians by ascending order of age?",
                "masked_template": "What are the names of the <mask> by <mask> order of <mask>",
                "query": "SELECT Name FROM technician ORDER BY Age ASC",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "What are the names of the courses in alphabetical order?",
                "masked_template": "What are the names of the <mask> in <mask>",
                "query": "SELECT course_name FROM courses ORDER BY course_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "List every album ordered by album title in ascending order.",
                "masked_template": "List <mask> ordered by <mask> in <mask>",
                "query": "SELECT title FROM albums ORDER BY title",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "List the titles of the books in ascending order of issues.",
                "masked_template": "List the <mask> of the <mask> in <mask> order of <mask>",
                "query": "SELECT Title FROM book ORDER BY Issues ASC",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?",
                "masked_template": "What are the names of the <mask> of <mask> in <mask> order of the <mask>",
                "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "What are the names of managers in ascending order of level?",
                "masked_template": "What are the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
                "ted": 0.0,
                "db_id": "railway"
            },
            {
                "question": "What are the names of mountains in ascending alphabetical order?",
                "masked_template": "What are the names of <mask> in <mask>",
                "query": "SELECT Name FROM mountain ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "Show the shop addresses ordered by their opening year.",
                "masked_template": "Show the <mask> ordered by their <mask>",
                "query": "SELECT address FROM shop ORDER BY open_year",
                "ted": 0.0,
                "db_id": "coffee_shop"
            },
            {
                "question": "List the first names of people in alphabetical order?",
                "masked_template": "List the <mask> names of <mask> in <mask>",
                "query": "SELECT first_name FROM people ORDER BY first_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "List the names of roller coasters by ascending order of length.",
                "masked_template": "List the names of <mask> by <mask> order of <mask>",
                "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "List the names of members in ascending alphabetical order.",
                "masked_template": "List the names of <mask> in <mask>",
                "query": "SELECT Name FROM member ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "List the names of pilots in ascending order of rank.",
                "masked_template": "List the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "List the names of all the customers in alphabetical order.",
                "masked_template": "List the names of all the <mask> in <mask>",
                "query": "SELECT customer_details FROM customers ORDER BY customer_details",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims"
            },
            {
                "question": "Give the names of mountains in alphabetical order.",
                "masked_template": "<mask> the names of <mask> in <mask>",
                "query": "SELECT Name FROM mountain ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "Sort the apartment numbers in ascending order of room count.",
                "masked_template": "<mask> the <mask> numbers in <mask> order of <mask>",
                "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
                "masked_template": "What are the names of <mask> ordered by the <mask>",
                "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
                "masked_template": "<mask> the <mask> and <mask> in <mask> order of the <mask>",
                "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Find the first names of all the authors ordered in alphabetical order.",
                "masked_template": "Find the <mask> names of all the <mask> ordered in <mask>",
                "query": "SELECT fname FROM authors ORDER BY fname",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "Return all the apartment numbers sorted by the room count in ascending order.",
                "masked_template": "Return all the <mask> numbers <mask> by the <mask> count in <mask>",
                "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.",
                "masked_template": "Find the names of all <mask> by their 100 <mask> in <mask>",
                "query": "SELECT name FROM swimmer ORDER BY meter_100",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Give me a list of all the last names of authors sorted in alphabetical order",
                "masked_template": "<mask> me a list of all the <mask> names of <mask> in <mask> order",
                "query": "SELECT lname FROM authors ORDER BY lname",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "List in alphabetic order all different amenities.",
                "masked_template": "List in <mask> order all different <mask>",
                "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "What are the titles of all the albums alphabetically ascending?",
                "masked_template": "What are the <mask> of all the <mask>",
                "query": "SELECT title FROM albums ORDER BY title",
                "ted": 0.0,
                "db_id": "store_1"
            }
        ],
        "best_hyp": "What are the different conductor names in ascending order of age?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of all the conductor in ascending order of age?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
        "proc_query": "( <col> year </col> ) that belongs to ( <tab> concert </tab> ) , grouped by ( <col> year </col> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the year that has the most number of concerts?",
                10.88472843170166
            ],
            [
                "What are the years in which the most concerts are held?",
                10.97909164428711
            ],
            [
                "What is the year of the concert with the most number of performances?",
                10.961921691894531
            ],
            [
                "Return the year for which there are the greatest number of concerts.",
                10.870185852050781
            ],
            [
                "Show the year with the most number of concerts.",
                10.769302368164062
            ],
            [
                "What is the most common year for concerts?",
                10.559724807739258
            ],
            [
                "List the year when the most concerts happened.",
                10.295614242553711
            ],
            [
                "Return the year of the concert that is most common.",
                10.28119945526123
            ],
            [
                "What is the year that has the most concerts?",
                10.195470809936523
            ],
            [
                "What is the year that has the most concerts?",
                10.195470809936523
            ],
            [
                "Find the year that is most common for concerts.",
                10.081110000610352
            ],
            [
                "Find the year that has the most concerts.",
                9.950873374938965
            ],
            [
                "Which year has the most concerts?",
                9.66130542755127
            ],
            [
                "Which year has the most concerts?",
                9.66130542755127
            ],
            [
                "What is the year that is most common in music festivals?",
                9.318930625915527
            ],
            [
                "Show the years that have the most concerts.",
                9.143486976623535
            ],
            [
                "What is the name of the year with the most concerts?",
                8.409502983093262
            ],
            [
                "What year is the largest number of concerts?",
                8.397988319396973
            ],
            [
                "What is the name of teh year that has the most concerts?",
                7.738489627838135
            ],
            [
                "List the name of years that have the most number of concerts.",
                7.0719404220581055
            ],
            [
                "List the most common year of concerts",
                6.105180263519287
            ],
            [
                "Show the most common year of the concerts",
                5.808145999908447
            ],
            [
                "What is the id of the year with the most concerts?",
                5.442196846008301
            ],
            [
                "Which year has most number of concerts?",
                5.248053073883057
            ],
            [
                "Which year has most number of concerts?",
                5.248053073883057
            ],
            [
                "Find the year that is the most common in all the years. Tell me its year.",
                4.781660079956055
            ],
            [
                "Show the top 3 most common years of concerts in all years",
                -2.1024680137634277
            ],
            [
                "Find the names of the top 3 years that had the greatest number of concerts.",
                -2.8191890716552734
            ],
            [
                "Show the most common year of concerts in.",
                -3.2673606872558594
            ],
            [
                "Find the year of most of concerts are held in.",
                -6.760817050933838
            ],
            [
                "List the year by the number of concerts.",
                -9.830833435058594
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the three colleges from which the most players are from?",
                "masked_template": "What are the <mask> which the most <mask> are <mask>",
                "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "match_season",
                "query_toks": [
                    "select",
                    "college",
                    "from",
                    "match_season",
                    "group",
                    "by",
                    "college",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "3"
                ],
                "query_toks_no_value": [
                    "select",
                    "college",
                    "from",
                    "match_season",
                    "group",
                    "by",
                    "college",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the code of the city with the most students?",
                "masked_template": "What is the <mask> of the <mask> with the most <mask>",
                "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1",
                "query_toks": [
                    "select",
                    "city_code",
                    "from",
                    "student",
                    "group",
                    "by",
                    "city_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "city_code",
                    "from",
                    "student",
                    "group",
                    "by",
                    "city_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Return the rank for which there are the fewest captains.",
                "masked_template": "Return the <mask> for which there are the <mask>",
                "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "ship_1",
                "query_toks": [
                    "select",
                    "rank",
                    "from",
                    "captain",
                    "group",
                    "by",
                    "rank",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "rank",
                    "from",
                    "captain",
                    "group",
                    "by",
                    "rank",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Show the home city with the most number of drivers.",
                "masked_template": "Show the <mask> with the most number of <mask>",
                "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "school_bus",
                "query_toks": [
                    "select",
                    "home_city",
                    "from",
                    "driver",
                    "group",
                    "by",
                    "home_city",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "home_city",
                    "from",
                    "driver",
                    "group",
                    "by",
                    "home_city",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the most common participant type?",
                "masked_template": "What is the most <mask>",
                "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama",
                "query_toks": [
                    "select",
                    "participant_type_code",
                    "from",
                    "participants",
                    "group",
                    "by",
                    "participant_type_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "participant_type_code",
                    "from",
                    "participants",
                    "group",
                    "by",
                    "participant_type_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "List the industry shared by the most companies.",
                "masked_template": "List the <mask> by the most <mask>",
                "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "Return the code of the document type that is most common.",
                "masked_template": "Return the <mask> of the <mask> that is most <mask>",
                "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "What is the payment method code used by the most orders?",
                "masked_template": "What is the <mask> by the most <mask>",
                "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What is the largest major?",
                "masked_template": "What is the <mask>",
                "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Find the payment method that is used most frequently.",
                "masked_template": "Find the <mask> that is <mask> most <mask>",
                "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "customer_deliveries"
            },
            {
                "question": "Find the country that has the most stadiums.",
                "masked_template": "Find the <mask> that has the most <mask>",
                "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Which location has the most corresponding counties?",
                "masked_template": "Which <mask> has the most <mask>",
                "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Which people severed as governor most frequently?",
                "masked_template": "Which <mask> as <mask> most <mask>",
                "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What is the position that is most common among players in match seasons?",
                "masked_template": "What is the <mask> that is most <mask> in <mask>",
                "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Show the people that have been governor the most times.",
                "masked_template": "Show the <mask> that have <mask> the most <mask>",
                "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What is the name of the deparment with the highest enrollment?",
                "masked_template": "What is the name of the <mask> with the <mask>",
                "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What instrument is used the most?",
                "masked_template": "What <mask> is <mask> the <mask>",
                "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_2"
            },
            {
                "question": "What is the name of teh studio that created the most films?",
                "masked_template": "What is the name of teh <mask> that <mask> the most <mask>",
                "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "List the name of film studio that have the most number of films.",
                "masked_template": "List the name of <mask> that have the most number of <mask>",
                "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "List the most common type of competition.",
                "masked_template": "List the most <mask> of <mask>",
                "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "Show the most frequently used carrier of the phones.",
                "masked_template": "Show the most <mask> of the <mask>",
                "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "What is the id of the event with the most participants?",
                "masked_template": "What is the id of the <mask> with the most <mask>",
                "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama"
            },
            {
                "question": "Which allergy type has most number of allergies?",
                "masked_template": "Which <mask> has most number of <mask>",
                "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Which allergy type is most common?",
                "masked_template": "Which <mask> is most <mask>",
                "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
                "masked_template": "Find the <mask> that is <mask> the most <mask> in all the <mask> me its <mask>",
                "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "Show the top 3 most common colleges of players in match seasons.",
                "masked_template": "Show the top 3 most <mask> of <mask> in <mask>",
                "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Find the names of the top 3 departments that provide the largest amount of courses?",
                "masked_template": "Find the names of the top 3 <mask> that <mask> the <mask> of <mask>",
                "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Show the most common position of players in match seasons.",
                "masked_template": "Show the most <mask> of <mask> in <mask>",
                "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Find the code of city where most of students are living in.",
                "masked_template": "Find the <mask> of <mask> most of <mask> are <mask> in.",
                "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "List the software platform shared by the greatest number of devices.",
                "masked_template": "List the <mask> by the <mask> number of <mask>",
                "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "device"
            }
        ],
        "best_hyp": "Which year has most number of concerts?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the year that has the most number of concerts?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "proc_query": "( the number of ( all items ) ) that belongs to ( <tab> orchestra </tab> ) , that have ( ( ( <col> major record format </col> ) equal to ( <val> DVD </val> ) ) or ( ( <col> major record format </col> ) equal to ( <val> CD </val> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "How many musicians have either DVD or CD as their major record format?",
                10.085909843444824
            ],
            [
                "What is the total number of orchestras that are either in DVD format or CD format?",
                8.386465072631836
            ],
            [
                "What is the total number of musicians whose major record format is DVD or CD?",
                8.259661674499512
            ],
            [
                "Count the number of orchestras that have either DVD or CD format.",
                8.033559799194336
            ],
            [
                "What are the total number of musicians in either DVD format or CD format?",
                7.79213285446167
            ],
            [
                "Find the number of orchestras that have either DVD or CD format.",
                7.639498233795166
            ],
            [
                "Find the number of orchestras that have either DVD or CD format.",
                7.639498233795166
            ],
            [
                "Find the number of orchestras that have either DVD or CD format.",
                7.639498233795166
            ],
            [
                "Show the number of musicians whose major record format is DVD or CD.",
                7.189194679260254
            ],
            [
                "Show the number of musicians whose major record format is DVD or CD.",
                7.189194679260254
            ],
            [
                "Find the number of musicians whose major record format is DVD or CD.",
                6.993657112121582
            ],
            [
                "Find the number of musicians whose major record format is DVD or CD.",
                6.993656158447266
            ],
            [
                "Count the number of orchestras that are either in DVD format or CD format.",
                6.966940879821777
            ],
            [
                "How many orchestras are in either DVD format or CD format?",
                6.830148696899414
            ],
            [
                "Count the number of musicians in either DVD format or CD format.",
                6.778458595275879
            ],
            [
                "How many musicians do we have in DVD format or CD format?",
                6.578961372375488
            ],
            [
                "How many orchestras are in DVD format or CD format?",
                6.270304203033447
            ],
            [
                "How many orchestras are in DVD format or CD format?",
                6.270304203033447
            ],
            [
                "How many orchestras are in DVD format or CD format?",
                6.270304203033447
            ],
            [
                "Count the number of musicians who have major record format DVD or CD.",
                5.685419082641602
            ],
            [
                "Find the number of musicians that are either in DVD format or CD format.",
                4.604618072509766
            ],
            [
                "How many musicians have major record format DVD or CD?",
                3.6802773475646973
            ],
            [
                "How many orchestra albums are either DVD or CD?",
                2.929212808609009
            ],
            [
                "Return the total number of musicians with major record format either DVD or CD.",
                2.2198872566223145
            ],
            [
                "How many orchestras are either in DVD format or CD format?",
                0.13162517547607422
            ],
            [
                "Find the number of musicians ROY has released a DVD or CD.",
                -5.653613090515137
            ],
            [
                "How many orchestras in USA are either DVD or CD players?",
                -8.506004333496094
            ],
            [
                "Show the number of orchestras with major record format either DVD or BK.",
                -10.817098617553711
            ],
            [
                "How many orchestras have either DVD or BK?",
                -10.91867446899414
            ],
            [
                "How many musicians who has a DVD or MAU record?",
                -11.00320816040039
            ],
            [
                "How many musicians ROY has released a DVD or CD?",
                -11.671082496643066
            ]
        ],
        "templates": [
            "",
            {
                "question": "What is the sum of budgets of the Marketing and Finance departments?",
                "masked_template": "What is the sum of <mask> of the <mask> and <mask>",
                "query": "SELECT sum( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'",
                "ted": 0.03571428571428571,
                "db_id": "college_2",
                "query_toks": [
                    "select",
                    "sum",
                    "(",
                    "budget",
                    ")",
                    "from",
                    "department",
                    "where",
                    "dept_name",
                    "=",
                    "\"Marketing\"",
                    "or",
                    "dept_name",
                    "=",
                    "\"Finance\""
                ],
                "query_toks_no_value": [
                    "select",
                    "sum",
                    "(",
                    "budget",
                    ")",
                    "from",
                    "department",
                    "where",
                    "dept_name",
                    "=",
                    "value",
                    "or",
                    "dept_name",
                    "=",
                    "value"
                ]
            },
            {
                "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?",
                "masked_template": "What is the total <mask> of all <mask> whose <mask> is at <mask> or <mask>",
                "query": "SELECT sum( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
                "ted": 0.03571428571428571,
                "db_id": "manufactory_1",
                "query_toks": [
                    "select",
                    "sum",
                    "(",
                    "revenue",
                    ")",
                    "from",
                    "manufacturers",
                    "where",
                    "headquarter",
                    "=",
                    "\"Tokyo\"",
                    "or",
                    "headquarter",
                    "=",
                    "\"Taiwan\""
                ],
                "query_toks_no_value": [
                    "select",
                    "sum",
                    "(",
                    "revenue",
                    ")",
                    "from",
                    "manufacturers",
                    "where",
                    "headquarter",
                    "=",
                    "value",
                    "or",
                    "headquarter",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Count the number of female Professors we have.",
                "masked_template": "Count the number of <mask> we <mask>",
                "query": "SELECT count( * ) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor'",
                "ted": 0.03571428571428571,
                "db_id": "activity_1",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "faculty",
                    "where",
                    "sex",
                    "=",
                    "\"F\"",
                    "and",
                    "rank",
                    "=",
                    "\"Professor\""
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "faculty",
                    "where",
                    "sex",
                    "=",
                    "value",
                    "and",
                    "rank",
                    "=",
                    "value"
                ]
            },
            {
                "question": "What are the total account balances for each customer from Utah or Texas?",
                "masked_template": "What are the total <mask> for each <mask> or <mask>",
                "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
                "ted": 0.03571428571428571,
                "db_id": "loan_1",
                "query_toks": [
                    "select",
                    "sum",
                    "(",
                    "acc_bal",
                    ")",
                    "from",
                    "customer",
                    "where",
                    "state",
                    "=",
                    "\"Utah\"",
                    "or",
                    "state",
                    "=",
                    "\"Texas\""
                ],
                "query_toks_no_value": [
                    "select",
                    "sum",
                    "(",
                    "acc_bal",
                    ")",
                    "from",
                    "customer",
                    "where",
                    "state",
                    "=",
                    "value",
                    "or",
                    "state",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Find the total account balance of each customer from Utah or Texas.",
                "masked_template": "Find the total <mask> of each <mask> or <mask>",
                "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
                "ted": 0.03571428571428571,
                "db_id": "loan_1",
                "query_toks": [
                    "select",
                    "sum",
                    "(",
                    "acc_bal",
                    ")",
                    "from",
                    "customer",
                    "where",
                    "state",
                    "=",
                    "\"Utah\"",
                    "or",
                    "state",
                    "=",
                    "\"Texas\""
                ],
                "query_toks_no_value": [
                    "select",
                    "sum",
                    "(",
                    "acc_bal",
                    ")",
                    "from",
                    "customer",
                    "where",
                    "state",
                    "=",
                    "value",
                    "or",
                    "state",
                    "=",
                    "value"
                ]
            },
            {
                "question": "List the number of invoices from Chicago, IL.",
                "masked_template": "List the number of <mask> IL.",
                "query": "SELECT COUNT( * ) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL'",
                "ted": 0.03571428571428571,
                "db_id": "store_1"
            },
            {
                "question": "Find the total budgets of the Marketing or Finance department.",
                "masked_template": "Find the total <mask> of the <mask> or <mask>",
                "query": "SELECT sum( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'",
                "ted": 0.03571428571428571,
                "db_id": "college_2"
            },
            {
                "question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"",
                "masked_template": "Show the <mask> of the <mask> at <mask> \"TD <mask> or <mask>",
                "query": "SELECT Attendance FROM performance WHERE LOCATION = 'TD Garden' OR LOCATION = 'Bell Centre'",
                "ted": 0.07142857142857142,
                "db_id": "performance_attendance"
            },
            {
                "question": "Show the names of authors from college \"Florida\" or \"Temple\"",
                "masked_template": "Show the names of <mask> or <mask>",
                "query": "SELECT Author FROM submission WHERE College = 'Florida' OR College = 'Temple'",
                "ted": 0.07142857142857142,
                "db_id": "workshop_paper"
            },
            {
                "question": "Find the name of the airports located in Cuba or Argentina.",
                "masked_template": "Find the name of the <mask> in <mask> or <mask>",
                "query": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
                "ted": 0.07142857142857142,
                "db_id": "flight_4"
            },
            {
                "question": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",",
                "masked_template": "Find the number of <mask> whose <mask> is <mask> or <mask>",
                "query": "SELECT count( * ) FROM Companies WHERE Industry = 'Banking' OR Industry = 'Conglomerate'",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "Count the number of players who were born in USA and have bats information 'R'.",
                "masked_template": "Count the number of <mask> who <mask> in USA and have <mask>",
                "query": "SELECT count( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R'",
                "ted": 0.03571428571428571,
                "db_id": "baseball_1"
            },
            {
                "question": "How many students live in HKG or CHI?",
                "masked_template": "How many <mask> in HKG or <mask>",
                "query": "SELECT count( * ) FROM Student WHERE city_code = 'HKG' OR city_code = 'CHI'",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Give the number of students living in either HKG or CHI.",
                "masked_template": "<mask> the number of <mask> in <mask> HKG or <mask>",
                "query": "SELECT count( * ) FROM Student WHERE city_code = 'HKG' OR city_code = 'CHI'",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "How many female Professors do we have?",
                "masked_template": "How many <mask> do we <mask>",
                "query": "SELECT count( * ) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor'",
                "ted": 0.03571428571428571,
                "db_id": "activity_1"
            },
            {
                "question": "How many Professors are in building NEB?",
                "masked_template": "How many <mask> are in <mask>",
                "query": "SELECT count( * ) FROM Faculty WHERE Rank = 'Professor' AND building = 'NEB'",
                "ted": 0.03571428571428571,
                "db_id": "activity_1"
            },
            {
                "question": "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?",
                "masked_template": "How many <mask> are in <mask> or <mask>",
                "query": "SELECT count( * ) FROM Companies WHERE Industry = 'Banking' OR Industry = 'Conglomerate'",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "How many invoices were billed from Chicago, IL?",
                "masked_template": "How many <mask> IL?",
                "query": "SELECT COUNT( * ) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL'",
                "ted": 0.03571428571428571,
                "db_id": "store_1"
            },
            {
                "question": "Count the number of Professors who have office in building NEB.",
                "masked_template": "Count the number of <mask> who have <mask> in <mask>",
                "query": "SELECT count( * ) FROM Faculty WHERE Rank = 'Professor' AND building = 'NEB'",
                "ted": 0.03571428571428571,
                "db_id": "activity_1"
            },
            {
                "question": "Find the number of manufactures that are based in Tokyo or Beijing.",
                "masked_template": "Find the number of <mask> that are <mask> in <mask> or <mask>",
                "query": "SELECT count( * ) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing'",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "How many manufacturers have headquarters in either Tokyo or Beijing?",
                "masked_template": "How many <mask> have <mask> in <mask> or <mask>",
                "query": "SELECT count( * ) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing'",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "How many professors attained either Ph.D. or Masters degrees?",
                "masked_template": "How many <mask> or <mask>",
                "query": "SELECT count( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.",
                "masked_template": "Return the total <mask> of <mask> with <mask> in <mask> or <mask>",
                "query": "SELECT sum( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
                "ted": 0.03571428571428571,
                "db_id": "manufactory_1"
            },
            {
                "question": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?",
                "masked_template": "How many <mask> as <mask> or <mask>",
                "query": "SELECT count( * ) FROM Project_Staff WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54'",
                "ted": 0.03571428571428571,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "Find the number of times ROY SWEAZY has reserved a room.",
                "masked_template": "Find the number of <mask> ROY <mask> has <mask> a <mask>",
                "query": "SELECT count( * ) FROM Reservations WHERE FirstName = 'ROY' AND LastName = 'SWEAZY'",
                "ted": 0.03571428571428571,
                "db_id": "inn_1"
            },
            {
                "question": "How many players born in USA are right-handed batters? That is, have the batter value 'R'.",
                "masked_template": "How many <mask> in USA are <mask> That is, have the <mask>",
                "query": "SELECT count( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R'",
                "ted": 0.03571428571428571,
                "db_id": "baseball_1"
            },
            {
                "question": "Show the number of documents with document type code CV or BK.",
                "masked_template": "Show the number of <mask> with <mask> CV or BK.",
                "query": "SELECT count( * ) FROM All_documents WHERE document_type_code = 'CV' OR document_type_code = 'BK'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "How many documents have document type code CV or BK?",
                "masked_template": "How many <mask> have <mask> CV or BK?",
                "query": "SELECT count( * ) FROM All_documents WHERE document_type_code = 'CV' OR document_type_code = 'BK'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "How many professors who has a either Ph.D. or MA degree?",
                "masked_template": "How many <mask> who has a <mask> or MA <mask>",
                "query": "SELECT count( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "How many times does ROY SWEAZY has reserved a room.",
                "masked_template": "How many <mask> ROY <mask> has <mask> a <mask>",
                "query": "SELECT count( * ) FROM Reservations WHERE FirstName = 'ROY' AND LastName = 'SWEAZY'",
                "ted": 0.03571428571428571,
                "db_id": "inn_1"
            }
        ],
        "best_hyp": "Find the number of musicians whose major record format is DVD or CD.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many musicians have either DVD or CD as their major record format?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT( * ) > 1",
        "proc_query": "( <col> year of founded </col> ) that belongs to ( ( <tab> orchestra </tab> ) , and ( ( <tab> performance </tab> ) satisfied that ( ( <col> orchestra id </col> of <tab> orchestra </tab> ) equal to ( <col> orchestra id </col> of <tab> performance </tab> ) ) ) ) , grouped by ( <col> orchestra id </col> of <tab> performance </tab> ) , that have ( ( the number of ( all items ) ) greater than ( <val> 1 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the year of founded for the orchestra that has performed more than one performance?",
                6.1569037437438965
            ],
            [
                "What are the names of the years when the orchestra was founded for more than one performance?",
                10.179387092590332
            ],
            [
                "What are the names of the years when the orchestra was founded for more than one performance?",
                10.179387092590332
            ],
            [
                "Which orchestras have more than one performance? Tell me the year they were founded.",
                10.018977165222168
            ],
            [
                "Find the year of founded for the orchestra that has performed at least one performance.",
                8.326507568359375
            ],
            [
                "Show the year of founded for the orchestra that has performed more than one performance.",
                8.295038223266602
            ],
            [
                "List the year of founded for the orchestra that has performed more than one performance.",
                8.205390930175781
            ],
            [
                "Find the year of founded for the orchestra that has performed more than one performance.",
                8.085246086120605
            ],
            [
                "Find the year of founded for the orchestra that has performed more than one performance.",
                8.085246086120605
            ],
            [
                "Find the year of founded for the orchestra that has performed more than one performance.",
                8.085246086120605
            ],
            [
                "Find the year of founded for the orchestra that has performed more than one performance.",
                8.085246086120605
            ],
            [
                "Find the year of founded for the orchestra that has performed more than one performance.",
                8.085246086120605
            ],
            [
                "List the year of founded for the orchestra which has performed more than one performance.",
                7.970294952392578
            ],
            [
                "Show the year of founded for orchestras that have performed more than one performance.",
                7.648418426513672
            ],
            [
                "What are the names of the years when more than one orchestra was founded?",
                7.40144681930542
            ],
            [
                "What are the years of founded for all the orchestras that have performed more than one performance?",
                6.24282693862915
            ],
            [
                "What are the names of the years when the orchestra was founded more than once?",
                6.123842239379883
            ],
            [
                "Which musicians are in charge of more than one performance? Tell me their years of founded.",
                5.5801191329956055
            ],
            [
                "Which orchestras have performed more than one performance in year of founded? Return the year.",
                5.553954124450684
            ],
            [
                "What are the names of the years that have more than a single performance of orchestra in one year?",
                4.997255802154541
            ],
            [
                "What are the years of founded for the orchestras that have performed more than one performance?",
                4.77822208404541
            ],
            [
                "What are the years of founded for orchestras that are in performances in more than a single year?",
                4.061028480529785
            ],
            [
                "Show names of orchestras that have more than one performance of some kind in the past.",
                3.1080691814422607
            ],
            [
                "What are the names of the years that have had more than one performance?",
                1.4869779348373413
            ],
            [
                "Show the years of founded in performances at more than one orchestra",
                -6.293583869934082
            ],
            [
                "Show the names of musicians that have more than one performance.",
                -11.122119903564453
            ],
            [
                "What are the names of musicians who have given out more than one performance?",
                -11.468696594238281
            ],
            [
                "Find the names of years that have been founded for more than 60 performances.",
                -11.771439552307129
            ],
            [
                "List years of musicians who have the number of performances bigger than 10.",
                -11.978056907653809
            ],
            [
                "What are the names of all the years that have more than 100 performances?",
                -12.057281494140625
            ],
            [
                "What are the names of the years that have more than 10 performances?",
                -12.10006332397461
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the names of students who have more than one advisor?",
                "masked_template": "What are the names of <mask> who have more than one <mask>",
                "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2",
                "query_toks": [
                    "select",
                    "t1.name",
                    "from",
                    "student",
                    "as",
                    "t1",
                    "join",
                    "advisor",
                    "as",
                    "t2",
                    "on",
                    "t1.id",
                    "=",
                    "t2.s_id",
                    "group",
                    "by",
                    "t2.s_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    "from",
                    "student",
                    "as",
                    "t1",
                    "join",
                    "advisor",
                    "as",
                    "t2",
                    "on",
                    "t1.id",
                    "=",
                    "t2.s_id",
                    "group",
                    "by",
                    "t2.s_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the names of staff who have been assigned multiple jobs?",
                "masked_template": "What are the names of <mask> who have <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "Which schools have more than 1 player? Give me the school locations.",
                "masked_template": "Which <mask> have more than 1 <mask> me the <mask>",
                "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "school_player",
                "query_toks": [
                    "select",
                    "t2.location",
                    "from",
                    "player",
                    "as",
                    "t1",
                    "join",
                    "school",
                    "as",
                    "t2",
                    "on",
                    "t1.school_id",
                    "=",
                    "t2.school_id",
                    "group",
                    "by",
                    "t1.school_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.location",
                    "from",
                    "player",
                    "as",
                    "t1",
                    "join",
                    "school",
                    "as",
                    "t2",
                    "on",
                    "t1.school_id",
                    "=",
                    "t2.school_id",
                    "group",
                    "by",
                    "t1.school_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Find the name of physicians who are in charge of more than one patient.",
                "masked_template": "Find the name of <mask> who are in <mask> of more than one <mask>",
                "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "hospital_1",
                "query_toks": [
                    "select",
                    "t1.name",
                    "from",
                    "physician",
                    "as",
                    "t1",
                    "join",
                    "patient",
                    "as",
                    "t2",
                    "on",
                    "t1.employeeid",
                    "=",
                    "t2.pcp",
                    "group",
                    "by",
                    "t1.employeeid",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    "from",
                    "physician",
                    "as",
                    "t1",
                    "join",
                    "patient",
                    "as",
                    "t2",
                    "on",
                    "t1.employeeid",
                    "=",
                    "t2.pcp",
                    "group",
                    "by",
                    "t1.employeeid",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show the official names of the cities that have hosted more than one competition.",
                "masked_template": "Show the <mask> names of the <mask> that have <mask> more than one <mask>",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "t1.official_name",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "farm_competition",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city_id",
                    "group",
                    "by",
                    "t2.host_city_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.official_name",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "farm_competition",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city_id",
                    "group",
                    "by",
                    "t2.host_city_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "List the name of staff who has been assigned multiple jobs.",
                "masked_template": "List the name of <mask> who has <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "department_store",
                "query_toks": [
                    "select",
                    "t1.staff_name",
                    "from",
                    "staff",
                    "as",
                    "t1",
                    "join",
                    "staff_department_assignments",
                    "as",
                    "t2",
                    "on",
                    "t1.staff_id",
                    "=",
                    "t2.staff_id",
                    "group",
                    "by",
                    "t2.staff_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.staff_name",
                    "from",
                    "staff",
                    "as",
                    "t1",
                    "join",
                    "staff_department_assignments",
                    "as",
                    "t2",
                    "on",
                    "t1.staff_id",
                    "=",
                    "t2.staff_id",
                    "group",
                    "by",
                    "t2.staff_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Find the name of instructors who are advising more than one student.",
                "masked_template": "Find the name of <mask> who are <mask> more than one <mask>",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the name of the ships that have more than one captain.",
                "masked_template": "Find the name of the <mask> that have more than one <mask>",
                "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "Find the names of users who have more than one tweet.",
                "masked_template": "Find the names of <mask> who have more than one <mask>",
                "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "Find the first names of professors who are teaching more than one class.",
                "masked_template": "Find the <mask> names of <mask> who are <mask> more than one <mask>",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Find the name of customers who have more than one loan.",
                "masked_template": "Find the name of <mask> who have more than one <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "List the name of playlist which has number of tracks greater than 100.",
                "masked_template": "List the name of <mask> which has number of <mask> than <mask>",
                "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "Show the locations of schools that have more than 1 player.",
                "masked_template": "Show the <mask> of <mask> that have more than 1 <mask>",
                "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "What are the names of instructors who advise more than one student?",
                "masked_template": "What are the names of <mask> who <mask> more than one <mask>",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the first names of all professors who teach more than one class?",
                "masked_template": "What are the <mask> names of all <mask> who <mask> more than one <mask>",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
                "masked_template": "What are the names of <mask> whose <mask> 60 <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Which physicians are in charge of more than one patient? Give me their names.",
                "masked_template": "Which <mask> are in <mask> of more than one <mask> me their <mask>",
                "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
                "masked_template": "Which <mask> have <mask> more than <mask> in <mask> of <mask> Return the <mask>",
                "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
                "ted": 0.0,
                "db_id": "insurance_fnol"
            },
            {
                "question": "What are the names of shops that have more than a single kind of device in stock?",
                "masked_template": "What are the names of <mask> that have more than a <mask> of <mask> in <mask>",
                "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "What are the official names of cities that have hosted more than one competition?",
                "masked_template": "What are the <mask> names of <mask> that have <mask> more than one <mask>",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "What are the carriers of devices that are in stock in more than a single shop?",
                "masked_template": "What are the <mask> of <mask> that are in <mask> in more than a <mask>",
                "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Show names of shops that have more than one kind of device in stock.",
                "masked_template": "Show names of <mask> that have more than one <mask> of <mask> in <mask>",
                "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "What are the names of ships that have more than one captain?",
                "masked_template": "What are the names of <mask> that have more than one <mask>",
                "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "Show the carriers of devices in stock at more than one shop.",
                "masked_template": "Show the <mask> of <mask> in <mask> at more than one <mask>",
                "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Show the names of countries that have more than one roller coaster.",
                "masked_template": "Show the names of <mask> that have more than one <mask>",
                "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "What are the names of customers who have taken out more than one loan?",
                "masked_template": "What are the names of <mask> who have <mask> out more than one <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Find the names of rooms that have been reserved for more than 60 times.",
                "masked_template": "Find the names of <mask> that have <mask> for more than 60 <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "List title of albums have the number of tracks greater than 10.",
                "masked_template": "List <mask> of <mask> have the number of <mask> than 10.",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the names of all playlists that have more than 100 tracks?",
                "masked_template": "What are the names of all <mask> that have more than 100 <mask>",
                "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the names of the albums that have more than 10 tracks?",
                "masked_template": "What are the names of the <mask> that have more than 10 <mask>",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
                "ted": 0.0,
                "db_id": "store_1"
            }
        ],
        "best_hyp": "What are the names of musicians who have given out more than one performance?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the year of founded for the orchestra that has performed more than one performance?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year < 1948 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1967",
        "proc_query": "( <col> citizenship </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> birth year </col> ) less than ( <val> 1948 </val> ) ), and intersect with ( ( <col> citizenship </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> birth year </col> ) greater than ( <val> 1967 </val> ) ))",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the nations shared by singers who were born before 1948 and singers that were born after 1967?",
                6.631266117095947
            ],
            [
                "Show all the nations shared by singers born before 1948 and singers born after 1967.",
                7.081181049346924
            ],
            [
                "What are the nations shared by singers born before 1948 and singers born after 1967?",
                5.719593048095703
            ],
            [
                "Show the citizenship shared by singers born before 1948 and singers born after 1967",
                5.665075778961182
            ],
            [
                "What are the nationalities of both singers that were born before 1948 and singers who were born after 1967?",
                5.181995868682861
            ],
            [
                "Show the citizenship shared by singers with birth year before 1948 and singers with birthday after 1967",
                5.068202018737793
            ],
            [
                "Which countries have both singers that were born before the year of 1948 and singers that was born after 1967?",
                3.144092559814453
            ],
            [
                "Show the citizenship shared by singers with birth year before 1948 and singers older than 1967",
                2.900512218475342
            ],
            [
                "Show the citizenship of singers that have both birth year before 1948 and singers with birth year after 1967",
                2.588568925857544
            ],
            [
                "Which countries correspond to both singers that are born before 1948 and singers that have a birth year greater than 1967?",
                2.40104603767395
            ],
            [
                "What are the nations that have both singers that are born before 1948 and singers that were born after 1967?",
                2.2821855545043945
            ],
            [
                "Show the nations that have both singers born before 1948 and singers born after 1967.",
                2.046107053756714
            ],
            [
                "Show the nations that have both singers with birth year before 1948 and singers with birthday after 1967",
                1.7334564924240112
            ],
            [
                "What are the nationalities of the singers that have both birth years before 1948 and singers with birth year after 1967?",
                0.9407654404640198
            ],
            [
                "Which countries have both singers born before 1948 and singers born after 1967?",
                -0.9937535524368286
            ],
            [
                "Which countries have both singers born before 1948 and singers born after 1967?",
                -0.9937536120414734
            ],
            [
                "Which country has both singers born before 1948 and singers with birth year after 1967?",
                -2.100126028060913
            ],
            [
                "Which country has both singers born before 1948 and singers born after 1967?",
                -4.339742183685303
            ],
            [
                "Show the country names which are shared by singers born before 1948 and singers born after 1967.",
                -9.402678489685059
            ],
            [
                "Show the nations that have both singers with birth year less than 1948 and singers older than 64.",
                -11.869091987609863
            ],
            [
                "Show the citizenship shared by singers younger than 23 and singers older than 20.",
                -11.98935317993164
            ],
            [
                "Show the nationalities that have both singers of age 50 and singers older than 46.",
                -12.005851745605469
            ],
            [
                "What are the nations that have both singers with more than one birth year and singers with birth year before 1967?",
                -12.05435562133789
            ],
            [
                "Show the nations where singers younger than 30 and singers older than 25 are from.",
                -12.073981285095215
            ],
            [
                "Show the nations that have both singers younger than 45 and singers older than 35.",
                -12.07938289642334
            ],
            [
                "Find the nations have both singers with more than one birth year and singers with less than one birthday.",
                -12.080077171325684
            ],
            [
                "Which countries did both singers younger than 23 and singers older than 20 originate from?",
                -12.085945129394531
            ],
            [
                "Show the nations that have both singers with more than 10 years of birth and singers with less than 3 years of age.",
                -12.086005210876465
            ],
            [
                "Show the nations that have singers with birth year more than 1948 and singers with birthday more than 1967",
                -12.089082717895508
            ],
            [
                "What are the nations with both singers having more than 20 years old and singers older than 10?",
                -12.116361618041992
            ],
            [
                "List all of the ids with a birth year of at least 1948 and an age greater than 85.",
                -12.156761169433594
            ]
        ],
        "templates": [
            "",
            {
                "question": "Show all the locations where some cinemas were opened in both year 2010 and year 2011.",
                "masked_template": "Show all the <mask> in both <mask> and <mask>",
                "query": "SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011",
                "ted": 0.058823529411764705,
                "db_id": "cinema",
                "query_toks": [
                    "select",
                    "location",
                    "from",
                    "cinema",
                    "where",
                    "openning_year",
                    "=",
                    "2010",
                    "intersect",
                    "select",
                    "location",
                    "from",
                    "cinema",
                    "where",
                    "openning_year",
                    "=",
                    "2011"
                ],
                "query_toks_no_value": [
                    "select",
                    "location",
                    "from",
                    "cinema",
                    "where",
                    "openning_year",
                    "=",
                    "value",
                    "intersect",
                    "select",
                    "location",
                    "from",
                    "cinema",
                    "where",
                    "openning_year",
                    "=",
                    "value"
                ]
            },
            {
                "question": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?",
                "masked_template": "What are the <mask> by both <mask> and <mask>",
                "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
                "ted": 0.0,
                "db_id": "school_player",
                "query_toks": [
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    "<",
                    "1890",
                    "intersect",
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    ">",
                    "1900"
                ],
                "query_toks_no_value": [
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    "<",
                    "value",
                    "intersect",
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show the denomination shared by schools founded before 1890 and schools founded after 1900",
                "masked_template": "Show the <mask> by <mask> and <mask>",
                "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
                "ted": 0.0,
                "db_id": "school_player",
                "query_toks": [
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    "<",
                    "1890",
                    "intersect",
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    ">",
                    "1900"
                ],
                "query_toks_no_value": [
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    "<",
                    "value",
                    "intersect",
                    "select",
                    "denomination",
                    "from",
                    "school",
                    "where",
                    "founded",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the positions of both players that have more than 20 20 points and less than 10 points?",
                "masked_template": "What are the <mask> of both <mask> that have more than 20 20 <mask> and <mask> than 10 <mask>",
                "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
                "ted": 0.058823529411764705,
                "db_id": "sports_competition",
                "query_toks": [
                    "select",
                    "position",
                    "from",
                    "player",
                    "where",
                    "points",
                    ">",
                    "20",
                    "intersect",
                    "select",
                    "position",
                    "from",
                    "player",
                    "where",
                    "points",
                    "<",
                    "10"
                ],
                "query_toks_no_value": [
                    "select",
                    "position",
                    "from",
                    "player",
                    "where",
                    "points",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "position",
                    "from",
                    "player",
                    "where",
                    "points",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.",
                "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> with <mask>",
                "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
                "ted": 0.058823529411764705,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "location",
                    "from",
                    "shop",
                    "where",
                    "open_year",
                    ">",
                    "2012",
                    "intersect",
                    "select",
                    "location",
                    "from",
                    "shop",
                    "where",
                    "open_year",
                    "<",
                    "2008"
                ],
                "query_toks_no_value": [
                    "select",
                    "location",
                    "from",
                    "shop",
                    "where",
                    "open_year",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "location",
                    "from",
                    "shop",
                    "where",
                    "open_year",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?",
                "masked_template": "Which <mask> both <mask> that <mask> the <mask> and <mask> that <mask>",
                "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
                "ted": 0.058823529411764705,
                "db_id": "device"
            },
            {
                "question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.",
                "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> than <mask>",
                "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
                "ted": 0.058823529411764705,
                "db_id": "farm"
            },
            {
                "question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.",
                "masked_template": "Show the <mask> of <mask> that have both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
                "ted": 0.058823529411764705,
                "db_id": "ship_mission"
            },
            {
                "question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?",
                "masked_template": "Which <mask> to both <mask> that have a <mask> and <mask> that have a <mask> than <mask>",
                "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
                "ted": 0.058823529411764705,
                "db_id": "farm"
            },
            {
                "question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?",
                "masked_template": "What are the <mask> that have both <mask> that are <mask> than <mask> and <mask> than <mask>",
                "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
                "ted": 0.058823529411764705,
                "db_id": "climbing"
            },
            {
                "question": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.",
                "masked_template": "Show the <mask> that have both <mask> and <mask>",
                "query": "SELECT POSITION FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year > 2005",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000",
                "ted": 0.058823529411764705,
                "db_id": "solvency_ii"
            },
            {
                "question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?",
                "masked_template": "What are the <mask> of the <mask> that have both <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
                "ted": 0.058823529411764705,
                "db_id": "ship_mission"
            },
            {
                "question": "Which nations have both hosts of age above 45 and hosts of age below 35?",
                "masked_template": "Which <mask> have both <mask> of age <mask> 45 and <mask> of age <mask> 35?",
                "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
                "ted": 0.058823529411764705,
                "db_id": "party_host"
            },
            {
                "question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?",
                "masked_template": "Which <mask> names are <mask> in the <mask> with the id 3 and the <mask> with the id 1?",
                "query": "SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1",
                "ted": 0.058823529411764705,
                "db_id": "party_people"
            },
            {
                "question": "Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?",
                "masked_template": "Which <mask> has both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT country FROM stadium WHERE capacity > 60000 INTERSECT SELECT country FROM stadium WHERE capacity < 50000",
                "ted": 0.058823529411764705,
                "db_id": "swimming"
            },
            {
                "question": "Which address has both members younger than 30 and members older than 40?",
                "masked_template": "Which <mask> has both <mask> than 30 and <mask> than 40?",
                "query": "SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40",
                "ted": 0.0,
                "db_id": "coffee_shop"
            },
            {
                "question": "Show the member names which are in both the party with id 3 and the party with id 1.",
                "masked_template": "Show the <mask> names which are in both the <mask> with id 3 and the <mask> with id 1.",
                "query": "SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1",
                "ted": 0.058823529411764705,
                "db_id": "party_people"
            },
            {
                "question": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than 32 and <mask> with <mask> than 64.",
                "query": "SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "Show the hometowns shared by people older than 23 and younger than 20.",
                "masked_template": "Show the <mask> by <mask> than 23 and <mask> than 20.",
                "query": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
                "ted": 0.058823529411764705,
                "db_id": "gymnast"
            },
            {
                "question": "Show the countries that have both managers of age above 50 and managers of age below 46.",
                "masked_template": "Show the <mask> that have both <mask> of age <mask> 50 and <mask> of age <mask> 46.",
                "query": "SELECT Country FROM manager WHERE Age > 50 INTERSECT SELECT Country FROM manager WHERE Age < 46",
                "ted": 0.058823529411764705,
                "db_id": "railway"
            },
            {
                "question": "What are the locations that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?",
                "masked_template": "What are the <mask> that have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000",
                "ted": 0.058823529411764705,
                "db_id": "race_track"
            },
            {
                "question": "Show the country where people older than 30 and younger than 25 are from.",
                "masked_template": "Show the <mask> than 30 and <mask> than 25 are <mask>",
                "query": "SELECT country FROM people WHERE age < 25 INTERSECT SELECT country FROM people WHERE age > 30",
                "ted": 0.0,
                "db_id": "wedding"
            },
            {
                "question": "Show the nations that have both hosts older than 45 and hosts younger than 35.",
                "masked_template": "Show the <mask> that have both <mask> than 45 and <mask> than 35.",
                "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
                "ted": 0.058823529411764705,
                "db_id": "party_host"
            },
            {
                "question": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.",
                "masked_template": "Find the <mask> have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000",
                "ted": 0.058823529411764705,
                "db_id": "race_track"
            },
            {
                "question": "From which hometowns did both people older than 23 and younger than 20 come from?",
                "masked_template": "<mask> which <mask> did both <mask> than 23 and <mask> than 20 <mask>",
                "query": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
                "ted": 0.058823529411764705,
                "db_id": "gymnast"
            },
            {
                "question": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.",
                "masked_template": "Show the <mask> that have both <mask> with more than 10 <mask> of <mask> and <mask> with <mask> than 3 <mask> of <mask>",
                "query": "SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3",
                "ted": 0.058823529411764705,
                "db_id": "news_report"
            },
            {
                "question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.",
                "masked_template": "Show the <mask> that have <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
                "ted": 0.058823529411764705,
                "db_id": "climbing"
            },
            {
                "question": "What are the positions with both players having more than 20 points and less than 10 points.",
                "masked_template": "What are the <mask> with both <mask> having more than 20 <mask> and <mask> than 10 <mask>",
                "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
                "ted": 0.058823529411764705,
                "db_id": "sports_competition"
            },
            {
                "question": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85.",
                "masked_template": "List all of the <mask> ids with a <mask> of at least <mask> and an <mask> than 85.",
                "query": "SELECT player_api_id FROM Player WHERE height >= 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85",
                "ted": 0.029411764705882353,
                "db_id": "soccer_1"
            }
        ],
        "best_hyp": "What are the nations that have both singers that are born before 1948 and singers that were born after 1967?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the nations shared by singers who were born before 1948 and singers that were born after 1967?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
        "proc_query": "( <col> name </col> of <tab> conductor </tab> ) , ( <tab> orchestra </tab> of <tab> orchestra </tab> ) that belongs to ( ( <tab> conductor </tab> ) , and ( ( <tab> orchestra </tab> ) satisfied that ( ( <col> conductor id </col> of <tab> conductor </tab> ) equal to ( <col> conductor id </col> of <tab> orchestra </tab> ) ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of all the music directors and the orchestras they are in?",
                -8.228050231933594
            ],
            [
                "Tell me all the conductor names and the names of the orchestra they are in.",
                10.890850067138672
            ],
            [
                "List all the names of the conductor and the orchestra.",
                9.926164627075195
            ],
            [
                "Tell me the name and orchestra for each conductor.",
                9.391227722167969
            ],
            [
                "What are the names and orchestras of each conductor?",
                9.199895858764648
            ],
            [
                "Tell me the names and orchestras of all the musicians who are in charge of an orchestra.",
                9.162095069885254
            ],
            [
                "What is the name and orchestra of each conductor?",
                8.798027992248535
            ],
            [
                "For each conductor, find the names of the orchestra they are in charge of.",
                8.358969688415527
            ],
            [
                "What are the names of all the musicians who have been a conductor as well as the orchestra id?",
                8.328411102294922
            ],
            [
                "What are the names and orchestras of all the musicians in which they are in charge?",
                7.46651554107666
            ],
            [
                "Show the name of the conductor and the orchestra.",
                7.390852451324463
            ],
            [
                "Find the names of all the musicians who have been in charge of an orchestra and the orchestra names.",
                6.538313388824463
            ],
            [
                "Find the names of all the musicians who have been in charge of an orchestra and the orchestra names.",
                6.538313388824463
            ],
            [
                "Find the name and orchestra name for each conductor.",
                6.450876235961914
            ],
            [
                "Please show the names and the orchestras of all the musicians.",
                5.226653575897217
            ],
            [
                "What are all the names and the orchestras of all the musicians in the orchestra?",
                4.843441486358643
            ],
            [
                "What are the names and orchestras of the musicians that have been a conductor?",
                4.646258354187012
            ],
            [
                "Show names of all the musicians and the names of the orchestra they are in.",
                4.6142191886901855
            ],
            [
                "What are the names and orchestras of all the musicians?",
                4.433917045593262
            ],
            [
                "What are the names and orchestras of all the musicians?",
                4.433917045593262
            ],
            [
                "What are the names of all the musicians who have been a conductor and the orchestra?",
                1.7575290203094482
            ],
            [
                "Return the name and orchestra for all the musicians.",
                0.13574109971523285
            ],
            [
                "Show names and orchestras of all the musicians.",
                -0.004335956182330847
            ],
            [
                "Show the names and orchestras for all the music directors.",
                -0.7134591937065125
            ],
            [
                "Show the names of all the music directors and the orchestra of their works.",
                -3.6517980098724365
            ],
            [
                "what are the name and orchestra name of all the music directors?",
                -3.820464849472046
            ],
            [
                "What are the name and orchestra name of all the music directors?",
                -3.825786828994751
            ],
            [
                "What are the names of all the music directors and their orchestras?",
                -4.207981109619141
            ],
            [
                "What are the ids of all the musicians for the orchestra and what are the names of the musicians?",
                -6.10770845413208
            ],
            [
                "What are the names of all the music directors as well as all the orchestras they are in?",
                -8.1370267868042
            ],
            [
                "What are the names of all the music directors and the orchestras they are in?",
                -8.228048324584961
            ]
        ],
        "templates": [
            "",
            {
                "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
                "masked_template": "<mask> me all the <mask> numbers and <mask> of the <mask> are <mask>",
                "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "t1.store_phone",
                    ",",
                    "t1.store_email_address",
                    "from",
                    "drama_workshop_groups",
                    "as",
                    "t1",
                    "join",
                    "services",
                    "as",
                    "t2",
                    "on",
                    "t1.workshop_group_id",
                    "=",
                    "t2.workshop_group_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.store_phone",
                    ",",
                    "t1.store_email_address",
                    "from",
                    "drama_workshop_groups",
                    "as",
                    "t1",
                    "join",
                    "services",
                    "as",
                    "t2",
                    "on",
                    "t1.workshop_group_id",
                    "=",
                    "t2.workshop_group_id"
                ]
            },
            {
                "question": "List all country and league names.",
                "masked_template": "List all <mask> and <mask>",
                "query": "SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",
                "ted": 0.0,
                "db_id": "soccer_1",
                "query_toks": [
                    "select",
                    "t1.name",
                    ",",
                    "t2.name",
                    "from",
                    "country",
                    "as",
                    "t1",
                    "join",
                    "league",
                    "as",
                    "t2",
                    "on",
                    "t1.id",
                    "=",
                    "t2.country_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    ",",
                    "t2.name",
                    "from",
                    "country",
                    "as",
                    "t1",
                    "join",
                    "league",
                    "as",
                    "t2",
                    "on",
                    "t1.id",
                    "=",
                    "t2.country_id"
                ]
            },
            {
                "question": "Give me the detail and opening hour for each museum.",
                "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
                "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
                "ted": 0.0,
                "db_id": "cre_Theme_park",
                "query_toks": [
                    "select",
                    "t1.museum_details",
                    ",",
                    "t2.opening_hours",
                    "from",
                    "museums",
                    "as",
                    "t1",
                    "join",
                    "tourist_attractions",
                    "as",
                    "t2",
                    "on",
                    "t1.museum_id",
                    "=",
                    "t2.tourist_attraction_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.museum_details",
                    ",",
                    "t2.opening_hours",
                    "from",
                    "museums",
                    "as",
                    "t1",
                    "join",
                    "tourist_attractions",
                    "as",
                    "t2",
                    "on",
                    "t1.museum_id",
                    "=",
                    "t2.tourist_attraction_id"
                ]
            },
            {
                "question": "What are the location and nickname of each school?",
                "masked_template": "What are the <mask> and <mask> of each <mask>",
                "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
                "ted": 0.0,
                "db_id": "school_player",
                "query_toks": [
                    "select",
                    "t1.location",
                    ",",
                    "t2.nickname",
                    "from",
                    "school",
                    "as",
                    "t1",
                    "join",
                    "school_details",
                    "as",
                    "t2",
                    "on",
                    "t1.school_id",
                    "=",
                    "t2.school_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.location",
                    ",",
                    "t2.nickname",
                    "from",
                    "school",
                    "as",
                    "t1",
                    "join",
                    "school_details",
                    "as",
                    "t2",
                    "on",
                    "t1.school_id",
                    "=",
                    "t2.school_id"
                ]
            },
            {
                "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
                "masked_template": "<mask> me the names and <mask> of <mask> which <mask> are <mask>",
                "query": "SELECT T1.name , T2.price_in_dollar FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID",
                "ted": 0.0,
                "db_id": "manufacturer",
                "query_toks": [
                    "select",
                    "t1.name",
                    ",",
                    "t2.price_in_dollar",
                    "from",
                    "furniture",
                    "as",
                    "t1",
                    "join",
                    "furniture_manufacte",
                    "as",
                    "t2",
                    "on",
                    "t1.furniture_id",
                    "=",
                    "t2.furniture_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    ",",
                    "t2.price_in_dollar",
                    "from",
                    "furniture",
                    "as",
                    "t1",
                    "join",
                    "furniture_manufacte",
                    "as",
                    "t2",
                    "on",
                    "t1.furniture_id",
                    "=",
                    "t2.furniture_id"
                ]
            },
            {
                "question": "What is the day Number and date of all the documents?",
                "masked_template": "What is the day Number and <mask> of all the <mask>",
                "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "For each delegate, find the names of the party they are part of.",
                "masked_template": "For each <mask> find the names of the <mask> are <mask> of.",
                "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
                "masked_template": "What are the names of all <mask> who have <mask> a <mask> as <mask> as the <mask> id?",
                "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the phones and emails of workshop groups in which services are performed?",
                "masked_template": "What are the <mask> and <mask> of <mask> in which <mask> are <mask>",
                "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "Show the protein name and the institution name.",
                "masked_template": "Show the <mask> name and the <mask>",
                "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "Find the names of all instructors who have taught some course and the course_id.",
                "masked_template": "Find the names of all <mask> who have <mask> and the <mask>",
                "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the first names of all instructors who have taught some course and the course code.",
                "masked_template": "Find the <mask> names of all <mask> who have <mask> and the <mask>",
                "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Display the first name and department name for each employee.",
                "masked_template": "<mask> the <mask> name and <mask> name for each <mask>",
                "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Please show the names and the players of clubs.",
                "masked_template": "<mask> show the names and the <mask> of <mask>",
                "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
                "masked_template": "What are all the <mask> and the <mask> of all the <mask> in the <mask>",
                "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
                "ted": 0.0,
                "db_id": "assets_maintenance"
            },
            {
                "question": "What are the names and types of the companies that have ever operated a flight?",
                "masked_template": "What are the names and <mask> of the <mask> that have <mask> a <mask>",
                "query": "SELECT T1.name , T1.type FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id",
                "ted": 0.0,
                "db_id": "flight_company"
            },
            {
                "question": "Show white percentages of cities and the crime rates of counties they are in.",
                "masked_template": "Show <mask> of <mask> and the <mask> of <mask> are in.",
                "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the first and last names of all the candidates?",
                "masked_template": "What are the <mask> and <mask> names of all the <mask>",
                "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the names and players of all the clubs?",
                "masked_template": "What are the names and <mask> of all the <mask>",
                "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
                "masked_template": "What are the <mask> names of all <mask> who have <mask> a <mask> and the <mask>",
                "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Return the day Number and stored date for all the documents.",
                "masked_template": "Return the day Number and <mask> for all the <mask>",
                "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "Show locations and nicknames of schools.",
                "masked_template": "Show <mask> and <mask> of <mask>",
                "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Show the premise type and address type code for all customer addresses.",
                "masked_template": "Show the <mask> and <mask> for all <mask>",
                "query": "SELECT T2.premises_type , T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",
                "ted": 0.0,
                "db_id": "customers_campaigns_ecommerce"
            },
            {
                "question": "Show the authors of submissions and the acceptance results of their submissions.",
                "masked_template": "Show the <mask> of <mask> and the <mask> of their <mask>",
                "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "what are the first name and last name of all candidates?",
                "masked_template": "what are the <mask> name and <mask> name of all <mask>",
                "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the first name and department name of all employees?",
                "masked_template": "What are the <mask> name and <mask> name of all <mask>",
                "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Give the names of wrestlers and their elimination moves.",
                "masked_template": "<mask> the names of <mask> and their <mask>",
                "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
                "ted": 0.0,
                "db_id": "wrestler"
            },
            {
                "question": "What are the ids of all students for courses and what are the names of those courses?",
                "masked_template": "What are the ids of all <mask> for <mask> and what are the names of <mask>",
                "query": "SELECT T1.student_id , T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the names of cities, as well as the names of the counties they correspond to?",
                "masked_template": "What are the names of <mask> as <mask> as the names of the <mask> to?",
                "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
                "masked_template": "What are the <mask> of <mask> and the <mask> of the <mask> to?",
                "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "ted": 0.0,
                "db_id": "county_public_safety"
            }
        ],
        "best_hyp": "For each conductor, find the names of the orchestra they are in charge of.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of all the music directors and the orchestras they are in?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "proc_query": "( <col> name </col> ) , ( <col> country </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> song name </col> ) like ( <val> %Hey% </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names and countries of singers whose song name contains the word \"Hey\"?",
                10.711187362670898
            ],
            [
                "What are the names and countries of the singers whose song name contains the word \"Hey\"?",
                10.950217247009277
            ],
            [
                "What are the names and countries of singers whose song name contains the word \"Hey\"?",
                10.711187362670898
            ],
            [
                "Find the name and country of origin of the singers whose name has the substring \"Hey\".",
                10.588489532470703
            ],
            [
                "Show the names and countries of singers whose song name contains the word \"Hey\".",
                10.572249412536621
            ],
            [
                "What are the names and countries of singers whose songs contain the word \"Hey\"?",
                10.464092254638672
            ],
            [
                "Show the names and countries of singers whose song name contains the string \"Hey\".",
                10.42307186126709
            ],
            [
                "Return the names and countries of singers whose song name contains the word \"Hey\".",
                10.4216947555542
            ],
            [
                "What is the name and country of origin of singers whose song name contains the word \"Hey\"?",
                10.341348648071289
            ],
            [
                "Find the name and country of the singers that are famous for songs that contain the word \"Hey\".",
                10.335028648376465
            ],
            [
                "What are the names and countries of origin for all singers who have a name of Hey?",
                10.180486679077148
            ],
            [
                "Find the name and country of the singers whose name contains the word \"Hey\".",
                10.15369701385498
            ],
            [
                "What are the names and countries of countries that have produced songs by a singer whose name contains \"Hey\"?",
                9.699756622314453
            ],
            [
                "List the names and countries of singers who sang songs that contain the word \"Hey\".",
                9.680891990661621
            ],
            [
                "Return the name and country of origin for singers in the song \"Hey\".",
                8.966934204101562
            ],
            [
                "What is the name and country of origin of the singers with name \"Hey\"?",
                8.765623092651367
            ],
            [
                "Find all singers that have \"Hey\" in their names. List the name and country.",
                6.99824857711792
            ],
            [
                "What is the id and country of origin of the singers whose song contains the word \"Hey\"?",
                5.6174163818359375
            ],
            [
                "List names and countries of singers whose song name starts with the word \"Hey\".",
                4.032360076904297
            ],
            [
                "What is the name and country of origin for the singers whose name as the letter \"Hey\" appears in it?",
                3.2315313816070557
            ],
            [
                "Which song name has the substring \"Hey\"? List the id and country.",
                1.689210057258606
            ],
            [
                "What are the names and countries of origin for singers that do not have the word \"Hey\"?",
                -7.8288655281066895
            ],
            [
                "List the name and country for singers whose song name is not \"Hey\".",
                -8.906137466430664
            ],
            [
                "Show all singers' names and the countries they are from.",
                -10.532332420349121
            ],
            [
                "What are the names and countries of singers with the letter a in their names?",
                -10.672012329101562
            ],
            [
                "Who are the singers who sang the song \"Hey\"?",
                -10.819694519042969
            ],
            [
                "Show the names and countries for all singers not in song \"Hey\".",
                -10.877891540527344
            ],
            [
                "Return the names and countries of singers who have TN in their names.",
                -11.732290267944336
            ],
            [
                "What are the names and countries of all the singers that have songs with 4.\\",
                -11.854055404663086
            ],
            [
                "Find all 200 and 300 names of singers with song name \"Hey\".",
                -12.031228065490723
            ],
            [
                "Find the name and country of origin of all singers with song name with 4.",
                -12.103673934936523
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
                "masked_template": "What are the names and <mask> names of the <mask> which has <mask> in the FDA <mask>",
                "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
                "ted": 0.1,
                "db_id": "medicine_enzyme_interaction",
                "query_toks": [
                    "select",
                    "name",
                    ",",
                    "trade_name",
                    "from",
                    "medicine",
                    "where",
                    "fda_approved",
                    "=",
                    "\"Yes\""
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    ",",
                    "trade_name",
                    "from",
                    "medicine",
                    "where",
                    "fda_approved",
                    "=",
                    "value"
                ]
            },
            {
                "question": "What are the phone and email for customer Harold?",
                "masked_template": "What are the <mask> and <mask> for <mask>",
                "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
                "ted": 0.1,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "customer_phone",
                    ",",
                    "customer_email_address",
                    "from",
                    "customers",
                    "where",
                    "customer_name",
                    "=",
                    "\"Harold\""
                ],
                "query_toks_no_value": [
                    "select",
                    "customer_phone",
                    ",",
                    "customer_email_address",
                    "from",
                    "customers",
                    "where",
                    "customer_name",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.",
                "masked_template": "Find the <mask> and <mask> of the <mask> whose name has <mask>",
                "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
                "ted": 0.0,
                "db_id": "dorm_1",
                "query_toks": [
                    "select",
                    "student_capacity",
                    ",",
                    "gender",
                    "from",
                    "dorm",
                    "where",
                    "dorm_name",
                    "like",
                    "\"%Donor%\""
                ],
                "query_toks_no_value": [
                    "select",
                    "student_capacity",
                    ",",
                    "gender",
                    "from",
                    "dorm",
                    "where",
                    "dorm_name",
                    "like",
                    "value"
                ]
            },
            {
                "question": "Show the id and salary of Mark Young.",
                "masked_template": "Show the id and <mask> of <mask>",
                "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
                "ted": 0.1,
                "db_id": "flight_1",
                "query_toks": [
                    "select",
                    "eid",
                    ",",
                    "salary",
                    "from",
                    "employee",
                    "where",
                    "name",
                    "=",
                    "\"Mark Young\""
                ],
                "query_toks_no_value": [
                    "select",
                    "eid",
                    ",",
                    "salary",
                    "from",
                    "employee",
                    "where",
                    "name",
                    "=",
                    "value"
                ]
            },
            {
                "question": "What are the names and ids of customers whose address contains TN?",
                "masked_template": "What are the names and ids of <mask> whose <mask> TN?",
                "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
                "ted": 0.0,
                "db_id": "department_store",
                "query_toks": [
                    "select",
                    "customer_name",
                    ",",
                    "customer_id",
                    "from",
                    "customers",
                    "where",
                    "customer_address",
                    "like",
                    "\"%TN%\""
                ],
                "query_toks_no_value": [
                    "select",
                    "customer_name",
                    ",",
                    "customer_id",
                    "from",
                    "customers",
                    "where",
                    "customer_address",
                    "like",
                    "value"
                ]
            },
            {
                "question": "Show the lieutenant governor and comptroller from the democratic party.",
                "masked_template": "Show the <mask> and <mask> the <mask>",
                "query": "SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = 'Democratic'",
                "ted": 0.1,
                "db_id": "election"
            },
            {
                "question": "Return the category code and typical price of 'cumin'.",
                "masked_template": "Return the <mask> and <mask> of <mask>",
                "query": "SELECT product_category_code , typical_buying_price FROM products WHERE product_name = 'cumin'",
                "ted": 0.1,
                "db_id": "products_gen_characteristics"
            },
            {
                "question": "What is the product category description and unit of measurement of category \"Herbs\"?",
                "masked_template": "What is the <mask> and <mask> of <mask> of <mask>",
                "query": "SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
                "ted": 0.1,
                "db_id": "products_gen_characteristics"
            },
            {
                "question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".",
                "masked_template": "Find the <mask> and <mask> of the <mask> that are <mask> by <mask> that <mask> the <mask>",
                "query": "SELECT title , Studio FROM film WHERE Studio LIKE '%Universal%'",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What are the email addresses and date of births for all customers who have a first name of Carole?",
                "masked_template": "What are the <mask> and <mask> of <mask> for all <mask> who have a <mask> name of <mask>",
                "query": "SELECT email_address , date_of_birth FROM Customers WHERE first_name = 'Carole'",
                "ted": 0.1,
                "db_id": "driving_school"
            },
            {
                "question": "Find the name and email of the user whose name contains the word \u2018Swift\u2019.",
                "masked_template": "Find the name and <mask> of the <mask> whose name <mask> the <mask>",
                "query": "SELECT name , email FROM user_profiles WHERE name LIKE '%Swift%'",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?",
                "masked_template": "What are the <mask> and <mask> of <mask> that have <mask> by a <mask> whose name <mask>",
                "query": "SELECT title , Studio FROM film WHERE Studio LIKE '%Universal%'",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "List the names and emails of customers who payed by Visa card.",
                "masked_template": "List the names and <mask> of <mask> who <mask> by <mask>",
                "query": "SELECT customer_email , customer_name FROM customers WHERE payment_method = 'Visa'",
                "ted": 0.1,
                "db_id": "customer_deliveries"
            },
            {
                "question": "Return the description and unit of measurement for products in the 'Herbs' category.",
                "masked_template": "Return the <mask> and <mask> of <mask> for <mask> in the <mask>",
                "query": "SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
                "ted": 0.1,
                "db_id": "products_gen_characteristics"
            },
            {
                "question": "What is the category and typical buying price  of the product with name \"cumin\"?",
                "masked_template": "What is the <mask> and <mask> of the <mask> with name <mask>",
                "query": "SELECT product_category_code , typical_buying_price FROM products WHERE product_name = 'cumin'",
                "ted": 0.1,
                "db_id": "products_gen_characteristics"
            },
            {
                "question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.",
                "masked_template": "Find all <mask> that have <mask> in their <mask> List the <mask> name and <mask>",
                "query": "SELECT Hardware_Model_name , Company_name FROM phone WHERE Accreditation_type LIKE 'Full'",
                "ted": 0.0,
                "db_id": "phone_1"
            },
            {
                "question": "What is the id and market share of the browser Safari?",
                "masked_template": "What is the id and <mask> of the <mask>",
                "query": "SELECT id , market_share FROM browser WHERE name = 'Safari'",
                "ted": 0.1,
                "db_id": "browser_web"
            },
            {
                "question": "List email address and birthday of customer whose first name as Carole.",
                "masked_template": "List <mask> and <mask> of <mask> whose <mask> name as <mask>",
                "query": "SELECT email_address , date_of_birth FROM Customers WHERE first_name = 'Carole'",
                "ted": 0.1,
                "db_id": "driving_school"
            },
            {
                "question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?",
                "masked_template": "What is the <mask> and <mask> of <mask> for the <mask> whose name as the <mask> in it?",
                "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Which head's name has the substring 'Ha'? List the id and name.",
                "masked_template": "Which <mask> name has the <mask> List the id and <mask>",
                "query": "SELECT head_id , name FROM head WHERE name LIKE '%Ha%'",
                "ted": 0.0,
                "db_id": "department_management"
            },
            {
                "question": "What are the names and year of joining for artists that do not have the country \"United States\"?",
                "masked_template": "What are the names and <mask> of <mask> for <mask> that do not have the <mask>",
                "query": "SELECT name , year_join FROM artist WHERE country != 'United States'",
                "ted": 0.1,
                "db_id": "theme_gallery"
            },
            {
                "question": "List the name and residence for players whose occupation is not \"Researcher\".",
                "masked_template": "List the name and <mask> for <mask> whose <mask> is not <mask>",
                "query": "SELECT Player_name , residence FROM player WHERE Occupation != 'Researcher'",
                "ted": 0.1,
                "db_id": "riding_club"
            },
            {
                "question": "Show all artist names and the year joined who are not from United States.",
                "masked_template": "Show all <mask> names and the <mask> who are not <mask>",
                "query": "SELECT name , year_join FROM artist WHERE country != 'United States'",
                "ted": 0.1,
                "db_id": "theme_gallery"
            },
            {
                "question": "What are the names and account balances of customers with the letter a in their names?",
                "masked_template": "What are the names and <mask> of <mask> with the <mask> a in their <mask>",
                "query": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Who are the lieutenant governor and comptroller from the democratic party?",
                "masked_template": "Who are the <mask> and <mask> the <mask>",
                "query": "SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = 'Democratic'",
                "ted": 0.1,
                "db_id": "election"
            },
            {
                "question": "Show the names and total passengers for all train stations not in London.",
                "masked_template": "Show the names and total <mask> for all <mask> not in <mask>",
                "query": "SELECT name , total_passengers FROM station WHERE LOCATION != 'London'",
                "ted": 0.1,
                "db_id": "train_station"
            },
            {
                "question": "Return the names and ids of customers who have TN in their address.",
                "masked_template": "Return the names and ids of <mask> who have TN in their <mask>",
                "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What are the state and country of all the cities that have post codes starting with 4.\\",
                "masked_template": "What are the <mask> and <mask> of all the <mask> that have <mask> with 4.\\",
                "query": "SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE '4%'",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".",
                "masked_template": "Find all 200 <mask> and 300 <mask> of <mask> with <mask>",
                "query": "SELECT meter_200 , meter_300 FROM swimmer WHERE nationality = 'Australia'",
                "ted": 0.1,
                "db_id": "swimming"
            },
            {
                "question": "Find the state and country of all cities with post code starting with 4.",
                "masked_template": "Find the <mask> and <mask> of all <mask> with <mask> with 4.",
                "query": "SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE '4%'",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            }
        ],
        "best_hyp": "Return the names and countries of singers who have TN in their names.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names and countries of singers whose song name contains the word \"Hey\"?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "proc_query": "( <col> record company </col> ) that belongs to ( <tab> orchestra </tab> ) , ordered by ( ( <col> year of founded </col> ) in descending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the record companies of the orchestra in descending order of founded year?",
                9.22077465057373
            ],
            [
                "What are the record companies of all the orchestras in the descending order of founded year?",
                11.02754020690918
            ],
            [
                "What are the names of all the record companies in descending order of the year they were founded?",
                10.28856086730957
            ],
            [
                "What are the names of the record companies of the orchestra ordered by year of founded?",
                10.054737091064453
            ],
            [
                "Show the record companies of orchestras in descending order of their founded year.",
                9.928818702697754
            ],
            [
                "List the record company of the orchestra in descending order of founded year.",
                9.8075590133667
            ],
            [
                "What are the names of all the record companies ordered in descending order of founded year?",
                9.427014350891113
            ],
            [
                "Give me a list of all the record company names founded by the orchestra in descending order.",
                9.406908988952637
            ],
            [
                "List the names of all record companies in descending order of founded year.",
                9.386899948120117
            ],
            [
                "What are the record companies of the orchestra in descending order of founded year?",
                9.220775604248047
            ],
            [
                "Find the names of all record companies in the descending order of founded year.",
                8.205180168151855
            ],
            [
                "What are the names of the record companies in descending order of founded year?",
                7.907027244567871
            ],
            [
                "What are the names of the record companies in descending order of founded year?",
                7.907026767730713
            ],
            [
                "What are the names of the record companies ordered by year of founded?",
                7.098123550415039
            ],
            [
                "List the record company names in descending order of the year founded.",
                7.058722019195557
            ],
            [
                "What are the names of all the music companies in descending order of the year they were founded?",
                6.921088218688965
            ],
            [
                "Find the name of the record company in the descending order of founded year.",
                6.647486686706543
            ],
            [
                "List the names of record companies in descending order of founded year.",
                6.554458141326904
            ],
            [
                "Show the name of record companies in descending order of founded year.",
                6.527358531951904
            ],
            [
                "List the name of record companies in descending order of founded year.",
                6.403985023498535
            ],
            [
                "What are the names of record companies ordered by year of founded?",
                5.773138523101807
            ],
            [
                "Show the record companies of orchestra in descending order of founded year.",
                4.554742813110352
            ],
            [
                "What are the names of all the record companies in the order of founded year?",
                4.523991107940674
            ],
            [
                "List the record companies of all music artists in the order of their founded year in the most recent year.",
                1.157828688621521
            ],
            [
                "List all orchestra names ordered by their founded year in descending order.",
                0.19128280878067017
            ],
            [
                "List all orchestra names by their founding year from oldest to youngest.",
                -3.6257095336914062
            ],
            [
                "List all orchestra names in descending order of founded year.",
                -5.082648277282715
            ],
            [
                "List all the orchestra names by the most recent year of founded.",
                -5.476442337036133
            ],
            [
                "Return the record company for orchestra ordered by age.",
                -9.470218658447266
            ],
            [
                "List names of all music record companies in the descending order of the year of founded.",
                -11.639436721801758
            ],
            [
                "Find all music record companies founded in descending order of year of founded.",
                -11.672203063964844
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
                "masked_template": "What are the <mask> of all the <mask> in the <mask> order of <mask>",
                "query": "SELECT venue FROM MATCH ORDER BY date DESC",
                "ted": 0.0,
                "db_id": "city_record",
                "query_toks": [
                    "select",
                    "venue",
                    "from",
                    "match",
                    "order",
                    "by",
                    "date",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "venue",
                    "from",
                    "match",
                    "order",
                    "by",
                    "date",
                    "desc"
                ]
            },
            {
                "question": "What are the names of captains, sorted by age descending?",
                "masked_template": "What are the names of <mask> by age <mask>",
                "query": "SELECT name FROM captain ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "ship_1",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "captain",
                    "order",
                    "by",
                    "age",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "captain",
                    "order",
                    "by",
                    "age",
                    "desc"
                ]
            },
            {
                "question": "What are the names of the counties of public safety, ordered by population descending?",
                "masked_template": "What are the names of the <mask> of <mask> ordered by <mask>",
                "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "county_public_safety",
                    "order",
                    "by",
                    "population",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "county_public_safety",
                    "order",
                    "by",
                    "population",
                    "desc"
                ]
            },
            {
                "question": "Show the working years of managers in descending order of their level.",
                "masked_template": "Show the <mask> of <mask> in <mask> order of their <mask>",
                "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
                "ted": 0.0,
                "db_id": "railway",
                "query_toks": [
                    "select",
                    "working_year_starts",
                    "from",
                    "manager",
                    "order",
                    "by",
                    "level",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "working_year_starts",
                    "from",
                    "manager",
                    "order",
                    "by",
                    "level",
                    "desc"
                ]
            },
            {
                "question": "List the votes of elections in descending order.",
                "masked_template": "List the <mask> of <mask> in <mask>",
                "query": "SELECT Votes FROM election ORDER BY Votes DESC",
                "ted": 0.0,
                "db_id": "election_representative",
                "query_toks": [
                    "select",
                    "votes",
                    "from",
                    "election",
                    "order",
                    "by",
                    "votes",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "votes",
                    "from",
                    "election",
                    "order",
                    "by",
                    "votes",
                    "desc"
                ]
            },
            {
                "question": "What are the names of all the clubs ordered in descending alphabetical order?",
                "masked_template": "What are the names of all the <mask> ordered in <mask>",
                "query": "SELECT name FROM club ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
                "masked_template": "<mask> me a list of all the <mask> names <mask> by the <mask> in <mask>",
                "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "Sort the names of all counties in descending alphabetical order.",
                "masked_template": "<mask> the names of all <mask> in <mask>",
                "query": "SELECT County_name FROM county ORDER BY County_name DESC",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What are the characters of actors in descending order of age?",
                "masked_template": "What are the <mask> of <mask> in <mask> order of <mask>",
                "query": "SELECT Character FROM actor ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "Find the names of all person sorted in the descending order using age.",
                "masked_template": "Find the names of all <mask> in the <mask> order <mask>",
                "query": "SELECT name FROM Person ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "What are the names of enzymes in descending order?",
                "masked_template": "What are the names of <mask> in <mask>",
                "query": "SELECT name FROM enzyme ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What are the names of buildings sorted in descending order of building height?",
                "masked_template": "What are the names of <mask> in <mask> order of <mask>",
                "query": "SELECT name FROM buildings ORDER BY Height DESC",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What are the names of the wrestlers, ordered descending by days held?",
                "masked_template": "What are the names of the <mask> ordered <mask> by <mask>",
                "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
                "ted": 0.0,
                "db_id": "wrestler"
            },
            {
                "question": "Sort the company names in descending order of the company's market value.",
                "masked_template": "<mask> the <mask> names in <mask> order of the <mask>",
                "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What are the names of everybody sorted by age in descending order?",
                "masked_template": "What are the names of <mask> by age in <mask>",
                "query": "SELECT name FROM Person ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "Find the first name of students in the descending order of age.",
                "masked_template": "Find the <mask> name of <mask> in the <mask> order of <mask>",
                "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "List the names of counties in descending order of population.",
                "masked_template": "List the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Show the name of drivers in descending order of age.",
                "masked_template": "Show the name of <mask> in <mask> order of <mask>",
                "query": "SELECT name FROM driver ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "school_bus"
            },
            {
                "question": "List the name of enzymes in descending lexicographical order.",
                "masked_template": "List the name of <mask> in <mask>",
                "query": "SELECT name FROM enzyme ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What are the case burdens of counties, ordered descending by population?",
                "masked_template": "What are the <mask> of <mask> ordered <mask> by <mask>",
                "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Show the case burden of counties in descending order of population.",
                "masked_template": "Show the <mask> of <mask> in <mask> order of <mask>",
                "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
                "masked_template": "What are the names of all the <mask> in the <mask> by all <mask> in <mask>",
                "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
                "ted": 0.0,
                "db_id": "university_basketball"
            },
            {
                "question": "List venues of all matches in the order of their dates starting from the most recent one.",
                "masked_template": "List <mask> of all <mask> in the order of their <mask> the most <mask>",
                "query": "SELECT venue FROM MATCH ORDER BY date DESC",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "List all channel names ordered by their rating in percent from big to small.",
                "masked_template": "List all <mask> names ordered by their <mask> in <mask> big to <mask>",
                "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "Sort all captain names by their ages from old to young.",
                "masked_template": "<mask> all <mask> names by their <mask> old to <mask>",
                "query": "SELECT name FROM captain ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "List all club names in descending alphabetical order.",
                "masked_template": "List all <mask> names in <mask>",
                "query": "SELECT name FROM club ORDER BY name DESC",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "List all the event names by year from the most recent to the oldest.",
                "masked_template": "List all the <mask> names by <mask> the most <mask> to the <mask>",
                "query": "SELECT name FROM event ORDER BY YEAR DESC",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Return the characters for actors, ordered by age descending.",
                "masked_template": "Return the <mask> for <mask> ordered by age <mask>",
                "query": "SELECT Character FROM actor ORDER BY age DESC",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
                "masked_template": "List names of all <mask> in the <mask> ordered by all <mask> in <mask>",
                "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
                "ted": 0.0,
                "db_id": "university_basketball"
            },
            {
                "question": "Find all information about student addresses, and sort by monthly rental in descending order.",
                "masked_template": "Find all <mask> and <mask> by <mask> in <mask>",
                "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            }
        ],
        "best_hyp": "What are the names of the record companies ordered by year of founded?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the record companies of the orchestra in descending order of founded year?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> conductor </tab> ) , that have ( ( <col> nationality </col> ) not equal to ( <val> France </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of all the conductor who are not from France?",
                9.8348970413208
            ],
            [
                "What are the names of all the musicians whose nationality is not France?",
                9.860493659973145
            ],
            [
                "Return the names of all conductor who are not from France.",
                9.364873886108398
            ],
            [
                "What is the name of the conductor whose nationality is not France?",
                8.548294067382812
            ],
            [
                "Return the names of the conductor that do not have France as their nationality.",
                8.397065162658691
            ],
            [
                "What are the names of the conductor whose nationality is not France?",
                8.39427375793457
            ],
            [
                "What are the names of the conductor whose nationality is not France?",
                8.39427375793457
            ],
            [
                "What are the names of the conductor whose nationality is not France?",
                8.39427375793457
            ],
            [
                "What are the names of the conductor whose nationality is not France?",
                8.39427375793457
            ],
            [
                "What are the names of the conductor whose nationality is not France?",
                8.39427375793457
            ],
            [
                "What are the names of the conductor who are not from France?",
                8.213401794433594
            ],
            [
                "What are the names of the conductor who are not from France?",
                8.213400840759277
            ],
            [
                "What are the names of all the musicians who are not from France?",
                8.100110054016113
            ],
            [
                "What are the names of the conductor that are not from France?",
                7.887839317321777
            ],
            [
                "find the names of the conductor whose nationality is not France.",
                7.438110828399658
            ],
            [
                "Find the names of the conductor whose nationality are not France.",
                7.419029235839844
            ],
            [
                "What are the names of the conductor that do not have the nationality France?",
                6.219464302062988
            ],
            [
                "List the name of conductor whose nationality is not France.",
                5.702320575714111
            ],
            [
                "Return the names of conductor for which the nationality is not France.",
                5.333565711975098
            ],
            [
                "Show the names of conductor whose nationality are not France.",
                5.265052795410156
            ],
            [
                "List the names of conductor whose nationality is not France.",
                5.174227714538574
            ],
            [
                "Which conductor are not from France? Tell me their names.",
                4.75656270980835
            ],
            [
                "Show the names of conductor that are not from France.",
                4.54283332824707
            ],
            [
                "Show all conductor names who do not belong to France",
                4.254739761352539
            ],
            [
                "Find the names of conductor that are not from France.",
                3.9395830631256104
            ],
            [
                "What is the name of the conductor who do not have nationality as France?",
                3.0712318420410156
            ],
            [
                "Which conductor are not from France? Tell me the name.",
                2.734143018722534
            ],
            [
                "List the names for each conductor that does not have nationality as France",
                -0.7494078874588013
            ],
            [
                "Which conductor are not from France?",
                -1.525852918624878
            ],
            [
                "Find the name of the conductor who did not pay with France dollars.",
                -7.224349498748779
            ],
            [
                "Show names for all music conductor from France.",
                -12.014371871948242
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
                "masked_template": "What are the <mask> of <mask> whose <mask> are not <mask>",
                "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
                "ted": 0.0,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "carrier",
                    "from",
                    "device",
                    "where",
                    "software_platform",
                    "!=",
                    "\"Android\""
                ],
                "query_toks_no_value": [
                    "select",
                    "carrier",
                    "from",
                    "device",
                    "where",
                    "software_platform",
                    "!=",
                    "value"
                ]
            },
            {
                "question": "Return the names of all regions other than Denmark.",
                "masked_template": "Return the names of all <mask> than <mask>",
                "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
                "ted": 0.0,
                "db_id": "storm_record",
                "query_toks": [
                    "select",
                    "region_name",
                    "from",
                    "region",
                    "where",
                    "region_name",
                    "!=",
                    "\"Denmark\""
                ],
                "query_toks_no_value": [
                    "select",
                    "region_name",
                    "from",
                    "region",
                    "where",
                    "region_name",
                    "!=",
                    "value"
                ]
            },
            {
                "question": "What is the name of the technician whose team is not 'NYY'?",
                "masked_template": "What is the name of the <mask> whose <mask> is not <mask>",
                "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
                "ted": 0.0,
                "db_id": "machine_repair",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "technician",
                    "where",
                    "team",
                    "!=",
                    "\"NYY\""
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "technician",
                    "where",
                    "team",
                    "!=",
                    "value"
                ]
            },
            {
                "question": "Return the device carriers that do not have Android as their software platform.",
                "masked_template": "Return the <mask> that do not have <mask> as their <mask>",
                "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
                "ted": 0.0,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "carrier",
                    "from",
                    "device",
                    "where",
                    "software_platform",
                    "!=",
                    "\"Android\""
                ],
                "query_toks_no_value": [
                    "select",
                    "carrier",
                    "from",
                    "device",
                    "where",
                    "software_platform",
                    "!=",
                    "value"
                ]
            },
            {
                "question": "What are the names of companies whose headquarters are not \"USA\"?",
                "masked_template": "What are the names of <mask> whose <mask> are not <mask>",
                "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
                "ted": 0.0,
                "db_id": "company_office",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "companies",
                    "where",
                    "headquarters",
                    "!=",
                    "\"USA\""
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "companies",
                    "where",
                    "headquarters",
                    "!=",
                    "value"
                ]
            },
            {
                "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
                "masked_template": "What are the <mask> of <mask> whose <mask> is not <mask>",
                "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "What are the names of enzymes whose product is not 'Heme'?",
                "masked_template": "What are the names of <mask> whose <mask> is not <mask>",
                "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
                "masked_template": "What are the <mask> of the <mask> whose <mask> is not <mask>",
                "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "What are the nicknames of schools whose division is not 1?",
                "masked_template": "What are the <mask> of <mask> whose <mask> is not 1?",
                "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "What are the names of the airports which are not in the country 'Iceland'?",
                "masked_template": "What are the names of the <mask> which are not in the <mask>",
                "query": "SELECT name FROM airport WHERE country != 'Iceland'",
                "ted": 0.0,
                "db_id": "flight_company"
            },
            {
                "question": "What are the names of the mills which are not located in 'Donceel'?",
                "masked_template": "What are the names of the <mask> which are not <mask> in <mask>",
                "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
                "ted": 0.0,
                "db_id": "architecture"
            },
            {
                "question": "What are the names of enzymes who does not produce 'Heme'?",
                "masked_template": "What are the names of <mask> who <mask> not <mask>",
                "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What are the names of the ships that are not from the United States?",
                "masked_template": "What are the names of the <mask> that are not <mask> the <mask>",
                "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "find the names of programs whose origin is not in Beijing.",
                "masked_template": "find the names of <mask> whose <mask> is not in <mask>",
                "query": "SELECT name FROM program WHERE origin != 'Beijing'",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
                "masked_template": "Find the names of the <mask> whose <mask> are not <mask> in <mask>",
                "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What are the census rankings of cities that do not have the status \"Village\"?",
                "masked_template": "What are the <mask> of <mask> that do not have the <mask>",
                "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "List the name of technicians whose team is not \"NYY\".",
                "masked_template": "List the name of <mask> whose <mask> is not <mask>",
                "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "Return the hosts of competitions for which the theme is not Aliens?",
                "masked_template": "Return the <mask> of <mask> for which the <mask> is not <mask>",
                "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "Show the census ranking of cities whose status are not \"Village\".",
                "masked_template": "Show the <mask> of <mask> whose <mask> are not <mask>",
                "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "List the names of countries whose language is not \"German\".",
                "masked_template": "List the names of <mask> whose <mask> is not <mask>",
                "query": "SELECT Name FROM country WHERE Languages != 'German'",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
                "masked_template": "Which <mask> are not <mask> me the <mask>",
                "query": "SELECT name FROM program WHERE origin != 'Beijing'",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "Show the nicknames of schools that are not in division 1.",
                "masked_template": "Show the <mask> of <mask> that are not in <mask> 1.",
                "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Show all ministers who do not belong to Progress Party.",
                "masked_template": "Show all <mask> who do not <mask> to <mask>",
                "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Find the names of channels that are not owned by CCTV.",
                "masked_template": "Find the names of <mask> that are not <mask> by <mask>",
                "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "What is the name of customers who do not use Cash as payment method.",
                "masked_template": "What is the name of <mask> who do not use <mask> as <mask>",
                "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "Which channels are not owned by CCTV? Give me the channel names.",
                "masked_template": "Which <mask> are not <mask> by <mask> me the <mask>",
                "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
                "masked_template": "List the <mask> for each <mask> that <mask> not have <mask> as <mask>",
                "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Which ministers are not a part of the Progress Party?",
                "masked_template": "Which <mask> are not a <mask> of the <mask>",
                "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Find the name of customers who did not pay with Cash.",
                "masked_template": "Find the name of <mask> who did not pay with <mask>",
                "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "Show names for all regions except for Denmark.",
                "masked_template": "Show names for all <mask> for <mask>",
                "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
                "ted": 0.0,
                "db_id": "storm_record"
            }
        ],
        "best_hyp": "What is the name of the conductor whose nationality is not France?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of all the conductor who are not from France?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "proc_query": "( <col> song name </col> ) , ( <col> song release year </col> ) that belongs to ( <tab> singer </tab> ) , ordered by ( ( <col> age </col> ) ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the name and release year of the youngest singer?",
                7.391372203826904
            ],
            [
                "Which song has the youngest singer? List the song name and its release year.",
                10.988661766052246
            ],
            [
                "What are the name and release year for the song which was sung by the youngest singer?",
                10.955510139465332
            ],
            [
                "Which song has the youngest singer? List the song name and the release year.",
                10.942306518554688
            ],
            [
                "Find the song name and release year for the youngest singer.",
                10.814502716064453
            ],
            [
                "Find the song name and release year for the youngest singer.",
                10.814502716064453
            ],
            [
                "What is the name of the youngest singer? Return the song name and its release year.",
                10.752397537231445
            ],
            [
                "What is the song name and release year for the youngest singer?",
                10.751713752746582
            ],
            [
                "List all the song names and what is the release year for the song with the least age. List both the song name and release year.",
                10.734650611877441
            ],
            [
                "What are the name and release year of the song with the youngest age of singers?",
                10.495367050170898
            ],
            [
                "Which song has the least age? List the song name and release year.",
                10.248922348022461
            ],
            [
                "What are the names and release years of the singers with the oldest age?",
                10.138443946838379
            ],
            [
                "What are the names and release years of the singers with the oldest age?",
                10.138443946838379
            ],
            [
                "Tell me the name and release year for the song with the youngest id.",
                9.768787384033203
            ],
            [
                "Find the name and release year of the youngest singer.",
                7.970363616943359
            ],
            [
                "Find the name and release year of the youngest singer.",
                7.970363616943359
            ],
            [
                "Find the name and release year of the youngest singer.",
                7.970363616943359
            ],
            [
                "What is the name and release year for the artist with the oldest age?",
                7.8486223220825195
            ],
            [
                "what are the name and release year of the youngest singer?",
                7.778315544128418
            ],
            [
                "Show the name and release year of the youngest singer.",
                7.775614261627197
            ],
            [
                "What are the names and release years of the youngest singers?",
                7.735550403594971
            ],
            [
                "What is the name and release year of the youngest singer?",
                7.391373634338379
            ],
            [
                "What is the name and release year of the youngest singer?",
                7.391373634338379
            ],
            [
                "Find the name and release year of the song sung by the least number of singers.",
                4.931407928466797
            ],
            [
                "Find the id and release year of the song with the oldest age.",
                -0.06676546484231949
            ],
            [
                "What are the names and release years of the top 10 oldest singers?",
                -0.0991833433508873
            ],
            [
                "Which song has the least number of songs? List the song name and the release year.",
                -2.0973830223083496
            ],
            [
                "Show the name and release year of the 3 least common singers.",
                -3.6824188232421875
            ],
            [
                "List top 10 oldest singers in the list. List name and release year.",
                -4.084231376647949
            ],
            [
                "What is the id and name of the song that is sung by the youngest singer?",
                -6.979897975921631
            ],
            [
                "Show the id and name of the song with the maximum age.",
                -9.292167663574219
            ]
        ],
        "templates": [
            "",
            {
                "question": "Which city has the lowest GDP? Please list the city name and its GDP.",
                "masked_template": "Which <mask> has the <mask> list the <mask> name and its <mask>",
                "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
                "ted": 0.0,
                "db_id": "city_record",
                "query_toks": [
                    "select",
                    "city",
                    ",",
                    "gdp",
                    "from",
                    "city",
                    "order",
                    "by",
                    "gdp",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "city",
                    ",",
                    "gdp",
                    "from",
                    "city",
                    "order",
                    "by",
                    "gdp",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
                "masked_template": "What are the <mask> and <mask> for the <mask> which was <mask> the <mask>",
                "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
                "ted": 0.0,
                "db_id": "university_basketball",
                "query_toks": [
                    "select",
                    "enrollment",
                    ",",
                    "primary_conference",
                    "from",
                    "university",
                    "order",
                    "by",
                    "founded",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "enrollment",
                    ",",
                    "primary_conference",
                    "from",
                    "university",
                    "order",
                    "by",
                    "founded",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Which room has cheapest base price? List the room's name and the base price.",
                "masked_template": "Which <mask> has <mask> List the <mask> name and the <mask>",
                "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1",
                "query_toks": [
                    "select",
                    "roomname",
                    ",",
                    "baseprice",
                    "from",
                    "rooms",
                    "order",
                    "by",
                    "baseprice",
                    "asc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "roomname",
                    ",",
                    "baseprice",
                    "from",
                    "rooms",
                    "order",
                    "by",
                    "baseprice",
                    "asc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.",
                "masked_template": "Find the <mask> in the <mask> with the least <mask> Show both the <mask> and <mask>",
                "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_policies",
                "query_toks": [
                    "select",
                    "amount_settled",
                    ",",
                    "amount_claimed",
                    "from",
                    "claims",
                    "order",
                    "by",
                    "amount_settled",
                    "asc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "amount_settled",
                    ",",
                    "amount_claimed",
                    "from",
                    "claims",
                    "order",
                    "by",
                    "amount_settled",
                    "asc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the oldest log id and its corresponding problem id.",
                "masked_template": "Find the <mask> log id and its <mask> id.",
                "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_software_problems"
            },
            {
                "question": "What is the city with the smallest GDP? Return the city and its GDP.",
                "masked_template": "What is the <mask> with the <mask> Return the <mask> and its <mask>",
                "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
                "ted": 0.0,
                "db_id": "city_record",
                "query_toks": [
                    "select",
                    "city",
                    ",",
                    "gdp",
                    "from",
                    "city",
                    "order",
                    "by",
                    "gdp",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "city",
                    ",",
                    "gdp",
                    "from",
                    "city",
                    "order",
                    "by",
                    "gdp",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the oldest log id and its corresponding problem id?",
                "masked_template": "What is the <mask> log id and its <mask> id?",
                "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_software_problems"
            },
            {
                "question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.",
                "masked_template": "<mask> all the <mask> what is the <mask> in the <mask> with the least <mask> List both the <mask> and <mask>",
                "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "What are the first and last names of the employee with the earliest date of birth?",
                "masked_template": "What are the <mask> and <mask> names of the <mask> with the <mask> of <mask>",
                "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Which part has the least chargeable amount? List the part id and amount.",
                "masked_template": "Which <mask> has the least <mask> List the <mask> id and <mask>",
                "query": "SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "assets_maintenance"
            },
            {
                "question": "What are the details and star ratings of the three hotels with the lowest price ranges?",
                "masked_template": "What are the <mask> and <mask> of the <mask> with the <mask>",
                "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
                "ted": 0.0,
                "db_id": "cre_Theme_park"
            },
            {
                "question": "What are the room name and base price of the room with the lowest base price?",
                "masked_template": "What are the <mask> name and <mask> of the <mask> with the <mask>",
                "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Give me the start station and end station for the trips with the three oldest id.",
                "masked_template": "<mask> me the <mask> and end <mask> for the <mask> with the <mask> id.",
                "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
                "ted": 0.0,
                "db_id": "bike_1"
            },
            {
                "question": "Find the name and component amount of the least popular furniture.",
                "masked_template": "Find the name and <mask> of the least <mask>",
                "query": "SELECT name , Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1",
                "ted": 0.0,
                "db_id": "manufacturer"
            },
            {
                "question": "Select the name and price of the cheapest product.",
                "masked_template": "<mask> the name and <mask> of the <mask>",
                "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "Find the order id and customer id associated with the oldest order.",
                "masked_template": "Find the order id and <mask> id <mask> with the <mask>",
                "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "What is the station station and end station for the trips with the three smallest ids?",
                "masked_template": "What is the <mask> and end <mask> for the <mask> with the <mask>",
                "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
                "ted": 0.0,
                "db_id": "bike_1"
            },
            {
                "question": "what are the order id and customer id of the oldest order?",
                "masked_template": "what are the order id and <mask> id of the <mask>",
                "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "Show the enrollment and primary_conference of the oldest college.",
                "masked_template": "Show the <mask> and <mask> of the <mask>",
                "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
                "ted": 0.0,
                "db_id": "university_basketball"
            },
            {
                "question": "What are the product id and product type of the cheapest product?",
                "masked_template": "What are the <mask> id and <mask> of the <mask>",
                "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What is the name and price of the cheapest product?",
                "masked_template": "What is the name and <mask> of the <mask>",
                "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "What is the first and last name of the oldest employee?",
                "masked_template": "What is the <mask> and <mask> name of the <mask>",
                "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Find the name and email of the user followed by the least number of people.",
                "masked_template": "Find the name and <mask> of the <mask> by the least number of <mask>",
                "query": "SELECT name , email FROM user_profiles ORDER BY followers LIMIT 1",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "Give the id and product type of the product with the lowest price.",
                "masked_template": "<mask> the id and <mask> of the <mask> with the <mask>",
                "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What are the first and last names of the top 10 longest-serving employees?",
                "masked_template": "What are the <mask> and <mask> names of the top 10 <mask>",
                "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "Which model has the least amount of RAM? List the model name and the amount of RAM.",
                "masked_template": "Which <mask> has the least <mask> of <mask> List the <mask> name and the <mask> of <mask>",
                "query": "SELECT Model_name , RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1",
                "ted": 0.0,
                "db_id": "phone_1"
            },
            {
                "question": "Show the details and star ratings of the 3 least expensive hotels.",
                "masked_template": "Show the <mask> and <mask> of the 3 least <mask>",
                "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
                "ted": 0.0,
                "db_id": "cre_Theme_park"
            },
            {
                "question": "List top 10 employee work longest in the company. List employee's first and last name.",
                "masked_template": "List top 10 <mask> in the <mask> List <mask> and <mask>",
                "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the id and name of the aircraft that can cover the maximum distance?",
                "masked_template": "What is the id and name of the <mask> that can <mask> the maximum <mask>",
                "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
                "ted": 0.05555555555555555,
                "db_id": "flight_1"
            },
            {
                "question": "Show the id and name of the aircraft with the maximum distance.",
                "masked_template": "Show the id and name of the <mask> with the maximum <mask>",
                "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
                "ted": 0.05555555555555555,
                "db_id": "flight_1"
            }
        ],
        "best_hyp": "What is the name and release year of the youngest singer?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name and release year of the youngest singer?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "proc_query": "( <col> record company </col> ) that belongs to ( <tab> orchestra </tab> ) , grouped by ( <col> record company </col> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the name of the record company that has the most number of orchestras?",
                10.393980026245117
            ],
            [
                "Show the most common record company of all the orchestras.",
                11.125353813171387
            ],
            [
                "Show the record company with the most number of orchestras.",
                10.972701072692871
            ],
            [
                "Find the record company that has the most number of orchestras.",
                10.970788955688477
            ],
            [
                "Show the most common record company of the orchestra.",
                10.914731979370117
            ],
            [
                "What is the record company that has the most number of orchestras?",
                10.729935646057129
            ],
            [
                "Show the record company that have produced the most number of orchestra albums.",
                10.683191299438477
            ],
            [
                "List the most common record company of orchestras.",
                10.652604103088379
            ],
            [
                "What is the record company that has the largest number of orchestras?",
                10.588041305541992
            ],
            [
                "List the record company owned by the most musicians.",
                10.527457237243652
            ],
            [
                "What is the name of the record company with the largest number of orchestras?",
                10.44586181640625
            ],
            [
                "Find the record company that is the most common in all the orchestras. Tell me its name.",
                10.284401893615723
            ],
            [
                "What is the record company owned by the most musicians?",
                10.194113731384277
            ],
            [
                "Find the record company that is associated with most number of orchestras.",
                10.130967140197754
            ],
            [
                "What is the name of teh record company that produces the most number of orchestra albums?",
                9.975590705871582
            ],
            [
                "What is the record company that is most common in orchestras?",
                9.790534973144531
            ],
            [
                "List the name of record company that have the most number of orchestras.",
                9.657567977905273
            ],
            [
                "What is the name of the record company with the most musicians?",
                8.850113868713379
            ],
            [
                "Find the name of the record company most of the musicians are in.",
                8.333781242370605
            ],
            [
                "Return the record company for which there are the fewest orchestra records.",
                7.807114601135254
            ],
            [
                "Which record company has most number of orchestras?",
                7.070907115936279
            ],
            [
                "Return the name of the record company that is most common among all music publishers.",
                6.201357841491699
            ],
            [
                "Which record company has the most orchestra records?",
                5.723694801330566
            ],
            [
                "Which record company has the most orchestra records?",
                5.723694801330566
            ],
            [
                "What is the most common record company?",
                5.4333977699279785
            ],
            [
                "Which record company is most common?",
                4.661019325256348
            ],
            [
                "What is the id of the record company with the most musicians?",
                2.584205389022827
            ],
            [
                "What are the companies which the most musicians are associated with?",
                2.5071868896484375
            ],
            [
                "Show the top 3 most common record companies of orchestras in total",
                -2.066645383834839
            ],
            [
                "Find the names of the top 3 record companies that have the largest number of orchestras.",
                -5.251458644866943
            ],
            [
                "List the record company by the number of orchestra records.",
                -8.119441986083984
            ]
        ],
        "templates": [
            "",
            {
                "question": "Show the most common position of players in match seasons.",
                "masked_template": "Show the most <mask> of <mask> in <mask>",
                "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "match_season",
                "query_toks": [
                    "select",
                    "position",
                    "from",
                    "match_season",
                    "group",
                    "by",
                    "position",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "position",
                    "from",
                    "match_season",
                    "group",
                    "by",
                    "position",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Show the home city with the most number of drivers.",
                "masked_template": "Show the <mask> with the most number of <mask>",
                "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "school_bus",
                "query_toks": [
                    "select",
                    "home_city",
                    "from",
                    "driver",
                    "group",
                    "by",
                    "home_city",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "home_city",
                    "from",
                    "driver",
                    "group",
                    "by",
                    "home_city",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the country that has the most stadiums.",
                "masked_template": "Find the <mask> that has the most <mask>",
                "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "swimming",
                "query_toks": [
                    "select",
                    "country",
                    "from",
                    "stadium",
                    "group",
                    "by",
                    "country",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    "from",
                    "stadium",
                    "group",
                    "by",
                    "country",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Show the most frequently used carrier of the phones.",
                "masked_template": "Show the most <mask> of the <mask>",
                "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "phone_market",
                "query_toks": [
                    "select",
                    "carrier",
                    "from",
                    "phone",
                    "group",
                    "by",
                    "carrier",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "carrier",
                    "from",
                    "phone",
                    "group",
                    "by",
                    "carrier",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the largest major?",
                "masked_template": "What is the <mask>",
                "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1",
                "query_toks": [
                    "select",
                    "major",
                    "from",
                    "student",
                    "group",
                    "by",
                    "major",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "major",
                    "from",
                    "student",
                    "group",
                    "by",
                    "major",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Show the people that have been governor the most times.",
                "masked_template": "Show the <mask> that have <mask> the most <mask>",
                "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "List the most common type of competition.",
                "masked_template": "List the most <mask> of <mask>",
                "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What instrument is used the most?",
                "masked_template": "What <mask> is <mask> the <mask>",
                "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_2"
            },
            {
                "question": "List the industry shared by the most companies.",
                "masked_template": "List the <mask> by the most <mask>",
                "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What is the name of the deparment with the highest enrollment?",
                "masked_template": "What is the name of the <mask> with the <mask>",
                "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
                "masked_template": "Find the <mask> that is <mask> the most <mask> in all the <mask> me its <mask>",
                "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What is the payment method code used by the most orders?",
                "masked_template": "What is the <mask> by the most <mask>",
                "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "Find the payment method that is used most frequently.",
                "masked_template": "Find the <mask> that is <mask> most <mask>",
                "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "customer_deliveries"
            },
            {
                "question": "What is the name of teh studio that created the most films?",
                "masked_template": "What is the name of teh <mask> that <mask> the most <mask>",
                "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What is the position that is most common among players in match seasons?",
                "masked_template": "What is the <mask> that is most <mask> in <mask>",
                "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "List the name of film studio that have the most number of films.",
                "masked_template": "List the name of <mask> that have the most number of <mask>",
                "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What is the code of the city with the most students?",
                "masked_template": "What is the <mask> of the <mask> with the most <mask>",
                "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Find the code of city where most of students are living in.",
                "masked_template": "Find the <mask> of <mask> most of <mask> are <mask> in.",
                "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Return the rank for which there are the fewest captains.",
                "masked_template": "Return the <mask> for which there are the <mask>",
                "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "Which allergy type has most number of allergies?",
                "masked_template": "Which <mask> has most number of <mask>",
                "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Return the code of the document type that is most common.",
                "masked_template": "Return the <mask> of the <mask> that is most <mask>",
                "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Which people severed as governor most frequently?",
                "masked_template": "Which <mask> as <mask> most <mask>",
                "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Which location has the most corresponding counties?",
                "masked_template": "Which <mask> has the most <mask>",
                "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What is the most common participant type?",
                "masked_template": "What is the most <mask>",
                "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama"
            },
            {
                "question": "Which allergy type is most common?",
                "masked_template": "Which <mask> is most <mask>",
                "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "What is the id of the event with the most participants?",
                "masked_template": "What is the id of the <mask> with the most <mask>",
                "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama"
            },
            {
                "question": "What are the three colleges from which the most players are from?",
                "masked_template": "What are the <mask> which the most <mask> are <mask>",
                "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Show the top 3 most common colleges of players in match seasons.",
                "masked_template": "Show the top 3 most <mask> of <mask> in <mask>",
                "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Find the names of the top 3 departments that provide the largest amount of courses?",
                "masked_template": "Find the names of the top 3 <mask> that <mask> the <mask> of <mask>",
                "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the software platform shared by the greatest number of devices.",
                "masked_template": "List the <mask> by the <mask> number of <mask>",
                "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "device"
            }
        ],
        "best_hyp": "What is the most common record company?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name of the record company that has the most number of orchestras?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "select T2.concert_name , T2.theme , count( * ) from singer_in_concert as T1 join concert as T2 on T1.concert_id = T2.concert_id group by T2.concert_id",
        "proc_query": "( <col> concert name </col> of <tab> concert </tab> ) , ( <col> theme </col> of <tab> concert </tab> ) , ( the number of ( all items ) ) that belongs to ( ( <tab> singer in concert </tab> ) , and ( ( <tab> concert </tab> ) satisfied that ( ( <col> concert id </col> of <tab> singer in concert </tab> ) equal to ( <col> concert id </col> of <tab> concert </tab> ) ) ) ) , grouped by ( <col> concert id </col> of <tab> concert </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names, themes, and number of singers in each concert?",
                -9.590813636779785
            ],
            [
                "How many singers did each concert have? List the concert name, theme and the count.",
                -8.108168601989746
            ],
            [
                "What are the names, themes, and number of singers for each concert?",
                -9.297993659973145
            ],
            [
                "How many singers are there in each concert? List the concert name, theme and the count.",
                -9.554970741271973
            ],
            [
                "What are the names, themes and the number of singers for each concert?",
                -9.619818687438965
            ],
            [
                "Find the name, theme and the corresponding number of singers for each concert.",
                -10.02949333190918
            ],
            [
                "How many singers are in each concert? List concert name, theme and number of singers.",
                -10.227458000183105
            ],
            [
                "Show the name, theme and the number of singers for each concert.",
                -10.438838958740234
            ],
            [
                "Show the name, theme and the number of singers for each concert.",
                -10.438838958740234
            ],
            [
                "For each concert id, return the name, theme and the number of singers in the concert.",
                -10.547481536865234
            ],
            [
                "Show the name, theme of each concert and the number of singers are on.",
                -10.567551612854004
            ],
            [
                "How many singers are in each concert? List the concert name, theme and the number of singers.",
                -10.585240364074707
            ],
            [
                "How many singers have each concert? List the concert name, theme and the number of singers.",
                -10.623900413513184
            ],
            [
                "What is the name of each concert? List the theme and the number of singers.",
                -11.079489707946777
            ],
            [
                "How many singers are in each cmi concert? List concert name, theme and the n",
                -11.135562896728516
            ],
            [
                "List the name and theme of each concert and the number of singers in each concert.",
                -11.153076171875
            ],
            [
                "What are the names and ids of the different artists and how many singers are in each concert?",
                -11.212867736816406
            ],
            [
                "What are the names and ids of the different music genres and how many singers are on each?",
                -11.62576675415039
            ],
            [
                "Return the names and ids of each concert as well as the number of singers.",
                -11.679243087768555
            ],
            [
                "For each concert id, what is its name, theme and average number of singers?",
                -11.878303527832031
            ],
            [
                "Show different concert names and the corresponding number of singers.",
                -11.948265075683594
            ],
            [
                "For each concert, find its name and the theme of the concert that it was at.",
                -12.032511711120605
            ],
            [
                "For each concert id, what is the name and sex of the artist with the theme for their concert?",
                -12.094005584716797
            ],
            [
                "Find the name of the concert whose theme is the same for each genre.",
                -12.145671844482422
            ],
            [
                "What is the name and theme of each concert?",
                -12.153858184814453
            ],
            [
                "For each concert, return its name and the average number of singers that appeared in the concert.",
                -12.168232917785645
            ],
            [
                "For each end id, what is its name and theme for each concert?",
                -12.177538871765137
            ]
        ],
        "templates": [
            "",
            {
                "question": "How many bookings did each customer make? List the customer id, first name, and the count.",
                "masked_template": "How many <mask> did each <mask> List the <mask> id, <mask> and the <mask>",
                "query": "SELECT T1.customer_id , T1.first_name , count( * ) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
                "ted": 0.0,
                "db_id": "products_for_hire"
            },
            {
                "question": "What are the name, id and the corresponding number of visits for each  tourist attraction?",
                "masked_template": "What are the <mask> id and the <mask> number of <mask> for each <mask>",
                "query": "SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT( * ) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID",
                "ted": 0.0,
                "db_id": "cre_Theme_park"
            },
            {
                "question": "How many films are there in each category? List the genre name, genre id and the count.",
                "masked_template": "How many <mask> are there in each <mask> List the <mask> id and the <mask>",
                "query": "SELECT T2.name , T1.category_id , count( * ) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "What are the subject ID, subject name, and the number of available courses for each subject?",
                "masked_template": "What are the <mask> ID, <mask> and the number of <mask> for each <mask>",
                "query": "SELECT T1.subject_id , T2.subject_name , COUNT( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.",
                "masked_template": "Find the <mask> ID, <mask> and the <mask> number of <mask> for each <mask>",
                "query": "SELECT T1.subject_id , T2.subject_name , COUNT( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "How many employees does each role have? List role description, id and number of employees.",
                "masked_template": "How many <mask> each <mask> List <mask> id and number of <mask>",
                "query": "SELECT T1.role_description , T2.role_code , count( * ) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "Show the album names, ids and the number of tracks for each album.",
                "masked_template": "Show the <mask> ids and the number of <mask> for each <mask>",
                "query": "SELECT T1.Title , T2.AlbumID , COUNT( * ) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "Show the account name, id and the number of transactions for each account.",
                "masked_template": "Show the <mask> id and the number of <mask> for each <mask>",
                "query": "SELECT T2.account_name , T1.account_id , count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "For each team, return the team name, id and the maximum salary among the team.",
                "masked_template": "For each <mask> return the <mask> id and the maximum <mask> the <mask>",
                "query": "SELECT T1.name , T1.team_id , max( T2.salary ) FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id",
                "ted": 0.03125,
                "db_id": "baseball_1"
            },
            {
                "question": "Show the id, name of each editor and the number of journal committees they are on.",
                "masked_template": "Show the id, name of each <mask> and the number of <mask> are on.",
                "query": "SELECT T1.editor_id , T1.Name , COUNT( * ) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id",
                "ted": 0.0,
                "db_id": "journal_committee"
            },
            {
                "question": "How many coaches does each club has? List the club id, name and the number of coaches.",
                "masked_template": "How many <mask> each <mask> List the <mask> id, name and the number of <mask>",
                "query": "SELECT T1.club_id , T1.club_name, count( * ) FROM club AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id",
                "ted": 0.0,
                "db_id": "riding_club"
            },
            {
                "question": "How many events have each participants attended? List the participant id, type and the number.",
                "masked_template": "How many <mask> have each <mask> List the <mask> id, <mask> and the <mask>",
                "query": "SELECT T1.Participant_ID , T1.Participant_Type_Code , count( * ) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_ID",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama"
            },
            {
                "question": "What is the highest salary among each team? List the team name, id and maximum salary.",
                "masked_template": "What is the <mask> each <mask> List the <mask> id and maximum <mask>",
                "query": "SELECT T1.name , T1.team_id , max( T2.salary ) FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id",
                "ted": 0.03125,
                "db_id": "baseball_1"
            },
            {
                "question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n",
                "masked_template": "How many <mask> are <mask> to each cmi <mask> List <mask> id, <mask> id and the n",
                "query": "SELECT T2.cmi_cross_ref_id , T2.master_customer_id , count( * ) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id",
                "ted": 0.0,
                "db_id": "local_govt_mdm"
            },
            {
                "question": "List the description, code and the number of services for each service type.",
                "masked_template": "List the <mask> and the number of <mask> for each <mask>",
                "query": "SELECT T1.Service_Type_Description , T2.Service_Type_Code , COUNT( * ) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the names and ids of the different categories, and how many films are in each?",
                "masked_template": "What are the names and ids of the different <mask> and how many <mask> are in <mask>",
                "query": "SELECT T2.name , T1.category_id , count( * ) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "What are the names and ids of the different albums, and how many tracks are on each?",
                "masked_template": "What are the names and ids of the different <mask> and how many <mask> are on <mask>",
                "query": "SELECT T1.Title , T2.AlbumID , COUNT( * ) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "Return the names and ids of each account, as well as the number of transactions.",
                "masked_template": "Return the names and ids of each <mask> as <mask> as the number of <mask>",
                "query": "SELECT T2.account_name , T1.account_id , count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "For each start station id, what is its name, longitude and average duration of trips started there?",
                "masked_template": "For each <mask> id, what is its <mask> and average <mask> of <mask>",
                "query": "SELECT T1.name , T1.long , avg( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id",
                "ted": 0.03125,
                "db_id": "bike_1"
            },
            {
                "question": "Show different tourist attractions' names, ids, and the corresponding number of visits.",
                "masked_template": "Show different <mask> and the <mask> number of <mask>",
                "query": "SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT( * ) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID",
                "ted": 0.0,
                "db_id": "cre_Theme_park"
            },
            {
                "question": "For each station, find its latitude and the minimum duration of trips that ended at the station.",
                "masked_template": "For each <mask> find its <mask> and the <mask> of <mask> that <mask> at the <mask>",
                "query": "SELECT T1.name , T1.lat , min( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id",
                "ted": 0.03125,
                "db_id": "bike_1"
            },
            {
                "question": "For each sex, what is the name and sex of the candidate with the oppose rate for their sex?",
                "masked_template": "For each <mask> what is the name and sex of the <mask> with the <mask> for their <mask>",
                "query": "SELECT T1.name , T1.sex , min( oppose_rate ) FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex",
                "ted": 0.03125,
                "db_id": "candidate_poll"
            },
            {
                "question": "Find the name of the candidates whose oppose percentage is the lowest for each sex.",
                "masked_template": "Find the name of the <mask> whose <mask> is the <mask> for each <mask>",
                "query": "SELECT T1.name , T1.sex , min( oppose_rate ) FROM people AS T1 JOIN candidate AS T2 ON T1.people_id = T2.people_id GROUP BY T1.sex",
                "ted": 0.03125,
                "db_id": "candidate_poll"
            },
            {
                "question": "What is the description, code and the corresponding count of each service type?",
                "masked_template": "What is the <mask> and the <mask> count of each <mask>",
                "query": "SELECT T1.Service_Type_Description , T2.Service_Type_Code , COUNT( * ) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "For each station, return its longitude and the average duration of trips that started from the station.",
                "masked_template": "For each <mask> return its <mask> and the average <mask> of <mask> that <mask> the <mask>",
                "query": "SELECT T1.name , T1.long , avg( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id",
                "ted": 0.03125,
                "db_id": "bike_1"
            },
            {
                "question": "For each end station id, what is its name, latitude, and minimum duration for trips ended there?",
                "masked_template": "For each end <mask> id, what is its <mask> and <mask> for <mask>",
                "query": "SELECT T1.name , T1.lat , min( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id",
                "ted": 0.03125,
                "db_id": "bike_1"
            }
        ],
        "best_hyp": "What are the names and ids of the different artists and how many singers are in each concert?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names, themes, and number of singers in each concert?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age > 18",
        "proc_query": "( distinct ( ( <col> country </col> ) ) ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> age </col> ) greater than ( <val> 18 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the different countries that have singers older than 18?",
                10.380881309509277
            ],
            [
                "What are all the different country names for a singer that is older than 18?",
                11.185792922973633
            ],
            [
                "List the countries of all the singers older than 18.",
                10.514724731445312
            ],
            [
                "What are the distinct countries of singers with age greater than 18?",
                10.275279998779297
            ],
            [
                "Show me the countries where singers older than 18 are from.",
                9.665907859802246
            ],
            [
                "List all the distinct countries which a singer of age above 18 is from",
                9.601753234863281
            ],
            [
                "Tell me the distinct countries where singers are older than 18",
                9.332138061523438
            ],
            [
                "Which countries are shared by singers older than 18?",
                8.781074523925781
            ],
            [
                "Which countries are shared by singers older than 18?",
                8.781073570251465
            ],
            [
                "What are the countries that have singers older than 18?",
                8.726730346679688
            ],
            [
                "Find the countries where singers are older than 18.",
                8.255471229553223
            ],
            [
                "Find the countries in which singers aged above 18 are from.",
                7.607170104980469
            ],
            [
                "What are the countries of singers older than 18?",
                7.088158130645752
            ],
            [
                "Which country is the singer aged above 18 living in?",
                6.412276268005371
            ],
            [
                "What are the different countries that have more than 100 singers older than 18?",
                -5.785721778869629
            ],
            [
                "Show all distinct countries where singers with at least 100 age are older than 18",
                -11.376802444458008
            ],
            [
                "What are the distinct countries with singers of age older than 50?",
                -11.76664924621582
            ],
            [
                "Find the countries which have singers with age more than 50.",
                -11.834029197692871
            ],
            [
                "List the distinct countries of singers with age greater than 32.",
                -11.846285820007324
            ],
            [
                "List the distinct countries of singers older than 30.",
                -11.90009880065918
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are all the different start station names for a trip that lasted less than 100?",
                "masked_template": "What are all the different <mask> names for a <mask> that <mask> than <mask>",
                "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration < 100",
                "ted": 0.0625,
                "db_id": "bike_1",
                "query_toks": [
                    "select",
                    "distinct",
                    "start_station_name",
                    "from",
                    "trip",
                    "where",
                    "duration",
                    "<",
                    "100"
                ],
                "query_toks_no_value": [
                    "select",
                    "distinct",
                    "start_station_name",
                    "from",
                    "trip",
                    "where",
                    "duration",
                    "<",
                    "value"
                ]
            },
            {
                "question": "List the first names of all the students in room 107.",
                "masked_template": "List the <mask> names of all the <mask> in <mask>",
                "query": "SELECT DISTINCT firstname FROM list WHERE classroom = 107",
                "ted": 0.0625,
                "db_id": "student_1",
                "query_toks": [
                    "select",
                    "distinct",
                    "firstname",
                    "from",
                    "list",
                    "where",
                    "classroom",
                    "=",
                    "107"
                ],
                "query_toks_no_value": [
                    "select",
                    "distinct",
                    "firstname",
                    "from",
                    "list",
                    "where",
                    "classroom",
                    "=",
                    "value"
                ]
            },
            {
                "question": "What are the distinct publishers of publications with price higher than 5000000?",
                "masked_template": "What are the distinct <mask> of <mask> with <mask> than <mask>",
                "query": "SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000",
                "ted": 0.0,
                "db_id": "book_2",
                "query_toks": [
                    "select",
                    "distinct",
                    "publisher",
                    "from",
                    "publication",
                    "where",
                    "price",
                    ">",
                    "5000000"
                ],
                "query_toks_no_value": [
                    "select",
                    "distinct",
                    "publisher",
                    "from",
                    "publication",
                    "where",
                    "price",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show me the classrooms grade 5 is using.",
                "masked_template": "Show me the <mask> 5 is <mask>",
                "query": "SELECT DISTINCT classroom FROM list WHERE grade = 5",
                "ted": 0.0625,
                "db_id": "student_1",
                "query_toks": [
                    "select",
                    "distinct",
                    "classroom",
                    "from",
                    "list",
                    "where",
                    "grade",
                    "=",
                    "5"
                ],
                "query_toks_no_value": [
                    "select",
                    "distinct",
                    "classroom",
                    "from",
                    "list",
                    "where",
                    "grade",
                    "=",
                    "value"
                ]
            },
            {
                "question": "List all the distinct stations from which a trip of duration below 100 started.",
                "masked_template": "List all the distinct <mask> which a <mask> of <mask> 100 <mask>",
                "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration < 100",
                "ted": 0.0625,
                "db_id": "bike_1",
                "query_toks": [
                    "select",
                    "distinct",
                    "start_station_name",
                    "from",
                    "trip",
                    "where",
                    "duration",
                    "<",
                    "100"
                ],
                "query_toks_no_value": [
                    "select",
                    "distinct",
                    "start_station_name",
                    "from",
                    "trip",
                    "where",
                    "duration",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Tell me the distinct block codes where some rooms are available.",
                "masked_template": "<mask> me the distinct <mask> are <mask>",
                "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable = 0",
                "ted": 0.0625,
                "db_id": "hospital_1"
            },
            {
                "question": "Which classrooms are used by grade 4?",
                "masked_template": "Which <mask> are <mask> by <mask> 4?",
                "query": "SELECT DISTINCT classroom FROM list WHERE grade = 4",
                "ted": 0.0625,
                "db_id": "student_1"
            },
            {
                "question": "Which classrooms are used by grade 5?",
                "masked_template": "Which <mask> are <mask> by <mask> 5?",
                "query": "SELECT DISTINCT classroom FROM list WHERE grade = 5",
                "ted": 0.0625,
                "db_id": "student_1"
            },
            {
                "question": "What are the unique block codes that have available rooms?",
                "masked_template": "What are the <mask> that have <mask>",
                "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable = 0",
                "ted": 0.0625,
                "db_id": "hospital_1"
            },
            {
                "question": "Find the grade studying in room 105.",
                "masked_template": "Find the <mask> in <mask>",
                "query": "SELECT DISTINCT grade FROM list WHERE classroom = 105",
                "ted": 0.0625,
                "db_id": "student_1"
            },
            {
                "question": "Find the classrooms in which grade 4 is studying.",
                "masked_template": "Find the <mask> in which <mask> 4 is <mask>",
                "query": "SELECT DISTINCT classroom FROM list WHERE grade = 4",
                "ted": 0.0625,
                "db_id": "student_1"
            },
            {
                "question": "What are the first names of students studying in room 107?",
                "masked_template": "What are the <mask> names of <mask> in <mask>",
                "query": "SELECT DISTINCT firstname FROM list WHERE classroom = 107",
                "ted": 0.0625,
                "db_id": "student_1"
            },
            {
                "question": "Which grade is studying in room 105?",
                "masked_template": "Which <mask> is <mask> in <mask>",
                "query": "SELECT DISTINCT grade FROM list WHERE classroom = 105",
                "ted": 0.0625,
                "db_id": "student_1"
            },
            {
                "question": "What are the different cities that have more than 100 memberships?",
                "masked_template": "What are the different <mask> that have more than 100 <mask>",
                "query": "SELECT DISTINCT city FROM branch WHERE membership_amount >= 100",
                "ted": 0.0625,
                "db_id": "shop_membership"
            },
            {
                "question": "Show all distinct city where branches with at least 100 memberships are located.",
                "masked_template": "Show all distinct <mask> with at least 100 <mask> are <mask>",
                "query": "SELECT DISTINCT city FROM branch WHERE membership_amount >= 100",
                "ted": 0.0625,
                "db_id": "shop_membership"
            },
            {
                "question": "What are the distinct buildings with capacities of greater than 50?",
                "masked_template": "What are the distinct <mask> with <mask> of <mask> than 50?",
                "query": "SELECT DISTINCT building FROM classroom WHERE capacity > 50",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the buildings which have rooms with capacity more than 50.",
                "masked_template": "Find the <mask> which have <mask> with <mask> more than 50.",
                "query": "SELECT DISTINCT building FROM classroom WHERE capacity > 50",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the distinct carriers of phones with memories bigger than 32.",
                "masked_template": "List the distinct <mask> of <mask> with <mask> than 32.",
                "query": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G > 32",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "List the distinct positions of pilots older than 30.",
                "masked_template": "List the distinct <mask> of <mask> than 30.",
                "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age > 30",
                "ted": 0.0,
                "db_id": "pilot_record"
            }
        ],
        "best_hyp": "Find the countries which have singers with age more than 50.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the different countries that have singers older than 18?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company , COUNT( * ) FROM orchestra GROUP BY Record_Company",
        "proc_query": "( <col> record company </col> ) , ( the number of ( all items ) ) that belongs to ( <tab> orchestra </tab> ) , grouped by ( <col> record company </col> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "For each record company, how many orchestra does it have?",
                10.446747779846191
            ],
            [
                "Show the different record companies and the number of orchestras they have.",
                10.8644437789917
            ],
            [
                "What are the different record companies and how many orchestra tracks are there for each?",
                10.766053199768066
            ],
            [
                "What are the different record companies and how many musicians belong to each?",
                10.752073287963867
            ],
            [
                "What are the record companies and how many musicians correspond to each record company?",
                10.173615455627441
            ],
            [
                "For each record company, report the total number of orchestra produced by him or her.",
                10.094773292541504
            ],
            [
                "List all record companies together with the number of orchestra produced by each record company",
                9.968318939208984
            ],
            [
                "How many orchestra does each record company have? List the record company name and the number.",
                9.591992378234863
            ],
            [
                "For each record company, how many orchestra tracks are there?",
                9.521173477172852
            ],
            [
                "Show all record companies and the number of orchestra in each record company.",
                9.126409530639648
            ],
            [
                "How many orchestra tracks are produced by each record company?",
                8.831266403198242
            ],
            [
                "Show all record companies and corresponding number of orchestra.",
                8.436969757080078
            ],
            [
                "List all record companies and the number of orchestra in each record company",
                8.190037727355957
            ],
            [
                "For each record company, show the company number and find how many musicians are associated with it.",
                7.893984794616699
            ],
            [
                "Show record companies and the number of orchestra in each record.",
                7.125849723815918
            ],
            [
                "How many orchestra tracks correspond to each record company?",
                7.096479415893555
            ],
            [
                "Show each record company and the number of orchestra.",
                6.982962131500244
            ],
            [
                "Show different record companies along with the number of orchestra of each record company.",
                6.811254978179932
            ],
            [
                "Show different record companies along with the number of orchestra with each record company.",
                6.330836772918701
            ],
            [
                "Find the number of orchestra for each record company.",
                6.25951623916626
            ],
            [
                "find the number of orchestra for each record company.",
                6.1997222900390625
            ],
            [
                "For each record company, return the company name and the count of orchestra with that company.",
                6.095195293426514
            ],
            [
                "Show the record company ID and number of orchestra for each record company",
                5.747857570648193
            ],
            [
                "Please show the record companies and the number of orchestra with each record company.",
                5.747071743011475
            ],
            [
                "Show the record company id and count of orchestra in each record company",
                4.713957786560059
            ],
            [
                "For each record company, what are the names and how many orchestras are there?",
                4.53416633605957
            ],
            [
                "Show different record companies of music and the number of orchestra of each record company.",
                4.282983303070068
            ],
            [
                "What are the number of orchestra tracks for each record company?",
                3.8718063831329346
            ],
            [
                "Show the record companies and number of orchestra in each record.",
                3.0622851848602295
            ],
            [
                "Show the different record companies and number of orchestra at each record company",
                2.4386789798736572
            ],
            [
                "Find all record companies together with number of orchestra.",
                2.070469617843628
            ]
        ],
        "templates": [
            "",
            {
                "question": "Show the different countries and the number of members from each.",
                "masked_template": "Show the different <mask> and the number of <mask>",
                "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
                "ted": 0.0,
                "db_id": "decoration_competition",
                "query_toks": [
                    "select",
                    "country",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "member",
                    "group",
                    "by",
                    "country"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "member",
                    "group",
                    "by",
                    "country"
                ]
            },
            {
                "question": "What are the different budget type codes, and how many documents are there for each?",
                "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses",
                "query_toks": [
                    "select",
                    "budget_type_code",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "documents_with_expenses",
                    "group",
                    "by",
                    "budget_type_code"
                ],
                "query_toks_no_value": [
                    "select",
                    "budget_type_code",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "documents_with_expenses",
                    "group",
                    "by",
                    "budget_type_code"
                ]
            },
            {
                "question": "What are the different classes of races, and how many races correspond to each?",
                "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track",
                "query_toks": [
                    "select",
                    "class",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "race",
                    "group",
                    "by",
                    "class"
                ],
                "query_toks_no_value": [
                    "select",
                    "class",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "race",
                    "group",
                    "by",
                    "class"
                ]
            },
            {
                "question": "What are the allergy types and how many allergies correspond to each one?",
                "masked_template": "What are the <mask> and how many <mask> to each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1",
                "query_toks": [
                    "select",
                    "allergytype",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "allergy_type",
                    "group",
                    "by",
                    "allergytype"
                ],
                "query_toks_no_value": [
                    "select",
                    "allergytype",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "allergy_type",
                    "group",
                    "by",
                    "allergytype"
                ]
            },
            {
                "question": "For each advisor, report the total number of students advised by him or her.",
                "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
                "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
                "ted": 0.0,
                "db_id": "voter_2",
                "query_toks": [
                    "select",
                    "advisor",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "student",
                    "group",
                    "by",
                    "advisor"
                ],
                "query_toks_no_value": [
                    "select",
                    "advisor",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "student",
                    "group",
                    "by",
                    "advisor"
                ]
            },
            {
                "question": "List all directors along with the number of films directed by each director.",
                "masked_template": "List all <mask> with the number of <mask> by each <mask>",
                "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "How many hosts does each nationality have? List the nationality and the count.",
                "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "For each type, how many ships are there?",
                "masked_template": "For each <mask> how many <mask> are <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "Show all allergy types and the number of allergies in each type.",
                "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "How many medicines are offered by each trade name?",
                "masked_template": "How many <mask> are <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "Show all majors and corresponding number of students.",
                "masked_template": "Show all <mask> and <mask> number of <mask>",
                "query": "SELECT major , count( * ) FROM Student GROUP BY major",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "List all headquarters and the number of companies in each headquarter.",
                "masked_template": "List all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "For each classroom, show the classroom number and find how many students are using it.",
                "masked_template": "For each <mask> show the <mask> number and find how many <mask> are <mask> it.",
                "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
                "ted": 0.0,
                "db_id": "student_1"
            },
            {
                "question": "Show budget type codes and the number of documents in each budget type.",
                "masked_template": "Show <mask> and the number of <mask> in each <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "How many counties correspond to each police force?",
                "masked_template": "How many <mask> to each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Show each location and the number of cinemas there.",
                "masked_template": "Show each <mask> and the number of <mask>",
                "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "Show different nationalities along with the number of hosts of each nationality.",
                "masked_template": "Show different <mask> with the number of <mask> of each <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show different carriers of phones together with the number of phones with each carrier.",
                "masked_template": "Show different <mask> of <mask> with the number of <mask> with each <mask>",
                "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "Find the number of rooms for each bed type.",
                "masked_template": "Find the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "find the number of medicines offered by each trade.",
                "masked_template": "find the number of <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "For each denomination, return the denomination and the count of schools with that denomination.",
                "masked_template": "For each <mask> return the <mask> and the count of <mask> with that <mask>",
                "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "display the country ID and number of cities for each country.",
                "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Please show the police forces and the number of counties with each police force.",
                "masked_template": "<mask> show the <mask> and the number of <mask> with each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Give the country id and corresponding count of cities in each country.",
                "masked_template": "<mask> the <mask> id and <mask> count of <mask> in each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
                "masked_template": "For each <mask> what are the <mask> and how many <mask> are <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "Show different types of ships and the number of ships of each type.",
                "masked_template": "Show different <mask> of <mask> and the number of <mask> of each <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "What are the number of rooms for each bed type?",
                "masked_template": "What are the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Show the race class and number of races in each class.",
                "masked_template": "Show the <mask> and number of <mask> in each <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show the different headquarters and number of companies at each headquarter.",
                "masked_template": "Show the different <mask> and number of <mask> at each <mask>",
                "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "Find all types of store and number of them.",
                "masked_template": "Find all <mask> of <mask> and number of <mask>",
                "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "store_product"
            }
        ],
        "best_hyp": "What are the different record companies and how many orchestra tracks are there for each?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "For each record company, how many orchestra does it have?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "proc_query": "( <col> name </col> ) , ( <col> capacity </col> ) that belongs to ( <tab> stadium </tab> ) , ordered by ( ( <col> average </col> ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the name and capacity of the stadium with the highest average capacity?",
                10.210407257080078
            ],
            [
                "Show the name and capacity of the stadium with the highest average capacity.",
                10.723860740661621
            ],
            [
                "Show the name and capacity of the stadium with the highest average capacity.",
                10.723860740661621
            ],
            [
                "List the name and capacity of the stadium with the highest average capacity.",
                10.71536922454834
            ],
            [
                "What are the name and capacity of the stadium with the highest average capacity?",
                10.644453048706055
            ],
            [
                "What is the name and capacity of the stadium that has the highest average capacity?",
                10.543784141540527
            ],
            [
                "Find the name and capacity of the stadium with the highest average capacity.",
                10.53085994720459
            ],
            [
                "Find the name and capacity of the stadium with the highest average capacity.",
                10.53085994720459
            ],
            [
                "For all the stadiums, what is the name of the stadium with the highest average capacity? List both the name and capacity.",
                10.362480163574219
            ],
            [
                "Which stadiums have the highest average capacity? List the stadium name and its capacity.",
                10.262812614440918
            ],
            [
                "What is the name and capacity of the stadium with the highest average capacity?",
                10.210407257080078
            ],
            [
                "What is the name and capacity of the stadium with the highest average capacity?",
                10.210407257080078
            ],
            [
                "What is the name and capacity of the stadium with the highest average capacity?",
                10.210407257080078
            ],
            [
                "What is the name and capacity of the stadium with the highest average capacity?",
                10.210407257080078
            ],
            [
                "What is the name and capacity of the stadium with the highest average capacity?",
                10.210407257080078
            ],
            [
                "What is the name and capacity for the stadium with the highest average capacity?",
                10.116429328918457
            ],
            [
                "What is the name and capacity for the stadium with the highest average capacity?",
                10.116429328918457
            ],
            [
                "Find the name of the stadium with the highest average capacity. Show both the name and capacity.",
                9.984335899353027
            ],
            [
                "Show the names and capacities for stadiums that have the top average total number of seats.",
                7.926311492919922
            ],
            [
                "Which stadium has the highest average capacity? And what is its name?",
                5.80045747756958
            ],
            [
                "Show the name and capacity of the stadium with maximum average capacity.",
                5.447538375854492
            ],
            [
                "Show the name and capacity of the stadium with maximum average capacity.",
                5.447538375854492
            ],
            [
                "Find the name of the stadium that has the highest average number of seats as well as the count of how many capacity it has.",
                4.857303142547607
            ],
            [
                "List the name and capacity of the stadium with the highest average average capacity.",
                3.678462266921997
            ],
            [
                "Who is the stadium with the highest average capacity? List name and capacity.",
                2.7093515396118164
            ],
            [
                "Which stadium has the highest average capacity?",
                2.6766648292541504
            ],
            [
                "Show the name and capacity for stadium that has the highest average capacity.",
                -0.7879941463470459
            ],
            [
                "Which stadium has the most number of seats? List its name and capacity.",
                -4.252674579620361
            ],
            [
                "What is the id and name of the stadium that can accommodate the maximum average capacity?",
                -9.056587219238281
            ],
            [
                "What is the id and name of the stadium with the highest average capacity?",
                -9.735183715820312
            ],
            [
                "What is the name of the stadium that was opened in the most recent year?",
                -12.063745498657227
            ]
        ],
        "templates": [
            "",
            {
                "question": "Show the id and name of the aircraft with the maximum distance.",
                "masked_template": "Show the id and name of the <mask> with the maximum <mask>",
                "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_1",
                "query_toks": [
                    "select",
                    "aid",
                    ",",
                    "name",
                    "from",
                    "aircraft",
                    "order",
                    "by",
                    "distance",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "aid",
                    ",",
                    "name",
                    "from",
                    "aircraft",
                    "order",
                    "by",
                    "distance",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Show the name and the nationality of the oldest host.",
                "masked_template": "Show the name and the <mask> of the <mask>",
                "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "List the official name and status of the city with the largest population.",
                "masked_template": "List the <mask> name and <mask> of the <mask> with the <mask>",
                "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "official_name",
                    ",",
                    "status",
                    "from",
                    "city",
                    "order",
                    "by",
                    "population",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "official_name",
                    ",",
                    "status",
                    "from",
                    "city",
                    "order",
                    "by",
                    "population",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What are the name and the nationality of the host of the highest age?",
                "masked_template": "What are the name and the <mask> of the <mask> of the <mask>",
                "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "party_host",
                "query_toks": [
                    "select",
                    "name",
                    ",",
                    "nationality",
                    "from",
                    "host",
                    "order",
                    "by",
                    "age",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    ",",
                    "nationality",
                    "from",
                    "host",
                    "order",
                    "by",
                    "age",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the name and date of the race that occurred most recently?",
                "masked_template": "What is the name and <mask> of the <mask> that <mask> most <mask>",
                "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "formula_1",
                "query_toks": [
                    "select",
                    "name",
                    ",",
                    "date",
                    "from",
                    "races",
                    "order",
                    "by",
                    "date",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    ",",
                    "date",
                    "from",
                    "races",
                    "order",
                    "by",
                    "date",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the id and name of the most expensive base price room.",
                "masked_template": "Find the id and name of the most <mask>",
                "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1",
                "query_toks": [
                    "select",
                    "roomid",
                    ",",
                    "roomname",
                    "from",
                    "rooms",
                    "order",
                    "by",
                    "baseprice",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "roomid",
                    ",",
                    "roomname",
                    "from",
                    "rooms",
                    "order",
                    "by",
                    "baseprice",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the name and id of the top 3 expensive rooms.",
                "masked_template": "Find the name and id of the top 3 <mask>",
                "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.",
                "masked_template": "<mask> all the <mask> what is the <mask> of the <mask> with the <mask> List both the <mask> and <mask>",
                "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "Which restaurants have highest rating? List the restaurant name and its rating.",
                "masked_template": "Which <mask> have <mask> List the <mask> name and its <mask>",
                "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "What si the youngest employee's first and last name?",
                "masked_template": "What si the <mask> and <mask>",
                "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the name and category code of the product with the highest price?",
                "masked_template": "What is the name and <mask> of the <mask> with the <mask>",
                "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "customer_complaints"
            },
            {
                "question": "What are the name and id of the three highest priced rooms?",
                "masked_template": "What are the name and id of the <mask>",
                "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What is the official name and status of the city with the most residents?",
                "masked_template": "What is the <mask> name and <mask> of the <mask> with the most <mask>",
                "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "What is the name and date of the most recent race?",
                "masked_template": "What is the name and <mask> of the most <mask>",
                "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "formula_1"
            },
            {
                "question": "What is the department name and corresponding building for the department with the greatest budget?",
                "masked_template": "What is the <mask> name and <mask> for the <mask> with the <mask>",
                "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What is the flight number and its distance for the one with the maximum price?",
                "masked_template": "What is the <mask> number and its <mask> for the one with the maximum <mask>",
                "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.",
                "masked_template": "Find the <mask> of the <mask> with the <mask> Show both the <mask> and <mask>",
                "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "Show the names and main services for train stations that have the top three total number of passengers.",
                "masked_template": "Show the names and <mask> for <mask> that have the top <mask> total number of <mask>",
                "query": "SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "Which film has the highest rental rate? And what is the rate?",
                "masked_template": "Which <mask> has the <mask> And what is the <mask>",
                "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "Show the id and name of the employee with maximum salary.",
                "masked_template": "Show the id and name of the <mask> with maximum <mask>",
                "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Show the flight number and distance of the flight with maximum price.",
                "masked_template": "Show the <mask> number and <mask> of the <mask> with maximum <mask>",
                "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?",
                "masked_template": "Find the name of the <mask> that has <mask> the <mask> number of <mask> as <mask> as the count of how many <mask> it has <mask>",
                "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "List the event venues and names that have the top 2 most number of people attended.",
                "masked_template": "List the <mask> and names that have the top 2 most number of <mask>",
                "query": "SELECT venue , name FROM event ORDER BY Event_Attendance DESC LIMIT 2",
                "ted": 0.0,
                "db_id": "news_report"
            },
            {
                "question": "Who is the youngest employee in the company? List employee's first and last name.",
                "masked_template": "Who is the <mask> in the <mask> List <mask> and <mask>",
                "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "Which room has the highest base price?",
                "masked_template": "Which <mask> has the <mask>",
                "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Show the name and opening year for three churches that opened most recently.",
                "masked_template": "Show the name and <mask> for <mask> that <mask> most <mask>",
                "query": "SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "wedding"
            },
            {
                "question": "Which manufacturer has the most number of shops? List its name and year of opening.",
                "masked_template": "Which <mask> has the most number of <mask> List its name and <mask> of <mask>",
                "query": "SELECT open_year , name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "manufacturer"
            },
            {
                "question": "What is the id and name of the aircraft that can cover the maximum distance?",
                "masked_template": "What is the id and name of the <mask> that can <mask> the maximum <mask>",
                "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "What is the id and name of the employee with the highest salary?",
                "masked_template": "What is the id and name of the <mask> with the <mask>",
                "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "What is the name of the song that was released in the most recent year?",
                "masked_template": "What is the name of the <mask> that was <mask> in the most <mask>",
                "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_1"
            }
        ],
        "best_hyp": "What is the name and capacity of the stadium with the highest average capacity?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name and capacity of the stadium with the highest average capacity?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "proc_query": "( <col> name </col> of <tab> singer </tab> ) that belongs to ( ( <tab> singer </tab> ) , and ( ( <tab> song </tab> ) satisfied that ( ( <col> singer id </col> of <tab> singer </tab> ) equal to ( <col> singer id </col> of <tab> song </tab> ) ) ) ) , grouped by ( <col> name </col> of <tab> singer </tab> ) , that have ( ( the number of ( all items ) ) greater than ( <val> 1 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of singers who sang more than one song?",
                10.128104209899902
            ],
            [
                "What are the names of all singers who sang more than one song?",
                10.99401569366455
            ],
            [
                "Show the names of the singers that have produced more than one song.",
                10.76404094696045
            ],
            [
                "What are the names of singers that have sung more than one song?",
                10.439297676086426
            ],
            [
                "What are the names of singers who have sung out more than one song?",
                10.41577434539795
            ],
            [
                "Find the name of the singers that have more than one song.",
                10.399096488952637
            ],
            [
                "What are the names of singers who have produced more than one song?",
                10.396341323852539
            ],
            [
                "List the name of singers who have produced more than one song.",
                10.378813743591309
            ],
            [
                "What are the names of singers who have more than one song?",
                10.215882301330566
            ],
            [
                "Show the names of singers that have more than one song.",
                10.191655158996582
            ],
            [
                "Show the names of singers that have more than one song.",
                10.191655158996582
            ],
            [
                "What are the names of singers that have more than a single song?",
                10.17589282989502
            ],
            [
                "What are the names of singers that have more than one song?",
                10.155991554260254
            ],
            [
                "Find the names of singers that have produced more than one song.",
                10.146739959716797
            ],
            [
                "What are the names of singers whose songs have more than one song?",
                10.143047332763672
            ],
            [
                "What are the names of singers who sang more than one song?",
                10.128107070922852
            ],
            [
                "Find the name of singers who are in charge of more than one song.",
                9.933680534362793
            ],
            [
                "Find the names of singers who have more than one song.",
                9.706768989562988
            ],
            [
                "Find the name of singers who have more than one song.",
                9.53145980834961
            ],
            [
                "Find the names of singers who are in more than one song.",
                9.51675796508789
            ],
            [
                "Which singers have produced more than one song in total? Return the names of singers.",
                9.442388534545898
            ],
            [
                "Which singers are in charge of more than one song? Tell me their names.",
                9.396899223327637
            ],
            [
                "Which singers have more than one song? Tell me the singers' names.",
                9.296259880065918
            ],
            [
                "Find the name of singers who are in more than one song.",
                9.295246124267578
            ],
            [
                "What are the names of singers that are in song in more than a single genre?",
                8.189885139465332
            ],
            [
                "Show names of singers that have more than one song.",
                5.364614486694336
            ],
            [
                "Show the names of singers in song at more than one time.",
                4.541561603546143
            ],
            [
                "List the name of singers who have number of songs than one.",
                -5.5008344650268555
            ],
            [
                "What are the names of all singers that have more than 100 songs?",
                -11.43972110748291
            ],
            [
                "What are the names of the singers that have more than 10 songs?",
                -11.589916229248047
            ],
            [
                "List names of singers who have the number of songs more than 10.",
                -11.906576156616211
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the first names of all professors who teach more than one class?",
                "masked_template": "What are the <mask> names of all <mask> who <mask> more than one <mask>",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_1",
                "query_toks": [
                    "select",
                    "t2.emp_fname",
                    "from",
                    "class",
                    "as",
                    "t1",
                    "join",
                    "employee",
                    "as",
                    "t2",
                    "on",
                    "t1.prof_num",
                    "=",
                    "t2.emp_num",
                    "group",
                    "by",
                    "t1.prof_num",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.emp_fname",
                    "from",
                    "class",
                    "as",
                    "t1",
                    "join",
                    "employee",
                    "as",
                    "t2",
                    "on",
                    "t1.prof_num",
                    "=",
                    "t2.emp_num",
                    "group",
                    "by",
                    "t1.prof_num",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show the official names of the cities that have hosted more than one competition.",
                "masked_template": "Show the <mask> names of the <mask> that have <mask> more than one <mask>",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "t1.official_name",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "farm_competition",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city_id",
                    "group",
                    "by",
                    "t2.host_city_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.official_name",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "farm_competition",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city_id",
                    "group",
                    "by",
                    "t2.host_city_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the official names of cities that have hosted more than one competition?",
                "masked_template": "What are the <mask> names of <mask> that have <mask> more than one <mask>",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "t1.official_name",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "farm_competition",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city_id",
                    "group",
                    "by",
                    "t2.host_city_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.official_name",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "farm_competition",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city_id",
                    "group",
                    "by",
                    "t2.host_city_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the names of customers who have taken out more than one loan?",
                "masked_template": "What are the names of <mask> who have <mask> out more than one <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "loan_1",
                "query_toks": [
                    "select",
                    "t1.cust_name",
                    "from",
                    "customer",
                    "as",
                    "t1",
                    "join",
                    "loan",
                    "as",
                    "t2",
                    "on",
                    "t1.cust_id",
                    "=",
                    "t2.cust_id",
                    "group",
                    "by",
                    "t1.cust_name",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.cust_name",
                    "from",
                    "customer",
                    "as",
                    "t1",
                    "join",
                    "loan",
                    "as",
                    "t2",
                    "on",
                    "t1.cust_id",
                    "=",
                    "t2.cust_id",
                    "group",
                    "by",
                    "t1.cust_name",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Find the name of the ships that have more than one captain.",
                "masked_template": "Find the name of the <mask> that have more than one <mask>",
                "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "ship_1",
                "query_toks": [
                    "select",
                    "t1.name",
                    "from",
                    "ship",
                    "as",
                    "t1",
                    "join",
                    "captain",
                    "as",
                    "t2",
                    "on",
                    "t1.ship_id",
                    "=",
                    "t2.ship_id",
                    "group",
                    "by",
                    "t2.ship_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    "from",
                    "ship",
                    "as",
                    "t1",
                    "join",
                    "captain",
                    "as",
                    "t2",
                    "on",
                    "t1.ship_id",
                    "=",
                    "t2.ship_id",
                    "group",
                    "by",
                    "t2.ship_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the names of staff who have been assigned multiple jobs?",
                "masked_template": "What are the names of <mask> who have <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "List the name of staff who has been assigned multiple jobs.",
                "masked_template": "List the name of <mask> who has <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What are the names of students who have more than one advisor?",
                "masked_template": "What are the names of <mask> who have more than one <mask>",
                "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Show the locations of schools that have more than 1 player.",
                "masked_template": "Show the <mask> of <mask> that have more than 1 <mask>",
                "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Show the names of countries that have more than one roller coaster.",
                "masked_template": "Show the names of <mask> that have more than one <mask>",
                "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "What are the names of shops that have more than a single kind of device in stock?",
                "masked_template": "What are the names of <mask> that have more than a <mask> of <mask> in <mask>",
                "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "What are the names of ships that have more than one captain?",
                "masked_template": "What are the names of <mask> that have more than one <mask>",
                "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "Find the names of rooms that have been reserved for more than 60 times.",
                "masked_template": "Find the names of <mask> that have <mask> for more than 60 <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
                "masked_template": "What are the names of <mask> whose <mask> 60 <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What are the names of instructors who advise more than one student?",
                "masked_template": "What are the names of <mask> who <mask> more than one <mask>",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the name of physicians who are in charge of more than one patient.",
                "masked_template": "Find the name of <mask> who are in <mask> of more than one <mask>",
                "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Find the names of users who have more than one tweet.",
                "masked_template": "Find the names of <mask> who have more than one <mask>",
                "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "Find the name of customers who have more than one loan.",
                "masked_template": "Find the name of <mask> who have more than one <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Find the first names of professors who are teaching more than one class.",
                "masked_template": "Find the <mask> names of <mask> who are <mask> more than one <mask>",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
                "masked_template": "Which <mask> have <mask> more than <mask> in <mask> of <mask> Return the <mask>",
                "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
                "ted": 0.0,
                "db_id": "insurance_fnol"
            },
            {
                "question": "Which physicians are in charge of more than one patient? Give me their names.",
                "masked_template": "Which <mask> are in <mask> of more than one <mask> me their <mask>",
                "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Which schools have more than 1 player? Give me the school locations.",
                "masked_template": "Which <mask> have more than 1 <mask> me the <mask>",
                "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Find the name of instructors who are advising more than one student.",
                "masked_template": "Find the name of <mask> who are <mask> more than one <mask>",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the carriers of devices that are in stock in more than a single shop?",
                "masked_template": "What are the <mask> of <mask> that are in <mask> in more than a <mask>",
                "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Show names of shops that have more than one kind of device in stock.",
                "masked_template": "Show names of <mask> that have more than one <mask> of <mask> in <mask>",
                "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Show the carriers of devices in stock at more than one shop.",
                "masked_template": "Show the <mask> of <mask> in <mask> at more than one <mask>",
                "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "List the name of playlist which has number of tracks greater than 100.",
                "masked_template": "List the name of <mask> which has number of <mask> than <mask>",
                "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the names of all playlists that have more than 100 tracks?",
                "masked_template": "What are the names of all <mask> that have more than 100 <mask>",
                "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the names of the albums that have more than 10 tracks?",
                "masked_template": "What are the names of the <mask> that have more than 10 <mask>",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "List title of albums have the number of tracks greater than 10.",
                "masked_template": "List <mask> of <mask> have the number of <mask> than 10.",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
                "ted": 0.0,
                "db_id": "store_1"
            }
        ],
        "best_hyp": "What are the names of singers who sang more than one song?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of singers who sang more than one song?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age > 43 INTERSECT SELECT country FROM singer WHERE age < 29",
        "proc_query": "( <col> country </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> age </col> ) greater than ( <val> 43 </val> ) ), and intersect with ( ( <col> country </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> age </col> ) less than ( <val> 29 </val> ) ))",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "Show the countries that have both singers older than 43 and singers younger than 29.",
                8.684188842773438
            ],
            [
                "What are the countries of the singers that are older than 43 and younger than 29?",
                9.766282081604004
            ],
            [
                "Show the countries that have singers with ages more than 43 and singers with age less than 29",
                9.603474617004395
            ],
            [
                "Which countries correspond to both singers that are older than 43 and singers that have a younger age than 29?",
                9.049291610717773
            ],
            [
                "What are the countries that have both singers that are older than 43 and singers younger than 29?",
                8.96228313446045
            ],
            [
                "Show the countries shared by singers with age greater than 43 and singers younger than 29",
                8.901165008544922
            ],
            [
                "Show the countries shared by singers with age greater than 43 and singers younger than 29",
                8.901165008544922
            ],
            [
                "Which countries have singers older than 43 or younger than 29?",
                8.571335792541504
            ],
            [
                "Show the countries that have both singers older than 43 and singers younger than 29",
                8.168989181518555
            ],
            [
                "Show the countries that have singers older than 43 and singers younger than 29",
                8.114431381225586
            ],
            [
                "Which country has both singers older than 43 and singers younger than 29?",
                8.05994701385498
            ],
            [
                "Find the countries that have both singers with more than 43 years old and singers with less than 29 years old",
                7.848073959350586
            ],
            [
                "Show the countries that have both singers with more than 43 years old and singers with less than 29 years old",
                7.844764232635498
            ],
            [
                "Which countries have both singers that are older than 43 and singers younger than 29?",
                7.826708793640137
            ],
            [
                "Show the countries of singers that are older than 43 and younger than 29",
                7.753114223480225
            ],
            [
                "What are the countries that have both singers with more than 43 years old and singers with younger than 29?",
                6.691866874694824
            ],
            [
                "Show the countries shared by singers that are older than 43 and singers younger than 29",
                6.383356094360352
            ],
            [
                "What are the countries that have singers in both ages who are older than 43 and younger than 29?",
                1.3916358947753906
            ],
            [
                "Give me a list of countries where singers whose age is either above 43 or below 29",
                0.874181866645813
            ],
            [
                "Which countries have both singers older than 45 and singers younger than 35?",
                -11.240433692932129
            ],
            [
                "Show the countries that have both singers older than 45 and singers younger than 35.",
                -11.383927345275879
            ],
            [
                "Show the countries that have both singers with age more than 50 and singers younger than 20.",
                -11.499887466430664
            ],
            [
                "Show the countries shared by singers older than 23 and singers younger than 20.",
                -11.510712623596191
            ],
            [
                "What are the countries with both singers having more than 20 years old and singers younger than 10?",
                -11.566632270812988
            ],
            [
                "Show the countries that have both singers with more than 10 years of age and singers with less than 3 years of ages.",
                -11.570698738098145
            ],
            [
                "Which countries did both singers older than 23 and singers younger than 20 come from?",
                -11.64121150970459
            ],
            [
                "Which countries have both singers older than 90 and singers younger than 29?",
                -11.663905143737793
            ],
            [
                "What are the countries of both singers that are older than 43 and singers younger than 10?",
                -11.69604778289795
            ],
            [
                "Show the countries that have both singers of age above 50 and singers younger than 46.",
                -11.782100677490234
            ],
            [
                "Show the countries that have both singers older than 32 and singers younger than 64.",
                -11.808284759521484
            ],
            [
                "Show the countries that have both singers with age greater than 43 and singers younger than 80.",
                -11.945283889770508
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?",
                "masked_template": "What are the <mask> of the <mask> that have both <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
                "ted": 0.0,
                "db_id": "ship_mission",
                "query_toks": [
                    "select",
                    "type",
                    "from",
                    "ship",
                    "where",
                    "tonnage",
                    ">",
                    "6000",
                    "intersect",
                    "select",
                    "type",
                    "from",
                    "ship",
                    "where",
                    "tonnage",
                    "<",
                    "4000"
                ],
                "query_toks_no_value": [
                    "select",
                    "type",
                    "from",
                    "ship",
                    "where",
                    "tonnage",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "type",
                    "from",
                    "ship",
                    "where",
                    "tonnage",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.",
                "masked_template": "Show the <mask> that have <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
                "ted": 0.0,
                "db_id": "climbing",
                "query_toks": [
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    ">",
                    "5600",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    "<",
                    "5200"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?",
                "masked_template": "Which <mask> to both <mask> that have a <mask> and <mask> that have a <mask> than <mask>",
                "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    ">",
                    "1500",
                    "intersect",
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    "<",
                    "500"
                ],
                "query_toks_no_value": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    "<",
                    "value"
                ]
            },
            {
                "question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?",
                "masked_template": "What are the <mask> that have both <mask> that are <mask> than <mask> and <mask> than <mask>",
                "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
                "ted": 0.0,
                "db_id": "climbing",
                "query_toks": [
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    ">",
                    "5600",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    "<",
                    "5200"
                ],
                "query_toks_no_value": [
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "country",
                    "from",
                    "mountain",
                    "where",
                    "height",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.",
                "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> than <mask>",
                "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    ">",
                    "1500",
                    "intersect",
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    "<",
                    "500"
                ],
                "query_toks_no_value": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    ">",
                    "value",
                    "intersect",
                    "select",
                    "status",
                    "from",
                    "city",
                    "where",
                    "population",
                    "<",
                    "value"
                ]
            },
            {
                "question": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.",
                "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> with <mask>",
                "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Which cities have regional population above 8000000 or below 5000000?",
                "masked_template": "Which <mask> have <mask> or <mask>",
                "query": "SELECT city FROM city WHERE regional_population > 10000000 UNION SELECT city FROM city WHERE regional_population < 5000000",
                "ted": 0.029411764705882353,
                "db_id": "city_record"
            },
            {
                "question": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.",
                "masked_template": "Show the <mask> that have <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT Publisher FROM publication WHERE Price > 10000000 INTERSECT SELECT Publisher FROM publication WHERE Price < 5000000",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?",
                "masked_template": "Which <mask> has both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT country FROM stadium WHERE capacity > 60000 INTERSECT SELECT country FROM stadium WHERE capacity < 50000",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.",
                "masked_template": "Find the <mask> have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show the locations that have both performances with more than 2000 attendees and performances with less than 1000 attendees.",
                "masked_template": "Show the <mask> that have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM performance WHERE Attendance > 2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance < 1000",
                "ted": 0.0,
                "db_id": "performance_attendance"
            },
            {
                "question": "Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?",
                "masked_template": "Which <mask> both <mask> that <mask> the <mask> and <mask> that <mask>",
                "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.",
                "masked_template": "Show the <mask> of <mask> that have both <mask> with <mask> than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "What are the locations that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?",
                "masked_template": "What are the <mask> that have both <mask> with more than <mask> and <mask> with <mask> than <mask>",
                "query": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000.",
                "masked_template": "Show the <mask> by <mask> that <mask> more than <mask> and <mask> that <mask> than <mask>",
                "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested > 140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested < 120000",
                "ted": 0.0,
                "db_id": "entrepreneur"
            },
            {
                "question": "What are the investors who have invested in both entrepreneurs who requested more than 140000 and entrepreneurs who requested less than 120000?",
                "masked_template": "What are the <mask> who have <mask> in both <mask> who <mask> more than <mask> and <mask> who <mask> than <mask>",
                "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested > 140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested < 120000",
                "ted": 0.0,
                "db_id": "entrepreneur"
            },
            {
                "question": "Please give me a list of cities whose regional population is over 8000000 or under 5000000.",
                "masked_template": "<mask> me a list of <mask> whose <mask> is <mask> or <mask>",
                "query": "SELECT city FROM city WHERE regional_population > 10000000 UNION SELECT city FROM city WHERE regional_population < 5000000",
                "ted": 0.029411764705882353,
                "db_id": "city_record"
            },
            {
                "question": "Which nations have both hosts of age above 45 and hosts of age below 35?",
                "masked_template": "Which <mask> have both <mask> of age <mask> 45 and <mask> of age <mask> 35?",
                "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show the nations that have both hosts older than 45 and hosts younger than 35.",
                "masked_template": "Show the <mask> that have both <mask> than 45 and <mask> than 35.",
                "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show the countries that have both perpetrators with injures more than 50 and perpetrators with injures smaller than 20.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> more than 50 and <mask> with <mask> than 20.",
                "query": "SELECT Country FROM perpetrator WHERE Injured > 50 INTERSECT SELECT Country FROM perpetrator WHERE Injured < 20",
                "ted": 0.0,
                "db_id": "perpetrator"
            },
            {
                "question": "Show the hometowns shared by people older than 23 and younger than 20.",
                "masked_template": "Show the <mask> by <mask> than 23 and <mask> than 20.",
                "query": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
                "ted": 0.0,
                "db_id": "gymnast"
            },
            {
                "question": "What are the positions with both players having more than 20 points and less than 10 points.",
                "masked_template": "What are the <mask> with both <mask> having more than 20 <mask> and <mask> than 10 <mask>",
                "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.",
                "masked_template": "Show the <mask> that have both <mask> with more than 10 <mask> of <mask> and <mask> with <mask> than 3 <mask> of <mask>",
                "query": "SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3",
                "ted": 0.0,
                "db_id": "news_report"
            },
            {
                "question": "From which hometowns did both people older than 23 and younger than 20 come from?",
                "masked_template": "<mask> which <mask> did both <mask> than 23 and <mask> than 20 <mask>",
                "query": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
                "ted": 0.0,
                "db_id": "gymnast"
            },
            {
                "question": "Which colleges have both authors with submission score above 90 and authors with submission score below 80?",
                "masked_template": "Which <mask> have both <mask> with <mask> 90 and <mask> with <mask> 80?",
                "query": "SELECT College FROM submission WHERE Scores > 90 INTERSECT SELECT College FROM submission WHERE Scores < 80",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "What are the positions of both players that have more than 20 20 points and less than 10 points?",
                "masked_template": "What are the <mask> of both <mask> that have more than 20 20 <mask> and <mask> than 10 <mask>",
                "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "Show the countries that have both managers of age above 50 and managers of age below 46.",
                "masked_template": "Show the <mask> that have both <mask> of age <mask> 50 and <mask> of age <mask> 46.",
                "query": "SELECT Country FROM manager WHERE Age > 50 INTERSECT SELECT Country FROM manager WHERE Age < 46",
                "ted": 0.0,
                "db_id": "railway"
            },
            {
                "question": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than 32 and <mask> with <mask> than 64.",
                "query": "SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64",
                "ted": 0.058823529411764705,
                "db_id": "phone_market"
            },
            {
                "question": "Show the colleges that have both authors with submission score larger than 90 and authors with submission score smaller than 80.",
                "masked_template": "Show the <mask> that have both <mask> with <mask> than 90 and <mask> with <mask> than 80.",
                "query": "SELECT College FROM submission WHERE Scores > 90 INTERSECT SELECT College FROM submission WHERE Scores < 80",
                "ted": 0.0,
                "db_id": "workshop_paper"
            }
        ],
        "best_hyp": "Show the countries that have both singers older than 45 and singers younger than 35.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Show the countries that have both singers older than 43 and singers younger than 29.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "proc_query": "( <col> name </col> of <tab> conductor </tab> ) that belongs to ( ( <tab> conductor </tab> ) , and ( ( <tab> orchestra </tab> ) satisfied that ( ( <col> conductor id </col> of <tab> conductor </tab> ) equal to ( <col> conductor id </col> of <tab> orchestra </tab> ) ) ) ) , grouped by ( <col> conductor id </col> of <tab> orchestra </tab> ) , that have ( ( the number of ( all items ) ) greater than ( <val> 2 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the name of the conductor who has more than two orchestras?",
                10.828808784484863
            ],
            [
                "List the name of the conductor who has more than two orchestras.",
                10.967756271362305
            ],
            [
                "Find the names of all the musicians that have been in charge of more than two orchestras.",
                10.82400894165039
            ],
            [
                "List the name of conductor who has number of orchestras bigger than 2",
                8.19754695892334
            ],
            [
                "Which musicians have more than two orchestras in total? Return the names of these musicians.",
                7.044815540313721
            ],
            [
                "What are the names of all the musicians whose orchestra has more than two tracks?",
                6.428150177001953
            ],
            [
                "What are the names of all the musicians that have more than two orchestras?",
                6.1614274978637695
            ],
            [
                "What are the names of all the musicians who have more than two orchestras?",
                6.103452205657959
            ],
            [
                "What are the names of the musicians that have more than two orchestras?",
                4.3041486740112305
            ],
            [
                "What are the names of the heads that are in charge of more than two orchestras?",
                3.5937325954437256
            ],
            [
                "What are the names of all the musicians who have been in charge of more than one orchestra?",
                -10.840996742248535
            ],
            [
                "Which musicians are in charge of more than one orchestra? Tell me their names.",
                -10.98593521118164
            ],
            [
                "What are the names of the heads that have been in charge of more than one orchestra?",
                -11.064743041992188
            ],
            [
                "Find the names of all the musicians who are in charge of more than one orchestra.",
                -11.1084566116333
            ],
            [
                "Which musicians have more than one orchestra? Tell me the conductor name.",
                -11.223408699035645
            ],
            [
                "Find the names of the heads who are in charge of more than one orchestra.",
                -11.52856731414795
            ],
            [
                "Find the names of the heads who are in charge of more than one orchestra.",
                -11.52856731414795
            ],
            [
                "Show the names of the heads in charge of more than one orchestra.",
                -11.69006061553955
            ],
            [
                "Find the names of all the musicians who have more than one orchestra.",
                -11.763671875
            ],
            [
                "Find the names of all the musicians who have more than one orchestra.",
                -11.763671875
            ],
            [
                "Show the names of all the musicians that have more than one orchestra.",
                -11.813721656799316
            ],
            [
                "Show the names of all the musicians that have more than one orchestra.",
                -11.813721656799316
            ],
            [
                "What are the names of all the musicians that have more than a pair of orchestras in total?",
                -11.824065208435059
            ],
            [
                "What are the names of all the musicians that have more than one orchestra?",
                -11.830946922302246
            ],
            [
                "What are the names of all the musicians who have more than one orchestra?",
                -11.839864730834961
            ],
            [
                "What are the names of all the musicians who have more than one orchestra?",
                -11.839864730834961
            ],
            [
                "What are the names of all the musicians who have more than one orchestra?",
                -11.839864730834961
            ],
            [
                "Show names of all the musicians that have more than one orchestra.",
                -11.852029800415039
            ],
            [
                "Find the name of the musicians that have more than one orchestra.",
                -11.86217975616455
            ],
            [
                "Show the names of the musicians that have more than one orchestra.",
                -11.865781784057617
            ],
            [
                "List names of all the musicians who have the number of orchestras greater than 10.",
                -12.086522102355957
            ]
        ],
        "templates": [
            "",
            {
                "question": "List the name of staff who has been assigned multiple jobs.",
                "masked_template": "List the name of <mask> who has <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "department_store",
                "query_toks": [
                    "select",
                    "t1.staff_name",
                    "from",
                    "staff",
                    "as",
                    "t1",
                    "join",
                    "staff_department_assignments",
                    "as",
                    "t2",
                    "on",
                    "t1.staff_id",
                    "=",
                    "t2.staff_id",
                    "group",
                    "by",
                    "t2.staff_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.staff_name",
                    "from",
                    "staff",
                    "as",
                    "t1",
                    "join",
                    "staff_department_assignments",
                    "as",
                    "t2",
                    "on",
                    "t1.staff_id",
                    "=",
                    "t2.staff_id",
                    "group",
                    "by",
                    "t2.staff_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Find the names of rooms that have been reserved for more than 60 times.",
                "masked_template": "Find the names of <mask> that have <mask> for more than 60 <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
                "ted": 0.0,
                "db_id": "inn_1",
                "query_toks": [
                    "select",
                    "t2.roomname",
                    "from",
                    "reservations",
                    "as",
                    "t1",
                    "join",
                    "rooms",
                    "as",
                    "t2",
                    "on",
                    "t1.room",
                    "=",
                    "t2.roomid",
                    "group",
                    "by",
                    "t1.room",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "60"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.roomname",
                    "from",
                    "reservations",
                    "as",
                    "t1",
                    "join",
                    "rooms",
                    "as",
                    "t2",
                    "on",
                    "t1.room",
                    "=",
                    "t2.roomid",
                    "group",
                    "by",
                    "t1.room",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "List the name of playlist which has number of tracks greater than 100.",
                "masked_template": "List the name of <mask> which has number of <mask> than <mask>",
                "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
                "ted": 0.0,
                "db_id": "store_1",
                "query_toks": [
                    "select",
                    "t2.name",
                    "from",
                    "playlist_tracks",
                    "as",
                    "t1",
                    "join",
                    "playlists",
                    "as",
                    "t2",
                    "on",
                    "t2.id",
                    "=",
                    "t1.playlist_id",
                    "group",
                    "by",
                    "t1.playlist_id",
                    "having",
                    "count",
                    "(",
                    "t1.track_id",
                    ")",
                    ">",
                    "100"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.name",
                    "from",
                    "playlist_tracks",
                    "as",
                    "t1",
                    "join",
                    "playlists",
                    "as",
                    "t2",
                    "on",
                    "t2.id",
                    "=",
                    "t1.playlist_id",
                    "group",
                    "by",
                    "t1.playlist_id",
                    "having",
                    "count",
                    "(",
                    "t1.track_id",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
                "masked_template": "Which <mask> have <mask> more than <mask> in <mask> of <mask> Return the <mask>",
                "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
                "ted": 0.0,
                "db_id": "insurance_fnol",
                "query_toks": [
                    "select",
                    "t2.service_name",
                    "from",
                    "first_notification_of_loss",
                    "as",
                    "t1",
                    "join",
                    "services",
                    "as",
                    "t2",
                    "on",
                    "t1.service_id",
                    "=",
                    "t2.service_id",
                    "group",
                    "by",
                    "t1.service_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "2"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.service_name",
                    "from",
                    "first_notification_of_loss",
                    "as",
                    "t1",
                    "join",
                    "services",
                    "as",
                    "t2",
                    "on",
                    "t1.service_id",
                    "=",
                    "t2.service_id",
                    "group",
                    "by",
                    "t1.service_id",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
                "masked_template": "What are the names of <mask> whose <mask> 60 <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
                "ted": 0.0,
                "db_id": "inn_1",
                "query_toks": [
                    "select",
                    "t2.roomname",
                    "from",
                    "reservations",
                    "as",
                    "t1",
                    "join",
                    "rooms",
                    "as",
                    "t2",
                    "on",
                    "t1.room",
                    "=",
                    "t2.roomid",
                    "group",
                    "by",
                    "t1.room",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "60"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.roomname",
                    "from",
                    "reservations",
                    "as",
                    "t1",
                    "join",
                    "rooms",
                    "as",
                    "t2",
                    "on",
                    "t1.room",
                    "=",
                    "t2.roomid",
                    "group",
                    "by",
                    "t1.room",
                    "having",
                    "count",
                    "(",
                    "*",
                    ")",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the names of all playlists that have more than 100 tracks?",
                "masked_template": "What are the names of all <mask> that have more than 100 <mask>",
                "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the names of staff who have been assigned multiple jobs?",
                "masked_template": "What are the names of <mask> who have <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What are the names of the albums that have more than 10 tracks?",
                "masked_template": "What are the names of the <mask> that have more than 10 <mask>",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the carriers of devices that are in stock in more than a single shop?",
                "masked_template": "What are the <mask> of <mask> that are in <mask> in more than a <mask>",
                "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "What are the names of customers who have taken out more than one loan?",
                "masked_template": "What are the names of <mask> who have <mask> out more than one <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Which physicians are in charge of more than one patient? Give me their names.",
                "masked_template": "Which <mask> are in <mask> of more than one <mask> me their <mask>",
                "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "What are the official names of cities that have hosted more than one competition?",
                "masked_template": "What are the <mask> names of <mask> that have <mask> more than one <mask>",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "Find the name of physicians who are in charge of more than one patient.",
                "masked_template": "Find the name of <mask> who are in <mask> of more than one <mask>",
                "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Which schools have more than 1 player? Give me the school locations.",
                "masked_template": "Which <mask> have more than 1 <mask> me the <mask>",
                "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Find the name of instructors who are advising more than one student.",
                "masked_template": "Find the name of <mask> who are <mask> more than one <mask>",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the first names of professors who are teaching more than one class.",
                "masked_template": "Find the <mask> names of <mask> who are <mask> more than one <mask>",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Show the carriers of devices in stock at more than one shop.",
                "masked_template": "Show the <mask> of <mask> in <mask> at more than one <mask>",
                "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Find the name of customers who have more than one loan.",
                "masked_template": "Find the name of <mask> who have more than one <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Find the names of users who have more than one tweet.",
                "masked_template": "Find the names of <mask> who have more than one <mask>",
                "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "Show the names of countries that have more than one roller coaster.",
                "masked_template": "Show the names of <mask> that have more than one <mask>",
                "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Show the locations of schools that have more than 1 player.",
                "masked_template": "Show the <mask> of <mask> that have more than 1 <mask>",
                "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "What are the names of shops that have more than a single kind of device in stock?",
                "masked_template": "What are the names of <mask> that have more than a <mask> of <mask> in <mask>",
                "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "What are the names of ships that have more than one captain?",
                "masked_template": "What are the names of <mask> that have more than one <mask>",
                "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "What are the first names of all professors who teach more than one class?",
                "masked_template": "What are the <mask> names of all <mask> who <mask> more than one <mask>",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "What are the names of instructors who advise more than one student?",
                "masked_template": "What are the names of <mask> who <mask> more than one <mask>",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of students who have more than one advisor?",
                "masked_template": "What are the names of <mask> who have more than one <mask>",
                "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Show names of shops that have more than one kind of device in stock.",
                "masked_template": "Show names of <mask> that have more than one <mask> of <mask> in <mask>",
                "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "Find the name of the ships that have more than one captain.",
                "masked_template": "Find the name of the <mask> that have more than one <mask>",
                "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "Show the official names of the cities that have hosted more than one competition.",
                "masked_template": "Show the <mask> names of the <mask> that have <mask> more than one <mask>",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "List title of albums have the number of tracks greater than 10.",
                "masked_template": "List <mask> of <mask> have the number of <mask> than 10.",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count( T1.id ) > 10",
                "ted": 0.0,
                "db_id": "store_1"
            }
        ],
        "best_hyp": "Which musicians are in charge of more than one orchestra? Tell me their names.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name of the conductor who has more than two orchestras?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT( * ) DESC LIMIT 1",
        "proc_query": "( <col> citizenship </col> ) that belongs to ( <tab> singer </tab> ) , grouped by ( <col> citizenship </col> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the most common citizenship among singers?",
                8.125494956970215
            ],
            [
                "List the citizenship shared by the greatest number of singers.",
                9.721541404724121
            ],
            [
                "Find the citizenship that is the most common in all the singers. Tell me its name.",
                9.464400291442871
            ],
            [
                "Find the citizenship that is most common among singers.",
                8.439154624938965
            ],
            [
                "What is the most common citizenship among singers?",
                8.125489234924316
            ],
            [
                "What is the most common citizenship among singers?",
                8.125489234924316
            ],
            [
                "Return the citizenship of the singer that is most common.",
                7.857346057891846
            ],
            [
                "List the citizenship shared by the most singers.",
                7.7865447998046875
            ],
            [
                "What is the citizenship shared by the most singers?",
                7.652998447418213
            ],
            [
                "What is the citizenship that is most common among singers?",
                7.2874064445495605
            ],
            [
                "Show the nations that have the most singers.",
                7.259739875793457
            ],
            [
                "List the most common citizenship of singers.",
                7.234443664550781
            ],
            [
                "Show the most common citizenship of singers.",
                6.804128170013428
            ],
            [
                "Show the most common citizenship of singers.",
                6.804128170013428
            ],
            [
                "What is the citizenship of the singer with the most songs?",
                6.279976844787598
            ],
            [
                "What are the countries which the most singers are from?",
                5.414453506469727
            ],
            [
                "Return the citizenship for which there are the fewest singers.",
                5.379260063171387
            ],
            [
                "Which nationality is most common among singers?",
                2.646662712097168
            ],
            [
                "Show the top 3 most common countries of singers in descending order of number of singers.",
                -0.5813320279121399
            ],
            [
                "Show the country with the most number of singers.",
                -3.1404268741607666
            ],
            [
                "Find the country that has the most singers.",
                -3.145305633544922
            ],
            [
                "Which country has the most singers?",
                -5.8576979637146
            ],
            [
                "Which country has the most singers?",
                -5.857698440551758
            ],
            [
                "Which country has most number of singers?",
                -6.310181140899658
            ],
            [
                "What is the citizenship of the singer?",
                -7.078637599945068
            ],
            [
                "Find the citizenship of most of singers are living in.",
                -7.7662177085876465
            ],
            [
                "Find the names of the top 3 countries that have the greatest number of singers.",
                -10.092652320861816
            ],
            [
                "What is the name of the country with the fewest singers?",
                -10.550378799438477
            ],
            [
                "List the name of country that have the most number of singers.",
                -11.19856071472168
            ],
            [
                "What is the id of the country with the most singers?",
                -11.547246932983398
            ],
            [
                "What is the name of teh country that has the most singers?",
                -11.577242851257324
            ]
        ],
        "templates": [
            "",
            {
                "question": "List the software platform shared by the greatest number of devices.",
                "masked_template": "List the <mask> by the <mask> number of <mask>",
                "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "software_platform",
                    "from",
                    "device",
                    "group",
                    "by",
                    "software_platform",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "software_platform",
                    "from",
                    "device",
                    "group",
                    "by",
                    "software_platform",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
                "masked_template": "Find the <mask> that is <mask> the most <mask> in all the <mask> me its <mask>",
                "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "payment_method_code",
                    "from",
                    "invoices",
                    "group",
                    "by",
                    "payment_method_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "payment_method_code",
                    "from",
                    "invoices",
                    "group",
                    "by",
                    "payment_method_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Find the payment method that is used most frequently.",
                "masked_template": "Find the <mask> that is <mask> most <mask>",
                "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "customer_deliveries",
                "query_toks": [
                    "select",
                    "payment_method",
                    "from",
                    "customers",
                    "group",
                    "by",
                    "payment_method",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "payment_method",
                    "from",
                    "customers",
                    "group",
                    "by",
                    "payment_method",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the most common participant type?",
                "masked_template": "What is the most <mask>",
                "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama",
                "query_toks": [
                    "select",
                    "participant_type_code",
                    "from",
                    "participants",
                    "group",
                    "by",
                    "participant_type_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "participant_type_code",
                    "from",
                    "participants",
                    "group",
                    "by",
                    "participant_type_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the largest major?",
                "masked_template": "What is the <mask>",
                "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Return the code of the document type that is most common.",
                "masked_template": "Return the <mask> of the <mask> that is most <mask>",
                "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses",
                "query_toks": [
                    "select",
                    "document_type_code",
                    "from",
                    "documents",
                    "group",
                    "by",
                    "document_type_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "document_type_code",
                    "from",
                    "documents",
                    "group",
                    "by",
                    "document_type_code",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "List the industry shared by the most companies.",
                "masked_template": "List the <mask> by the most <mask>",
                "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What is the payment method code used by the most orders?",
                "masked_template": "What is the <mask> by the most <mask>",
                "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What is the position that is most common among players in match seasons?",
                "masked_template": "What is the <mask> that is most <mask> in <mask>",
                "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Show the people that have been governor the most times.",
                "masked_template": "Show the <mask> that have <mask> the most <mask>",
                "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "List the most common type of competition.",
                "masked_template": "List the most <mask> of <mask>",
                "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "Show the most common position of players in match seasons.",
                "masked_template": "Show the most <mask> of <mask> in <mask>",
                "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Show the most frequently used carrier of the phones.",
                "masked_template": "Show the most <mask> of the <mask>",
                "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "What is the code of the city with the most students?",
                "masked_template": "What is the <mask> of the <mask> with the most <mask>",
                "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "What are the three colleges from which the most players are from?",
                "masked_template": "What are the <mask> which the most <mask> are <mask>",
                "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Return the rank for which there are the fewest captains.",
                "masked_template": "Return the <mask> for which there are the <mask>",
                "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "Which allergy type is most common?",
                "masked_template": "Which <mask> is most <mask>",
                "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Show the top 3 most common colleges of players in match seasons.",
                "masked_template": "Show the top 3 most <mask> of <mask> in <mask>",
                "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "match_season"
            },
            {
                "question": "Show the home city with the most number of drivers.",
                "masked_template": "Show the <mask> with the most number of <mask>",
                "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "school_bus"
            },
            {
                "question": "Find the country that has the most stadiums.",
                "masked_template": "Find the <mask> that has the most <mask>",
                "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Which people severed as governor most frequently?",
                "masked_template": "Which <mask> as <mask> most <mask>",
                "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Which location has the most corresponding counties?",
                "masked_template": "Which <mask> has the most <mask>",
                "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Which allergy type has most number of allergies?",
                "masked_template": "Which <mask> has most number of <mask>",
                "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "What instrument is used the most?",
                "masked_template": "What <mask> is <mask> the <mask>",
                "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_2"
            },
            {
                "question": "Find the code of city where most of students are living in.",
                "masked_template": "Find the <mask> of <mask> most of <mask> are <mask> in.",
                "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Find the names of the top 3 departments that provide the largest amount of courses?",
                "masked_template": "Find the names of the top 3 <mask> that <mask> the <mask> of <mask>",
                "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What is the name of the deparment with the highest enrollment?",
                "masked_template": "What is the name of the <mask> with the <mask>",
                "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the name of film studio that have the most number of films.",
                "masked_template": "List the name of <mask> that have the most number of <mask>",
                "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What is the id of the event with the most participants?",
                "masked_template": "What is the id of the <mask> with the most <mask>",
                "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "local_govt_in_alabama"
            },
            {
                "question": "What is the name of teh studio that created the most films?",
                "masked_template": "What is the name of teh <mask> that <mask> the most <mask>",
                "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "film_rank"
            }
        ],
        "best_hyp": "What is the id of the country with the most singers?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the most common citizenship among singers?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "proc_query": "( <col> song name </col> ) that belongs to ( <tab> singer </tab> ) , that have ( ( <col> age </col> ) greater than ( the <col> average </col> of ( <col> age </col> ) ) that belongs to ( <tab> singer </tab> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of singers who are older than average?",
                5.0173139572143555
            ],
            [
                "Find the song names for all singers who are older than the average age.",
                11.036223411560059
            ],
            [
                "What are the names of all singers that got older than the average number of singers?",
                10.82054328918457
            ],
            [
                "Find the name of songs whose age is greater than the average age of all singers.",
                10.480037689208984
            ],
            [
                "Find the name of songs whose age is greater than the average age of all singers.",
                10.480037689208984
            ],
            [
                "List the name of all songs that are sung older than the average age of all singers",
                10.00800609588623
            ],
            [
                "What is the total song name for all the singers that have an age greater than the average?",
                9.963889122009277
            ],
            [
                "What are the names of singers with age greater than the average of all singers?",
                9.29784870147705
            ],
            [
                "Find the names of singers whose age is greater than the average age.",
                9.001997947692871
            ],
            [
                "Find the names of singers whose age is greater than the average age.",
                9.001997947692871
            ],
            [
                "What are the names of singers that are older than the average number of singers for all ages?",
                8.921152114868164
            ],
            [
                "Find the name of singers whose age is older than the average age.",
                8.227309226989746
            ],
            [
                "What are the names of all singers who are older than average?",
                8.112266540527344
            ],
            [
                "What are the names of all singers that are older than average?",
                7.978002548217773
            ],
            [
                "what are the names of singers who are older than the average age?",
                7.633216381072998
            ],
            [
                "What are the names of singers that are older than the average age?",
                7.600381851196289
            ],
            [
                "Show names for all singers with age more than the average.",
                7.4468865394592285
            ],
            [
                "find the name of singers whose age is older than the average age.",
                7.22152042388916
            ],
            [
                "How many songs have a singer older than the average age?",
                6.315914630889893
            ],
            [
                "What are the names of singers with age greater than the average?",
                6.139189720153809
            ],
            [
                "Show ids for all songs whose singers are older than the average age.",
                5.62653112411499
            ],
            [
                "What are the names of singers with age above the average?",
                5.287795543670654
            ],
            [
                "What are the names of singers who are older than average?",
                5.017305850982666
            ],
            [
                "What are the ids for singers that are older than the average age of a singer?",
                -0.9500749707221985
            ],
            [
                "What is the number of songs that have more than the average number of singers?",
                -5.253931999206543
            ],
            [
                "How many songs have more than average number of singers are older than average?",
                -9.706477165222168
            ],
            [
                "List all the songs which have a singer that is no more than the average age. List the song names.",
                -9.753921508789062
            ],
            [
                "Return the names for the singers whose age is no more than the average.",
                -10.105647087097168
            ],
            [
                "What are the song names ids for singers who are older than the average age?",
                -10.72791862487793
            ],
            [
                "How many singers have a fee higher than the average?",
                -11.654500007629395
            ],
            [
                "How many singers have a fee higher than average?",
                -11.6819486618042
            ]
        ],
        "templates": [
            "",
            {
                "question": "Find the employee id for all employees who earn more than the average salary.",
                "masked_template": "Find the <mask> id for all <mask> who <mask> more than the average <mask>",
                "query": "SELECT employee_id FROM employees WHERE salary > ( SELECT AVG( salary ) FROM employees )",
                "ted": 0.0,
                "db_id": "hr_1",
                "query_toks": [
                    "select",
                    "employee_id",
                    "from",
                    "employees",
                    "where",
                    "salary",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "salary",
                    ")",
                    "from",
                    "employees",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "employee_id",
                    "from",
                    "employees",
                    "where",
                    "salary",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "salary",
                    ")",
                    "from",
                    "employees",
                    ")"
                ]
            },
            {
                "question": "What are the names of all players that got more than the average number of points?",
                "masked_template": "What are the names of all <mask> that got more than the average number of <mask>",
                "query": "SELECT name FROM player WHERE points > ( SELECT avg( points ) FROM player )",
                "ted": 0.0,
                "db_id": "sports_competition",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "player",
                    "where",
                    "points",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "points",
                    ")",
                    "from",
                    "player",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "player",
                    "where",
                    "points",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "points",
                    ")",
                    "from",
                    "player",
                    ")"
                ]
            },
            {
                "question": "Find the name of customers whose credit score is below the average credit scores of all customers.",
                "masked_template": "Find the name of <mask> whose <mask> is <mask> the average <mask> of all <mask>",
                "query": "SELECT cust_name FROM customer WHERE credit_score < ( SELECT avg( credit_score ) FROM customer )",
                "ted": 0.045454545454545456,
                "db_id": "loan_1",
                "query_toks": [
                    "select",
                    "cust_name",
                    "from",
                    "customer",
                    "where",
                    "credit_score",
                    "<",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "credit_score",
                    ")",
                    "from",
                    "customer",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "cust_name",
                    "from",
                    "customer",
                    "where",
                    "credit_score",
                    "<",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "credit_score",
                    ")",
                    "from",
                    "customer",
                    ")"
                ]
            },
            {
                "question": "Find the name of companies whose revenue is greater than the average revenue of all companies.",
                "masked_template": "Find the name of <mask> whose <mask> is <mask> than the average <mask> of all <mask>",
                "query": "SELECT name FROM manufacturers WHERE revenue > ( SELECT avg( revenue ) FROM manufacturers )",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "List the name of all projects that are operated longer than the average working hours of all projects.",
                "masked_template": "List the name of all <mask> that are <mask> than the average <mask> of all <mask>",
                "query": "SELECT name FROM projects WHERE hours > ( SELECT avg( hours ) FROM projects )",
                "ted": 0.0,
                "db_id": "scientist_1",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "projects",
                    "where",
                    "hours",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "hours",
                    ")",
                    "from",
                    "projects",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "projects",
                    "where",
                    "hours",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "hours",
                    ")",
                    "from",
                    "projects",
                    ")"
                ]
            },
            {
                "question": "What is the total population for all the districts that have an area larger tahn the average city area?",
                "masked_template": "What is the total <mask> for all the <mask> that have an <mask> the average <mask>",
                "query": "SELECT sum( city_population ) FROM district WHERE city_area > ( SELECT avg( city_area ) FROM district )",
                "ted": 0.08333333333333333,
                "db_id": "store_product",
                "query_toks": [
                    "select",
                    "sum",
                    "(",
                    "city_population",
                    ")",
                    "from",
                    "district",
                    "where",
                    "city_area",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "city_area",
                    ")",
                    "from",
                    "district",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "sum",
                    "(",
                    "city_population",
                    ")",
                    "from",
                    "district",
                    "where",
                    "city_area",
                    ">",
                    "(",
                    "select",
                    "avg",
                    "(",
                    "city_area",
                    ")",
                    "from",
                    "district",
                    ")"
                ]
            },
            {
                "question": "What are the names of manufacturers with revenue greater than the average of all revenues?",
                "masked_template": "What are the names of <mask> with <mask> than the average of all <mask>",
                "query": "SELECT name FROM manufacturers WHERE revenue > ( SELECT avg( revenue ) FROM manufacturers )",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "Find the names of stadiums whose capacity is smaller than the average capacity.",
                "masked_template": "Find the names of <mask> whose <mask> is <mask> than the average <mask>",
                "query": "SELECT name FROM stadium WHERE capacity < ( SELECT avg( capacity ) FROM stadium )",
                "ted": 0.045454545454545456,
                "db_id": "swimming"
            },
            {
                "question": "Find the count of universities whose campus fee is greater than the average campus fee.",
                "masked_template": "Find the count of <mask> whose <mask> fee is <mask> than the average <mask>",
                "query": "SELECT count( * ) FROM csu_fees WHERE campusfee > ( SELECT avg( campusfee ) FROM csu_fees )",
                "ted": 0.08333333333333333,
                "db_id": "csu_1"
            },
            {
                "question": "What are the names of projects that have taken longer than the average number of hours for all projects?",
                "masked_template": "What are the names of <mask> that have <mask> than the average number of <mask> for all <mask>",
                "query": "SELECT name FROM projects WHERE hours > ( SELECT avg( hours ) FROM projects )",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "Find the name of rooms whose price is higher than the average price.",
                "masked_template": "Find the name of <mask> whose <mask> is <mask> than the average <mask>",
                "query": "SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg( basePrice ) FROM Rooms ) ",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What are the names of all employees who have a salary higher than average?",
                "masked_template": "What are the names of all <mask> who have a <mask> than <mask>",
                "query": "SELECT name FROM Employee WHERE salary > ( SELECT avg( salary ) FROM Employee )",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "What are the names of all aircrafts that can cover more distances than average?",
                "masked_template": "What are the names of all <mask> that can <mask> more <mask> than <mask>",
                "query": "SELECT name FROM Aircraft WHERE distance > ( SELECT avg( distance ) FROM Aircraft )",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "what are the name of players who get more than the average points.",
                "masked_template": "what are the name of <mask> who get more than the average <mask>",
                "query": "SELECT name FROM player WHERE points > ( SELECT avg( points ) FROM player )",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What are the name of rooms that cost more than the average.",
                "masked_template": "What are the name of <mask> that <mask> more than the <mask>",
                "query": "SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg( basePrice ) FROM Rooms ) ",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Show names for all employees with salary more than the average.",
                "masked_template": "Show names for all <mask> with <mask> more than the <mask>",
                "query": "SELECT name FROM Employee WHERE salary > ( SELECT avg( salary ) FROM Employee )",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "find the name of people whose height is lower than the average.",
                "masked_template": "find the name of <mask> whose <mask> is <mask> than the <mask>",
                "query": "SELECT name FROM people WHERE height < ( SELECT avg( height ) FROM people )",
                "ted": 0.045454545454545456,
                "db_id": "candidate_poll"
            },
            {
                "question": "How many products have a price higher than the average?",
                "masked_template": "How many <mask> have a <mask> than the <mask>",
                "query": "SELECT count( * ) FROM products WHERE product_price > ( SELECT avg( product_price ) FROM products )",
                "ted": 0.08333333333333333,
                "db_id": "customers_and_products_contacts"
            },
            {
                "question": "What are the names of customers with credit score less than the average credit score across customers?",
                "masked_template": "What are the names of <mask> with <mask> than the average <mask>",
                "query": "SELECT cust_name FROM customer WHERE credit_score < ( SELECT avg( credit_score ) FROM customer )",
                "ted": 0.045454545454545456,
                "db_id": "loan_1"
            },
            {
                "question": "Show ids for all transactions whose amounts are greater than the average.",
                "masked_template": "Show ids for all <mask> whose <mask> are <mask> than the <mask>",
                "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount > ( SELECT avg( transaction_amount ) FROM Financial_transactions )",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "What are the mascots for schools with enrollments above the average?",
                "masked_template": "What are the <mask> for <mask> with <mask> the <mask>",
                "query": "SELECT mascot FROM school WHERE enrollment > ( SELECT avg( enrollment ) FROM school )",
                "ted": 0.0,
                "db_id": "school_finance"
            },
            {
                "question": "What are the names of people who are shorter than average?",
                "masked_template": "What are the names of <mask> who are <mask> than <mask>",
                "query": "SELECT name FROM people WHERE height < ( SELECT avg( height ) FROM people )",
                "ted": 0.045454545454545456,
                "db_id": "candidate_poll"
            },
            {
                "question": "What are the ids for transactions that have an amount greater than the average amount of a transaction?",
                "masked_template": "What are the ids for <mask> that have an <mask> than the average <mask> of a <mask>",
                "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount > ( SELECT avg( transaction_amount ) FROM Financial_transactions )",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "What is the number of branches that have more than the average number of memberships?",
                "masked_template": "What is the number of <mask> that have more than the average number of <mask>",
                "query": "SELECT count( * ) FROM branch WHERE membership_amount > ( SELECT avg( membership_amount ) FROM branch )",
                "ted": 0.08333333333333333,
                "db_id": "shop_membership"
            },
            {
                "question": "How many branches where have more than average number of memberships are there?",
                "masked_template": "How many <mask> have more than average number of <mask> are <mask>",
                "query": "SELECT count( * ) FROM branch WHERE membership_amount > ( SELECT avg( membership_amount ) FROM branch )",
                "ted": 0.08333333333333333,
                "db_id": "shop_membership"
            },
            {
                "question": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date.",
                "masked_template": "<mask> all the <mask> which <mask> have a <mask> that is no more than the <mask> List the <mask>",
                "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled <= ( SELECT avg( Amount_Settled ) FROM Claims )",
                "ted": 0.045454545454545456,
                "db_id": "insurance_policies"
            },
            {
                "question": "Return the claim start date for the claims whose claimed amount is no more than the average",
                "masked_template": "Return the <mask> for the <mask> whose <mask> is no more than the average",
                "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled <= ( SELECT avg( Amount_Settled ) FROM Claims )",
                "ted": 0.045454545454545456,
                "db_id": "insurance_policies"
            },
            {
                "question": "What are the employee ids for employees who make more than the average?",
                "masked_template": "What are the <mask> ids for <mask> who <mask> more than the <mask>",
                "query": "SELECT employee_id FROM employees WHERE salary > ( SELECT AVG( salary ) FROM employees )",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "How many universities have a campus fee greater than the average?",
                "masked_template": "How many <mask> have a <mask> fee <mask> than the <mask>",
                "query": "SELECT count( * ) FROM csu_fees WHERE campusfee > ( SELECT avg( campusfee ) FROM csu_fees )",
                "ted": 0.08333333333333333,
                "db_id": "csu_1"
            },
            {
                "question": "How many universities have a campus fee higher than average?",
                "masked_template": "How many <mask> have a <mask> fee <mask> than <mask>",
                "query": "SELECT count( * ) FROM csu_fees WHERE campusfee > ( SELECT avg( campusfee ) FROM csu_fees )",
                "ted": 0.08333333333333333,
                "db_id": "csu_1"
            }
        ],
        "best_hyp": "What are the names of singers who are older than average?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of singers who are older than average?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "proc_query": "( <col> name </col> ) , ( <col> country </col> ) , ( <col> age </col> ) that belongs to ( <tab> singer </tab> ) , ordered by ( ( <col> age </col> ) in descending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "List the name, country, and age of singers in descending order of age.",
                10.34411907196045
            ],
            [
                "What are the names and countries of all singers ordered by age in descending order?",
                10.765199661254883
            ],
            [
                "List the name and country of all the singers in descending order of age.",
                10.720039367675781
            ],
            [
                "Find the name and country of all singers sorted by their ages in the descending order.",
                10.508879661560059
            ],
            [
                "Find the name, country and age of each singer and show the results in the order of age.",
                10.11662769317627
            ],
            [
                "Show the name and country for all singers in descending order by age.",
                10.100666046142578
            ],
            [
                "List the name and country of all singers in descending order of age.",
                10.086773872375488
            ],
            [
                "Show the name and country for all singers in descending order of age.",
                10.08410930633545
            ],
            [
                "What is the name and country for all singers in descending order by age?",
                9.923837661743164
            ],
            [
                "What are the names and countries of each singer ordered by their age?",
                9.323476791381836
            ],
            [
                "What are the names and countries for all singers, ordered by age descending?",
                9.082225799560547
            ],
            [
                "Who are the singers and what countries did they hail from, ordered by age descending?",
                8.897127151489258
            ],
            [
                "What are the names and countries of all singers ordered by age descending?",
                8.673688888549805
            ],
            [
                "Please list names and countries for each singer in descending order by age.",
                8.669393539428711
            ],
            [
                "List the name and country of all singers ordered by age descending.",
                8.545515060424805
            ],
            [
                "What are the names and countries of singers in descending order of age?",
                8.52269458770752
            ],
            [
                "Show the names and countries of singers in descending order of age.",
                8.504715919494629
            ],
            [
                "Show names and countries for all singers in a descending order of age.",
                8.241836547851562
            ],
            [
                "What are the names and countries of the singers ordered by age descending?",
                7.73398494720459
            ],
            [
                "What are the names and countries of singers ordered by age descending?",
                6.970886707305908
            ],
            [
                "Show all singers' names and countries ordered by the age.",
                5.616610527038574
            ],
            [
                "What are the names and countries for singers sorted by age?",
                5.574479579925537
            ],
            [
                "List the all the singers' names and countries in descending order of age.",
                5.127798557281494
            ],
            [
                "Show name and country for all singers sorted by age.",
                4.026443004608154
            ],
            [
                "List singer name and country name in descending order by age.",
                2.599025011062622
            ],
            [
                "Show the name and the country and age of singers listed by the age.",
                2.451361894607544
            ],
            [
                "What are the names and countries of each singer and the list in descending order of age?",
                1.2432681322097778
            ],
            [
                "What are the gas names and country names for the gas singers ordered by age descending?",
                -7.756534576416016
            ],
            [
                "List the name and age of the singers of descending order by age.",
                -11.351290702819824
            ],
            [
                "Show gas ids, countries and ages for all gas singers ordered by age.",
                -11.637596130371094
            ],
            [
                "Show names of all singers in the descending order of the age.",
                -11.736741065979004
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the titles, years, and directors of all movies, ordered by budget in millions?",
                "masked_template": "What are the <mask> and <mask> of all <mask> ordered by <mask> in <mask>",
                "query": "SELECT title , YEAR , director FROM movie ORDER BY budget_million",
                "ted": 0.05555555555555555,
                "db_id": "culture_company",
                "query_toks": [
                    "select",
                    "title",
                    ",",
                    "year",
                    ",",
                    "director",
                    "from",
                    "movie",
                    "order",
                    "by",
                    "budget_million"
                ],
                "query_toks_no_value": [
                    "select",
                    "title",
                    ",",
                    "year",
                    ",",
                    "director",
                    "from",
                    "movie",
                    "order",
                    "by",
                    "budget_million"
                ]
            },
            {
                "question": "List the method, date and amount of all the payments, in ascending order of date.",
                "masked_template": "List the <mask> and <mask> of all the <mask> in <mask> order of <mask>",
                "query": "SELECT Payment_Method_Code , Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC",
                "ted": 0.05555555555555555,
                "db_id": "insurance_policies",
                "query_toks": [
                    "select",
                    "payment_method_code",
                    ",",
                    "date_payment_made",
                    ",",
                    "amount_payment",
                    "from",
                    "payments",
                    "order",
                    "by",
                    "date_payment_made",
                    "asc"
                ],
                "query_toks_no_value": [
                    "select",
                    "payment_method_code",
                    ",",
                    "date_payment_made",
                    ",",
                    "amount_payment",
                    "from",
                    "payments",
                    "order",
                    "by",
                    "date_payment_made",
                    "asc"
                ]
            },
            {
                "question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.",
                "masked_template": "Find the <mask> and <mask> of all <mask> by their <mask> in the <mask>",
                "query": "SELECT name , headquarter , revenue FROM manufacturers ORDER BY revenue DESC",
                "ted": 0.0,
                "db_id": "manufactory_1",
                "query_toks": [
                    "select",
                    "name",
                    ",",
                    "headquarter",
                    ",",
                    "revenue",
                    "from",
                    "manufacturers",
                    "order",
                    "by",
                    "revenue",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    ",",
                    "headquarter",
                    ",",
                    "revenue",
                    "from",
                    "manufacturers",
                    "order",
                    "by",
                    "revenue",
                    "desc"
                ]
            },
            {
                "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.",
                "masked_template": "Find the <mask> age and <mask> of each <mask> and show the <mask> in the order of <mask>",
                "query": "SELECT Time_of_purchase , age , address FROM member ORDER BY Time_of_purchase",
                "ted": 0.05555555555555555,
                "db_id": "coffee_shop",
                "query_toks": [
                    "select",
                    "time_of_purchase",
                    ",",
                    "age",
                    ",",
                    "address",
                    "from",
                    "member",
                    "order",
                    "by",
                    "time_of_purchase"
                ],
                "query_toks_no_value": [
                    "select",
                    "time_of_purchase",
                    ",",
                    "age",
                    ",",
                    "address",
                    "from",
                    "member",
                    "order",
                    "by",
                    "time_of_purchase"
                ]
            },
            {
                "question": "Show the years, book titles, and publishers for all books, in descending order by year.",
                "masked_template": "Show the <mask> and <mask> for all <mask> in <mask> order by <mask>",
                "query": "SELECT YEAR , book_title , publisher FROM book_club ORDER BY YEAR DESC",
                "ted": 0.0,
                "db_id": "culture_company",
                "query_toks": [
                    "select",
                    "year",
                    ",",
                    "book_title",
                    ",",
                    "publisher",
                    "from",
                    "book_club",
                    "order",
                    "by",
                    "year",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "year",
                    ",",
                    "book_title",
                    ",",
                    "publisher",
                    "from",
                    "book_club",
                    "order",
                    "by",
                    "year",
                    "desc"
                ]
            },
            {
                "question": "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers.",
                "masked_template": "List the <mask> and <mask> of all <mask> by their <mask> of <mask>",
                "query": "SELECT customer_name , customer_phone , customer_email FROM Customers ORDER BY date_became_customer",
                "ted": 0.05555555555555555,
                "db_id": "customer_deliveries"
            },
            {
                "question": "Show the name, phone, and payment method code for all customers in descending order of customer number.",
                "masked_template": "Show the <mask> and <mask> for all <mask> in <mask> order of <mask>",
                "query": "SELECT customer_name , customer_phone , payment_method_code FROM customers ORDER BY customer_number DESC",
                "ted": 0.0,
                "db_id": "customers_and_products_contacts"
            },
            {
                "question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?",
                "masked_template": "What is the <mask> and <mask> for all <mask> in <mask> order by <mask>",
                "query": "SELECT flno , origin , destination FROM Flight ORDER BY origin",
                "ted": 0.05555555555555555,
                "db_id": "flight_1"
            },
            {
                "question": "What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?",
                "masked_template": "What are the <mask> and <mask> of each <mask> ordered <mask> by their <mask>",
                "query": "SELECT Support_rate , Consider_rate , Oppose_rate FROM candidate ORDER BY unsure_rate",
                "ted": 0.05555555555555555,
                "db_id": "candidate_poll"
            },
            {
                "question": "What are the years, titles, and publishers for all books, ordered by year descending?",
                "masked_template": "What are the <mask> and <mask> for all <mask> ordered by <mask>",
                "query": "SELECT YEAR , book_title , publisher FROM book_club ORDER BY YEAR DESC",
                "ted": 0.0,
                "db_id": "culture_company"
            },
            {
                "question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?",
                "masked_template": "Who are the <mask> did <mask> and <mask> did <mask> ordered by <mask>",
                "query": "SELECT minister , took_office , left_office FROM party ORDER BY left_office",
                "ted": 0.05555555555555555,
                "db_id": "party_people"
            },
            {
                "question": "What are the first, middle, and last names of all individuals, ordered by last name?",
                "masked_template": "What are the <mask> and <mask> names of all <mask> ordered by <mask>",
                "query": "SELECT individual_first_name , individual_middle_name , individual_last_name FROM individuals ORDER BY individual_last_name",
                "ted": 0.05555555555555555,
                "db_id": "e_government"
            },
            {
                "question": "Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.",
                "masked_template": "<mask> list <mask> and <mask> for each <mask> in <mask> order by <mask>",
                "query": "SELECT Support_rate , Consider_rate , Oppose_rate FROM candidate ORDER BY unsure_rate",
                "ted": 0.05555555555555555,
                "db_id": "candidate_poll"
            },
            {
                "question": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.",
                "masked_template": "List the <mask> and <mask> of all the <mask> ordered by <mask>",
                "query": "SELECT vehicle_flight_number , date , pilot FROM flight ORDER BY altitude ASC",
                "ted": 0.05555555555555555,
                "db_id": "flight_company"
            },
            {
                "question": "What are the names, ages, and countries of artists, sorted by the year they joined?",
                "masked_template": "What are the <mask> and <mask> of <mask> by the <mask>",
                "query": "SELECT name , age , country FROM artist ORDER BY Year_Join",
                "ted": 0.05555555555555555,
                "db_id": "theme_gallery"
            },
            {
                "question": "Show the dates, places, and names of events in descending order of the attendance.",
                "masked_template": "Show the <mask> and names of <mask> in <mask> order of the <mask>",
                "query": "SELECT Date , Name , venue FROM event ORDER BY Event_Attendance DESC",
                "ted": 0.0,
                "db_id": "news_report"
            },
            {
                "question": "Show card number, name, and hometown for all members in a descending order of level.",
                "masked_template": "Show <mask> and <mask> for all <mask> in a <mask> order of <mask>",
                "query": "SELECT card_number , name , hometown FROM member ORDER BY LEVEL DESC",
                "ted": 0.0,
                "db_id": "shop_membership"
            },
            {
                "question": "What are the names, address roads, and cities of the branches ordered by opening year?",
                "masked_template": "What are the <mask> and <mask> of the <mask> ordered by <mask>",
                "query": "SELECT name , address_road , city FROM branch ORDER BY open_year",
                "ted": 0.05555555555555555,
                "db_id": "shop_membership"
            },
            {
                "question": "What are the card numbers, names, and hometowns of every member ordered by descending level?",
                "masked_template": "What are the <mask> and <mask> of <mask> ordered by <mask>",
                "query": "SELECT card_number , name , hometown FROM member ORDER BY LEVEL DESC",
                "ted": 0.0,
                "db_id": "shop_membership"
            },
            {
                "question": "Show all artist name, age, and country ordered by the yeared they joined.",
                "masked_template": "Show all <mask> and <mask> ordered by the <mask>",
                "query": "SELECT name , age , country FROM artist ORDER BY Year_Join",
                "ted": 0.05555555555555555,
                "db_id": "theme_gallery"
            },
            {
                "question": "What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?",
                "masked_template": "What are the <mask> and <mask> for <mask> by <mask>",
                "query": "SELECT name , headquarter , revenue FROM manufacturers ORDER BY revenue DESC",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "List the all the assets make, model, details by the disposed date ascendingly.",
                "masked_template": "List the all the <mask> by the <mask>",
                "query": "SELECT asset_make , asset_model , asset_details FROM Assets ORDER BY asset_disposed_date ASC",
                "ted": 0.05555555555555555,
                "db_id": "assets_maintenance"
            },
            {
                "question": "Show name, address road, and city for all branches sorted by open year.",
                "masked_template": "Show <mask> and <mask> for all <mask> by <mask>",
                "query": "SELECT name , address_road , city FROM branch ORDER BY open_year",
                "ted": 0.05555555555555555,
                "db_id": "shop_membership"
            },
            {
                "question": "List every individual's first name, middle name and last name in alphabetical order by last name.",
                "masked_template": "List <mask> name and <mask> name in <mask> order by <mask>",
                "query": "SELECT individual_first_name , individual_middle_name , individual_last_name FROM individuals ORDER BY individual_last_name",
                "ted": 0.05555555555555555,
                "db_id": "e_government"
            },
            {
                "question": "Show the ministers and the time they took and left office, listed by the time they left office.",
                "masked_template": "Show the <mask> and the <mask> and <mask> listed by the <mask>",
                "query": "SELECT minister , took_office , left_office FROM party ORDER BY left_office",
                "ted": 0.05555555555555555,
                "db_id": "party_people"
            },
            {
                "question": "What are the method, date and amount of each payment? Sort the list in ascending order of date.",
                "masked_template": "What are the <mask> and <mask> of each <mask> the list in <mask> order of <mask>",
                "query": "SELECT Payment_Method_Code , Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC",
                "ted": 0.05555555555555555,
                "db_id": "insurance_policies"
            },
            {
                "question": "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?",
                "masked_template": "What are the gas <mask> and <mask> names for the gas <mask> ordered by <mask>",
                "query": "SELECT station_id , LOCATION , manager_name FROM gas_station ORDER BY open_year",
                "ted": 0.05555555555555555,
                "db_id": "gas_company"
            },
            {
                "question": "List the name, born state and age of the heads of departments ordered by age.",
                "masked_template": "List the <mask> and age of the <mask> of <mask> ordered by <mask>",
                "query": "SELECT name , born_state , age FROM head ORDER BY age",
                "ted": 0.05555555555555555,
                "db_id": "department_management"
            },
            {
                "question": "Show gas station id, location, and manager_name for all gas stations ordered by open year.",
                "masked_template": "Show gas <mask> id, <mask> and <mask> for all gas <mask> ordered by <mask>",
                "query": "SELECT station_id , LOCATION , manager_name FROM gas_station ORDER BY open_year",
                "ted": 0.05555555555555555,
                "db_id": "gas_company"
            },
            {
                "question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.",
                "masked_template": "Show <mask> of all <mask> in the <mask> order of the <mask>",
                "query": "SELECT flno , origin , destination FROM Flight ORDER BY origin",
                "ted": 0.05555555555555555,
                "db_id": "flight_1"
            }
        ],
        "best_hyp": "What is the name and country for all singers in descending order by age?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "List the name, country, and age of singers in descending order of age.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2009",
        "proc_query": "( <col> name </col> of <tab> conductor </tab> ) that belongs to ( ( <tab> conductor </tab> ) , and ( ( <tab> orchestra </tab> ) satisfied that ( ( <col> conductor id </col> of <tab> conductor </tab> ) equal to ( <col> conductor id </col> of <tab> orchestra </tab> ) ) ) ) , that have ( ( <col> year of founded </col> ) greater than ( <val> 2009 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of the heads of the orchestras that were founded after 2009?",
                7.737197399139404
            ],
            [
                "Which conductor was in charge of an orchestra founded after 2009?",
                9.523113250732422
            ],
            [
                "Find the names of the heads of the orchestras that were founded after 2009.",
                7.891604423522949
            ],
            [
                "Find the names of all the musicians who had an orchestra founded after 2009.",
                7.788575172424316
            ],
            [
                "What are the names of the heads of the orchestras that were founded after 2009?",
                7.737215995788574
            ],
            [
                "Show the names of the heads of the orchestras that have been founded after 2009.",
                7.720363140106201
            ],
            [
                "Tell me the names of the heads of the orchestras that were founded after 2009",
                6.497080326080322
            ],
            [
                "What are the names of the heads of orchestras that were founded after 2009?",
                6.428977012634277
            ],
            [
                "Find the names of all the musicians who have an orchestra founded after 2009.",
                6.031573295593262
            ],
            [
                "What are the names of all the musicians that were in a company founded after 2009?",
                5.475397109985352
            ],
            [
                "What are the names of all the musicians that have an orchestra founded after 2009?",
                5.126357078552246
            ],
            [
                "What are the names of all the musicians that have an orchestra founded after 2009?",
                5.126357078552246
            ],
            [
                "Show the names of all the musicians with a orchestra having been founded after 2009.",
                3.2867112159729004
            ],
            [
                "Show names of all the musicians who are in a orchestra founded after 2009.",
                2.0841381549835205
            ],
            [
                "What are the names of all the musicians with an orchestra founded after 2009?",
                -0.0967322438955307
            ],
            [
                "Show names who have been a conductor with an orchestra founded after 2009",
                -0.10482041537761688
            ],
            [
                "Return the names for all the musicians that have an orchestra that was founded more than 2 years after 2009.",
                -0.9303560256958008
            ],
            [
                "What are the names of all the musicians with more than one orchestra founded after 2009?",
                -1.3332576751708984
            ],
            [
                "What are the names of all the musicians whose total score is greater than 2009?",
                -1.3633352518081665
            ],
            [
                "What are the names of the musicians with an orchestra founded after 2009?",
                -1.4290744066238403
            ],
            [
                "What are the names of the musicians with more than one orchestra founded after 2009?",
                -3.2624244689941406
            ],
            [
                "What are the names of all the musicians who have a orchestra of more than one year founded after 2009?",
                -3.683218240737915
            ],
            [
                "Find the the name of the musicians who have a orchestra with founded more than 2009",
                -8.518661499023438
            ],
            [
                "Show the names of all the musicians with more than 4 orchestras founded after 2009.",
                -9.839536666870117
            ],
            [
                "What are the names of the musicians who have been a conductor for more than 3 years?",
                -11.565214157104492
            ],
            [
                "What are the names of the heads of the orchestras with more than 2 years of foundation on record?",
                -11.772187232971191
            ],
            [
                "Show the names of musicians with orchestra having founded after 2009",
                -11.809950828552246
            ],
            [
                "What are the names of all the musicians that were at least 2 years old on founded dates?",
                -11.88681697845459
            ],
            [
                "Show names of all music directors if any orchestra with start count greater than 2009",
                -11.979270935058594
            ],
            [
                "Which musicians have orchestras that have more than two years of founded? Tell me the names of the musicians.",
                -12.006425857543945
            ],
            [
                "Show names of heads of orchestras with founded year more than 50.",
                -12.094728469848633
            ]
        ],
        "templates": [
            "",
            {
                "question": "Which cities served as a host city after 2010?",
                "masked_template": "Which <mask> as a <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010",
                "ted": 0.0,
                "db_id": "city_record",
                "query_toks": [
                    "select",
                    "t1.city",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "hosting_city",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city",
                    "where",
                    "t2.year",
                    ">",
                    "2010"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.city",
                    "from",
                    "city",
                    "as",
                    "t1",
                    "join",
                    "hosting_city",
                    "as",
                    "t2",
                    "on",
                    "t1.city_id",
                    "=",
                    "t2.host_city",
                    "where",
                    "t2.year",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Find the order detail for the products with price above 2000.",
                "masked_template": "Find the order <mask> for the <mask> with <mask>",
                "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "t1.other_item_details",
                    "from",
                    "order_items",
                    "as",
                    "t1",
                    "join",
                    "products",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "where",
                    "t2.product_price",
                    ">",
                    "2000"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.other_item_details",
                    "from",
                    "order_items",
                    "as",
                    "t1",
                    "join",
                    "products",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "where",
                    "t2.product_price",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Find the names of reviewers who had given higher than 3 star ratings.",
                "masked_template": "Find the names of <mask> who had <mask> than 3 <mask>",
                "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3",
                "ted": 0.0,
                "db_id": "movie_1",
                "query_toks": [
                    "select",
                    "t2.name",
                    "from",
                    "rating",
                    "as",
                    "t1",
                    "join",
                    "reviewer",
                    "as",
                    "t2",
                    "on",
                    "t1.rid",
                    "=",
                    "t2.rid",
                    "where",
                    "t1.stars",
                    ">",
                    "3"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.name",
                    "from",
                    "rating",
                    "as",
                    "t1",
                    "join",
                    "reviewer",
                    "as",
                    "t2",
                    "on",
                    "t1.rid",
                    "=",
                    "t2.rid",
                    "where",
                    "t1.stars",
                    ">",
                    "value"
                ]
            },
            {
                "question": "What are the order details of the products with price higher than 2000?",
                "masked_template": "What are the order <mask> of the <mask> with <mask> than <mask>",
                "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "t1.other_item_details",
                    "from",
                    "order_items",
                    "as",
                    "t1",
                    "join",
                    "products",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "where",
                    "t2.product_price",
                    ">",
                    "2000"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.other_item_details",
                    "from",
                    "order_items",
                    "as",
                    "t1",
                    "join",
                    "products",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "where",
                    "t2.product_price",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.",
                "masked_template": "Show the <mask> of the <mask> that have <mask> with more than 2 <mask>",
                "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2",
                "ted": 0.0,
                "db_id": "apartment_rentals",
                "query_toks": [
                    "select",
                    "t1.building_address",
                    "from",
                    "apartment_buildings",
                    "as",
                    "t1",
                    "join",
                    "apartments",
                    "as",
                    "t2",
                    "on",
                    "t1.building_id",
                    "=",
                    "t2.building_id",
                    "where",
                    "t2.bathroom_count",
                    ">",
                    "2"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.building_address",
                    "from",
                    "apartment_buildings",
                    "as",
                    "t1",
                    "join",
                    "apartments",
                    "as",
                    "t2",
                    "on",
                    "t1.building_id",
                    "=",
                    "t2.building_id",
                    "where",
                    "t2.bathroom_count",
                    ">",
                    "value"
                ]
            },
            {
                "question": "Give me the descriptions of the service types that cost more than 100.",
                "masked_template": "<mask> me the <mask> of the <mask> that <mask> more than <mask>",
                "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the times of elimination for wrestlers with over 50 days held?",
                "masked_template": "What are the <mask> of <mask> for <mask> with <mask> 50 <mask>",
                "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50",
                "ted": 0.0,
                "db_id": "wrestler"
            },
            {
                "question": "Find the cities which were once a host city after 2010?",
                "masked_template": "Find the <mask> which <mask> a <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "What are the names of ships that were involved in a mission launched after 1928?",
                "masked_template": "What are the names of <mask> that <mask> in a <mask>",
                "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "What are the crime rates of counties that contain cities that have white percentages of over 90?",
                "masked_template": "What are the <mask> of <mask> that <mask> that have <mask> of <mask> 90?",
                "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the themes of competitions that have corresponding host cities with more than 1000 residents?",
                "masked_template": "What are the <mask> of <mask> that have <mask> with more than <mask>",
                "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "Show the crime rate of counties with a city having white percentage more than 90.",
                "masked_template": "Show the <mask> of <mask> with a <mask> having <mask> more than 90.",
                "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Show names of ships involved in a mission launched after 1928.",
                "masked_template": "Show names of <mask> in a <mask>",
                "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "What are the purchase details of transactions with amount bigger than 10000?",
                "masked_template": "What are the <mask> of <mask> with <mask> than <mask>",
                "query": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Show writers who have published a book with price more than 4000000.",
                "masked_template": "Show <mask> who have <mask> a <mask> with <mask> more than <mask>",
                "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top.",
                "masked_template": "Return the <mask> for <mask> that have <mask> that <mask> more than 2 <mask> on <mask>",
                "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What are the names of representatives with more than 10000 votes in election?",
                "masked_template": "What are the names of <mask> with more than <mask> in <mask>",
                "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE Votes > 10000",
                "ted": 0.0,
                "db_id": "election_representative"
            },
            {
                "question": "What are the names of body builders whose total score is higher than 300?",
                "masked_template": "What are the names of <mask> whose total <mask> is <mask> than <mask>",
                "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total > 300",
                "ted": 0.0,
                "db_id": "body_builder"
            },
            {
                "question": "What are the descriptions of the service types with product price above 100?",
                "masked_template": "What are the <mask> of the <mask> with <mask>",
                "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the facility codes of the apartments with more than four bedrooms?",
                "masked_template": "What are the <mask> of the <mask> with more than <mask>",
                "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are the names of customers who have a loan of more than 3000 in amount?",
                "masked_template": "What are the names of <mask> who have a <mask> of more than <mask> in <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Find the the name of the customers who have a loan with amount more than 3000.",
                "masked_template": "Find the the name of the <mask> who have a <mask> with <mask> more than <mask>",
                "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Show the facility codes of apartments with more than 4 bedrooms.",
                "masked_template": "Show the <mask> of <mask> with more than 4 <mask>",
                "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are the names of the reviewers who have rated a movie more than 3 stars before?",
                "masked_template": "What are the names of the <mask> who have <mask> a <mask> more than 3 <mask>",
                "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "What are the famous title of the artists associated with volumes with more than 2 weeks on top?",
                "masked_template": "What are the <mask> of the <mask> with <mask> with more than 2 <mask> on <mask>",
                "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "Please show the themes of competitions with host cities having populations larger than 1000.",
                "masked_template": "<mask> show the <mask> of <mask> with <mask> having <mask> than <mask>",
                "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000",
                "ted": 0.0,
                "db_id": "farm"
            },
            {
                "question": "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?",
                "masked_template": "What are the <mask> of <mask> at <mask> to <mask> that <mask> more than 2 <mask> on <mask>",
                "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Weeks_on_Top > 2",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "Show details of all investors if they make any transaction with share count greater than 100.",
                "masked_template": "Show <mask> of all <mask> if <mask> any <mask> with <mask> count <mask> than <mask>",
                "query": "SELECT T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.",
                "masked_template": "Which <mask> have <mask> that have more than two <mask> me the <mask> of the <mask>",
                "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "Show times of elimination of wrestlers with days held more than 50.",
                "masked_template": "Show <mask> of <mask> of <mask> with <mask> more than 50.",
                "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50",
                "ted": 0.0,
                "db_id": "wrestler"
            }
        ],
        "best_hyp": "What are the names of the musicians with more than one orchestra founded after 2009?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of the heads of the orchestras that were founded after 2009?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "proc_query": "( <col> birth year </col> ) , ( <col> citizenship </col> ) that belongs to ( <tab> singer </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the birth year and citizenship of all singers?",
                10.446329116821289
            ],
            [
                "Show the birth year and citizenship of all singers.",
                10.695175170898438
            ],
            [
                "Tell me the birth year and citizenship of each singer.",
                10.632499694824219
            ],
            [
                "What are the birth year and citizenship of all singers?",
                10.446329116821289
            ],
            [
                "What are the birth year and citizenship of all singers?",
                10.446329116821289
            ],
            [
                "What are all the birth years and nationalities of singers?",
                10.405583381652832
            ],
            [
                "What are all the birth years and nationalities of singers?",
                10.405583381652832
            ],
            [
                "What are the birth year and citizenship of each singer?",
                10.305155754089355
            ],
            [
                "Show the birth year and citizenship for all singers.",
                10.20804214477539
            ],
            [
                "What are the birth year and citizenship for all singers?",
                9.830680847167969
            ],
            [
                "Return the birth year and citizenship for all singers.",
                9.544816017150879
            ],
            [
                "For each singer, show their birth year and their citizenship.",
                9.47412109375
            ],
            [
                "What are the birth year and citizenship of the singers?",
                9.452535629272461
            ],
            [
                "Show all the birth years and citizenship of singers.",
                9.450353622436523
            ],
            [
                "What are the birth year and citizenship for each singer?",
                9.393292427062988
            ],
            [
                "Return the birth year and citizenship for each singer.",
                9.228769302368164
            ],
            [
                "Show the birth year and citizenship of singers.",
                7.9909796714782715
            ],
            [
                "What are the birth years of singers and their nationalities?",
                7.894299030303955
            ],
            [
                "What are the birth year and citizenship of singers?",
                7.8888163566589355
            ],
            [
                "What are the birth year and citizenship of singers?",
                7.8888163566589355
            ],
            [
                "Show all birth years and nationalities of singers.",
                7.752896308898926
            ],
            [
                "Show all birth years and nationalities of singers.",
                7.752896308898926
            ],
            [
                "List all birth years and nationalities of singers.",
                7.646597862243652
            ],
            [
                "List all birth years and nationalities of singers.",
                7.646597862243652
            ],
            [
                "Return the birth year and citizenship of singers.",
                6.861591339111328
            ],
            [
                "Show all birth years and nationalities.",
                3.4906792640686035
            ],
            [
                "What are the ids and citizenship of all singers?",
                -10.637764930725098
            ],
            [
                "List the names and the countries that the singers can live in.",
                -11.705066680908203
            ],
            [
                "What are the ids and names for each of the singers?",
                -12.072256088256836
            ],
            [
                "Show the ids and names of all singers.",
                -12.0790433883667
            ],
            [
                "List the tax ids and their cmi numbers of all the singers",
                -12.105749130249023
            ]
        ],
        "templates": [
            "",
            {
                "question": "Show the county name and population of all counties.",
                "masked_template": "Show the <mask> name and <mask> of all <mask>",
                "query": "SELECT County_name , Population FROM county",
                "ted": 0.0,
                "db_id": "election",
                "query_toks": [
                    "select",
                    "county_name",
                    ",",
                    "population",
                    "from",
                    "county"
                ],
                "query_toks_no_value": [
                    "select",
                    "county_name",
                    ",",
                    "population",
                    "from",
                    "county"
                ]
            },
            {
                "question": "Give me the theme and location of each party.",
                "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
                "query": "SELECT Party_Theme , LOCATION FROM party",
                "ted": 0.0,
                "db_id": "party_host",
                "query_toks": [
                    "select",
                    "party_theme",
                    ",",
                    "location",
                    "from",
                    "party"
                ],
                "query_toks_no_value": [
                    "select",
                    "party_theme",
                    ",",
                    "location",
                    "from",
                    "party"
                ]
            },
            {
                "question": "What are the reigns and days held of all wrestlers?",
                "masked_template": "What are the <mask> and <mask> of all <mask>",
                "query": "SELECT Reign , Days_held FROM wrestler",
                "ted": 0.0,
                "db_id": "wrestler",
                "query_toks": [
                    "select",
                    "reign",
                    ",",
                    "days_held",
                    "from",
                    "wrestler"
                ],
                "query_toks_no_value": [
                    "select",
                    "reign",
                    ",",
                    "days_held",
                    "from",
                    "wrestler"
                ]
            },
            {
                "question": "What are the names and locations of all tracks?",
                "masked_template": "What are the names and <mask> of all <mask>",
                "query": "SELECT name , LOCATION FROM track",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "What are all the calendar dates and day Numbers?",
                "masked_template": "What are all the <mask> and day <mask>",
                "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB",
                "query_toks": [
                    "select",
                    "calendar_date",
                    ",",
                    "day_number",
                    "from",
                    "ref_calendar"
                ],
                "query_toks_no_value": [
                    "select",
                    "calendar_date",
                    ",",
                    "day_number",
                    "from",
                    "ref_calendar"
                ]
            },
            {
                "question": "What are all the document type codes and document type names?",
                "masked_template": "What are all the <mask> and <mask>",
                "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the name and population of each county?",
                "masked_template": "What are the name and <mask> of each <mask>",
                "query": "SELECT County_name , Population FROM county",
                "ted": 0.0,
                "db_id": "election",
                "query_toks": [
                    "select",
                    "county_name",
                    ",",
                    "population",
                    "from",
                    "county"
                ],
                "query_toks_no_value": [
                    "select",
                    "county_name",
                    ",",
                    "population",
                    "from",
                    "county"
                ]
            },
            {
                "question": "Show the name and location for all tracks.",
                "masked_template": "Show the name and <mask> for all <mask>",
                "query": "SELECT name , LOCATION FROM track",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "What are the names and distances for all airplanes?",
                "masked_template": "What are the names and <mask> for all <mask>",
                "query": "SELECT name , distance FROM Aircraft",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Return the low and high estimates for all film markets.",
                "masked_template": "Return the low and <mask> for all <mask>",
                "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "For each submission, show the author and their affiliated college.",
                "masked_template": "For each <mask> show the <mask> and their <mask>",
                "query": "SELECT Author , College FROM submission",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "What are the title and issues of the books?",
                "masked_template": "What are the <mask> and <mask> of the <mask>",
                "query": "SELECT Title , Issues FROM book",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
                "masked_template": "Show all the <mask> and <mask> of <mask>",
                "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the delegate and committee information for each election record?",
                "masked_template": "What are the <mask> and <mask> for each <mask>",
                "query": "SELECT Delegate , Committee FROM election",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Return the characters and durations for each actor.",
                "masked_template": "Return the <mask> and <mask> for each <mask>",
                "query": "SELECT Character , Duration FROM actor",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "Show the delegate and committee information of elections.",
                "masked_template": "Show the <mask> and <mask> of <mask>",
                "query": "SELECT Delegate , Committee FROM election",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What are the authors of submissions and their colleges?",
                "masked_template": "What are the <mask> of <mask> and their <mask>",
                "query": "SELECT Author , College FROM submission",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "What are the low and high estimates of film markets?",
                "masked_template": "What are the low and <mask> of <mask>",
                "query": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What are the nationalities and ages of journalists?",
                "masked_template": "What are the <mask> and <mask> of <mask>",
                "query": "SELECT Nationality , Age FROM journalist",
                "ted": 0.0,
                "db_id": "news_report"
            },
            {
                "question": "Show all date and share count of transactions.",
                "masked_template": "Show all <mask> and <mask> count of <mask>",
                "query": "SELECT date_of_transaction , share_count FROM TRANSACTIONS",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Show all account ids and account details.",
                "masked_template": "Show all <mask> ids and <mask>",
                "query": "SELECT account_id , account_details FROM Accounts",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "List all document type codes and document type names.",
                "masked_template": "List all <mask> and <mask>",
                "query": "SELECT document_type_code , document_type_name FROM Ref_document_types",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "List all statement ids and statement details.",
                "masked_template": "List all <mask> ids and <mask>",
                "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Return the lot details and investor ids.",
                "masked_template": "Return the lot <mask> and <mask>",
                "query": "SELECT lot_details , investor_id FROM LOTS",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Show all calendar dates and day Numbers.",
                "masked_template": "Show all <mask> and day <mask>",
                "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the ids and details of all statements?",
                "masked_template": "What are the ids and <mask> of all <mask>",
                "query": "SELECT STATEMENT_ID , statement_details FROM Statements",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "List the names and the locations that the enzymes can make an effect.",
                "masked_template": "List the names and the <mask> that the <mask> can <mask> an <mask>",
                "query": "SELECT name , LOCATION FROM enzyme",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What are the ids and names for each of the documents?",
                "masked_template": "What are the ids and names for each of the <mask>",
                "query": "SELECT document_id , document_name FROM Documents",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Show the ids and names of all documents.",
                "masked_template": "Show the ids and names of all <mask>",
                "query": "SELECT document_id , document_name FROM Documents",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
                "masked_template": "List the <mask> tax ids and their <mask> cmi <mask> of all the <mask>",
                "query": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
                "ted": 0.0,
                "db_id": "local_govt_mdm"
            }
        ],
        "best_hyp": "What are the birth year and citizenship of all singers?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the birth year and citizenship of all singers?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name , sum( T2.Sales ) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
        "proc_query": "( <col> name </col> of <tab> singer </tab> ) , ( the sum of ( <col> sales </col> of <tab> song </tab> ) ) that belongs to ( ( <tab> singer </tab> ) , and ( ( <tab> song </tab> ) satisfied that ( ( <col> singer id </col> of <tab> singer </tab> ) equal to ( <col> singer id </col> of <tab> song </tab> ) ) ) ) , grouped by ( <col> name </col> of <tab> singer </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of singers and the total number of sales of their songs?",
                10.775760650634766
            ],
            [
                "What is the name of each singer and the total number of songs sold?",
                11.036747932434082
            ],
            [
                "What are the names of singers and the total number of sales of all songs they sang?",
                11.0005464553833
            ],
            [
                "Show the singer name and total number of sales for each song.",
                10.975471496582031
            ],
            [
                "How many songs are sung by each singer? List the singer name and the number of songs sold.",
                10.864236831665039
            ],
            [
                "What are the names of singers and the total number of sales of their songs?",
                10.775758743286133
            ],
            [
                "For each singer, show the name of the song and the number of sales in it.",
                10.620577812194824
            ],
            [
                "List the name and the number of sales for each singer.",
                10.570693016052246
            ],
            [
                "Show all singers' names and the total sales ordered for each song.",
                10.527816772460938
            ],
            [
                "What is the name and number of sales of each of the singers?",
                10.072261810302734
            ],
            [
                "For each singer, show its names and total number of sales.",
                9.224339485168457
            ],
            [
                "How many songs are there for each singer? Return both the names and the sales.",
                8.981139183044434
            ],
            [
                "What are the different singers and what is the sum of sales ordered for each song?",
                8.125293731689453
            ],
            [
                "What is the name of each singer and how many songs were produced by each one?",
                7.525752544403076
            ],
            [
                "What are the different names of singers and how many songs have been produced by them?",
                6.95904541015625
            ],
            [
                "Show the names of singers and the number of songs they have sold on the web.",
                6.569880962371826
            ],
            [
                "Show the names of singers and the total number of songs they have produced.",
                6.33419132232666
            ],
            [
                "How many songs do each singer have? List their names and number of songs they have produced.",
                5.740691661834717
            ],
            [
                "Show names and number of sales for each singer.",
                4.319272994995117
            ],
            [
                "Find the name of each singer and the number of songs they produced.",
                4.220021724700928
            ],
            [
                "Show the names of singers and the number of songs they have produced.",
                3.195997953414917
            ],
            [
                "Return the name of each singer and the number of songs that he or she produced.",
                0.6833036541938782
            ],
            [
                "Show the name and number of songs produced by each singer",
                0.6231550574302673
            ],
            [
                "List the id of singers who sang songs and the number of songs they sold.",
                -1.0144917964935303
            ],
            [
                "Show names along with the number of songs for each singer",
                -2.816531181335449
            ],
            [
                "What is the average number of songs that each singer sold for a song?",
                -4.083629608154297
            ],
            [
                "Show all singers along with the number of songs produced by each singer.",
                -5.2129998207092285
            ],
            [
                "What is total number of showings per dat for each singer?",
                -9.159990310668945
            ],
            [
                "What is the average song sales for each singer?",
                -11.712789535522461
            ],
            [
                "Find the number of songs each singer has sung. Show the number with the song id.",
                -11.861865043640137
            ],
            [
                "What is the average song sales for each artist?",
                -12.078367233276367
            ]
        ],
        "templates": [
            "",
            {
                "question": "What is the name of each course and the corresponding number of student enrollment?",
                "masked_template": "What is the name of each <mask> and the <mask> number of <mask>",
                "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
                "ted": 0.03571428571428571,
                "db_id": "e_learning",
                "query_toks": [
                    "select",
                    "t1.course_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "courses",
                    "as",
                    "t1",
                    "join",
                    "student_course_enrolment",
                    "as",
                    "t2",
                    "on",
                    "t1.course_id",
                    "=",
                    "t2.course_id",
                    "group",
                    "by",
                    "t1.course_name"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.course_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "courses",
                    "as",
                    "t1",
                    "join",
                    "student_course_enrolment",
                    "as",
                    "t2",
                    "on",
                    "t1.course_id",
                    "=",
                    "t2.course_id",
                    "group",
                    "by",
                    "t1.course_name"
                ]
            },
            {
                "question": "What are the line 1 and average monthly rentals of all student addresses?",
                "masked_template": "What are the <mask> 1 and average <mask> of all <mask>",
                "query": "SELECT T1.line_1 , avg( T2.monthly_rental ) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",
                "ted": 0.03571428571428571,
                "db_id": "behavior_monitoring",
                "query_toks": [
                    "select",
                    "t1.line_1",
                    ",",
                    "avg",
                    "(",
                    "t2.monthly_rental",
                    ")",
                    "from",
                    "addresses",
                    "as",
                    "t1",
                    "join",
                    "student_addresses",
                    "as",
                    "t2",
                    "on",
                    "t1.address_id",
                    "=",
                    "t2.address_id",
                    "group",
                    "by",
                    "t2.address_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.line_1",
                    ",",
                    "avg",
                    "(",
                    "t2.monthly_rental",
                    ")",
                    "from",
                    "addresses",
                    "as",
                    "t1",
                    "join",
                    "student_addresses",
                    "as",
                    "t2",
                    "on",
                    "t1.address_id",
                    "=",
                    "t2.address_id",
                    "group",
                    "by",
                    "t2.address_id"
                ]
            },
            {
                "question": "Show the product name and total order quantity for each product.",
                "masked_template": "Show the <mask> name and total order <mask> for each <mask>",
                "query": "SELECT T1.product_name , sum( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",
                "ted": 0.0,
                "db_id": "customers_and_products_contacts",
                "query_toks": [
                    "select",
                    "t1.product_name",
                    ",",
                    "sum",
                    "(",
                    "t2.order_quantity",
                    ")",
                    "from",
                    "products",
                    "as",
                    "t1",
                    "join",
                    "order_items",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "group",
                    "by",
                    "t1.product_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.product_name",
                    ",",
                    "sum",
                    "(",
                    "t2.order_quantity",
                    ")",
                    "from",
                    "products",
                    "as",
                    "t1",
                    "join",
                    "order_items",
                    "as",
                    "t2",
                    "on",
                    "t1.product_id",
                    "=",
                    "t2.product_id",
                    "group",
                    "by",
                    "t1.product_id"
                ]
            },
            {
                "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
                "masked_template": "How many <mask> each <mask> to? List the <mask> id and the number of <mask>",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.03571428571428571,
                "db_id": "insurance_policies",
                "query_toks": [
                    "select",
                    "t1.claim_id",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "claims",
                    "as",
                    "t1",
                    "join",
                    "settlements",
                    "as",
                    "t2",
                    "on",
                    "t1.claim_id",
                    "=",
                    "t2.claim_id",
                    "group",
                    "by",
                    "t1.claim_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.claim_id",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "claims",
                    "as",
                    "t1",
                    "join",
                    "settlements",
                    "as",
                    "t2",
                    "on",
                    "t1.claim_id",
                    "=",
                    "t2.claim_id",
                    "group",
                    "by",
                    "t1.claim_id"
                ]
            },
            {
                "question": "display job title and average salary of employees.",
                "masked_template": "<mask> job <mask> and average <mask> of <mask>",
                "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
                "ted": 0.03571428571428571,
                "db_id": "hr_1",
                "query_toks": [
                    "select",
                    "job_title",
                    ",",
                    "avg",
                    "(",
                    "salary",
                    ")",
                    "from",
                    "employees",
                    "as",
                    "t1",
                    "join",
                    "jobs",
                    "as",
                    "t2",
                    "on",
                    "t1.job_id",
                    "=",
                    "t2.job_id",
                    "group",
                    "by",
                    "t2.job_title"
                ],
                "query_toks_no_value": [
                    "select",
                    "job_title",
                    ",",
                    "avg",
                    "(",
                    "salary",
                    ")",
                    "from",
                    "employees",
                    "as",
                    "t1",
                    "join",
                    "jobs",
                    "as",
                    "t2",
                    "on",
                    "t1.job_id",
                    "=",
                    "t2.job_id",
                    "group",
                    "by",
                    "t2.job_title"
                ]
            },
            {
                "question": "For each building, show the name of the building and the number of institutions in it.",
                "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
                "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
                "ted": 0.03571428571428571,
                "db_id": "protein_institute"
            },
            {
                "question": "List the name and the number of enrolled student for each course.",
                "masked_template": "List the name and the number of <mask> for each <mask>",
                "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
                "ted": 0.03571428571428571,
                "db_id": "e_learning"
            },
            {
                "question": "Show all product names and the total quantity ordered for each product name.",
                "masked_template": "Show all <mask> names and the total <mask> ordered for each <mask>",
                "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "display the department name and number of employees in each of the department.",
                "masked_template": "<mask> the <mask> name and number of <mask> in each of the <mask>",
                "query": "SELECT department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
                "ted": 0.03571428571428571,
                "db_id": "hr_1"
            },
            {
                "question": "For each phone, show its names and total number of stocks.",
                "masked_template": "For each <mask> show its names and total number of <mask>",
                "query": "SELECT T2.Name , sum( T1.Num_of_stock ) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
                "masked_template": "How many <mask> are there in each <mask> Return both the <mask> and the <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.03571428571428571,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the different product names, and what is the sum of quantity ordered for each product?",
                "masked_template": "What are the different <mask> and what is the sum of <mask> ordered for each <mask>",
                "query": "SELECT T2.product_name , sum( T1.product_quantity ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "What is the name of each aircraft and how many flights does each one complete?",
                "masked_template": "What is the name of each <mask> and how many <mask> each one <mask>",
                "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
                "ted": 0.03571428571428571,
                "db_id": "flight_1"
            },
            {
                "question": "What are the different card types, and how many transactions have been made with each?",
                "masked_template": "What are the different <mask> and how many <mask> have <mask> with <mask>",
                "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
                "ted": 0.03571428571428571,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "Show the names of people and the number of times they have been on the affirmative side of debates.",
                "masked_template": "Show the names of <mask> and the number of <mask> have <mask> on the <mask> of <mask>",
                "query": "SELECT T2.Name , COUNT( * ) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",
                "ted": 0.03571428571428571,
                "db_id": "debate"
            },
            {
                "question": "Show the average amount of transactions for different lots.",
                "masked_template": "Show the average <mask> of <mask> for different <mask>",
                "query": "SELECT T2.lot_id , avg( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",
                "ted": 0.03571428571428571,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
                "masked_template": "How many <mask> do each <mask> of? List their names and number of <mask> of.",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.03571428571428571,
                "db_id": "hospital_1"
            },
            {
                "question": "Show aircraft names and number of flights for each aircraft.",
                "masked_template": "Show <mask> names and number of <mask> for each <mask>",
                "query": "SELECT T2.name , count( * ) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",
                "ted": 0.03571428571428571,
                "db_id": "flight_1"
            },
            {
                "question": "Give the name of each department and the number of employees in each.",
                "masked_template": "<mask> the name of each <mask> and the number of <mask> in <mask>",
                "query": "SELECT T2.department_name , COUNT( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
                "ted": 0.03571428571428571,
                "db_id": "hr_1"
            },
            {
                "question": "Show the card type codes and the number of transactions.",
                "masked_template": "Show the <mask> and the number of <mask>",
                "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
                "ted": 0.03571428571428571,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "Return the name of each physician and the number of patients he or she treats.",
                "masked_template": "Return the name of each <mask> and the number of <mask> he or she <mask>",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.03571428571428571,
                "db_id": "hospital_1"
            },
            {
                "question": "Show the station name and number of trains in each station.",
                "masked_template": "Show the <mask> name and number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
                "ted": 0.03571428571428571,
                "db_id": "train_station"
            },
            {
                "question": "List the id of students who registered some courses and the number of their registered courses?",
                "masked_template": "List the id of <mask> who <mask> and the number of their <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.03571428571428571,
                "db_id": "student_assessment"
            },
            {
                "question": "Show institution names along with the number of proteins for each institution.",
                "masked_template": "Show <mask> names <mask> with the number of <mask> for each <mask>",
                "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "ted": 0.03571428571428571,
                "db_id": "protein_institute"
            },
            {
                "question": "What is the average number of stars that each reviewer awards for a movie?",
                "masked_template": "What is the average number of <mask> that each <mask> for a <mask>",
                "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
                "ted": 0.03571428571428571,
                "db_id": "movie_1"
            },
            {
                "question": "Show all cities along with the number of drama workshop groups in each city.",
                "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.03571428571428571,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What is total number of show times per dat for each cinema?",
                "masked_template": "What is total number of show <mask> per dat for each <mask>",
                "query": "SELECT T2.name , sum( T1.show_times_per_day ) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "What is the average rating star for each reviewer?",
                "masked_template": "What is the average <mask> for each <mask>",
                "query": "SELECT T2.name , avg( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",
                "ted": 0.03571428571428571,
                "db_id": "movie_1"
            },
            {
                "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
                "masked_template": "Find the number of <mask> each <mask> to. Show the number <mask> with the <mask> id.",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.03571428571428571,
                "db_id": "insurance_policies"
            },
            {
                "question": "What is the average salary for each job title?",
                "masked_template": "What is the average <mask> for each job <mask>",
                "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
                "ted": 0.03571428571428571,
                "db_id": "hr_1"
            }
        ],
        "best_hyp": "What is total number of showings per dat for each singer?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of singers and the total number of sales of their songs?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
        "proc_query": "( <col> name </col> of <tab> singer </tab> ) , ( the number of ( all items ) ) that belongs to ( ( <tab> singer in concert </tab> ) , and ( ( <tab> singer </tab> ) satisfied that ( ( <col> singer id </col> of <tab> singer in concert </tab> ) equal to ( <col> singer id </col> of <tab> singer </tab> ) ) ) ) , grouped by ( <col> singer id </col> of <tab> singer </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "Show the names of singers and the number of concerts they have been in.",
                10.720766067504883
            ],
            [
                "Return the name of each singer and the number of times he or she has been in concert.",
                11.122227668762207
            ],
            [
                "Show all the singers' names and the number of concerts they have been in.",
                11.083425521850586
            ],
            [
                "Show all singers' names and the number of concerts they have been in.",
                11.023126602172852
            ],
            [
                "For each singer, find their name and the number of concerts they are in.",
                10.906509399414062
            ],
            [
                "How many singers are there in concert? Return both the singers' names and the number of singers.",
                10.90565013885498
            ],
            [
                "What are the singers' names and the number of concerts they have been in?",
                10.862269401550293
            ],
            [
                "List the name of all singers along with the number of times that they have been in concert",
                10.844566345214844
            ],
            [
                "Show the names of singers and the number of concerts they have been in.",
                10.720766067504883
            ],
            [
                "Show the names of singers along with the number of times he or she has been in concert",
                10.702505111694336
            ],
            [
                "For each singer, show the name of the singer and the number of singers in concert.",
                10.649931907653809
            ],
            [
                "How many concerts do each singer attend? List their names and number of concerts they are in.",
                10.577720642089844
            ],
            [
                "Show the name of singers and the number of concerts they have been in.",
                10.53931999206543
            ],
            [
                "How many songs are sung by each singer? List the singer name and the number of songs.",
                10.508176803588867
            ],
            [
                "How many singers are in concert? Return the singers' names and the number of singers in concert.",
                10.389067649841309
            ],
            [
                "What are all the different singers and how many concerts has each been in?",
                9.657146453857422
            ],
            [
                "Show all the singers and the number of concerts they have been in.",
                9.51140308380127
            ],
            [
                "How many concerts has each singer been in?",
                9.399920463562012
            ],
            [
                "How many concerts are there for each singer?",
                9.281049728393555
            ],
            [
                "How many singers are there? List the singer name and the number of singers.",
                9.211527824401855
            ],
            [
                "Show all singers along with the number of concerts they participated in.",
                8.541387557983398
            ],
            [
                "What are the different singers and how many concerts have they been in?",
                8.494965553283691
            ],
            [
                "For each singer who is in concert for some time, how many times are they in concert?",
                7.406082630157471
            ],
            [
                "Show names along with the number of concerts for each singer",
                4.951557159423828
            ],
            [
                "Show names and the number of concerts for each singer.",
                4.675716400146484
            ],
            [
                "Show the names of singers and number of concerts they have been in.",
                4.531867027282715
            ],
            [
                "How many singers are in concert?",
                2.4951510429382324
            ],
            [
                "Find the name of each singer and number of performances by each of them.",
                2.300388813018799
            ],
            [
                "Show the singer name with the number of gas stations.",
                -0.8336711525917053
            ],
            [
                "List the id of singers who have been in concert and the number of their performances.",
                -2.4583427906036377
            ],
            [
                "Find the number of concerts each singer is to. Show the number with the singer id.",
                -4.469668865203857
            ]
        ],
        "templates": [
            "",
            {
                "question": "Return the name of each physician and the number of patients he or she treats.",
                "masked_template": "Return the name of each <mask> and the number of <mask> he or she <mask>",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.0,
                "db_id": "hospital_1",
                "query_toks": [
                    "select",
                    "t1.name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "physician",
                    "as",
                    "t1",
                    "join",
                    "patient",
                    "as",
                    "t2",
                    "on",
                    "t1.employeeid",
                    "=",
                    "t2.pcp",
                    "group",
                    "by",
                    "t1.employeeid"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "physician",
                    "as",
                    "t1",
                    "join",
                    "patient",
                    "as",
                    "t2",
                    "on",
                    "t1.employeeid",
                    "=",
                    "t2.pcp",
                    "group",
                    "by",
                    "t1.employeeid"
                ]
            },
            {
                "question": "Show all the activity names and the number of faculty involved in each activity.",
                "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
                "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
                "ted": 0.0,
                "db_id": "activity_1",
                "query_toks": [
                    "select",
                    "t1.activity_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "activity",
                    "as",
                    "t1",
                    "join",
                    "faculty_participates_in",
                    "as",
                    "t2",
                    "on",
                    "t1.actid",
                    "=",
                    "t2.actid",
                    "group",
                    "by",
                    "t1.actid"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.activity_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "activity",
                    "as",
                    "t1",
                    "join",
                    "faculty_participates_in",
                    "as",
                    "t2",
                    "on",
                    "t1.actid",
                    "=",
                    "t2.actid",
                    "group",
                    "by",
                    "t1.actid"
                ]
            },
            {
                "question": "Show all party names and the number of members in each party.",
                "masked_template": "Show all <mask> names and the number of <mask> in each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people",
                "query_toks": [
                    "select",
                    "t2.party_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "member",
                    "as",
                    "t1",
                    "join",
                    "party",
                    "as",
                    "t2",
                    "on",
                    "t1.party_id",
                    "=",
                    "t2.party_id",
                    "group",
                    "by",
                    "t1.party_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.party_name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "member",
                    "as",
                    "t1",
                    "join",
                    "party",
                    "as",
                    "t2",
                    "on",
                    "t1.party_id",
                    "=",
                    "t2.party_id",
                    "group",
                    "by",
                    "t1.party_id"
                ]
            },
            {
                "question": "For each user, find their name and the number of reviews written by them.",
                "masked_template": "For each <mask> find their name and the number of <mask> by <mask>",
                "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
                "ted": 0.0,
                "db_id": "epinions_1",
                "query_toks": [
                    "select",
                    "t1.name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "useracct",
                    "as",
                    "t1",
                    "join",
                    "review",
                    "as",
                    "t2",
                    "on",
                    "t1.u_id",
                    "=",
                    "t2.u_id",
                    "group",
                    "by",
                    "t2.u_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.name",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "useracct",
                    "as",
                    "t1",
                    "join",
                    "review",
                    "as",
                    "t2",
                    "on",
                    "t1.u_id",
                    "=",
                    "t2.u_id",
                    "group",
                    "by",
                    "t2.u_id"
                ]
            },
            {
                "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
                "masked_template": "How many <mask> are there in each <mask> Return both the <mask> and the <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups",
                "query_toks": [
                    "select",
                    "t1.city_town",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "addresses",
                    "as",
                    "t1",
                    "join",
                    "drama_workshop_groups",
                    "as",
                    "t2",
                    "on",
                    "t1.address_id",
                    "=",
                    "t2.address_id",
                    "group",
                    "by",
                    "t1.city_town"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.city_town",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "addresses",
                    "as",
                    "t1",
                    "join",
                    "drama_workshop_groups",
                    "as",
                    "t2",
                    "on",
                    "t1.address_id",
                    "=",
                    "t2.address_id",
                    "group",
                    "by",
                    "t1.city_town"
                ]
            },
            {
                "question": "What are the faculty id and the number of students each faculty has?",
                "masked_template": "What are the <mask> id and the number of <mask> each <mask>",
                "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "List the name of all products along with the number of complaints that they have received.",
                "masked_template": "List the name of all <mask> with the number of <mask> that <mask> have <mask>",
                "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "ted": 0.0,
                "db_id": "customer_complaints"
            },
            {
                "question": "Show the names of pilots and the number of records they have.",
                "masked_template": "Show the names of <mask> and the number of <mask>",
                "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
                "masked_template": "Show the <mask> id of each <mask> with the number of <mask> he or she <mask>",
                "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "For each building, show the name of the building and the number of institutions in it.",
                "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
                "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
                "masked_template": "How many <mask> do each <mask> of? List their names and number of <mask> of.",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Show the name of track and the number of races in each track.",
                "masked_template": "Show the name of <mask> and the number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
                "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
                "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
                "masked_template": "How many <mask> in each <mask> Return the <mask> names and the number of <mask>",
                "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are all the different product names, and how many complains has each received?",
                "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
                "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "ted": 0.0,
                "db_id": "customer_complaints"
            },
            {
                "question": "Show all the faculty ranks and the number of students advised by each rank.",
                "masked_template": "Show all the <mask> and the number of <mask> by each <mask>",
                "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "How many exhibitions has each artist had?",
                "masked_template": "How many <mask> has each <mask>",
                "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "How many events are there for each party?",
                "masked_template": "How many <mask> are there for each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
                "masked_template": "How many <mask> each <mask> to? List the <mask> id and the number of <mask>",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "Show all cities along with the number of drama workshop groups in each city.",
                "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the different card types, and how many transactions have been made with each?",
                "masked_template": "What are the different <mask> and how many <mask> have <mask> with <mask>",
                "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
                "ted": 0.0,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "For every student who is registered for some course, how many courses are they registered for?",
                "masked_template": "For <mask> who is <mask> for <mask> how many <mask> are <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Show institution names along with the number of proteins for each institution.",
                "masked_template": "Show <mask> names <mask> with the number of <mask> for each <mask>",
                "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "Show party names and the number of events for each party.",
                "masked_template": "Show <mask> names and the number of <mask> for each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Show the station name and number of trains in each station.",
                "masked_template": "Show the <mask> name and number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "How many members are in each party?",
                "masked_template": "How many <mask> are in each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Find the name of each user and number of tweets tweeted by each of them.",
                "masked_template": "Find the name of each <mask> and number of <mask> by each of <mask>",
                "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "Show the company name with the number of gas station.",
                "masked_template": "Show the <mask> name with the number of gas <mask>",
                "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "List the id of students who registered some courses and the number of their registered courses?",
                "masked_template": "List the id of <mask> who <mask> and the number of their <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
                "masked_template": "Find the number of <mask> each <mask> to. Show the number <mask> with the <mask> id.",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.0,
                "db_id": "insurance_policies"
            }
        ],
        "best_hyp": "Return the name of each singer and the number of times he or she has been in concert.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Show the names of singers and the number of concerts they have been in.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "select T2.name , T2.capacity from concert as T1 join stadium as T2 on T1.stadium_id = T2.stadium_id where T1.year > 2045 group by T2.stadium_id order by count( * ) desc limit 1",
        "proc_query": "( <col> name </col> of <tab> stadium </tab> ) , ( <col> capacity </col> of <tab> stadium </tab> ) that belongs to ( ( <tab> concert </tab> ) , and ( ( <tab> stadium </tab> ) satisfied that ( ( <col> stadium id </col> of <tab> concert </tab> ) equal to ( <col> stadium id </col> of <tab> stadium </tab> ) ) ) ) , that have ( ( <col> year </col> of <tab> concert </tab> ) greater than ( <val> 2045 </val> ) ) , grouped by ( <col> stadium id </col> of <tab> stadium </tab> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the name and capacity of the stadium that has the most number of concerts after 2045?",
                -12.121143341064453
            ],
            [
                "What is the name and capacity for the stadium that hosted the most concerts in year 2045?",
                -12.090778350830078
            ],
            [
                "What is the name and capacity for the stadium with most number of concerts in year 2045?",
                -12.103848457336426
            ],
            [
                "What is the name and capacity of the stadium that has hosted the most number of concerts after 2045?",
                -12.107585906982422
            ],
            [
                "Find the stadium with the most number of concerts with year after 2045.",
                -12.113066673278809
            ],
            [
                "What is the id and name of the stadium that can accommodate the most concerts after 2045 as an attraction?",
                -12.115394592285156
            ],
            [
                "Find the name and capacity of the stadium that hosted the most concerts after 2045.",
                -12.117451667785645
            ],
            [
                "What is the name and capacity of the stadium that has the most concerts after 2045?",
                -12.122262954711914
            ],
            [
                "What are the name and capacity of the stadium with the most concerts in year 2045?",
                -12.122865676879883
            ],
            [
                "Find the id and capacity of the stadium that has the most concerts with year after 2045.",
                -12.12321949005127
            ],
            [
                "In what are the id and capacity of the stadium that has the highest average number of concerts after 2045?",
                -12.1307373046875
            ],
            [
                "What is the id and name of the stadium with most number of concerts that can last as long as 2045?",
                -12.132088661193848
            ],
            [
                "What is the name of stadium has the greatest number of concerts with a year after 2045?",
                -12.138319969177246
            ],
            [
                "find the name and age of the stadium that has hosted the most number of concerts after the year 2045.",
                -12.15104866027832
            ],
            [
                "Which stadium has the most concerts with a capacity above 2045?",
                -12.152854919433594
            ],
            [
                "Find the id and capacity of the stadium that has the highest average number of concerts in year 2045",
                -12.16195011138916
            ]
        ],
        "templates": [
            "",
            {
                "question": "What is the name and opening year for the branch that registered the most members in 2016?",
                "masked_template": "What is the name and <mask> for the <mask> that <mask> the most <mask> in <mask>",
                "query": "SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.022727272727272728,
                "db_id": "shop_membership"
            },
            {
                "question": "What is the name and open year for the branch with most number of memberships registered in 2016?",
                "masked_template": "What is the name and <mask> for the <mask> with most number of <mask> in <mask>",
                "query": "SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.022727272727272728,
                "db_id": "shop_membership"
            },
            {
                "question": "What is the name and age of the pilot younger than 30 who has won the most number of times?",
                "masked_template": "What is the name and age of the <mask> than 30 who has won the most number of <mask>",
                "query": "SELECT T1.name , T1.age FROM pilot AS T1 JOIN MATCH AS T2 ON T1.pilot_id = T2.winning_pilot WHERE T1.age < 30 GROUP BY T2.winning_pilot ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.022727272727272728,
                "db_id": "aircraft"
            },
            {
                "question": "Find the county where produces the most number of wines with score higher than 90.",
                "masked_template": "Find the <mask> the most number of <mask> with <mask> than 90.",
                "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.09090909090909091,
                "db_id": "wine_1"
            },
            {
                "question": "What is the id and name of the enzyme that can interact with the most medicines as an activator?",
                "masked_template": "What is the id and name of the <mask> that can <mask> with the most <mask> as an <mask>",
                "query": "SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.06521739130434782,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "Find the name and id of the team that won the most times in 2008 postseason.",
                "masked_template": "Find the name and id of the <mask> that won the most <mask> in <mask>",
                "query": "SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.022727272727272728,
                "db_id": "baseball_1"
            },
            {
                "question": "What is the county that produces the most wines scoring higher than 90?",
                "masked_template": "What is the <mask> that <mask> the most <mask> than 90?",
                "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.09090909090909091,
                "db_id": "wine_1"
            },
            {
                "question": "What are the name and id of the team with the most victories in 2008 postseason?",
                "masked_template": "What are the name and id of the <mask> with the most <mask> in <mask>",
                "query": "SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.022727272727272728,
                "db_id": "baseball_1"
            },
            {
                "question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?",
                "masked_template": "Find the id and <mask> name of the <mask> that has the most <mask> with <mask>",
                "query": "SELECT T1.teacher_id , T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.detention_type_code = 'AFTER' GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.06521739130434782,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "In 2014, what are the id and rank of the team that has the largest average number of attendance?",
                "masked_template": "In <mask> what are the id and <mask> of the <mask> that has the <mask> average number of <mask>",
                "query": "SELECT T2.team_id , T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY avg( T1.attendance ) DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "baseball_1"
            },
            {
                "question": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?",
                "masked_template": "What is the id and name of the <mask> with most number of <mask> that can <mask> as <mask>",
                "query": "SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.06521739130434782,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What is the name of department where has the largest number of professors with a Ph.D. degree?",
                "masked_template": "What is the name of <mask> has the <mask> number of <mask> with a <mask>",
                "query": "SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.06521739130434782,
                "db_id": "college_1"
            },
            {
                "question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.",
                "masked_template": "find the name and age of the <mask> who has won the most number of <mask> the <mask> who are <mask> than 30.",
                "query": "SELECT T1.name , T1.age FROM pilot AS T1 JOIN MATCH AS T2 ON T1.pilot_id = T2.winning_pilot WHERE T1.age < 30 GROUP BY T2.winning_pilot ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.022727272727272728,
                "db_id": "aircraft"
            },
            {
                "question": "Which department has the most professors with a Ph.D.?",
                "masked_template": "Which <mask> has the most <mask> with a <mask>",
                "query": "SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.06521739130434782,
                "db_id": "college_1"
            },
            {
                "question": "Find the id and rank of the team that has the highest average attendance rate in 2014.",
                "masked_template": "Find the id and <mask> of the <mask> that has the <mask> average <mask> in <mask>",
                "query": "SELECT T2.team_id , T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY avg( T1.attendance ) DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "baseball_1"
            }
        ],
        "best_hyp": "What is the id and name of the stadium with most number of concerts that can last as long as 2045?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name and capacity of the stadium that has the most number of concerts after 2045?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> conductor </tab> ) , ordered by ( ( <col> year of work </col> ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What is the name of the conductor with the most years of work?",
                10.672718048095703
            ],
            [
                "What is the name of the conductor with the greatest number of years of work?",
                10.888036727905273
            ],
            [
                "What is the name of the conductor with the greatest number of years of work?",
                10.888036727905273
            ],
            [
                "Show the name of the conductor with the longest year of work.",
                10.886771202087402
            ],
            [
                "Show the name of the conductor with the longest year of work.",
                10.886771202087402
            ],
            [
                "Find the name of the conductor with the longest year of work.",
                10.869277954101562
            ],
            [
                "What are the names of the conductor with the longest year of work?",
                10.818387031555176
            ],
            [
                "Return the name of the conductor with the longest year of work.",
                10.808101654052734
            ],
            [
                "What is the name of the conductor with the maximum year of work?",
                10.782894134521484
            ],
            [
                "What is the name of the conductor with the longest year of work?",
                10.77925968170166
            ],
            [
                "What is the name of the conductor with the longest year of work?",
                10.77925968170166
            ],
            [
                "Show the names of the conductor with the most years of work.",
                10.752605438232422
            ],
            [
                "What is the name of the conductor with the most years of work?",
                10.672719955444336
            ],
            [
                "What is the name of the conductor with the most years of work?",
                10.672719955444336
            ],
            [
                "List the name of the conductor that has the longest working history.",
                10.642005920410156
            ],
            [
                "Return the name of the conductor that has worked the most years on record.",
                10.453024864196777
            ],
            [
                "What is the name of the conductor that worked in the most recent year?",
                10.432369232177734
            ],
            [
                "Find the name of the conductor in the longest year of work.",
                10.339628219604492
            ],
            [
                "Who is the conductor with the longest year of work?",
                10.31387996673584
            ],
            [
                "Which conductor has the longest working history?",
                8.325399398803711
            ],
            [
                "Find the name of conductor that worked for the longest time.",
                7.74553108215332
            ],
            [
                "Which conductor has the longest working history? Tell me the name of the conductor.",
                7.547371864318848
            ],
            [
                "What is the name of the most recent conductor?",
                3.4432239532470703
            ],
            [
                "What is the name of the youngest conductor?",
                1.8242073059082031
            ],
            [
                "What is the name of the youngest conductor?",
                1.8242073059082031
            ],
            [
                "What are the ids of the top conductor that started in the most recent year?",
                -1.2181450128555298
            ],
            [
                "What are the names of the conductor with the top 3 years of work?",
                -5.692718029022217
            ],
            [
                "What are the names of the conductor with the top 3 years of work?",
                -5.692718029022217
            ],
            [
                "What is the id of the conductor that worked most recently?",
                -10.857514381408691
            ],
            [
                "What is the id of the most recent conductor?",
                -11.451541900634766
            ],
            [
                "Find the id of the order of most recent year of work.",
                -11.908841133117676
            ]
        ],
        "templates": [
            "",
            {
                "question": "What is the name of the player with the largest number of votes?",
                "masked_template": "What is the name of the <mask> with the <mask> number of <mask>",
                "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "riding_club",
                "query_toks": [
                    "select",
                    "player_name",
                    "from",
                    "player",
                    "order",
                    "by",
                    "votes",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "player_name",
                    "from",
                    "player",
                    "order",
                    "by",
                    "votes",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the location of the festival with the largest number of audience?",
                "masked_template": "What is the <mask> of the <mask> with the <mask> number of <mask>",
                "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "Show the name of the county with the biggest population.",
                "masked_template": "Show the name of the <mask> with the <mask>",
                "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election",
                "query_toks": [
                    "select",
                    "county_name",
                    "from",
                    "county",
                    "order",
                    "by",
                    "population",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "county_name",
                    "from",
                    "county",
                    "order",
                    "by",
                    "population",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Show the park of the roller coaster with the highest speed.",
                "masked_template": "Show the <mask> of the <mask> with the <mask>",
                "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Find the stories of the building with the largest height.",
                "masked_template": "Find the <mask> of the <mask> with the <mask>",
                "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office",
                "query_toks": [
                    "select",
                    "stories",
                    "from",
                    "buildings",
                    "order",
                    "by",
                    "height",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "stories",
                    "from",
                    "buildings",
                    "order",
                    "by",
                    "height",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What are the names of the dorm with the largest capacity?",
                "masked_template": "What are the names of the <mask> with the <mask>",
                "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1",
                "query_toks": [
                    "select",
                    "dorm_name",
                    "from",
                    "dorm",
                    "order",
                    "by",
                    "student_capacity",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "dorm_name",
                    "from",
                    "dorm",
                    "order",
                    "by",
                    "student_capacity",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "Return the famous release date for the oldest artist.",
                "masked_template": "Return the <mask> for the <mask>",
                "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_4",
                "query_toks": [
                    "select",
                    "famous_release_date",
                    "from",
                    "artist",
                    "order",
                    "by",
                    "age",
                    "desc",
                    "limit",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "famous_release_date",
                    "from",
                    "artist",
                    "order",
                    "by",
                    "age",
                    "desc",
                    "limit",
                    "value"
                ]
            },
            {
                "question": "What is the song in the volume with the maximum weeks on top?",
                "masked_template": "What is the <mask> in the <mask> with the maximum <mask> on <mask>",
                "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What is the name of the product with the highest price?",
                "masked_template": "What is the name of the <mask> with the <mask>",
                "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "What is the author of the submission with the highest score?",
                "masked_template": "What is the <mask> of the <mask> with the <mask>",
                "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "Show the names of the three most recent festivals.",
                "masked_template": "Show the names of the <mask> most <mask>",
                "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "What is the name of the project with the most hours?",
                "masked_template": "What is the name of the <mask> with the most <mask>",
                "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "What is the stories of highest building?",
                "masked_template": "What is the <mask> of <mask>",
                "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "List the school color of the school that has the largest enrollment.",
                "masked_template": "List the <mask> of the <mask> that has the <mask>",
                "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Return the song in the volume that has spent the most weeks on top?",
                "masked_template": "Return the <mask> in the <mask> that has <mask> the most <mask> on <mask>",
                "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What is the name of the event that happened in the most recent year?",
                "masked_template": "What is the name of the <mask> that <mask> in the most <mask>",
                "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Give the ids of the three products purchased in the largest amounts.",
                "masked_template": "<mask> the ids of the <mask> in the <mask>",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "Who is the instructor with the highest salary?",
                "masked_template": "Who is the <mask> with the <mask>",
                "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Which district has the largest population?",
                "masked_template": "Which <mask> has the <mask>",
                "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "Find the name of project that continues for the longest time.",
                "masked_template": "Find the name of <mask> that <mask> for the <mask>",
                "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "Which county has the largest population? Give me the name of the county.",
                "masked_template": "Which <mask> has the <mask> me the name of the <mask>",
                "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What is the carrier of the most expensive phone?",
                "masked_template": "What is the <mask> of the most <mask>",
                "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "What are the speeds of the longest roller coaster?",
                "masked_template": "What are the <mask> of the <mask>",
                "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Give the name of the highest paid instructor.",
                "masked_template": "<mask> the name of the <mask>",
                "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the ids of the top three products that were purchased in the largest amount?",
                "masked_template": "What are the ids of the top <mask> that <mask> in the <mask>",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What are the names of the schools with the top 3 largest class sizes?",
                "masked_template": "What are the names of the <mask> with the top 3 <mask>",
                "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "What are the names of schools with the top 3 largest size?",
                "masked_template": "What are the names of <mask> with the top 3 <mask>",
                "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "What is the id of the appointment that started most recently?",
                "masked_template": "What is the id of the <mask> that <mask> most <mask>",
                "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "What is the id of the most recent order?",
                "masked_template": "What is the id of the most <mask>",
                "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "Find the id of the order made most recently.",
                "masked_template": "Find the id of the order <mask> most <mask>",
                "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_orders"
            }
        ],
        "best_hyp": "What is the name of the conductor with the most years of work?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name of the conductor with the most years of work?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "proc_query": "( <tab> orchestra </tab> ) that belongs to ( <tab> orchestra </tab> ) , that have ( ( <col> orchestra id </col> ) not in ( ( <col> orchestra id </col> ) that belongs to ( <tab> performance </tab> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of the orchestras that did not have any performance?",
                10.143549919128418
            ],
            [
                "What are the names of all the orchestras that are not involved in any performance?",
                11.248518943786621
            ],
            [
                "What are the names of the orchestras that did not participate in any performance?",
                10.718499183654785
            ],
            [
                "What are the names of all the orchestras that have not provided any performance?",
                10.706307411193848
            ],
            [
                "what are the names of the orchestras that did not participate in any performance?",
                10.662114143371582
            ],
            [
                "What are the names of all the orchestras that have never won any performance?",
                10.654632568359375
            ],
            [
                "What are the names of the orchestras that do not have any performances?",
                10.377870559692383
            ],
            [
                "What are the names of the orchestras that do not have any performances?",
                10.377870559692383
            ],
            [
                "What are the names of the orchestras that do not have any performances?",
                10.377870559692383
            ],
            [
                "What are the names of the orchestras that did not have any performance?",
                10.143550872802734
            ],
            [
                "What are the names of the orchestras that did not have any performance?",
                10.143550872802734
            ],
            [
                "What are the names of the orchestras that did not have any performance?",
                10.143550872802734
            ],
            [
                "List the names of the orchestras that are not involved in any performance",
                9.704792976379395
            ],
            [
                "List the names of the orchestras that are not involved in any performance",
                9.704792976379395
            ],
            [
                "List the names of the orchestras that are not involved in any performance",
                9.704792976379395
            ],
            [
                "What are the names of the orchestras that do not have a performance?",
                9.654311180114746
            ],
            [
                "What are the names of the orchestras that have no performances?",
                9.398598670959473
            ],
            [
                "List the names of the orchestras that did not participate in any performance",
                9.363038063049316
            ],
            [
                "List the names of the orchestras that are not used by any performance",
                8.555062294006348
            ],
            [
                "Find the names of all the orchestras that have no performances",
                7.395999908447266
            ],
            [
                "Which orchestras do not have any performances? Tell me the orchestra id.",
                6.904278755187988
            ],
            [
                "Which orchestras have no performances? List the orchestra id.",
                6.58601713180542
            ],
            [
                "List the names of the orchestras that did not have any performance",
                5.983476638793945
            ],
            [
                "List the names of the orchestras that do not have any performance",
                5.674635410308838
            ],
            [
                "What are all ids of the orchestras that have not performed any performance?",
                5.595577716827393
            ],
            [
                "Find the name of the orchestra that do not have any performance",
                5.312620162963867
            ],
            [
                "Find the names of the orchestras that do not have any performance",
                4.898876667022705
            ],
            [
                "Find the name of the orchestra not performing in any performance",
                4.676123142242432
            ],
            [
                "Find all the names of the orchestra without any performance",
                4.277683258056641
            ],
            [
                "List the names of orchestras that do not have any performance",
                4.254162311553955
            ],
            [
                "List the names of the orchestras that have no performances",
                4.193419456481934
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the first names of all students that are not enrolled in courses?",
                "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
                "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
                "ted": 0.0,
                "db_id": "college_3",
                "query_toks": [
                    "select",
                    "fname",
                    "from",
                    "student",
                    "where",
                    "stuid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "stuid",
                    "from",
                    "enrolled_in",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "fname",
                    "from",
                    "student",
                    "where",
                    "stuid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "stuid",
                    "from",
                    "enrolled_in",
                    ")"
                ]
            },
            {
                "question": "Give the names of people who did not participate in the candidate election.",
                "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
                "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
                "ted": 0.0,
                "db_id": "candidate_poll",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ]
            },
            {
                "question": "What are the titles of all movies that have not been rated?",
                "masked_template": "What are the <mask> of all <mask> that have not <mask>",
                "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
                "ted": 0.0,
                "db_id": "movie_1",
                "query_toks": [
                    "select",
                    "title",
                    "from",
                    "movie",
                    "where",
                    "mid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "mid",
                    "from",
                    "rating",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "title",
                    "from",
                    "movie",
                    "where",
                    "mid",
                    "not",
                    "in",
                    "(",
                    "select",
                    "mid",
                    "from",
                    "rating",
                    ")"
                ]
            },
            {
                "question": "what are the names of people who did not participate in the candidate election.",
                "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
                "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
                "ted": 0.0,
                "db_id": "candidate_poll",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "people",
                    "where",
                    "people_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "people_id",
                    "from",
                    "candidate",
                    ")"
                ]
            },
            {
                "question": "What are the names of all aicrafts that have never won any match?",
                "masked_template": "What are the names of all <mask> that have <mask> won any <mask>",
                "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
                "ted": 0.0,
                "db_id": "aircraft",
                "query_toks": [
                    "select",
                    "aircraft",
                    "from",
                    "aircraft",
                    "where",
                    "aircraft_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "winning_aircraft",
                    "from",
                    "match",
                    ")"
                ],
                "query_toks_no_value": [
                    "select",
                    "aircraft",
                    "from",
                    "aircraft",
                    "where",
                    "aircraft_id",
                    "not",
                    "in",
                    "(",
                    "select",
                    "winning_aircraft",
                    "from",
                    "match",
                    ")"
                ]
            },
            {
                "question": "What are the names of documents that do not have any sections?",
                "masked_template": "What are the names of <mask> that do not have any <mask>",
                "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "What are the names of counties that do not contain any cities?",
                "masked_template": "What are the names of <mask> that do not <mask> any <mask>",
                "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the famous titles of artists who do not have any volumes?",
                "masked_template": "What are the <mask> of <mask> who do not have any <mask>",
                "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What are the titles of courses without prerequisites?",
                "masked_template": "What are the <mask> of <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of courses without prerequisites?",
                "masked_template": "What are the names of <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of instructors who didn't teach?",
                "masked_template": "What are the names of <mask> who <mask>",
                "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the names of people that are not perpetrators.",
                "masked_template": "List the names of <mask> that are not <mask>",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
                "ted": 0.0,
                "db_id": "perpetrator"
            },
            {
                "question": "List the names of products that are not in any event.",
                "masked_template": "List the names of <mask> that are not in any <mask>",
                "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "List the name of artworks that are not nominated.",
                "masked_template": "List the name of <mask> that are not <mask>",
                "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "What are the titles of films that do not have a film market estimation?",
                "masked_template": "What are the <mask> of <mask> that do not have a <mask>",
                "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What are the details of the project with no outcomes?",
                "masked_template": "What are the <mask> of the <mask> with no <mask>",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "List the names of members who did not participate in any round.",
                "masked_template": "List the names of <mask> who did not <mask> in any <mask>",
                "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "List the names of people that are not employed by any company",
                "masked_template": "List the names of <mask> that are not <mask> by any <mask>",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "Find the titles of all movies that have no ratings.",
                "masked_template": "Find the <mask> of all <mask> that have no <mask>",
                "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "Which schools do not have any player? Give me the school locations.",
                "masked_template": "Which <mask> do not have any <mask> me the <mask>",
                "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Which projects have no outcome? List the project details.",
                "masked_template": "Which <mask> have no <mask> List the <mask>",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "List the names of aircrafts and that did not win any match.",
                "masked_template": "List the names of <mask> and that did not win any <mask>",
                "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "List the names of mountains that do not have any climber.",
                "masked_template": "List the names of <mask> that do not have any <mask>",
                "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "What are all info of students who registered courses but not attended courses?",
                "masked_template": "What are all <mask> of <mask> who <mask> but not <mask>",
                "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Find the name of the courses that do not have any prerequisite?",
                "masked_template": "Find the name of the <mask> that do not have any <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Find the famous titles of artists that do not have any volume.",
                "masked_template": "Find the <mask> of <mask> that do not have any <mask>",
                "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "Find the first name of students not enrolled in any course.",
                "masked_template": "Find the <mask> name of <mask> not <mask> in any <mask>",
                "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Find all the name of documents without any sections.",
                "masked_template": "Find all the name of <mask> any <mask>",
                "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "List the locations of schools that do not have any player.",
                "masked_template": "List the <mask> of <mask> that do not have any <mask>",
                "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "List the names of buildings that have no company office.",
                "masked_template": "List the names of <mask> that have no <mask>",
                "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
                "ted": 0.0,
                "db_id": "company_office"
            }
        ],
        "best_hyp": "What are the names of all the orchestras that have never won any performance?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of the orchestras that did not have any performance?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count( * ) FROM concert WHERE YEAR = 2031 OR YEAR = 2030",
        "proc_query": "( the number of ( all items ) ) that belongs to ( <tab> concert </tab> ) , that have ( ( ( <col> year </col> ) equal to ( <val> 2031 </val> ) ) or ( ( <col> year </col> ) equal to ( <val> 2030 </val> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "How many concerts are held in either year 2031 or 2030?",
                8.573843002319336
            ],
            [
                "How many concerts in year 2031 or 2030 are there?",
                9.946883201599121
            ],
            [
                "Show the number of concerts in year 2031 or 2030.",
                9.17485523223877
            ],
            [
                "Show the number of concerts in year 2031 or 2030.",
                9.17485523223877
            ],
            [
                "Show the number of concerts in year 2031 or 2030.",
                9.17485523223877
            ],
            [
                "Find the number of concerts in year 2031 or 2030.",
                8.514150619506836
            ],
            [
                "Show the number of concerts in year 2031 or 2030",
                7.45758581161499
            ],
            [
                "Which concerts had a date in either 2031 or 2030?",
                3.5897412300109863
            ],
            [
                "What are the names of the concerts held in year 2031 or 2030?",
                -1.4760159254074097
            ],
            [
                "Show all names who have a concert in the year 2031 or 2030",
                -11.375101089477539
            ]
        ],
        "templates": [
            "",
            {
                "question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?",
                "masked_template": "How many <mask> in <mask> in <mask> is, the <mask> of <mask> is <mask>",
                "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
                "ted": 0.041666666666666664,
                "db_id": "baseball_1",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "postseason",
                    "where",
                    "year",
                    "=",
                    "1885",
                    "and",
                    "ties",
                    "=",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "postseason",
                    "where",
                    "year",
                    "=",
                    "value",
                    "and",
                    "ties",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Show the names of editors of age either 24 or 25.",
                "masked_template": "Show the names of <mask> of age <mask> 24 or 25.",
                "query": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
                "ted": 0.08333333333333333,
                "db_id": "journal_committee",
                "query_toks": [
                    "select",
                    "name",
                    "from",
                    "editor",
                    "where",
                    "age",
                    "=",
                    "24",
                    "or",
                    "age",
                    "=",
                    "25"
                ],
                "query_toks_no_value": [
                    "select",
                    "name",
                    "from",
                    "editor",
                    "where",
                    "age",
                    "=",
                    "value",
                    "or",
                    "age",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Show the names of people aged either 35 or 36.",
                "masked_template": "Show the names of <mask> 35 or 36.",
                "query": "SELECT Name FROM people WHERE Age = 35 OR Age = 36",
                "ted": 0.08333333333333333,
                "db_id": "debate"
            },
            {
                "question": "Show the name of technicians aged either 36 or 37",
                "masked_template": "Show the name of <mask> 36 or 37",
                "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
                "ted": 0.08333333333333333,
                "db_id": "machine_repair"
            },
            {
                "question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.",
                "masked_template": "Find the number of <mask> of <mask> is <mask> in <mask>",
                "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
                "ted": 0.041666666666666664,
                "db_id": "baseball_1",
                "query_toks": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "postseason",
                    "where",
                    "year",
                    "=",
                    "1885",
                    "and",
                    "ties",
                    "=",
                    "1"
                ],
                "query_toks_no_value": [
                    "select",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "postseason",
                    "where",
                    "year",
                    "=",
                    "value",
                    "and",
                    "ties",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Show the number of audience in year 2008 or 2010.",
                "masked_template": "Show the number of <mask> in <mask> or <mask>",
                "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
                "ted": 0.08333333333333333,
                "db_id": "entertainment_awards",
                "query_toks": [
                    "select",
                    "num_of_audience",
                    "from",
                    "festival_detail",
                    "where",
                    "year",
                    "=",
                    "2008",
                    "or",
                    "year",
                    "=",
                    "2010"
                ],
                "query_toks_no_value": [
                    "select",
                    "num_of_audience",
                    "from",
                    "festival_detail",
                    "where",
                    "year",
                    "=",
                    "value",
                    "or",
                    "year",
                    "=",
                    "value"
                ]
            },
            {
                "question": "Which directors had a movie in either 1999 or 2000?",
                "masked_template": "Which <mask> had a <mask> in <mask> or <mask>",
                "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
                "ted": 0.08333333333333333,
                "db_id": "culture_company"
            },
            {
                "question": "What are the names of the technicians aged either 36 or 37?",
                "masked_template": "What are the names of the <mask> 36 or 37?",
                "query": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
                "ted": 0.08333333333333333,
                "db_id": "machine_repair"
            },
            {
                "question": "Show all director names who have a movie in the year 1999 or 2000.",
                "masked_template": "Show all <mask> names who have a <mask> in the <mask> or <mask>",
                "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
                "ted": 0.08333333333333333,
                "db_id": "culture_company"
            }
        ],
        "best_hyp": "How many concerts in year 2031 or 2030 are there?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many concerts are held in either year 2031 or 2030?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT( * ) ASC",
        "proc_query": "( <col> major record format </col> ) that belongs to ( <tab> orchestra </tab> ) , grouped by ( <col> major record format </col> ) , ordered by ( ( the number of ( all items ) ) in ascending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "List the major record format of the orchestra in ascending order of the number of albums.",
                10.583572387695312
            ],
            [
                "Show all the major record formats in ascending order of the count of orchestra in each format.",
                10.546053886413574
            ],
            [
                "Please show the major record format of orchestras in ascending order of the number of albums.",
                10.312601089477539
            ],
            [
                "Please show the major record format of orchestras in ascending order of the number of albums.",
                10.312600135803223
            ],
            [
                "Please show the different major record formats ordered by the number of orchestras that have been released.",
                9.342586517333984
            ],
            [
                "What are the different major record formats for orchestra ordered by decreasing number of albums?",
                5.011005878448486
            ],
            [
                "Return the different types of major record format used by orchestra",
                -1.491163730621338
            ]
        ],
        "templates": [
            "",
            {
                "question": "Sort all the industries in descending order of the count of companies in each industry",
                "masked_template": "<mask> all the <mask> in <mask> order of the count of <mask> in each <mask>",
                "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC",
                "ted": 0.0625,
                "db_id": "company_office",
                "query_toks": [
                    "select",
                    "industry",
                    "from",
                    "companies",
                    "group",
                    "by",
                    "industry",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "industry",
                    "from",
                    "companies",
                    "group",
                    "by",
                    "industry",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc"
                ]
            },
            {
                "question": "Please show the software platforms of devices in descending order of the count.",
                "masked_template": "<mask> show the <mask> of <mask> in <mask> order of the <mask>",
                "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC",
                "ted": 0.0625,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "software_platform",
                    "from",
                    "device",
                    "group",
                    "by",
                    "software_platform",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "software_platform",
                    "from",
                    "device",
                    "group",
                    "by",
                    "software_platform",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc"
                ]
            },
            {
                "question": "Please show the industries of companies in descending order of the number of companies.",
                "masked_template": "<mask> show the <mask> of <mask> in <mask> order of the number of <mask>",
                "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC",
                "ted": 0.0625,
                "db_id": "company_office"
            },
            {
                "question": "Please show the different statuses, ordered by the number of cities that have each.",
                "masked_template": "<mask> show the different <mask> ordered by the number of <mask> that have <mask>",
                "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) ASC",
                "ted": 0.0,
                "db_id": "farm",
                "query_toks": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "group",
                    "by",
                    "status",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "asc"
                ],
                "query_toks_no_value": [
                    "select",
                    "status",
                    "from",
                    "city",
                    "group",
                    "by",
                    "status",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "asc"
                ]
            },
            {
                "question": "What are the different software platforms for devices, ordered by frequency descending?",
                "masked_template": "What are the different <mask> for <mask> ordered by <mask>",
                "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC",
                "ted": 0.0625,
                "db_id": "device",
                "query_toks": [
                    "select",
                    "software_platform",
                    "from",
                    "device",
                    "group",
                    "by",
                    "software_platform",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc"
                ],
                "query_toks_no_value": [
                    "select",
                    "software_platform",
                    "from",
                    "device",
                    "group",
                    "by",
                    "software_platform",
                    "order",
                    "by",
                    "count",
                    "(",
                    "*",
                    ")",
                    "desc"
                ]
            },
            {
                "question": "Return the different statuses of cities, ascending by frequency.",
                "masked_template": "Return the different <mask> of <mask> by <mask>",
                "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) ASC",
                "ted": 0.0,
                "db_id": "farm"
            }
        ],
        "best_hyp": "Show all the major record formats in ascending order of the count of orchestra in each format.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "List the major record format of the orchestra in ascending order of the number of albums.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "proc_query": "( <col> citizenship </col> ) , ( the number of ( all items ) ) that belongs to ( <tab> singer </tab> ) , grouped by ( <col> citizenship </col> )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "How many singers are from each nationality?",
                -1.4706283807754517
            ],
            [
                "What are the different nationalities and how many singers are there for each?",
                9.950579643249512
            ],
            [
                "What are the different nationalities of singers and how many singers belong to each?",
                9.80250072479248
            ],
            [
                "What are the different nationalities and how many singers belong to each?",
                9.370450973510742
            ],
            [
                "List all nations along with the number of singers from each nationality.",
                9.257928848266602
            ],
            [
                "List all nations and the number of singers from each nationality.",
                8.06316089630127
            ],
            [
                "Show all nationalities and the number of singers in each nationality.",
                7.400084972381592
            ],
            [
                "How many singers are from each nationality? List the nationality and the count.",
                7.221765041351318
            ],
            [
                "Show different nationalities along with the number of singers of each nationality.",
                6.566850185394287
            ],
            [
                "Show the different nationalities and the number of singers.",
                6.537680625915527
            ],
            [
                "Show all nations and corresponding number of singers.",
                6.445034027099609
            ],
            [
                "Show different nations of singers along with the number of singers with each nationality.",
                6.2899909019470215
            ],
            [
                "Please show the citizenship and the number of singers with each nationality.",
                5.862015724182129
            ],
            [
                "Show different nationalities and the number of singers in each nationality.",
                4.683598041534424
            ],
            [
                "For each nationality, show the citizenship number and find how many singers are from it.",
                4.147825717926025
            ],
            [
                "For each nationality, return the nationality and the count of singers with that nationality.",
                4.031610012054443
            ],
            [
                "For each nationality, report the total number of singers of that nationality.",
                4.001902103424072
            ],
            [
                "For each nationality, what are the countries and how many singers are from there?",
                3.9169435501098633
            ],
            [
                "Show different nationalities of singers and the number of singers of each nationality",
                3.0350773334503174
            ],
            [
                "Show the citizenship ID and number of singers for each nationality.",
                2.9727859497070312
            ],
            [
                "Show each nationality and the number of singers.",
                2.4467687606811523
            ],
            [
                "Show the citizenship and number of singers in each nationality.",
                1.9571706056594849
            ],
            [
                "find the number of singers from each nationality.",
                1.5221478939056396
            ],
            [
                "Show the different nationalities and number of singers at each nationality.",
                0.8468412160873413
            ],
            [
                "display the citizenship id and count of singers in each nationality.",
                0.7276588082313538
            ],
            [
                "How many singers belong to each nationality?",
                -0.5111868977546692
            ],
            [
                "For each nationality, how many singers are there?",
                -0.5494728684425354
            ],
            [
                "Find all nations of singers and number of singers.",
                -0.8355748057365417
            ],
            [
                "Find the number of singers for each nationality.",
                -1.3976420164108276
            ],
            [
                "How many singers are from each nationality?",
                -1.4706013202667236
            ],
            [
                "What are the number of singers for each nationality?",
                -2.6087427139282227
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are the different budget type codes, and how many documents are there for each?",
                "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses",
                "query_toks": [
                    "select",
                    "budget_type_code",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "documents_with_expenses",
                    "group",
                    "by",
                    "budget_type_code"
                ],
                "query_toks_no_value": [
                    "select",
                    "budget_type_code",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "documents_with_expenses",
                    "group",
                    "by",
                    "budget_type_code"
                ]
            },
            {
                "question": "What are the different classes of races, and how many races correspond to each?",
                "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track",
                "query_toks": [
                    "select",
                    "class",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "race",
                    "group",
                    "by",
                    "class"
                ],
                "query_toks_no_value": [
                    "select",
                    "class",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "race",
                    "group",
                    "by",
                    "class"
                ]
            },
            {
                "question": "What are the allergy types and how many allergies correspond to each one?",
                "masked_template": "What are the <mask> and how many <mask> to each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1",
                "query_toks": [
                    "select",
                    "allergytype",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "allergy_type",
                    "group",
                    "by",
                    "allergytype"
                ],
                "query_toks_no_value": [
                    "select",
                    "allergytype",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "allergy_type",
                    "group",
                    "by",
                    "allergytype"
                ]
            },
            {
                "question": "List all directors along with the number of films directed by each director.",
                "masked_template": "List all <mask> with the number of <mask> by each <mask>",
                "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
                "ted": 0.0,
                "db_id": "cinema",
                "query_toks": [
                    "select",
                    "directed_by",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "film",
                    "group",
                    "by",
                    "directed_by"
                ],
                "query_toks_no_value": [
                    "select",
                    "directed_by",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "film",
                    "group",
                    "by",
                    "directed_by"
                ]
            },
            {
                "question": "List all headquarters and the number of companies in each headquarter.",
                "masked_template": "List all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company",
                "query_toks": [
                    "select",
                    "headquarters",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "company",
                    "group",
                    "by",
                    "headquarters"
                ],
                "query_toks_no_value": [
                    "select",
                    "headquarters",
                    ",",
                    "count",
                    "(",
                    "*",
                    ")",
                    "from",
                    "company",
                    "group",
                    "by",
                    "headquarters"
                ]
            },
            {
                "question": "Show all allergy types and the number of allergies in each type.",
                "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "How many hosts does each nationality have? List the nationality and the count.",
                "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show different nationalities along with the number of hosts of each nationality.",
                "masked_template": "Show different <mask> with the number of <mask> of each <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show the different countries and the number of members from each.",
                "masked_template": "Show the different <mask> and the number of <mask>",
                "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "Show all majors and corresponding number of students.",
                "masked_template": "Show all <mask> and <mask> number of <mask>",
                "query": "SELECT major , count( * ) FROM Student GROUP BY major",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Show different carriers of phones together with the number of phones with each carrier.",
                "masked_template": "Show different <mask> of <mask> with the number of <mask> with each <mask>",
                "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "Please show the police forces and the number of counties with each police force.",
                "masked_template": "<mask> show the <mask> and the number of <mask> with each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Show budget type codes and the number of documents in each budget type.",
                "masked_template": "Show <mask> and the number of <mask> in each <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "For each classroom, show the classroom number and find how many students are using it.",
                "masked_template": "For each <mask> show the <mask> number and find how many <mask> are <mask> it.",
                "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
                "ted": 0.0,
                "db_id": "student_1"
            },
            {
                "question": "For each denomination, return the denomination and the count of schools with that denomination.",
                "masked_template": "For each <mask> return the <mask> and the count of <mask> with that <mask>",
                "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "For each advisor, report the total number of students advised by him or her.",
                "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
                "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
                "ted": 0.0,
                "db_id": "voter_2"
            },
            {
                "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
                "masked_template": "For each <mask> what are the <mask> and how many <mask> are <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "Show different types of ships and the number of ships of each type.",
                "masked_template": "Show different <mask> of <mask> and the number of <mask> of each <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "display the country ID and number of cities for each country.",
                "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Show each location and the number of cinemas there.",
                "masked_template": "Show each <mask> and the number of <mask>",
                "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "Show the race class and number of races in each class.",
                "masked_template": "Show the <mask> and number of <mask> in each <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "find the number of medicines offered by each trade.",
                "masked_template": "find the number of <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "Show the different headquarters and number of companies at each headquarter.",
                "masked_template": "Show the different <mask> and number of <mask> at each <mask>",
                "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "Give the country id and corresponding count of cities in each country.",
                "masked_template": "<mask> the <mask> id and <mask> count of <mask> in each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "How many counties correspond to each police force?",
                "masked_template": "How many <mask> to each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "For each type, how many ships are there?",
                "masked_template": "For each <mask> how many <mask> are <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "Find all types of store and number of them.",
                "masked_template": "Find all <mask> of <mask> and number of <mask>",
                "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "Find the number of rooms for each bed type.",
                "masked_template": "Find the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "How many medicines are offered by each trade name?",
                "masked_template": "How many <mask> are <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "What are the number of rooms for each bed type?",
                "masked_template": "What are the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            }
        ],
        "best_hyp": "What are the different nationalities and how many singers are there for each?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many singers are from each nationality?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "proc_query": "( <col> title </col> of <tab> song </tab> ) , ( <col> name </col> of <tab> singer </tab> ) that belongs to ( ( <tab> singer </tab> ) , and ( ( <tab> song </tab> ) satisfied that ( ( <col> singer id </col> of <tab> singer </tab> ) equal to ( <col> singer id </col> of <tab> song </tab> ) ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            [
                "What are the names of all singers who sang a song?",
                5.348956108093262
            ],
            [
                "What are all the song titles and the names of all the singers in the songs?",
                11.107501983642578
            ],
            [
                "Tell me the title and name of the singers for each song.",
                10.716558456420898
            ],
            [
                "List the song name and singer name for each song.",
                10.224187850952148
            ],
            [
                "Show the titles of songs and the names of their singers.",
                10.191696166992188
            ],
            [
                "What are the titles and names of all the singers?",
                10.098702430725098
            ],
            [
                "What is the song title and name of all the singers?",
                9.470151901245117
            ],
            [
                "What are the song titles and names of all singers?",
                9.067943572998047
            ],
            [
                "Show the song titles and names for all singers.",
                9.066161155700684
            ],
            [
                "What are the names of the songs as well as the name of the singers they are singers to?",
                8.402067184448242
            ],
            [
                "What are the titles of songs and the names of the singers they are singers to?",
                8.188855171203613
            ],
            [
                "What are the titles and names of songs in which singers are singers?",
                6.94926118850708
            ],
            [
                "What are the names and names of the singers that have produced a song?",
                6.799839496612549
            ],
            [
                "Show the song name and the singer name.",
                6.255887031555176
            ],
            [
                "Find the names of all singers who have produced songs and the singers' names.",
                5.915465354919434
            ],
            [
                "For each song, find the names of the singers they are singers of.",
                5.261673450469971
            ],
            [
                "What are the names of all singers who have produced a song as well as the song id?",
                3.7592365741729736
            ],
            [
                "Show names of songs and the names of singers they are in.",
                3.1054811477661133
            ],
            [
                "Tell me all the song titles and names of the singers they are singers.",
                2.215017557144165
            ],
            [
                "What are the names and names of all the singers?",
                2.171168327331543
            ],
            [
                "What are the ids of all songs for singers and what are the names of singers?",
                2.0932531356811523
            ],
            [
                "What are the names of all singers who have produced a song and the singers?",
                0.9060203433036804
            ],
            [
                "What are the title and name of each song?",
                0.4612034559249878
            ],
            [
                "Find the names of all songs that have singers and the singers.",
                0.2983417510986328
            ],
            [
                "What are the names of singers and their names?",
                -0.8319199085235596
            ],
            [
                "Please show the names and names of singers.",
                -2.0682363510131836
            ],
            [
                "what are the names of all singers?",
                -4.31256628036499
            ],
            [
                "Tell me the names and names of singers which are singers",
                -4.615760326385498
            ],
            [
                "List all song titles and singers",
                -5.578257083892822
            ],
            [
                "Show names and names of singers",
                -11.024771690368652
            ],
            [
                "Return the day Number and name for all the songs.",
                -11.982512474060059
            ]
        ],
        "templates": [
            "",
            {
                "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
                "masked_template": "What are all the <mask> and the <mask> of all the <mask> in the <mask>",
                "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
                "ted": 0.0,
                "db_id": "assets_maintenance",
                "query_toks": [
                    "select",
                    "t1.fault_description",
                    ",",
                    "t2.fault_status",
                    "from",
                    "fault_log",
                    "as",
                    "t1",
                    "join",
                    "fault_log_parts",
                    "as",
                    "t2",
                    "on",
                    "t1.fault_log_entry_id",
                    "=",
                    "t2.fault_log_entry_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.fault_description",
                    ",",
                    "t2.fault_status",
                    "from",
                    "fault_log",
                    "as",
                    "t1",
                    "join",
                    "fault_log_parts",
                    "as",
                    "t2",
                    "on",
                    "t1.fault_log_entry_id",
                    "=",
                    "t2.fault_log_entry_id"
                ]
            },
            {
                "question": "Give me the detail and opening hour for each museum.",
                "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
                "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
                "ted": 0.0,
                "db_id": "cre_Theme_park",
                "query_toks": [
                    "select",
                    "t1.museum_details",
                    ",",
                    "t2.opening_hours",
                    "from",
                    "museums",
                    "as",
                    "t1",
                    "join",
                    "tourist_attractions",
                    "as",
                    "t2",
                    "on",
                    "t1.museum_id",
                    "=",
                    "t2.tourist_attraction_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.museum_details",
                    ",",
                    "t2.opening_hours",
                    "from",
                    "museums",
                    "as",
                    "t1",
                    "join",
                    "tourist_attractions",
                    "as",
                    "t2",
                    "on",
                    "t1.museum_id",
                    "=",
                    "t2.tourist_attraction_id"
                ]
            },
            {
                "question": "Display the first name and department name for each employee.",
                "masked_template": "<mask> the <mask> name and <mask> name for each <mask>",
                "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
                "ted": 0.0,
                "db_id": "hr_1",
                "query_toks": [
                    "select",
                    "t1.first_name",
                    ",",
                    "t2.department_name",
                    "from",
                    "employees",
                    "as",
                    "t1",
                    "join",
                    "departments",
                    "as",
                    "t2",
                    "on",
                    "t1.department_id",
                    "=",
                    "t2.department_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t1.first_name",
                    ",",
                    "t2.department_name",
                    "from",
                    "employees",
                    "as",
                    "t1",
                    "join",
                    "departments",
                    "as",
                    "t2",
                    "on",
                    "t1.department_id",
                    "=",
                    "t2.department_id"
                ]
            },
            {
                "question": "Show the authors of submissions and the acceptance results of their submissions.",
                "masked_template": "Show the <mask> of <mask> and the <mask> of their <mask>",
                "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
                "ted": 0.0,
                "db_id": "workshop_paper",
                "query_toks": [
                    "select",
                    "t2.author",
                    ",",
                    "t1.result",
                    "from",
                    "acceptance",
                    "as",
                    "t1",
                    "join",
                    "submission",
                    "as",
                    "t2",
                    "on",
                    "t1.submission_id",
                    "=",
                    "t2.submission_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.author",
                    ",",
                    "t1.result",
                    "from",
                    "acceptance",
                    "as",
                    "t1",
                    "join",
                    "submission",
                    "as",
                    "t2",
                    "on",
                    "t1.submission_id",
                    "=",
                    "t2.submission_id"
                ]
            },
            {
                "question": "What are the first and last names of all the candidates?",
                "masked_template": "What are the <mask> and <mask> names of all the <mask>",
                "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
                "ted": 0.0,
                "db_id": "student_assessment",
                "query_toks": [
                    "select",
                    "t2.first_name",
                    ",",
                    "t2.last_name",
                    "from",
                    "candidates",
                    "as",
                    "t1",
                    "join",
                    "people",
                    "as",
                    "t2",
                    "on",
                    "t1.candidate_id",
                    "=",
                    "t2.person_id"
                ],
                "query_toks_no_value": [
                    "select",
                    "t2.first_name",
                    ",",
                    "t2.last_name",
                    "from",
                    "candidates",
                    "as",
                    "t1",
                    "join",
                    "people",
                    "as",
                    "t2",
                    "on",
                    "t1.candidate_id",
                    "=",
                    "t2.person_id"
                ]
            },
            {
                "question": "What is the day Number and date of all the documents?",
                "masked_template": "What is the day Number and <mask> of all the <mask>",
                "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the first name and department name of all employees?",
                "masked_template": "What are the <mask> name and <mask> name of all <mask>",
                "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Show the premise type and address type code for all customer addresses.",
                "masked_template": "Show the <mask> and <mask> for all <mask>",
                "query": "SELECT T2.premises_type , T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",
                "ted": 0.0,
                "db_id": "customers_campaigns_ecommerce"
            },
            {
                "question": "What are the names of cities, as well as the names of the counties they correspond to?",
                "masked_template": "What are the names of <mask> as <mask> as the names of the <mask> to?",
                "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
                "masked_template": "What are the <mask> of <mask> and the <mask> of the <mask> to?",
                "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "What are the phones and emails of workshop groups in which services are performed?",
                "masked_template": "What are the <mask> and <mask> of <mask> in which <mask> are <mask>",
                "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the names and types of the companies that have ever operated a flight?",
                "masked_template": "What are the names and <mask> of the <mask> that have <mask> a <mask>",
                "query": "SELECT T1.name , T1.type FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id",
                "ted": 0.0,
                "db_id": "flight_company"
            },
            {
                "question": "Show the protein name and the institution name.",
                "masked_template": "Show the <mask> name and the <mask>",
                "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "Find the first names of all instructors who have taught some course and the course code.",
                "masked_template": "Find the <mask> names of all <mask> who have <mask> and the <mask>",
                "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "For each delegate, find the names of the party they are part of.",
                "masked_template": "For each <mask> find the names of the <mask> are <mask> of.",
                "query": "SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
                "masked_template": "What are the names of all <mask> who have <mask> a <mask> as <mask> as the <mask> id?",
                "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Show white percentages of cities and the crime rates of counties they are in.",
                "masked_template": "Show <mask> of <mask> and the <mask> of <mask> are in.",
                "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
                "masked_template": "<mask> me all the <mask> numbers and <mask> of the <mask> are <mask>",
                "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the names and players of all the clubs?",
                "masked_template": "What are the names and <mask> of all the <mask>",
                "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What are the ids of all students for courses and what are the names of those courses?",
                "masked_template": "What are the ids of all <mask> for <mask> and what are the names of <mask>",
                "query": "SELECT T1.student_id , T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
                "masked_template": "What are the <mask> names of all <mask> who have <mask> a <mask> and the <mask>",
                "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "What are the location and nickname of each school?",
                "masked_template": "What are the <mask> and <mask> of each <mask>",
                "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Find the names of all instructors who have taught some course and the course_id.",
                "masked_template": "Find the names of all <mask> who have <mask> and the <mask>",
                "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Give the names of wrestlers and their elimination moves.",
                "masked_template": "<mask> the names of <mask> and their <mask>",
                "query": "SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
                "ted": 0.0,
                "db_id": "wrestler"
            },
            {
                "question": "Please show the names and the players of clubs.",
                "masked_template": "<mask> show the names and the <mask> of <mask>",
                "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "what are the first name and last name of all candidates?",
                "masked_template": "what are the <mask> name and <mask> name of all <mask>",
                "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
                "masked_template": "<mask> me the names and <mask> of <mask> which <mask> are <mask>",
                "query": "SELECT T1.name , T2.price_in_dollar FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID",
                "ted": 0.0,
                "db_id": "manufacturer"
            },
            {
                "question": "List all country and league names.",
                "masked_template": "List all <mask> and <mask>",
                "query": "SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",
                "ted": 0.0,
                "db_id": "soccer_1"
            },
            {
                "question": "Show locations and nicknames of schools.",
                "masked_template": "Show <mask> and <mask> of <mask>",
                "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Return the day Number and stored date for all the documents.",
                "masked_template": "Return the day Number and <mask> for all the <mask>",
                "query": "SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            }
        ],
        "best_hyp": "Show names of songs and the names of singers they are in.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of all singers who sang a song?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    }
]