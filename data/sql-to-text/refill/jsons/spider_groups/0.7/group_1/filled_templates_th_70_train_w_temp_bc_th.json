[
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "What are the names and countries of the singers whose song name contains the word \"Hey\"?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "What is the most common citizenship among singers?",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question": "What are the names of the conductor with the longest year of work?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Show the most common record company of the orchestra.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "question": "Which song has the youngest singer? List the song name and its release year.",
        "query_toks": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select avg( capacity ) , max( capacity ) from stadium",
        "question": "what are the average and maximum capacity of all stadiums?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "What are the names and countries of singers whose song name contains the word \"Hey\"?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age > 43 INTERSECT SELECT country FROM singer WHERE age < 29",
        "question": "What are the countries of the singers that are older than 43 and younger than 29?",
        "query_toks": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "43",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "29"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "List all the names of the conductor in ascending order of age.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "Find the name, country and age of each singer and show the results in the order of age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company , COUNT( * ) FROM orchestra GROUP BY Record_Company",
        "question": "Show the different record companies and the number of orchestras they have.",
        "query_toks": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "Which musicians have more than two orchestras in total? Return the names of these musicians.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question": "Show the name of the conductor with the longest year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "What is the total number of musicians whose major record format is DVD or CD?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "What is the name of the conductor who has more than two orchestras?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question": "List the name and capacity of the stadium with the highest average capacity.",
        "query_toks": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "Return the total number of distinct singers.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "Find the name and country of origin of the singers whose name has the substring \"Hey\".",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2038 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2026",
        "question": "Show the record companies that have both an orchestra that was founded before 2038 and an orchestra founded after 2026.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "2038",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "2026"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "value",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count( * ) FROM concert WHERE YEAR = 2031 OR YEAR = 2030",
        "question": "Find the number of concerts in year 2031 or 2030.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "2031",
            "or",
            "year",
            "=",
            "2030"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "For each stadium, show the name of the stadium and the number of concerts in it.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT( * ) ASC",
        "question": "Show all the major record formats in ascending order of the count of orchestra in each format.",
        "query_toks": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "What are the names and countries of singers whose songs contain the word \"Hey\"?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What are the names of all the musicians whose nationality is not France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
        "question": "Show all singers' names and the number of concerts they have been in.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "What are all the birth years and nationalities of singers?",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of singers that have sung more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age > 43 INTERSECT SELECT country FROM singer WHERE age < 29",
        "question": "Show the countries that have both singers older than 43 and singers younger than 29.",
        "query_toks": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "43",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "29"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "What are the different nationalities of singers and how many singers belong to each?",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "Tell me the birth year and citizenship of each singer.",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
        "question": "Show the names of singers and the number of concerts they have been in.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
        "question": "Show all the singers' names and the number of concerts they have been in.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "Show the record companies of orchestras in descending order of their founded year.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT( * ) ASC",
        "question": "Please show the different major record formats ordered by the number of orchestras that have been released.",
        "query_toks": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select avg( capacity ) , max( capacity ) from stadium",
        "question": "What is the average and maximum capacity of stadiums?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "List the location and name of stadiums that have the capacity of between 5000 and 10000",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "question": "What are the names of all singers that got older than the average number of singers?",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "What are all the conductor names in ascending order of age?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "what are the names of the orchestras that did not participate in any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "What are the different nationalities and how many singers are there for each?",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "List all conductor names ordered by their years of work in descending order.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name , sum( T2.Sales ) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
        "question": "What are the names of singers and the total number of sales of their songs?",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "What are the names of the record companies of the orchestra ordered by year of founded?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question": "What is the name of the conductor with the most years of work?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "question": "List the name of all songs that are sung older than the average age of all singers",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year = 1968 OR Birth_Year = 1960",
        "question": "What are the names of all singers who were born in either 1968 or 1960?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "1968",
            "or",
            "birth_year",
            "=",
            "1960"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2038 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2026",
        "question": "What are the record companies owned by both musicians founded before 2038 and musicians founded after 2026?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "2038",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "2026"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "value",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "question": "What is the name and release year of the youngest singer?",
        "query_toks": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "What are the names of all the record companies in descending order of the year they were founded?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "List all the conductor names in ascending order of age.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "What is the total number of singers?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "What is the total number of orchestras that are either in DVD format or CD format?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "Show the names of stadiums and the number of concerts in each stadium.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "How many concerts are held at each stadium? List the stadium name and the number of concerts.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "What are the different countries of singers and how many singers belong to each country?",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What are the names of all the conductor who are not from France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "List the name of the conductor who has more than two orchestras.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "Show the names and countries of singers whose song name contains the word \"Hey\".",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the year of the concert with the most number of performances?",
        "query_toks": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT( * ) > 1",
        "question": "What are the names of the years when the orchestra was founded for more than one performance?",
        "query_toks": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question": "List the names of all the singers in ascending order of net worth.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age > 18",
        "question": "What are the different countries that have singers older than 18?",
        "query_toks": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age > 43 INTERSECT SELECT country FROM singer WHERE age < 29",
        "question": "Show the countries that have singers with ages more than 43 and singers with age less than 29",
        "query_toks": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "43",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "29"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "question": "What is the total song name for all the singers that have an age greater than the average?",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "Show the name and country for all singers in descending order by age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year = 1968 OR Birth_Year = 1960",
        "question": "What are the names of singers born in either 1968 or 1960?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "1968",
            "or",
            "birth_year",
            "=",
            "1960"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Show the most common record company of all the orchestras.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count( * ) FROM concert WHERE YEAR = 2031 OR YEAR = 2030",
        "question": "How many concerts in year 2031 or 2030 are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "2031",
            "or",
            "year",
            "=",
            "2030"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Show the record company with the most number of orchestras.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2009",
        "question": "Show the names of the heads of the orchestras that have been founded after 2009.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2009",
        "question": "Find the names of all the musicians who had an orchestra founded after 2009.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year = 1968 OR Birth_Year = 1960",
        "question": "Find the names of the singers who were born in either 1968 or 1960.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "1968",
            "or",
            "birth_year",
            "=",
            "1960"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the most common year for concerts?",
        "query_toks": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question": "List the names of singers in ascending order of net worth.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "Find the name of the singers that have more than one song.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question": "What is the name of the conductor with the greatest number of years of work?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "What are the different countries and how many singers are there for each country?",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year = 1968 OR Birth_Year = 1960",
        "question": "Show the names of singers that have a birth year of either 1968 or 1960.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "1968",
            "or",
            "birth_year",
            "=",
            "1960"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "Find the names of all singers that have no songs.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
        "question": "Tell me all the conductor names and the names of the orchestra they are in.",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "Find the names of all conductor in the descending order of year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question": "Show the name and capacity of the stadium with the highest average capacity.",
        "query_toks": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select avg( capacity ) , max( capacity ) from stadium",
        "question": "What is the average and maximum number of capacity of all the stadiums?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
        "question": "Tell me the names and orchestras of all the musicians who are in charge of an orchestra.",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "What are the locations and names of stadiums with capacity between 5000 and 10000?",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question": "Give me a list of all the names of singers in ascending order of net worth.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT( * ) ASC",
        "question": "Please show the major record format of orchestras in ascending order of the number of albums.",
        "query_toks": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of the orchestras that did not have any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "How many singers are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name , sum( T2.Sales ) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
        "question": "How many songs are sung by each singer? List the singer name and the number of songs sold.",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "Return the names of all conductor who are not from France.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "question": "What are the names of singers who are older than average?",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "Show all countries and the number of singers in each country.",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT( * ) > 1",
        "question": "Find the year of founded for the orchestra that has performed at least one performance.",
        "query_toks": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "How many singers do we have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age > 18",
        "question": "List the countries of all the singers older than 18.",
        "query_toks": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "Find the total number of singers.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company , COUNT( * ) FROM orchestra GROUP BY Record_Company",
        "question": "What are the record companies and how many musicians correspond to each record company?",
        "query_toks": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year < 1948 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1967",
        "question": "Show all the nations shared by singers born before 1948 and singers born after 1967.",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "1948",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "1967"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "Show the titles of songs and the names of their singers.",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "What are the names of all the conductor in ascending order of age?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "What are the names of singers who have never sung a song?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "question": "Which song has the youngest singer? List the song name and the release year.",
        "query_toks": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question": "What is the name and capacity of the stadium that has the highest average capacity?",
        "query_toks": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "what are the names of singers who did not appear in any song?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "How many musicians have either DVD or CD as their major record format?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year < 1948 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1967",
        "question": "Show the citizenship shared by singers with birth year before 1948 and singers with birthday after 1967",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "1948",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "1967"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "Find the names of all the musicians that have been in charge of more than two orchestras.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What are the names of the conductor whose nationality is not France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "What are the location and name for all stadiums that can seat between 5000 and 10000 people?",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "What are the different nationalities and how many singers belong to each?",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company , COUNT( * ) FROM orchestra GROUP BY Record_Company",
        "question": "For each record company, report the total number of orchestra produced by him or her.",
        "query_toks": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count( * ) FROM concert WHERE YEAR = 2031 OR YEAR = 2030",
        "question": "Show the number of concerts in year 2031 or 2030.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "2031",
            "or",
            "year",
            "=",
            "2030"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
        "question": "Show the year with the most number of concerts.",
        "query_toks": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
        "question": "Return the name of each singer and the number of times he or she has been in concert.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "List all nations along with the number of singers from each nationality.",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "Show all the stadium names and the number of concerts in each stadium.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year < 1948 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1967",
        "question": "What are the nations shared by singers who were born before 1948 and singers that were born after 1967?",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "1948",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "1967"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the year that has the most number of concerts?",
        "query_toks": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What is the name of the conductor whose nationality is not France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "List the name and country of all the singers in descending order of age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
        "question": "List all the names of the conductor and the orchestra.",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Find the citizenship that is the most common in all the singers. Tell me its name.",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "Tell me the title and name of the singers for each song.",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "List the song name and singer name for each song.",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question": "What are the names of singers in ascending order of their net worth?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Find the record company that has the most number of orchestras.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2038 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2026",
        "question": "What are the record companies that have both musicians that are founded before 2038 and musicians that were founded after 2026?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "2038",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "2026"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "value",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "What are the location and name of stadiums with capacity between 5000 and 10000?",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "Show the names of all conductor in descending order of year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "For each country, how many singers are from that country?",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "What is the name of the record company that has the most number of orchestras?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of all the orchestras that are not involved in any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year = 1968 OR Birth_Year = 1960",
        "question": "What are the names of singers who have a birth year of either 1968 or 1960?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "1968",
            "or",
            "birth_year",
            "=",
            "1960"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of the orchestras that did not participate in any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "question": "Find the name of songs whose age is greater than the average age of all singers.",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "List the name of all stadiums along with the number of concerts that have taken place there",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age > 43 INTERSECT SELECT country FROM singer WHERE age < 29",
        "question": "Show the countries shared by singers with age greater than 43 and singers younger than 29",
        "query_toks": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "43",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "29"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Return the citizenship of the singer that is most common.",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "List the name, country, and age of singers in descending order of age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "What are the titles and names of all the singers?",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of all the orchestras that have never won any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "What are the birth year and citizenship of all singers?",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "What are the total number of musicians in either DVD format or CD format?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age > 43 INTERSECT SELECT country FROM singer WHERE age < 29",
        "question": "Which countries correspond to both singers that are older than 43 and singers that have a younger age than 29?",
        "query_toks": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "43",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "29"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name , sum( T2.Sales ) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
        "question": "What is the name of each singer and the total number of songs sold?",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question": "Find the name and capacity of the stadium with the highest average capacity.",
        "query_toks": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "What are the names and countries of all singers ordered by age in descending order?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2009",
        "question": "What are the names of the heads of the orchestras that were founded after 2009?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "What are the location and name of all stadiums with capacity between 5000 and 10000?",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "Find the number of orchestras that have either DVD or CD format.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "What are the birth year and citizenship of each singer?",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT( * ) ASC",
        "question": "List the major record format of the orchestra in ascending order of the number of albums.",
        "query_toks": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select avg( capacity ) , max( capacity ) from stadium",
        "question": "Find the average and maximum capacity of all stadiums.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age > 18",
        "question": "Show me the countries where singers older than 18 are from.",
        "query_toks": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "List all nations and the number of singers from each nationality.",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT( * ) > 1",
        "question": "What is the year of founded for the orchestra that has performed more than one performance?",
        "query_toks": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "List the names of all conductor in descending order of year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2009",
        "question": "Find the names of the heads of the orchestras that were founded after 2009.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "question": "What is the name of the youngest singer? Return the song name and its release year.",
        "query_toks": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question": "What is the name and capacity of the stadium with the highest average capacity?",
        "query_toks": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2038 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2026",
        "question": "Which record companies have both an orchestra founded before 2038 and an orchestra that was founded after 2026?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "2038",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "2026"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "value",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "List the names of all conductor in ascending order of age.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "Find the names of singers who did not appear in any song.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of singers who sang more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "Show all stadium names along with the number of concerts in each stadium.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "List all countries along with the number of singers from each country.",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year < 1948 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1967",
        "question": "What are the nations shared by singers born before 1948 and singers born after 1967?",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "1948",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "1967"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "Please list all conductor names in ascending order of age.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year < 1948 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1967",
        "question": "What are the nationalities of both singers that were born before 1948 and singers who were born after 1967?",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "1948",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "1967"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age > 18",
        "question": "List all the distinct countries which a singer of age above 18 is from",
        "query_toks": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name , sum( T2.Sales ) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
        "question": "Show the singer name and total number of sales for each song.",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "sum",
            "(",
            "t2.sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question": "Find the names of all the singers ordered in ascending order of net worth.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "Find the citizenship that is most common among singers.",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "Find the name and country of all singers sorted by their ages in the descending order.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "List the record company of the orchestra in descending order of founded year.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "What are the names of all the conductor in descending order of year of work?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question": "What are the names of singers ordered by their net worth in ascending order?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of all singers who sang more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "For each country, report the total number of singers from that country.",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "What are all the song titles and the names of all the singers in the songs?",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company , COUNT( * ) FROM orchestra GROUP BY Record_Company",
        "question": "For each record company, how many orchestra does it have?",
        "query_toks": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "question": "Find the song name and release year for the youngest singer.",
        "query_toks": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "What are the names of all singers who sang a song?",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "Show the names of the singers that have produced more than one song.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "What are the names of all singers that are not in any song?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age > ( SELECT avg( age ) FROM singer )",
        "question": "Find the song names for all singers who are older than the average age.",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "What are the names of all the musicians whose orchestra has more than two tracks?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT( * ) > 1",
        "question": "List the year of founded for the orchestra that has performed more than one performance.",
        "query_toks": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1.orchestra_id",
            "=",
            "t2.orchestra_id",
            "group",
            "by",
            "t2.orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",
        "question": "What are the name and release year for the song which was sung by the youngest singer?",
        "query_toks": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
        "question": "Tell me the name and orchestra for each conductor.",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question": "Find the name of the conductor with the longest year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of singers who have sung out more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT( * ) DESC LIMIT 1",
        "question": "What is the record company that has the most number of orchestras?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.",
        "masked_template": "Find the <mask> in the <mask> with the least <mask> Show both the <mask> and <mask>",
        "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
        "ted": 0.0,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "amount_settled",
            ",",
            "amount_claimed",
            "from",
            "claims",
            "order",
            "by",
            "amount_settled",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "amount_settled",
            ",",
            "amount_claimed",
            "from",
            "claims",
            "order",
            "by",
            "amount_settled",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Count the number of female Professors we have.",
        "masked_template": "Count the number of <mask> we <mask>",
        "query": "SELECT count( * ) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor'",
        "ted": 0.03571428571428571,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"F\"",
            "and",
            "rank",
            "=",
            "\"Professor\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value",
            "and",
            "rank",
            "=",
            "value"
        ]
    },
    {
        "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
        "masked_template": "How many <mask> are there in each <mask> Return both the <mask> and the <mask>",
        "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ],
        "query_toks_no_value": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ]
    },
    {
        "question": "Show the number of audience in year 2008 or 2010.",
        "masked_template": "Show the number of <mask> in <mask> or <mask>",
        "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
        "ted": 0.08333333333333333,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "num_of_audience",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "2008",
            "or",
            "year",
            "=",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_audience",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.",
        "masked_template": "Show the <mask> of the <mask> that have <mask> with more than 2 <mask>",
        "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2",
        "ted": 0.0,
        "db_id": "apartment_rentals",
        "query_toks": [
            "select",
            "t1.building_address",
            "from",
            "apartment_buildings",
            "as",
            "t1",
            "join",
            "apartments",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "where",
            "t2.bathroom_count",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.building_address",
            "from",
            "apartment_buildings",
            "as",
            "t1",
            "join",
            "apartments",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "where",
            "t2.bathroom_count",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the most common participant type?",
        "masked_template": "What is the most <mask>",
        "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "local_govt_in_alabama",
        "query_toks": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the most common participant type?",
        "masked_template": "What is the most <mask>",
        "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "local_govt_in_alabama",
        "query_toks": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List the name of staff who has been assigned multiple jobs.",
        "masked_template": "List the name of <mask> who has <mask>",
        "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.staff_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "staff_department_assignments",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id",
            "group",
            "by",
            "t2.staff_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.staff_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "staff_department_assignments",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id",
            "group",
            "by",
            "t2.staff_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "What is the name of the technician whose team is not 'NYY'?",
        "masked_template": "What is the name of the <mask> whose <mask> is not <mask>",
        "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
        "ted": 0.0,
        "db_id": "machine_repair",
        "query_toks": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "\"NYY\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "value"
        ]
    },
    {
        "question": "Show the countries that have managers of age above 50 or below 46.",
        "masked_template": "Show the <mask> that have <mask> of age <mask> 50 or <mask> 46.",
        "query": "SELECT Country FROM manager WHERE Age > 50 OR Age < 46",
        "ted": 0.09090909090909091,
        "db_id": "railway",
        "query_toks": [
            "select",
            "country",
            "from",
            "manager",
            "where",
            "age",
            ">",
            "50",
            "or",
            "age",
            "<",
            "46"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "manager",
            "where",
            "age",
            ">",
            "value",
            "or",
            "age",
            "<",
            "value"
        ]
    },
    {
        "question": "What are the name and level of catalog structure with level number between 5 and 10",
        "masked_template": "What are the name and <mask> of <mask> with <mask> number <mask> 5 and 10",
        "query": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_level_name",
            ",",
            "catalog_level_number",
            "from",
            "catalog_structure",
            "where",
            "catalog_level_number",
            "between",
            "5",
            "and",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_level_name",
            ",",
            "catalog_level_number",
            "from",
            "catalog_structure",
            "where",
            "catalog_level_number",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "Which cities served as a host city after 2010?",
        "masked_template": "Which <mask> as a <mask>",
        "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "t1.city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city",
            "where",
            "t2.year",
            ">",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "t1.city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city",
            "where",
            "t2.year",
            ">",
            "value"
        ]
    },
    {
        "question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?",
        "masked_template": "Which <mask> to both <mask> that have a <mask> and <mask> that have a <mask> than <mask>",
        "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            ">",
            "1500",
            "intersect",
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            "<",
            "500"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            ">",
            "value",
            "intersect",
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            "<",
            "value"
        ]
    },
    {
        "question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?",
        "masked_template": "What are the <mask> of the <mask> that have both <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
        "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
        "ted": 0.0,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "type",
            "from",
            "ship",
            "where",
            "tonnage",
            ">",
            "6000",
            "intersect",
            "select",
            "type",
            "from",
            "ship",
            "where",
            "tonnage",
            "<",
            "4000"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "ship",
            "where",
            "tonnage",
            ">",
            "value",
            "intersect",
            "select",
            "type",
            "from",
            "ship",
            "where",
            "tonnage",
            "<",
            "value"
        ]
    },
    {
        "question": "How many products are there in the records?",
        "masked_template": "How many <mask> are there in the <mask>",
        "query": "SELECT count( * ) FROM catalog_contents",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ]
    },
    {
        "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
        "masked_template": "What are all the <mask> and the <mask> of all the <mask> in the <mask>",
        "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_description",
            ",",
            "t2.fault_status",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_description",
            ",",
            "t2.fault_status",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id"
        ]
    },
    {
        "question": "List all the name of organizations in order of the date formed.",
        "masked_template": "List all the name of <mask> in order of the <mask>",
        "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "order",
            "by",
            "date_formed",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "order",
            "by",
            "date_formed",
            "asc"
        ]
    },
    {
        "question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?",
        "masked_template": "How many <mask> in <mask> in <mask> is, the <mask> of <mask> is <mask>",
        "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
        "ted": 0.041666666666666664,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "1885",
            "and",
            "ties",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "value",
            "and",
            "ties",
            "=",
            "value"
        ]
    },
    {
        "question": "For each advisor, report the total number of students advised by him or her.",
        "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
        "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ]
    },
    {
        "question": "What is the largest major?",
        "masked_template": "What is the <mask>",
        "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "major",
            "from",
            "student",
            "group",
            "by",
            "major",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            "from",
            "student",
            "group",
            "by",
            "major",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show all the locations where some cinemas were opened in both year 2010 and year 2011.",
        "masked_template": "Show all the <mask> in both <mask> and <mask>",
        "query": "SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011",
        "ted": 0.058823529411764705,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "location",
            "from",
            "cinema",
            "where",
            "openning_year",
            "=",
            "2010",
            "intersect",
            "select",
            "location",
            "from",
            "cinema",
            "where",
            "openning_year",
            "=",
            "2011"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "cinema",
            "where",
            "openning_year",
            "=",
            "value",
            "intersect",
            "select",
            "location",
            "from",
            "cinema",
            "where",
            "openning_year",
            "=",
            "value"
        ]
    },
    {
        "question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?",
        "masked_template": "Which <mask> names are <mask> in the <mask> with the id 3 and the <mask> with the id 1?",
        "query": "SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1",
        "ted": 0.058823529411764705,
        "db_id": "party_people",
        "query_toks": [
            "select",
            "member_name",
            "from",
            "member",
            "where",
            "party_id",
            "=",
            "3",
            "intersect",
            "select",
            "member_name",
            "from",
            "member",
            "where",
            "party_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "member_name",
            "from",
            "member",
            "where",
            "party_id",
            "=",
            "value",
            "intersect",
            "select",
            "member_name",
            "from",
            "member",
            "where",
            "party_id",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names and ids of products costing between 600 and 700?",
        "masked_template": "What are the names and ids of <mask> 600 and <mask>",
        "query": "SELECT product_name , product_id FROM products WHERE product_price BETWEEN 600 AND 700",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "product_name",
            ",",
            "product_id",
            "from",
            "products",
            "where",
            "product_price",
            "between",
            "600",
            "and",
            "700"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "product_id",
            "from",
            "products",
            "where",
            "product_price",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "What are the names of students who have more than one advisor?",
        "masked_template": "What are the names of <mask> who have more than one <mask>",
        "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "advisor",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.s_id",
            "group",
            "by",
            "t2.s_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "advisor",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.s_id",
            "group",
            "by",
            "t2.s_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Sort the customer names in alphabetical order.",
        "masked_template": "<mask> the <mask> names in <mask>",
        "query": "SELECT customer_details FROM customers ORDER BY customer_details",
        "ted": 0.0,
        "db_id": "insurance_and_eClaims",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "order",
            "by",
            "customer_details"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "order",
            "by",
            "customer_details"
        ]
    },
    {
        "question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.",
        "masked_template": "List the <mask> name and <mask> name of <mask> have the <mask> of <mask> and <mask>",
        "query": "SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "1000",
            "and",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "List the name of all products along with the number of complaints that they have received.",
        "masked_template": "List the name of all <mask> with the number of <mask> that <mask> have <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "List the carriers of devices in ascending alphabetical order.",
        "masked_template": "List the <mask> of <mask> in <mask>",
        "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "device",
            "order",
            "by",
            "carrier",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "device",
            "order",
            "by",
            "carrier",
            "asc"
        ]
    },
    {
        "question": "Find the total account balance of each customer from Utah or Texas.",
        "masked_template": "Find the total <mask> of each <mask> or <mask>",
        "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
        "ted": 0.03571428571428571,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Texas\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "question": "Return the device carriers that do not have Android as their software platform.",
        "masked_template": "Return the <mask> that do not have <mask> as their <mask>",
        "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "\"Android\""
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the names of companies whose headquarters are not \"USA\"?",
        "masked_template": "What are the names of <mask> whose <mask> are not <mask>",
        "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "\"USA\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the phone and email for customer Harold?",
        "masked_template": "What are the <mask> and <mask> for <mask>",
        "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
        "ted": 0.1,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "customer_phone",
            ",",
            "customer_email_address",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "\"Harold\""
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            ",",
            "customer_email_address",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ]
    },
    {
        "question": "List all country and league names.",
        "masked_template": "List all <mask> and <mask>",
        "query": "SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",
        "ted": 0.0,
        "db_id": "soccer_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "league",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.country_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "league",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.country_id"
        ]
    },
    {
        "question": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.",
        "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> with <mask>",
        "query": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
        "ted": 0.058823529411764705,
        "db_id": "device",
        "query_toks": [
            "select",
            "location",
            "from",
            "shop",
            "where",
            "open_year",
            ">",
            "2012",
            "intersect",
            "select",
            "location",
            "from",
            "shop",
            "where",
            "open_year",
            "<",
            "2008"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "shop",
            "where",
            "open_year",
            ">",
            "value",
            "intersect",
            "select",
            "location",
            "from",
            "shop",
            "where",
            "open_year",
            "<",
            "value"
        ]
    },
    {
        "question": "What is the code of the city with the most students?",
        "masked_template": "What is the <mask> of the <mask> with the most <mask>",
        "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "city_code",
            "from",
            "student",
            "group",
            "by",
            "city_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            "from",
            "student",
            "group",
            "by",
            "city_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the titles of all the albums alphabetically ascending?",
        "masked_template": "What are the <mask> of all the <mask>",
        "query": "SELECT title FROM albums ORDER BY title",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "albums",
            "order",
            "by",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "albums",
            "order",
            "by",
            "title"
        ]
    },
    {
        "question": "What are the names and ids of customers whose address contains TN?",
        "masked_template": "What are the names and ids of <mask> whose <mask> TN?",
        "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "customer_name",
            ",",
            "customer_id",
            "from",
            "customers",
            "where",
            "customer_address",
            "like",
            "\"%TN%\""
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            ",",
            "customer_id",
            "from",
            "customers",
            "where",
            "customer_address",
            "like",
            "value"
        ]
    },
    {
        "question": "What are the order details of the products with price higher than 2000?",
        "masked_template": "What are the order <mask> of the <mask> with <mask> than <mask>",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "value"
        ]
    },
    {
        "question": "Which city has the lowest GDP? Please list the city name and its GDP.",
        "masked_template": "Which <mask> has the <mask> list the <mask> name and its <mask>",
        "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "city",
            ",",
            "gdp",
            "from",
            "city",
            "order",
            "by",
            "gdp",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "gdp",
            "from",
            "city",
            "order",
            "by",
            "gdp",
            "limit",
            "value"
        ]
    },
    {
        "question": "List the name of playlist which has number of tracks greater than 100.",
        "masked_template": "List the name of <mask> which has number of <mask> than <mask>",
        "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "playlist_tracks",
            "as",
            "t1",
            "join",
            "playlists",
            "as",
            "t2",
            "on",
            "t2.id",
            "=",
            "t1.playlist_id",
            "group",
            "by",
            "t1.playlist_id",
            "having",
            "count",
            "(",
            "t1.track_id",
            ")",
            ">",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "playlist_tracks",
            "as",
            "t1",
            "join",
            "playlists",
            "as",
            "t2",
            "on",
            "t2.id",
            "=",
            "t1.playlist_id",
            "group",
            "by",
            "t1.playlist_id",
            "having",
            "count",
            "(",
            "t1.track_id",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "List the official name and status of the city with the largest population.",
        "masked_template": "List the <mask> name and <mask> of the <mask> with the <mask>",
        "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "official_name",
            ",",
            "status",
            "from",
            "city",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "official_name",
            ",",
            "status",
            "from",
            "city",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the country where people older than 30 and younger than 25 are from.",
        "masked_template": "Show the <mask> than 30 and <mask> than 25 are <mask>",
        "query": "SELECT country FROM people WHERE age < 25 INTERSECT SELECT country FROM people WHERE age > 30",
        "ted": 0.0,
        "db_id": "wedding",
        "query_toks": [
            "select",
            "country",
            "from",
            "people",
            "where",
            "age",
            "<",
            "25",
            "intersect",
            "select",
            "country",
            "from",
            "people",
            "where",
            "age",
            ">",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "people",
            "where",
            "age",
            "<",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "people",
            "where",
            "age",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the names of people who have a height greater than 200 or less than 190?",
        "masked_template": "What are the names of <mask> who have a <mask> than 200 or <mask> than <mask>",
        "query": "SELECT name FROM people WHERE height > 200 OR height < 190",
        "ted": 0.09090909090909091,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "height",
            ">",
            "200",
            "or",
            "height",
            "<",
            "190"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "height",
            ">",
            "value",
            "or",
            "height",
            "<",
            "value"
        ]
    },
    {
        "question": "Show the most common position of players in match seasons.",
        "masked_template": "Show the most <mask> of <mask> in <mask>",
        "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "List the votes of elections in descending order.",
        "masked_template": "List the <mask> of <mask> in <mask>",
        "query": "SELECT Votes FROM election ORDER BY Votes DESC",
        "ted": 0.0,
        "db_id": "election_representative",
        "query_toks": [
            "select",
            "votes",
            "from",
            "election",
            "order",
            "by",
            "votes",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "votes",
            "from",
            "election",
            "order",
            "by",
            "votes",
            "desc"
        ]
    },
    {
        "question": "What are the allergy types and how many allergies correspond to each one?",
        "masked_template": "What are the <mask> and how many <mask> to each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
        "masked_template": "How many <mask> each <mask> to? List the <mask> id and the number of <mask>",
        "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
        "ted": 0.03571428571428571,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "t1.claim_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "claims",
            "as",
            "t1",
            "join",
            "settlements",
            "as",
            "t2",
            "on",
            "t1.claim_id",
            "=",
            "t2.claim_id",
            "group",
            "by",
            "t1.claim_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.claim_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "claims",
            "as",
            "t1",
            "join",
            "settlements",
            "as",
            "t2",
            "on",
            "t1.claim_id",
            "=",
            "t2.claim_id",
            "group",
            "by",
            "t1.claim_id"
        ]
    },
    {
        "question": "Find the names of all person sorted in the descending order using age.",
        "masked_template": "Find the names of all <mask> in the <mask> order <mask>",
        "query": "SELECT name FROM Person ORDER BY age DESC",
        "ted": 0.0,
        "db_id": "network_2",
        "query_toks": [
            "select",
            "name",
            "from",
            "person",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "person",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "question": "List the name of staff who has been assigned multiple jobs.",
        "masked_template": "List the name of <mask> who has <mask>",
        "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.staff_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "staff_department_assignments",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id",
            "group",
            "by",
            "t2.staff_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.staff_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "staff_department_assignments",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id",
            "group",
            "by",
            "t2.staff_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the name of customers whose credit score is below the average credit scores of all customers.",
        "masked_template": "Find the name of <mask> whose <mask> is <mask> the average <mask> of all <mask>",
        "query": "SELECT cust_name FROM customer WHERE credit_score < ( SELECT avg( credit_score ) FROM customer )",
        "ted": 0.045454545454545456,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "cust_name",
            "from",
            "customer",
            "where",
            "credit_score",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "credit_score",
            ")",
            "from",
            "customer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            "from",
            "customer",
            "where",
            "credit_score",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "credit_score",
            ")",
            "from",
            "customer",
            ")"
        ]
    },
    {
        "question": "Show the most frequently used carrier of the phones.",
        "masked_template": "Show the most <mask> of the <mask>",
        "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "phone_market",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "phone",
            "group",
            "by",
            "carrier",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "phone",
            "group",
            "by",
            "carrier",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the first names of all professors who teach more than one class?",
        "masked_template": "What are the <mask> names of all <mask> who <mask> more than one <mask>",
        "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "group",
            "by",
            "t1.prof_num",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "group",
            "by",
            "t1.prof_num",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
        "masked_template": "<mask> me all the <mask> numbers and <mask> of the <mask> are <mask>",
        "query": "SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.store_phone",
            ",",
            "t1.store_email_address",
            "from",
            "drama_workshop_groups",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.workshop_group_id",
            "=",
            "t2.workshop_group_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.store_phone",
            ",",
            "t1.store_email_address",
            "from",
            "drama_workshop_groups",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.workshop_group_id",
            "=",
            "t2.workshop_group_id"
        ]
    },
    {
        "question": "List all the distinct stations from which a trip of duration below 100 started.",
        "masked_template": "List all the distinct <mask> which a <mask> of <mask> 100 <mask>",
        "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration < 100",
        "ted": 0.0625,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "distinct",
            "start_station_name",
            "from",
            "trip",
            "where",
            "duration",
            "<",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "start_station_name",
            "from",
            "trip",
            "where",
            "duration",
            "<",
            "value"
        ]
    },
    {
        "question": "What are the first and last names of all the candidates?",
        "masked_template": "What are the <mask> and <mask> names of all the <mask>",
        "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "candidates",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.candidate_id",
            "=",
            "t2.person_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "candidates",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.candidate_id",
            "=",
            "t2.person_id"
        ]
    },
    {
        "question": "What is the name of the player with the largest number of votes?",
        "masked_template": "What is the name of the <mask> with the <mask> number of <mask>",
        "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "riding_club",
        "query_toks": [
            "select",
            "player_name",
            "from",
            "player",
            "order",
            "by",
            "votes",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "player_name",
            "from",
            "player",
            "order",
            "by",
            "votes",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
        "masked_template": "What are the names of <mask> whose <mask> 60 <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the different software platforms for devices, ordered by frequency descending?",
        "masked_template": "What are the different <mask> for <mask> ordered by <mask>",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC",
        "ted": 0.0625,
        "db_id": "device",
        "query_toks": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ]
    },
    {
        "question": "What are the first names of all students that are not enrolled in courses?",
        "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ]
    },
    {
        "question": "Show me the classrooms grade 5 is using.",
        "masked_template": "Show me the <mask> 5 is <mask>",
        "query": "SELECT DISTINCT classroom FROM list WHERE grade = 5",
        "ted": 0.0625,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "classroom",
            "from",
            "list",
            "where",
            "grade",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "classroom",
            "from",
            "list",
            "where",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the official names of cities that have hosted more than one competition?",
        "masked_template": "What are the <mask> names of <mask> that have <mask> more than one <mask>",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "For each building, show the name of the building and the number of institutions in it.",
        "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
        "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
        "ted": 0.0,
        "db_id": "protein_institute",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ]
    },
    {
        "question": "Show all party names and the number of members in each party.",
        "masked_template": "Show all <mask> names and the number of <mask> in each <mask>",
        "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
        "ted": 0.0,
        "db_id": "party_people",
        "query_toks": [
            "select",
            "t2.party_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "as",
            "t1",
            "join",
            "party",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.party_id",
            "group",
            "by",
            "t1.party_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.party_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "as",
            "t1",
            "join",
            "party",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.party_id",
            "group",
            "by",
            "t1.party_id"
        ]
    },
    {
        "question": "Please show the software platforms of devices in descending order of the count.",
        "masked_template": "<mask> show the <mask> of <mask> in <mask> order of the <mask>",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC",
        "ted": 0.0625,
        "db_id": "device",
        "query_toks": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ]
    },
    {
        "question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.",
        "masked_template": "Find the number of <mask> of <mask> is <mask> in <mask>",
        "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
        "ted": 0.041666666666666664,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "1885",
            "and",
            "ties",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "value",
            "and",
            "ties",
            "=",
            "value"
        ]
    },
    {
        "question": "Which room has cheapest base price? List the room's name and the base price.",
        "masked_template": "Which <mask> has <mask> List the <mask> name and the <mask>",
        "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "roomname",
            ",",
            "baseprice",
            "from",
            "rooms",
            "order",
            "by",
            "baseprice",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "roomname",
            ",",
            "baseprice",
            "from",
            "rooms",
            "order",
            "by",
            "baseprice",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all players that got more than the average number of points?",
        "masked_template": "What are the names of all <mask> that got more than the average number of <mask>",
        "query": "SELECT name FROM player WHERE points > ( SELECT avg( points ) FROM player )",
        "ted": 0.0,
        "db_id": "sports_competition",
        "query_toks": [
            "select",
            "name",
            "from",
            "player",
            "where",
            "points",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "points",
            ")",
            "from",
            "player",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "where",
            "points",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "points",
            ")",
            "from",
            "player",
            ")"
        ]
    },
    {
        "question": "What is the total number of faculty members?",
        "masked_template": "What is the total number of <mask>",
        "query": "SELECT count( * ) FROM Faculty",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ]
    },
    {
        "question": "List the method, date and amount of all the payments, in ascending order of date.",
        "masked_template": "List the <mask> and <mask> of all the <mask> in <mask> order of <mask>",
        "query": "SELECT Payment_Method_Code , Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC",
        "ted": 0.05555555555555555,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "payment_method_code",
            ",",
            "date_payment_made",
            ",",
            "amount_payment",
            "from",
            "payments",
            "order",
            "by",
            "date_payment_made",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "date_payment_made",
            ",",
            "amount_payment",
            "from",
            "payments",
            "order",
            "by",
            "date_payment_made",
            "asc"
        ]
    },
    {
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "masked_template": "Return the name of each <mask> and the number of <mask> he or she <mask>",
        "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "physician",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.employeeid",
            "=",
            "t2.pcp",
            "group",
            "by",
            "t1.employeeid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "physician",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.employeeid",
            "=",
            "t2.pcp",
            "group",
            "by",
            "t1.employeeid"
        ]
    },
    {
        "question": "what are the average and maximum attendances of all events?",
        "masked_template": "what are the average and maximum <mask> of all <mask>",
        "query": "SELECT avg( Event_Attendance ) , max( Event_Attendance ) FROM event",
        "ted": 0.0,
        "db_id": "news_report",
        "query_toks": [
            "select",
            "avg",
            "(",
            "event_attendance",
            ")",
            ",",
            "max",
            "(",
            "event_attendance",
            ")",
            "from",
            "event"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "event_attendance",
            ")",
            ",",
            "max",
            "(",
            "event_attendance",
            ")",
            "from",
            "event"
        ]
    },
    {
        "question": "Show the official names of the cities that have hosted more than one competition.",
        "masked_template": "Show the <mask> names of the <mask> that have <mask> more than one <mask>",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the titles of all movies that have no ratings.",
        "masked_template": "Find the <mask> of all <mask> that have no <mask>",
        "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ]
    },
    {
        "question": "What are the three colleges from which the most players are from?",
        "masked_template": "What are the <mask> which the most <mask> are <mask>",
        "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "college",
            "from",
            "match_season",
            "group",
            "by",
            "college",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "college",
            "from",
            "match_season",
            "group",
            "by",
            "college",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the home city with the most number of drivers.",
        "masked_template": "Show the <mask> with the most number of <mask>",
        "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_bus",
        "query_toks": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the total account balances for each customer from Utah or Texas?",
        "masked_template": "What are the total <mask> for each <mask> or <mask>",
        "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
        "ted": 0.03571428571428571,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Texas\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the id and name of the aircraft with the maximum distance.",
        "masked_template": "Show the id and name of the <mask> with the maximum <mask>",
        "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "aid",
            ",",
            "name",
            "from",
            "aircraft",
            "order",
            "by",
            "distance",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "aid",
            ",",
            "name",
            "from",
            "aircraft",
            "order",
            "by",
            "distance",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the official names of the cities that have hosted more than one competition.",
        "masked_template": "Show the <mask> names of the <mask> that have <mask> more than one <mask>",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Show the denomination shared by schools founded before 1890 and schools founded after 1900",
        "masked_template": "Show the <mask> by <mask> and <mask>",
        "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            "<",
            "1890",
            "intersect",
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            ">",
            "1900"
        ],
        "query_toks_no_value": [
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            "<",
            "value",
            "intersect",
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            ">",
            "value"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.",
        "masked_template": "Find the <mask> age and <mask> of each <mask> and show the <mask> in the order of <mask>",
        "query": "SELECT Time_of_purchase , age , address FROM member ORDER BY Time_of_purchase",
        "ted": 0.05555555555555555,
        "db_id": "coffee_shop",
        "query_toks": [
            "select",
            "time_of_purchase",
            ",",
            "age",
            ",",
            "address",
            "from",
            "member",
            "order",
            "by",
            "time_of_purchase"
        ],
        "query_toks_no_value": [
            "select",
            "time_of_purchase",
            ",",
            "age",
            ",",
            "address",
            "from",
            "member",
            "order",
            "by",
            "time_of_purchase"
        ]
    },
    {
        "question": "Please show the different statuses, ordered by the number of cities that have each.",
        "masked_template": "<mask> show the different <mask> ordered by the number of <mask> that have <mask>",
        "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) ASC",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "status",
            "from",
            "city",
            "group",
            "by",
            "status",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            "from",
            "city",
            "group",
            "by",
            "status",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ]
    },
    {
        "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
        "masked_template": "Which <mask> have <mask> more than <mask> in <mask> of <mask> Return the <mask>",
        "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
        "ted": 0.0,
        "db_id": "insurance_fnol",
        "query_toks": [
            "select",
            "t2.service_name",
            "from",
            "first_notification_of_loss",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "group",
            "by",
            "t1.service_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.service_name",
            "from",
            "first_notification_of_loss",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "group",
            "by",
            "t1.service_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?",
        "masked_template": "What are the <mask> and <mask> names of all <mask> with <mask> and <mask>",
        "query": "SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "1000",
            "and",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "What are the names of the counties of public safety, ordered by population descending?",
        "masked_template": "What are the names of the <mask> of <mask> ordered by <mask>",
        "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "name",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ]
    },
    {
        "question": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?",
        "masked_template": "What are the names of all <mask> with a <mask> than 10 or have more than <mask>",
        "query": "SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000",
        "ted": 0.09090909090909091,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "district_name",
            "from",
            "district",
            "where",
            "city_area",
            ">",
            "10",
            "or",
            "city_population",
            ">",
            "100000"
        ],
        "query_toks_no_value": [
            "select",
            "district_name",
            "from",
            "district",
            "where",
            "city_area",
            ">",
            "value",
            "or",
            "city_population",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the names of rooms that have been reserved for more than 60 times.",
        "masked_template": "Find the names of <mask> that have <mask> for more than 60 <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Show the home city with the most number of drivers.",
        "masked_template": "Show the <mask> with the most number of <mask>",
        "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_bus",
        "query_toks": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the case burden of counties in descending order of population.",
        "masked_template": "Show the <mask> of <mask> in <mask> order of <mask>",
        "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "case_burden",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "case_burden",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ]
    },
    {
        "question": "What are the names of all aicrafts that have never won any match?",
        "masked_template": "What are the names of all <mask> that have <mask> won any <mask>",
        "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "not",
            "in",
            "(",
            "select",
            "winning_aircraft",
            "from",
            "match",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "not",
            "in",
            "(",
            "select",
            "winning_aircraft",
            "from",
            "match",
            ")"
        ]
    },
    {
        "question": "Show all the activity names and the number of faculty involved in each activity.",
        "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
        "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ]
    },
    {
        "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.",
        "masked_template": "Find the <mask> and <mask> of the <mask> whose name has <mask>",
        "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "student_capacity",
            ",",
            "gender",
            "from",
            "dorm",
            "where",
            "dorm_name",
            "like",
            "\"%Donor%\""
        ],
        "query_toks_no_value": [
            "select",
            "student_capacity",
            ",",
            "gender",
            "from",
            "dorm",
            "where",
            "dorm_name",
            "like",
            "value"
        ]
    },
    {
        "question": "Show the county name and population of all counties.",
        "masked_template": "Show the <mask> name and <mask> of all <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "Show the years, book titles, and publishers for all books, in descending order by year.",
        "masked_template": "Show the <mask> and <mask> for all <mask> in <mask> order by <mask>",
        "query": "SELECT YEAR , book_title , publisher FROM book_club ORDER BY YEAR DESC",
        "ted": 0.0,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "year",
            ",",
            "book_title",
            ",",
            "publisher",
            "from",
            "book_club",
            "order",
            "by",
            "year",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            ",",
            "book_title",
            ",",
            "publisher",
            "from",
            "book_club",
            "order",
            "by",
            "year",
            "desc"
        ]
    },
    {
        "question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.",
        "masked_template": "Find the <mask> and <mask> of all <mask> by their <mask> in the <mask>",
        "query": "SELECT name , headquarter , revenue FROM manufacturers ORDER BY revenue DESC",
        "ted": 0.0,
        "db_id": "manufactory_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "headquarter",
            ",",
            "revenue",
            "from",
            "manufacturers",
            "order",
            "by",
            "revenue",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "headquarter",
            ",",
            "revenue",
            "from",
            "manufacturers",
            "order",
            "by",
            "revenue",
            "desc"
        ]
    },
    {
        "question": "Sort the names of all counties in descending alphabetical order.",
        "masked_template": "<mask> the names of all <mask> in <mask>",
        "query": "SELECT County_name FROM county ORDER BY County_name DESC",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "county_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "county_name",
            "desc"
        ]
    },
    {
        "question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?",
        "masked_template": "Which <mask> to both <mask> that have a <mask> and <mask> that have a <mask> than <mask>",
        "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
        "ted": 0.058823529411764705,
        "db_id": "farm",
        "query_toks": [
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            ">",
            "1500",
            "intersect",
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            "<",
            "500"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            ">",
            "value",
            "intersect",
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            "<",
            "value"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "Display the first name and department name for each employee.",
        "masked_template": "<mask> the <mask> name and <mask> name for each <mask>",
        "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "Give me a list of all the last names of authors sorted in alphabetical order",
        "masked_template": "<mask> me a list of all the <mask> names of <mask> in <mask> order",
        "query": "SELECT lname FROM authors ORDER BY lname",
        "ted": 0.0,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "lname",
            "from",
            "authors",
            "order",
            "by",
            "lname"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "authors",
            "order",
            "by",
            "lname"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.",
        "masked_template": "Show the <mask> by <mask> with <mask> than <mask> and <mask> than <mask>",
        "query": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            ">",
            "1500",
            "intersect",
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            "<",
            "500"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            ">",
            "value",
            "intersect",
            "select",
            "status",
            "from",
            "city",
            "where",
            "population",
            "<",
            "value"
        ]
    },
    {
        "question": "What are all the album titles, in alphabetical order?",
        "masked_template": "What are all the <mask> in <mask>",
        "query": "SELECT Title FROM ALBUM ORDER BY Title",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ]
    },
    {
        "question": "What is the sum of budgets of the Marketing and Finance departments?",
        "masked_template": "What is the sum of <mask> of the <mask> and <mask>",
        "query": "SELECT sum( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'",
        "ted": 0.03571428571428571,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "sum",
            "(",
            "budget",
            ")",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "\"Marketing\"",
            "or",
            "dept_name",
            "=",
            "\"Finance\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "budget",
            ")",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "value",
            "or",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the name and date of the race that occurred most recently?",
        "masked_template": "What is the name and <mask> of the <mask> that <mask> most <mask>",
        "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "date",
            "from",
            "races",
            "order",
            "by",
            "date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "date",
            "from",
            "races",
            "order",
            "by",
            "date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the average and maximum rating of all reviews.",
        "masked_template": "Find the average and maximum <mask> of all <mask>",
        "query": "SELECT avg( rating ) , max( rating ) FROM review",
        "ted": 0.0,
        "db_id": "epinions_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "rating",
            ")",
            ",",
            "max",
            "(",
            "rating",
            ")",
            "from",
            "review"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "rating",
            ")",
            ",",
            "max",
            "(",
            "rating",
            ")",
            "from",
            "review"
        ]
    },
    {
        "question": "Show the working years of managers in descending order of their level.",
        "masked_template": "Show the <mask> of <mask> in <mask> order of their <mask>",
        "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
        "ted": 0.0,
        "db_id": "railway",
        "query_toks": [
            "select",
            "working_year_starts",
            "from",
            "manager",
            "order",
            "by",
            "level",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "working_year_starts",
            "from",
            "manager",
            "order",
            "by",
            "level",
            "desc"
        ]
    },
    {
        "question": "How many statements do we have?",
        "masked_template": "How many <mask> do we <mask>",
        "query": "SELECT count( * ) FROM Statements",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ]
    },
    {
        "question": "Return the total number of distinct customers.",
        "masked_template": "Return the total number of distinct <mask>",
        "query": "SELECT count( * ) FROM customers",
        "ted": 0.0,
        "db_id": "customers_and_addresses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
        "masked_template": "What are the <mask> names and <mask> for all <mask> that <mask> and <mask>",
        "query": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
        "ted": 0.0,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "district_name",
            ",",
            "city_population",
            "from",
            "district",
            "where",
            "city_population",
            "between",
            "200000",
            "and",
            "2000000"
        ],
        "query_toks_no_value": [
            "select",
            "district_name",
            ",",
            "city_population",
            "from",
            "district",
            "where",
            "city_population",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "Find the employee id for all employees who earn more than the average salary.",
        "masked_template": "Find the <mask> id for all <mask> who <mask> more than the average <mask>",
        "query": "SELECT employee_id FROM employees WHERE salary > ( SELECT AVG( salary ) FROM employees )",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "salary",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "salary",
            ")",
            "from",
            "employees",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "salary",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "salary",
            ")",
            "from",
            "employees",
            ")"
        ]
    },
    {
        "question": "Give me the detail and opening hour for each museum.",
        "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
        "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ]
    },
    {
        "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
        "masked_template": "<mask> me a list of all the <mask> names <mask> by the <mask> in <mask>",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ]
    },
    {
        "question": "What is the minimum and maximum number of bathrooms of all the apartments?",
        "masked_template": "What is the <mask> and maximum number of <mask> of all the <mask>",
        "query": "SELECT min( bathroom_count ) , max( bathroom_count ) FROM Apartments",
        "ted": 0.07142857142857142,
        "db_id": "apartment_rentals",
        "query_toks": [
            "select",
            "min",
            "(",
            "bathroom_count",
            ")",
            ",",
            "max",
            "(",
            "bathroom_count",
            ")",
            "from",
            "apartments"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "bathroom_count",
            ")",
            ",",
            "max",
            "(",
            "bathroom_count",
            ")",
            "from",
            "apartments"
        ]
    },
    {
        "question": "Find the payment method that is used most frequently.",
        "masked_template": "Find the <mask> that is <mask> most <mask>",
        "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "customer_deliveries",
        "query_toks": [
            "select",
            "payment_method",
            "from",
            "customers",
            "group",
            "by",
            "payment_method",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method",
            "from",
            "customers",
            "group",
            "by",
            "payment_method",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the location and nickname of each school?",
        "masked_template": "What are the <mask> and <mask> of each <mask>",
        "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "t1.location",
            ",",
            "t2.nickname",
            "from",
            "school",
            "as",
            "t1",
            "join",
            "school_details",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.location",
            ",",
            "t2.nickname",
            "from",
            "school",
            "as",
            "t1",
            "join",
            "school_details",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id"
        ]
    },
    {
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "masked_template": "Find the name of <mask> who are in <mask> of more than one <mask>",
        "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "physician",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.employeeid",
            "=",
            "t2.pcp",
            "group",
            "by",
            "t1.employeeid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "physician",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.employeeid",
            "=",
            "t2.pcp",
            "group",
            "by",
            "t1.employeeid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the names of captains, sorted by age descending?",
        "masked_template": "What are the names of <mask> by age <mask>",
        "query": "SELECT name FROM captain ORDER BY age DESC",
        "ted": 0.0,
        "db_id": "ship_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "captain",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "captain",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "question": "What are all the different start station names for a trip that lasted less than 100?",
        "masked_template": "What are all the different <mask> names for a <mask> that <mask> than <mask>",
        "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration < 100",
        "ted": 0.0625,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "distinct",
            "start_station_name",
            "from",
            "trip",
            "where",
            "duration",
            "<",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "start_station_name",
            "from",
            "trip",
            "where",
            "duration",
            "<",
            "value"
        ]
    },
    {
        "question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?",
        "masked_template": "What are the <mask> that have both <mask> that are <mask> than <mask> and <mask> than <mask>",
        "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
        "ted": 0.0,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "5600",
            "intersect",
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            "<",
            "5200"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            "<",
            "value"
        ]
    },
    {
        "question": "What is the name of each course and the corresponding number of student enrollment?",
        "masked_template": "What is the name of each <mask> and the <mask> number of <mask>",
        "query": "SELECT T1.course_name , COUNT( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
        "ted": 0.03571428571428571,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.course_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "List the names of all the customers in alphabetical order.",
        "masked_template": "List the names of all the <mask> in <mask>",
        "query": "SELECT customer_details FROM customers ORDER BY customer_details",
        "ted": 0.0,
        "db_id": "insurance_and_eClaims",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "order",
            "by",
            "customer_details"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "order",
            "by",
            "customer_details"
        ]
    },
    {
        "question": "Please list all album titles in alphabetical order.",
        "masked_template": "<mask> list all <mask> in <mask>",
        "query": "SELECT Title FROM ALBUM ORDER BY Title",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ]
    },
    {
        "question": "What is the total population for all the districts that have an area larger tahn the average city area?",
        "masked_template": "What is the total <mask> for all the <mask> that have an <mask> the average <mask>",
        "query": "SELECT sum( city_population ) FROM district WHERE city_area > ( SELECT avg( city_area ) FROM district )",
        "ted": 0.08333333333333333,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "sum",
            "(",
            "city_population",
            ")",
            "from",
            "district",
            "where",
            "city_area",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "city_area",
            ")",
            "from",
            "district",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "city_population",
            ")",
            "from",
            "district",
            "where",
            "city_area",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "city_area",
            ")",
            "from",
            "district",
            ")"
        ]
    },
    {
        "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
        "masked_template": "What are the names and <mask> names of the <mask> which has <mask> in the FDA <mask>",
        "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
        "ted": 0.1,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "name",
            ",",
            "trade_name",
            "from",
            "medicine",
            "where",
            "fda_approved",
            "=",
            "\"Yes\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "trade_name",
            "from",
            "medicine",
            "where",
            "fda_approved",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
        "masked_template": "Find the <mask> that is <mask> the most <mask> in all the <mask> me its <mask>",
        "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "payment_method_code",
            "from",
            "invoices",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "invoices",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the names of editors of age either 24 or 25.",
        "masked_template": "Show the names of <mask> of age <mask> 24 or 25.",
        "query": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
        "ted": 0.08333333333333333,
        "db_id": "journal_committee",
        "query_toks": [
            "select",
            "name",
            "from",
            "editor",
            "where",
            "age",
            "=",
            "24",
            "or",
            "age",
            "=",
            "25"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "editor",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "question": "Give me the detail and opening hour for each museum.",
        "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
        "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ]
    },
    {
        "question": "Return the famous release date for the oldest artist.",
        "masked_template": "Return the <mask> for the <mask>",
        "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "music_4",
        "query_toks": [
            "select",
            "famous_release_date",
            "from",
            "artist",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "famous_release_date",
            "from",
            "artist",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the average score and average staff number of all shops?",
        "masked_template": "What are the average <mask> and average <mask> number of all <mask>",
        "query": "SELECT avg( num_of_staff ) , avg( score ) FROM shop",
        "ted": 0.07142857142857142,
        "db_id": "coffee_shop",
        "query_toks": [
            "select",
            "avg",
            "(",
            "num_of_staff",
            ")",
            ",",
            "avg",
            "(",
            "score",
            ")",
            "from",
            "shop"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "num_of_staff",
            ")",
            ",",
            "avg",
            "(",
            "score",
            ")",
            "from",
            "shop"
        ]
    },
    {
        "question": "List the name of artworks that are not nominated.",
        "masked_template": "List the name of <mask> that are not <mask>",
        "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
        "ted": 0.0,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "name",
            "from",
            "artwork",
            "where",
            "artwork_id",
            "not",
            "in",
            "(",
            "select",
            "artwork_id",
            "from",
            "nomination",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artwork",
            "where",
            "artwork_id",
            "not",
            "in",
            "(",
            "select",
            "artwork_id",
            "from",
            "nomination",
            ")"
        ]
    },
    {
        "question": "What are the first names of all students that are not enrolled in courses?",
        "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ]
    },
    {
        "question": "Show all allergy types and the number of allergies in each type.",
        "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "Find the id and name of the most expensive base price room.",
        "masked_template": "Find the id and name of the most <mask>",
        "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "roomid",
            ",",
            "roomname",
            "from",
            "rooms",
            "order",
            "by",
            "baseprice",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "roomid",
            ",",
            "roomname",
            "from",
            "rooms",
            "order",
            "by",
            "baseprice",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of the dorm with the largest capacity?",
        "masked_template": "What are the names of the <mask> with the <mask>",
        "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "order",
            "by",
            "student_capacity",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "order",
            "by",
            "student_capacity",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the id and salary of Mark Young.",
        "masked_template": "Show the id and <mask> of <mask>",
        "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
        "ted": 0.1,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "eid",
            ",",
            "salary",
            "from",
            "employee",
            "where",
            "name",
            "=",
            "\"Mark Young\""
        ],
        "query_toks_no_value": [
            "select",
            "eid",
            ",",
            "salary",
            "from",
            "employee",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.",
        "masked_template": "Show the <mask> that have <mask> with <mask> more than <mask> and <mask> with <mask> than <mask>",
        "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
        "ted": 0.0,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "5600",
            "intersect",
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            "<",
            "5200"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            "<",
            "value"
        ]
    },
    {
        "question": "Show all director names who have a movie in the year 1999 or 2000.",
        "masked_template": "Show all <mask> names who have a <mask> in the <mask> or <mask>",
        "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
        "ted": 0.0,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "1999",
            "or",
            "year",
            "=",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "For each user, find their name and the number of reviews written by them.",
        "masked_template": "For each <mask> find their name and the number of <mask> by <mask>",
        "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
        "ted": 0.0,
        "db_id": "epinions_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "useracct",
            "as",
            "t1",
            "join",
            "review",
            "as",
            "t2",
            "on",
            "t1.u_id",
            "=",
            "t2.u_id",
            "group",
            "by",
            "t2.u_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "useracct",
            "as",
            "t1",
            "join",
            "review",
            "as",
            "t2",
            "on",
            "t1.u_id",
            "=",
            "t2.u_id",
            "group",
            "by",
            "t2.u_id"
        ]
    },
    {
        "question": "Show the authors of submissions and the acceptance results of their submissions.",
        "masked_template": "Show the <mask> of <mask> and the <mask> of their <mask>",
        "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
        "ted": 0.0,
        "db_id": "workshop_paper",
        "query_toks": [
            "select",
            "t2.author",
            ",",
            "t1.result",
            "from",
            "acceptance",
            "as",
            "t1",
            "join",
            "submission",
            "as",
            "t2",
            "on",
            "t1.submission_id",
            "=",
            "t2.submission_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.author",
            ",",
            "t1.result",
            "from",
            "acceptance",
            "as",
            "t1",
            "join",
            "submission",
            "as",
            "t2",
            "on",
            "t1.submission_id",
            "=",
            "t2.submission_id"
        ]
    },
    {
        "question": "Find the name of the ships that have more than one captain.",
        "masked_template": "Find the name of the <mask> that have more than one <mask>",
        "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "ship_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "ship",
            "as",
            "t1",
            "join",
            "captain",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "group",
            "by",
            "t2.ship_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "ship",
            "as",
            "t1",
            "join",
            "captain",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "group",
            "by",
            "t2.ship_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "List the software platform shared by the greatest number of devices.",
        "masked_template": "List the <mask> by the <mask> number of <mask>",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the titles of all movies that have not been rated?",
        "masked_template": "What are the <mask> of all <mask> that have not <mask>",
        "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ]
    },
    {
        "question": "display job title and average salary of employees.",
        "masked_template": "<mask> job <mask> and average <mask> of <mask>",
        "query": "SELECT job_title , AVG( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",
        "ted": 0.03571428571428571,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "job_title",
            ",",
            "avg",
            "(",
            "salary",
            ")",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "jobs",
            "as",
            "t2",
            "on",
            "t1.job_id",
            "=",
            "t2.job_id",
            "group",
            "by",
            "t2.job_title"
        ],
        "query_toks_no_value": [
            "select",
            "job_title",
            ",",
            "avg",
            "(",
            "salary",
            ")",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "jobs",
            "as",
            "t2",
            "on",
            "t1.job_id",
            "=",
            "t2.job_id",
            "group",
            "by",
            "t2.job_title"
        ]
    },
    {
        "question": "Which schools have more than 1 player? Give me the school locations.",
        "masked_template": "Which <mask> have more than 1 <mask> me the <mask>",
        "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "t2.location",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "school",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id",
            "group",
            "by",
            "t1.school_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.location",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "school",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id",
            "group",
            "by",
            "t1.school_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "List all channel names ordered by their rating in percent from big to small.",
        "masked_template": "List all <mask> names ordered by their <mask> in <mask> big to <mask>",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ]
    },
    {
        "question": "What are the line 1 and average monthly rentals of all student addresses?",
        "masked_template": "What are the <mask> 1 and average <mask> of all <mask>",
        "query": "SELECT T1.line_1 , avg( T2.monthly_rental ) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",
        "ted": 0.03571428571428571,
        "db_id": "behavior_monitoring",
        "query_toks": [
            "select",
            "t1.line_1",
            ",",
            "avg",
            "(",
            "t2.monthly_rental",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "student_addresses",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t2.address_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.line_1",
            ",",
            "avg",
            "(",
            "t2.monthly_rental",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "student_addresses",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t2.address_id"
        ]
    },
    {
        "question": "Show all cities along with the number of drama workshop groups in each city.",
        "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
        "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ],
        "query_toks_no_value": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "What are the distinct publishers of publications with price higher than 5000000?",
        "masked_template": "What are the distinct <mask> of <mask> with <mask> than <mask>",
        "query": "SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000",
        "ted": 0.0,
        "db_id": "book_2",
        "query_toks": [
            "select",
            "distinct",
            "publisher",
            "from",
            "publication",
            "where",
            "price",
            ">",
            "5000000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "publisher",
            "from",
            "publication",
            "where",
            "price",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the name and population of each county?",
        "masked_template": "What are the name and <mask> of each <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "Find the country that has the most stadiums.",
        "masked_template": "Find the <mask> that has the most <mask>",
        "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "swimming",
        "query_toks": [
            "select",
            "country",
            "from",
            "stadium",
            "group",
            "by",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "stadium",
            "group",
            "by",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the names of the products with length smaller than 3 or height greater than 5.",
        "masked_template": "Find the names of the <mask> with <mask> than 3 or <mask> than 5.",
        "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5",
        "ted": 0.09090909090909091,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "where",
            "length",
            "<",
            "3",
            "or",
            "width",
            ">",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "where",
            "length",
            "<",
            "value",
            "or",
            "width",
            ">",
            "value"
        ]
    },
    {
        "question": "Show the name of the county with the biggest population.",
        "masked_template": "Show the name of the <mask> with the <mask>",
        "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the titles, years, and directors of all movies, ordered by budget in millions?",
        "masked_template": "What are the <mask> and <mask> of all <mask> ordered by <mask> in <mask>",
        "query": "SELECT title , YEAR , director FROM movie ORDER BY budget_million",
        "ted": 0.05555555555555555,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "title",
            ",",
            "year",
            ",",
            "director",
            "from",
            "movie",
            "order",
            "by",
            "budget_million"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "year",
            ",",
            "director",
            "from",
            "movie",
            "order",
            "by",
            "budget_million"
        ]
    },
    {
        "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
        "masked_template": "What are the <mask> and <mask> for the <mask> which was <mask> the <mask>",
        "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "enrollment",
            ",",
            "primary_conference",
            "from",
            "university",
            "order",
            "by",
            "founded",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "enrollment",
            ",",
            "primary_conference",
            "from",
            "university",
            "order",
            "by",
            "founded",
            "limit",
            "value"
        ]
    },
    {
        "question": "For each advisor, report the total number of students advised by him or her.",
        "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
        "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ]
    },
    {
        "question": "Return the rank for which there are the fewest captains.",
        "masked_template": "Return the <mask> for which there are the <mask>",
        "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "ship_1",
        "query_toks": [
            "select",
            "rank",
            "from",
            "captain",
            "group",
            "by",
            "rank",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            "from",
            "captain",
            "group",
            "by",
            "rank",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Sort all the industries in descending order of the count of companies in each industry",
        "masked_template": "<mask> all the <mask> in <mask> order of the count of <mask> in each <mask>",
        "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC",
        "ted": 0.0625,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "industry",
            "from",
            "companies",
            "group",
            "by",
            "industry",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "industry",
            "from",
            "companies",
            "group",
            "by",
            "industry",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ]
    },
    {
        "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
        "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
        "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ],
        "query_toks_no_value": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ]
    },
    {
        "question": "What are the allergy types and how many allergies correspond to each one?",
        "masked_template": "What are the <mask> and how many <mask> to each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "Give the names of people who did not participate in the candidate election.",
        "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "Find the names of reviewers who had given higher than 3 star ratings.",
        "masked_template": "Find the names of <mask> who had <mask> than 3 <mask>",
        "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "rating",
            "as",
            "t1",
            "join",
            "reviewer",
            "as",
            "t2",
            "on",
            "t1.rid",
            "=",
            "t2.rid",
            "where",
            "t1.stars",
            ">",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "rating",
            "as",
            "t1",
            "join",
            "reviewer",
            "as",
            "t2",
            "on",
            "t1.rid",
            "=",
            "t2.rid",
            "where",
            "t1.stars",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the first names of all the authors ordered in alphabetical order.",
        "masked_template": "Find the <mask> names of all the <mask> ordered in <mask>",
        "query": "SELECT fname FROM authors ORDER BY fname",
        "ted": 0.0,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "fname",
            "from",
            "authors",
            "order",
            "by",
            "fname"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "authors",
            "order",
            "by",
            "fname"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "Show all the activity names and the number of faculty involved in each activity.",
        "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
        "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ]
    },
    {
        "question": "List the first names of all the students in room 107.",
        "masked_template": "List the <mask> names of all the <mask> in <mask>",
        "query": "SELECT DISTINCT firstname FROM list WHERE classroom = 107",
        "ted": 0.0625,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "firstname",
            "from",
            "list",
            "where",
            "classroom",
            "=",
            "107"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "firstname",
            "from",
            "list",
            "where",
            "classroom",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the city with the smallest GDP? Return the city and its GDP.",
        "masked_template": "What is the <mask> with the <mask> Return the <mask> and its <mask>",
        "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "city",
            ",",
            "gdp",
            "from",
            "city",
            "order",
            "by",
            "gdp",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "gdp",
            "from",
            "city",
            "order",
            "by",
            "gdp",
            "limit",
            "value"
        ]
    },
    {
        "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
        "masked_template": "<mask> me the names and <mask> of <mask> which <mask> are <mask>",
        "query": "SELECT T1.name , T2.price_in_dollar FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID",
        "ted": 0.0,
        "db_id": "manufacturer",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.price_in_dollar",
            "from",
            "furniture",
            "as",
            "t1",
            "join",
            "furniture_manufacte",
            "as",
            "t2",
            "on",
            "t1.furniture_id",
            "=",
            "t2.furniture_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.price_in_dollar",
            "from",
            "furniture",
            "as",
            "t1",
            "join",
            "furniture_manufacte",
            "as",
            "t2",
            "on",
            "t1.furniture_id",
            "=",
            "t2.furniture_id"
        ]
    },
    {
        "question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?",
        "masked_template": "What are the <mask> that have both <mask> that are <mask> than <mask> and <mask> than <mask>",
        "query": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
        "ted": 0.058823529411764705,
        "db_id": "climbing",
        "query_toks": [
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "5600",
            "intersect",
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            "<",
            "5200"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "mountain",
            "where",
            "height",
            "<",
            "value"
        ]
    },
    {
        "question": "What are all the calendar dates and day Numbers?",
        "masked_template": "What are all the <mask> and day <mask>",
        "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "calendar_date",
            ",",
            "day_number",
            "from",
            "ref_calendar"
        ],
        "query_toks_no_value": [
            "select",
            "calendar_date",
            ",",
            "day_number",
            "from",
            "ref_calendar"
        ]
    },
    {
        "question": "Show the product name and total order quantity for each product.",
        "masked_template": "Show the <mask> name and total order <mask> for each <mask>",
        "query": "SELECT T1.product_name , sum( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",
        "ted": 0.0,
        "db_id": "customers_and_products_contacts",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "sum",
            "(",
            "t2.order_quantity",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "sum",
            "(",
            "t2.order_quantity",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_id"
        ]
    },
    {
        "question": "Find the order detail for the products with price above 2000.",
        "masked_template": "Find the order <mask> for the <mask> with <mask>",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "value"
        ]
    },
    {
        "question": "Return the names of all regions other than Denmark.",
        "masked_template": "Return the names of all <mask> than <mask>",
        "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
        "ted": 0.0,
        "db_id": "storm_record",
        "query_toks": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "\"Denmark\""
        ],
        "query_toks_no_value": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "value"
        ]
    },
    {
        "question": "Find the stories of the building with the largest height.",
        "masked_template": "Find the <mask> of the <mask> with the <mask>",
        "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "stories",
            "from",
            "buildings",
            "order",
            "by",
            "height",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "stories",
            "from",
            "buildings",
            "order",
            "by",
            "height",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the positions of both players that have more than 20 20 points and less than 10 points?",
        "masked_template": "What are the <mask> of both <mask> that have more than 20 20 <mask> and <mask> than 10 <mask>",
        "query": "SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10",
        "ted": 0.058823529411764705,
        "db_id": "sports_competition",
        "query_toks": [
            "select",
            "position",
            "from",
            "player",
            "where",
            "points",
            ">",
            "20",
            "intersect",
            "select",
            "position",
            "from",
            "player",
            "where",
            "points",
            "<",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "player",
            "where",
            "points",
            ">",
            "value",
            "intersect",
            "select",
            "position",
            "from",
            "player",
            "where",
            "points",
            "<",
            "value"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
        "masked_template": "What are the <mask> of <mask> whose <mask> are not <mask>",
        "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "\"Android\""
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the names of customers who have taken out more than one loan?",
        "masked_template": "What are the names of <mask> who have <mask> out more than one <mask>",
        "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "t1.cust_name",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id",
            "group",
            "by",
            "t1.cust_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cust_name",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id",
            "group",
            "by",
            "t1.cust_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?",
        "masked_template": "What is the total <mask> of all <mask> whose <mask> is at <mask> or <mask>",
        "query": "SELECT sum( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
        "ted": 0.03571428571428571,
        "db_id": "manufactory_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "revenue",
            ")",
            "from",
            "manufacturers",
            "where",
            "headquarter",
            "=",
            "\"Tokyo\"",
            "or",
            "headquarter",
            "=",
            "\"Taiwan\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "revenue",
            ")",
            "from",
            "manufacturers",
            "where",
            "headquarter",
            "=",
            "value",
            "or",
            "headquarter",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?",
        "masked_template": "What are the <mask> by both <mask> and <mask>",
        "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            "<",
            "1890",
            "intersect",
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            ">",
            "1900"
        ],
        "query_toks_no_value": [
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            "<",
            "value",
            "intersect",
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?",
        "masked_template": "What are the <mask> by both <mask> and <mask>",
        "query": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            "<",
            "1890",
            "intersect",
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            ">",
            "1900"
        ],
        "query_toks_no_value": [
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            "<",
            "value",
            "intersect",
            "select",
            "denomination",
            "from",
            "school",
            "where",
            "founded",
            ">",
            "value"
        ]
    },
    {
        "question": "Return the code of the document type that is most common.",
        "masked_template": "Return the <mask> of the <mask> that is most <mask>",
        "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "document_type_code",
            "from",
            "documents",
            "group",
            "by",
            "document_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "documents",
            "group",
            "by",
            "document_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "List all headquarters and the number of companies in each headquarter.",
        "masked_template": "List all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
        "ted": 0.0,
        "db_id": "gas_company",
        "query_toks": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ],
        "query_toks_no_value": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ]
    },
    {
        "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
        "masked_template": "What are the <mask> of all the <mask> in the <mask> order of <mask>",
        "query": "SELECT venue FROM MATCH ORDER BY date DESC",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ]
    },
    {
        "question": "What is the average and largest salary of all employees?",
        "masked_template": "What is the average and <mask> of all <mask>",
        "query": "SELECT avg( salary ) , max( salary ) FROM Employee",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "salary",
            ")",
            ",",
            "max",
            "(",
            "salary",
            ")",
            "from",
            "employee"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "salary",
            ")",
            ",",
            "max",
            "(",
            "salary",
            ")",
            "from",
            "employee"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "What are the name and the nationality of the host of the highest age?",
        "masked_template": "What are the name and the <mask> of the <mask> of the <mask>",
        "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "name",
            ",",
            "nationality",
            "from",
            "host",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "nationality",
            "from",
            "host",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
        "masked_template": "What are the names of <mask> ordered by the <mask>",
        "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "order",
            "by",
            "date_formed",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "order",
            "by",
            "date_formed",
            "asc"
        ]
    },
    {
        "question": "Give the names of people who did not participate in the candidate election.",
        "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "List the name of all projects that are operated longer than the average working hours of all projects.",
        "masked_template": "List the name of all <mask> that are <mask> than the average <mask> of all <mask>",
        "query": "SELECT name FROM projects WHERE hours > ( SELECT avg( hours ) FROM projects )",
        "ted": 0.0,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "projects",
            "where",
            "hours",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "hours",
            ")",
            "from",
            "projects",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "projects",
            "where",
            "hours",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "hours",
            ")",
            "from",
            "projects",
            ")"
        ]
    },
    {
        "question": "Find the total number of catalog contents.",
        "masked_template": "Find the total number of <mask>",
        "query": "SELECT count( * ) FROM catalog_contents",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ]
    }
]