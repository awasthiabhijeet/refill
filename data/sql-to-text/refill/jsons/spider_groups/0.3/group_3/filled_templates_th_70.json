[
    {
        "db_id": "network_1",
        "query": "SELECT T2.name , count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",
        "proc_query": "( <col> name </col> of <tab> high schooler </tab> ) , ( the number of ( all items ) ) that belongs to ( ( <tab> likes </tab> ) , and ( ( <tab> high schooler </tab> ) satisfied that ( ( <col> student id </col> of <tab> likes </tab> ) equal to ( <col> id </col> of <tab> high schooler </tab> ) ) ) ) , grouped by ( <col> student id </col> of <tab> likes </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "How many likes does each student have?",
            "List the id of students who have some number of likes and the number of their likes.",
            "How many likes are there for each student?",
            "List the name of all high schoolers along with the number of likes that they have.",
            "How many likes do each student have? List their names and number of likes.",
            "Show the id of each student along with the number of times he or she has tweeted.",
            "What are the students' names and the number of likes for each student?",
            "Show all the high schooler names and the number of likes shared by each student",
            "How many likes are there by each student? List the student name and the number of likes.",
            "Find the number of likes each student has. Show the number with the student id.",
            "For each student, find their name and the number of likes shared by them.",
            "Show names and the number of likes for each student.",
            "How many likes are there for each student?",
            "Show all the high schooler names and the number of likes in each student",
            "How many likes does each student have? Return the student names and the number of likes.",
            "For each student, show the name of the student and the number of likes in it.",
            "Show the names of high schoolers and the number of likes they have.",
            "Show the name of high schooler and the number of likes in each student.",
            "Return the name of each high schooler and the number of likes he or she has.",
            "How many likes has each student had?",
            "Show all high schooler names and the number of likes in each student.",
            "What are all the different high schooler names and how many likes has each student had?",
            "Show names along with the number of likes for each student.",
            "Show the name and number of likes in each student.",
            "What are the different names and how many likes does each student have?",
            "Find the name of each student and number of likes shared by each of them.",
            "How many likes are there in each student? Return both the name and the count.",
            "For every student who is famous for liking, how many times are they followed?",
            "Show the high schooler name with the number of gas users.",
            "How many likes does each student have? List the student id and the number of likes.",
            "Show all high schooler names along with the number of likes in each student."
        ],
        "templates": [
            "",
            {
                "question": "List the id of students who registered some courses and the number of their registered courses?",
                "masked_template": "List the id of <mask> who <mask> and the number of their <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "How many members are in each party?",
                "masked_template": "How many <mask> are in each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "List the name of all products along with the number of complaints that they have received.",
                "masked_template": "List the name of all <mask> with the number of <mask> that <mask> have <mask>",
                "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "ted": 0.0,
                "db_id": "customer_complaints"
            },
            {
                "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
                "masked_template": "How many <mask> do each <mask> of? List their names and number of <mask> of.",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
                "masked_template": "Show the <mask> id of each <mask> with the number of <mask> he or she <mask>",
                "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are the faculty id and the number of students each faculty has?",
                "masked_template": "What are the <mask> id and the number of <mask> each <mask>",
                "query": "SELECT T1.FacID , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show all the faculty ranks and the number of students advised by each rank.",
                "masked_template": "Show all the <mask> and the number of <mask> by each <mask>",
                "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
                "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
                "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
                "masked_template": "Find the number of <mask> each <mask> to. Show the number <mask> with the <mask> id.",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "For each user, find their name and the number of reviews written by them.",
                "masked_template": "For each <mask> find their name and the number of <mask> by <mask>",
                "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
                "ted": 0.0,
                "db_id": "epinions_1"
            },
            {
                "question": "Show party names and the number of events for each party.",
                "masked_template": "Show <mask> names and the number of <mask> for each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "How many events are there for each party?",
                "masked_template": "How many <mask> are there for each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Show all the activity names and the number of faculty involved in each activity.",
                "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
                "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
                "masked_template": "How many <mask> in each <mask> Return the <mask> names and the number of <mask>",
                "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "For each building, show the name of the building and the number of institutions in it.",
                "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
                "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "Show the names of pilots and the number of records they have.",
                "masked_template": "Show the names of <mask> and the number of <mask>",
                "query": "SELECT T2.Pilot_name , COUNT( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "Show the name of track and the number of races in each track.",
                "masked_template": "Show the name of <mask> and the number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Return the name of each physician and the number of patients he or she treats.",
                "masked_template": "Return the name of each <mask> and the number of <mask> he or she <mask>",
                "query": "SELECT T1.name , count( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "How many exhibitions has each artist had?",
                "masked_template": "How many <mask> has each <mask>",
                "query": "SELECT T2.name , count( * ) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "Show all party names and the number of members in each party.",
                "masked_template": "Show all <mask> names and the number of <mask> in each <mask>",
                "query": "SELECT T2.party_name , count( * ) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "What are all the different product names, and how many complains has each received?",
                "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
                "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "ted": 0.0,
                "db_id": "customer_complaints"
            },
            {
                "question": "Show institution names along with the number of proteins for each institution.",
                "masked_template": "Show <mask> names <mask> with the number of <mask> for each <mask>",
                "query": "SELECT T1.institution , count( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "ted": 0.0,
                "db_id": "protein_institute"
            },
            {
                "question": "Show the station name and number of trains in each station.",
                "masked_template": "Show the <mask> name and number of <mask> in each <mask>",
                "query": "SELECT T2.name , count( * ) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "What are the different card types, and how many transactions have been made with each?",
                "masked_template": "What are the different <mask> and how many <mask> have <mask> with <mask>",
                "query": "SELECT T2.card_type_code , count( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
                "ted": 0.0,
                "db_id": "customers_card_transactions"
            },
            {
                "question": "Find the name of each user and number of tweets tweeted by each of them.",
                "masked_template": "Find the name of each <mask> and number of <mask> by each of <mask>",
                "query": "SELECT T1.name , count( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
                "masked_template": "How many <mask> are there in each <mask> Return both the <mask> and the <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "For every student who is registered for some course, how many courses are they registered for?",
                "masked_template": "For <mask> who is <mask> for <mask> how many <mask> are <mask>",
                "query": "SELECT T1.student_id , count( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Show the company name with the number of gas station.",
                "masked_template": "Show the <mask> name with the number of gas <mask>",
                "query": "SELECT T2.company , count( * ) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
                "masked_template": "How many <mask> each <mask> to? List the <mask> id and the number of <mask>",
                "query": "SELECT T1.Claim_id , count( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",
                "ted": 0.0,
                "db_id": "insurance_policies"
            },
            {
                "question": "Show all cities along with the number of drama workshop groups in each city.",
                "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
                "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            }
        ],
        "best_hyp": "How many likes are there for each student?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many likes does each student have?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "proc_query": "( <col> hometown </col> ) , ( the number of ( all items ) ) that belongs to ( <tab> teacher </tab> ) , grouped by ( <col> hometown </col> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "How many teachers are from each hometown?",
            "For each hometown, return the hometown and the count of teachers with that hometown.",
            "display the hometown id and count of teachers in each hometown.",
            "Show each hometown and the number of teachers in each hometown.",
            "How many teachers are from each hometown? List the hometown and the number.",
            "Show the different hometowns and the number of teachers in each hometown.",
            "List all hometowns along with the number of teachers from each hometown.",
            "Show different hometowns along with the number of teachers of each hometown.",
            "For each hometown, how many teachers are from there?",
            "Show different hometowns of teachers and the number of teachers of each hometown.",
            "What are the hometowns and how many teachers correspond to each hometown?",
            "Show all hometowns and the number of teachers in each hometown.",
            "What are the number of teachers for each hometown?",
            "Find the number of teachers for each hometown.",
            "What are the different hometowns and how many teachers are there for each hometown?",
            "Show hometowns and the number of teachers in each hometown.",
            "Show different hometowns along with the number of teachers with each hometown.",
            "find the number of teachers from each hometown.",
            "How many teachers are from each hometown?",
            "How many teachers live in each hometown?",
            "Please show the hometowns and the number of teachers with each hometown.",
            "List all hometowns and the number of teachers in each hometown.",
            "For each hometown, what are the hometowns and how many teachers are from there?",
            "display the hometown ID and number of teachers for each hometown.",
            "For each hometown, report the total number of teachers from that hometown.",
            "Show all hometowns and corresponding number of teachers.",
            "Find all hometowns of teachers and number of teachers in each hometown",
            "Show the hometown and number of teachers in each hometown.",
            "What are the different hometowns of teachers and how many teachers correspond to each hometown?",
            "Show the different hometowns and number of teachers at each hometown.",
            "For each hometown, show the hometown number and find how many teachers are from it."
        ],
        "templates": [
            "",
            {
                "question": "For each denomination, return the denomination and the count of schools with that denomination.",
                "masked_template": "For each <mask> return the <mask> and the count of <mask> with that <mask>",
                "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Give the country id and corresponding count of cities in each country.",
                "masked_template": "<mask> the <mask> id and <mask> count of <mask> in each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Show each location and the number of cinemas there.",
                "masked_template": "Show each <mask> and the number of <mask>",
                "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "How many hosts does each nationality have? List the nationality and the count.",
                "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show the different countries and the number of members from each.",
                "masked_template": "Show the different <mask> and the number of <mask>",
                "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "List all directors along with the number of films directed by each director.",
                "masked_template": "List all <mask> with the number of <mask> by each <mask>",
                "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "Show different nationalities along with the number of hosts of each nationality.",
                "masked_template": "Show different <mask> with the number of <mask> of each <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "For each type, how many ships are there?",
                "masked_template": "For each <mask> how many <mask> are <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "Show different types of ships and the number of ships of each type.",
                "masked_template": "Show different <mask> of <mask> and the number of <mask> of each <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "What are the allergy types and how many allergies correspond to each one?",
                "masked_template": "What are the <mask> and how many <mask> to each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Show all allergy types and the number of allergies in each type.",
                "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "What are the number of rooms for each bed type?",
                "masked_template": "What are the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Find the number of rooms for each bed type.",
                "masked_template": "Find the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What are the different budget type codes, and how many documents are there for each?",
                "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Show budget type codes and the number of documents in each budget type.",
                "masked_template": "Show <mask> and the number of <mask> in each <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Show different carriers of phones together with the number of phones with each carrier.",
                "masked_template": "Show different <mask> of <mask> with the number of <mask> with each <mask>",
                "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "find the number of medicines offered by each trade.",
                "masked_template": "find the number of <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "How many medicines are offered by each trade name?",
                "masked_template": "How many <mask> are <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "How many counties correspond to each police force?",
                "masked_template": "How many <mask> to each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Please show the police forces and the number of counties with each police force.",
                "masked_template": "<mask> show the <mask> and the number of <mask> with each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "List all headquarters and the number of companies in each headquarter.",
                "masked_template": "List all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
                "masked_template": "For each <mask> what are the <mask> and how many <mask> are <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "display the country ID and number of cities for each country.",
                "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "For each advisor, report the total number of students advised by him or her.",
                "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
                "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
                "ted": 0.0,
                "db_id": "voter_2"
            },
            {
                "question": "Show all majors and corresponding number of students.",
                "masked_template": "Show all <mask> and <mask> number of <mask>",
                "query": "SELECT major , count( * ) FROM Student GROUP BY major",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Find all types of store and number of them.",
                "masked_template": "Find all <mask> of <mask> and number of <mask>",
                "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "Show the race class and number of races in each class.",
                "masked_template": "Show the <mask> and number of <mask> in each <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "What are the different classes of races, and how many races correspond to each?",
                "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show the different headquarters and number of companies at each headquarter.",
                "masked_template": "Show the different <mask> and number of <mask> at each <mask>",
                "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "For each classroom, show the classroom number and find how many students are using it.",
                "masked_template": "For each <mask> show the <mask> number and find how many <mask> are <mask> it.",
                "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
                "ted": 0.0,
                "db_id": "student_1"
            }
        ],
        "best_hyp": "What are the different hometowns and how many teachers are there for each hometown?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many teachers are from each hometown?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'Washington' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id",
        "proc_query": "( <col> last name </col> of <tab> students </tab> ) that belongs to ( ( <tab> students </tab> ) , and ( ( <tab> addresses </tab> ) satisfied that ( ( <col> current address id </col> of <tab> students </tab> ) equal to ( <col> address id </col> of <tab> addresses </tab> ) ) ) ) , that have ( ( <col> state province county </col> of <tab> addresses </tab> ) equal to ( <val> Washington </val> ) ), and except that ( ( distinct ( ( <col> last name </col> of <tab> students </tab> ) ) ) that belongs to ( ( <tab> students </tab> ) , and ( ( <tab> student enrolment </tab> ) satisfied that ( ( <col> student id </col> of <tab> students </tab> ) equal to ( <col> student id </col> of <tab> student enrolment </tab> ) ) ) ))",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the last names of students who live in Washington state but are not enrolled in any courses?",
            "Which students live in Washington state and have never enrolled as students?",
            "Tell me a list of students whose last name in Mar is older than that in Dec and which have no student enrollment."
        ],
        "templates": [
            "",
            {
                "question": "Which cities have lower temperature in March than in Dec and have never served as host cities?",
                "masked_template": "Which <mask> have <mask> in <mask> than in Dec and have <mask> as <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city",
                "ted": 0.09259259259259259,
                "db_id": "city_record"
            },
            {
                "question": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities.",
                "masked_template": "<mask> me a list of <mask> whose <mask> in Mar is <mask> than that in Dec and which have <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city",
                "ted": 0.09259259259259259,
                "db_id": "city_record"
            }
        ],
        "best_hyp": "Tell me a list of students whose last name in Mar is older than that in Dec and which have no student enrollment.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the last names of students who live in Washington state but are not enrolled in any courses?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "proc_query": "( <col> degree summary name </col> of <tab> degree programs </tab> ) that belongs to ( ( <tab> degree programs </tab> ) , and ( ( <tab> student enrolment </tab> ) satisfied that ( ( <col> degree program id </col> of <tab> degree programs </tab> ) equal to ( <col> degree program id </col> of <tab> student enrolment </tab> ) ) ) ) , grouped by ( <col> degree summary name </col> of <tab> degree programs </tab> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the name of the degree with the most student enrollment?",
            "Find the degree summary name that the degree who enrolls the greatest number of students in.",
            "Find the most common degree summary name in the program. The most common is the degree that had the greatest number of students enrolled.",
            "Which degree summary name has the most number of students enrolled in?",
            "Which degree summary name has the greatest number of student enrollment?",
            "Which degree summary name is most common among degrees? Tell me the name.",
            "Return the name of the degree summary name which has the most student enrollment.",
            "What are the summary names of the degree programs that are enrolled for the most number of students?",
            "What is the name of the degree program that enrolls the most number of students?",
            "Which degree summary name has the most student enrollment? Tell me the name.",
            "What is the name of degree that has the largest number of student enrollment?",
            "Return the degree summary name that has been used the greatest number of times.",
            "Which is the name of the degree that has enrolled the most number of students?",
            "List the name of the degree that has been named the most number of times.",
            "Find the name of the degree that is enrolled in most students.",
            "What are the degree summary names that have the most student enrollment?",
            "What is the name of the degree that is most popular among students?",
            "Find the name of the most popular degree with student enrollment.",
            "What are the names of the degree summaries that have been used by the most students?",
            "What is the name of the degree with the least number of student enrollment?",
            "Find the degree summary name that has the most student enrollment.",
            "Which degree summary name has the most student enrollment?",
            "Return the name of the degree that has the greatest number of student enrollment.",
            "Which degree summary name has the most student enrollment? Tell me the name.",
            "Return the name of the degree that has the most student enrollment.",
            "Show the name of the degree that has the most student enrollment.",
            "Find the top 3 degree summaries which have the greatest number of student enrollment.",
            "What is the name of the degree that has the largest number of student enrollment?",
            "What is the name of the degree that has the most student enrollment?",
            "Which degree summary is used in by the most students? Tell me the degree summary name.",
            "Find the name of the degree that has the largest number of student enrollment."
        ],
        "templates": [
            "",
            {
                "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
                "masked_template": "<mask> the <mask> that the <mask> who <mask> the <mask> number of <mask> in.",
                "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
                "masked_template": "Find the most <mask> in the <mask> The most <mask> is the <mask> that had <mask> the <mask> number of <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Which building does the instructor who teaches the most number of courses live in?",
                "masked_template": "Which <mask> the <mask> who <mask> the most number of <mask> in?",
                "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Which room has the largest number of reservations?",
                "masked_template": "Which <mask> has the <mask> number of <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Which program is broadcast most frequently? Give me the program name.",
                "masked_template": "Which <mask> is <mask> most <mask> me the <mask>",
                "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "Return the name of the organization which has the most contact individuals.",
                "masked_template": "Return the name of the <mask> which has the most <mask>",
                "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "What are the details of the student who registered for the most number of courses?",
                "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
                "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What is detail of the student who registered the most number of courses?",
                "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
                "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Which customer uses the most policies? Give me the customer name.",
                "masked_template": "Which <mask> the most <mask> me the <mask>",
                "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_fnol"
            },
            {
                "question": "What is the name of organization that has the greatest number of contact individuals?",
                "masked_template": "What is the name of <mask> that has the <mask> number of <mask>",
                "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Return the party email that has used party services the greatest number of times.",
                "masked_template": "Return the <mask> that has <mask> the <mask> number of <mask>",
                "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Which is the email of the party that has used the services the most number of times?",
                "masked_template": "Which is the <mask> of the <mask> that has <mask> the <mask> the most number of <mask>",
                "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
                "masked_template": "List the name of the <mask> that has <mask> named <mask> the most number of <mask>",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "Find the name of the program that is broadcast most frequently.",
                "masked_template": "Find the name of the <mask> that is <mask> most <mask>",
                "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "What are the three products that have the most problems?s",
                "masked_template": "What are the <mask> that have the most <mask>",
                "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "tracking_software_problems"
            },
            {
                "question": "What is the name of the party form that is most common?",
                "masked_template": "What is the name of the <mask> that is most <mask>",
                "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Find the name of the most popular party form.",
                "masked_template": "Find the name of the most <mask>",
                "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "What are the names of the cameras that have taken picture of the most mountains?",
                "masked_template": "What are the names of the <mask> that have <mask> of the most <mask>",
                "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "mountain_photos"
            },
            {
                "question": "What is the structure of the document with the least number of accesses?",
                "masked_template": "What is the <mask> of the <mask> with the least number of <mask>",
                "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Find the city that hosted the most events.",
                "masked_template": "Find the <mask> that <mask> the most <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "Which city has hosted the most events?",
                "masked_template": "Which <mask> has <mask> the most <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "Return the structure description of the document that has been accessed the fewest number of times.",
                "masked_template": "Return the <mask> of the <mask> that has <mask> the <mask> number of <mask>",
                "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Which customer have the most policies? Give me the customer details.",
                "masked_template": "Which <mask> have the most <mask> me the <mask>",
                "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims"
            },
            {
                "question": "Return the name of the document that has the most sections.",
                "masked_template": "Return the name of the <mask> that has the most <mask>",
                "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Show the name of the party that has the most delegates.",
                "masked_template": "Show the name of the <mask> that has the most <mask>",
                "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Find the top 3 products which have the largest number of problems?",
                "masked_template": "Find the top 3 <mask> which have the <mask> number of <mask>",
                "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "tracking_software_problems"
            },
            {
                "question": "What is the name of the aircraft that has won an award the most?",
                "masked_template": "What is the name of the <mask> that has won an <mask> the <mask>",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What is the name of the course that has the most student enrollment?",
                "masked_template": "What is the name of the <mask> that has the most <mask>",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Which course is enrolled in by the most students? Give me the course name.",
                "masked_template": "Which <mask> is <mask> in by the most <mask> me the <mask>",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Find the name of the activity that has the largest number of student participants.",
                "masked_template": "Find the name of the <mask> that has the <mask> number of <mask>",
                "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            }
        ],
        "best_hyp": "What is the name of the degree that has the most student enrollment?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name of the degree with the most student enrollment?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "proc_query": "( <col> first name </col> ) , ( <col> middle name </col> ) , ( <col> last name </col> ) that belongs to ( <tab> students </tab> ) , ordered by ( ( <col> date first registered </col> ) in ascending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the first name, middle name and last name of the youngest student?",
            "What is the first and last name of the student with the first registered date?",
            "What are the first and last names of the students with the first registered date?",
            "Find the first name and middle name of the student that has the first registered date.",
            "What is the first and last name of the student that is registered the earliest?",
            "What is the first and last name for the most recently registered student?",
            "What are the first and last names for the top 3 students with the oldest max age?",
            "What is the average first name and middle name for the students with the 3 maximum first registered years?",
            "Find the first and last name of the student that is registered in the most recent year.",
            "What is the first and last name of the student that was registered in the most recent year?",
            "What is the first and last name of the youngest student with the top 5 most recent registration dates?",
            "What is the first name, middle name and last name of the top 5 students with first registered date?",
            "Find the first name and middle name of the student who has the first registered date.",
            "What is the first and last name corresponding to the student with the first registered date?",
            "Return the first and last name of the student that was registered in the most recent year."
        ],
        "templates": [
            "",
            {
                "question": "What is the name, city, and country of the airport with the lowest altitude?",
                "masked_template": "What is the <mask> and <mask> of the <mask> with the <mask>",
                "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "What are the name, latitude, and city of the station with the lowest latitude?",
                "masked_template": "What are the <mask> and <mask> of the <mask> with the <mask>",
                "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
                "ted": 0.0,
                "db_id": "bike_1"
            },
            {
                "question": "Find the name, city, and country of the airport that has the lowest altitude.",
                "masked_template": "Find the <mask> and <mask> of the <mask> that has the <mask>",
                "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "What is the name, latitude, and city of the station that is located the furthest South?",
                "masked_template": "What is the <mask> and <mask> of the <mask> that is <mask> the <mask>",
                "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
                "ted": 0.0,
                "db_id": "bike_1"
            },
            {
                "question": "What is the name, location and seating for the most recently opened track?",
                "masked_template": "What is the <mask> and <mask> for the most <mask>",
                "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "race_track"
            },
            {
                "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?",
                "masked_template": "What are the <mask> and <mask> for the top 3 <mask> with the <mask> max <mask>",
                "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "ted": 0.045454545454545456,
                "db_id": "bike_1"
            },
            {
                "question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",
                "masked_template": "What is the <mask> average <mask> and <mask> for the <mask> with the 3 <mask> maximum <mask>",
                "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "ted": 0.045454545454545456,
                "db_id": "bike_1"
            },
            {
                "question": "Find the name, type, and flag of the ship that is built in the most recent year.",
                "masked_template": "Find the <mask> and <mask> of the <mask> that is <mask> in the most <mask>",
                "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "ship_1"
            },
            {
                "question": "What is the name, type, and flag of the ship that was built in the most recent year?",
                "masked_template": "What is the <mask> and <mask> of the <mask> that was <mask> in the most <mask>",
                "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "ship_1"
            },
            {
                "question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?",
                "masked_template": "What is the <mask> and <mask> number of the <mask> with the top 5 <mask>",
                "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
                "ted": 0.045454545454545456,
                "db_id": "college_1"
            },
            {
                "question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?",
                "masked_template": "What is the <mask> gpa and <mask> number of the top 5 <mask> with <mask>",
                "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
                "ted": 0.045454545454545456,
                "db_id": "college_1"
            },
            {
                "question": "Find the name, account type, and account balance of the customer who has the highest credit score.",
                "masked_template": "Find the <mask> and <mask> of the <mask> who has the <mask>",
                "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "loan_1"
            },
            {
                "question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?",
                "masked_template": "What is the <mask> and <mask> to the <mask> with the <mask>",
                "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "loan_1"
            },
            {
                "question": "Return the name, location, and seating of the track that was opened in the most recent year.",
                "masked_template": "Return the <mask> and <mask> of the <mask> that was <mask> in the most <mask>",
                "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "race_track"
            }
        ],
        "best_hyp": "What is the first and last name of the student that was registered in the most recent year?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the first name, middle name and last name of the youngest student?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT avg( grade ) FROM Highschooler WHERE id IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )",
        "proc_query": "( the average of ( <col> grade </col> ) ) that belongs to ( <tab> high schooler </tab> ) , that have ( ( <col> id </col> ) in ( ( <col> student id </col> of <tab> friend </tab> ) that belongs to ( ( <tab> friend </tab> ) , and ( ( <tab> high schooler </tab> ) satisfied that ( ( <col> student id </col> of <tab> friend </tab> ) equal to ( <col> id </col> of <tab> high schooler </tab> ) ) ) ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the average grade of the students who are friends with some high schooler?"
        ],
        "templates": [
            ""
        ],
        "best_hyp": "What is the average grade of the students who are friends with some high schooler?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the average grade of the students who are friends with some high schooler?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT min( grade ) FROM Highschooler WHERE id NOT IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )",
        "proc_query": "( the minimum of ( <col> grade </col> ) ) that belongs to ( <tab> high schooler </tab> ) , that have ( ( <col> id </col> ) not in ( ( <col> student id </col> of <tab> friend </tab> ) that belongs to ( ( <tab> friend </tab> ) , and ( ( <tab> high schooler </tab> ) satisfied that ( ( <col> student id </col> of <tab> friend </tab> ) equal to ( <col> id </col> of <tab> high schooler </tab> ) ) ) ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the minimum grade for students who are not friends with any high schooler?"
        ],
        "templates": [
            ""
        ],
        "best_hyp": "What is the minimum grade for students who are not friends with any high schooler?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the minimum grade for students who are not friends with any high schooler?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> teacher </tab> ) , ordered by ( ( <col> age </col> ) in ascending order )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the names of teachers in ascending order of age?",
            "List the names of teachers in ascending order of age.",
            "What are the names of the teachers in ascending order of age?",
            "List the names of all the teachers in ascending order of age.",
            "Find the names of teachers in ascending order of age.",
            "What are the names of the teachers in ascending order of the age?",
            "Find the names of all teachers by their 100th birthday in ascending order.",
            "List names of teachers ordered by age in ascending order.",
            "List the names of teachers in ascending order of age.",
            "List the names of teachers in ascending order of age.",
            "Show the names of teachers ordered by their age.",
            "List the names of teachers in ascending order of age.",
            "What are the names of teachers in ascending order of age?",
            "List all the names of teachers in ascending order of the age.",
            "What are the names of teachers ordered by the age?",
            "What are the names of all the teachers?",
            "What are the names of the teachers in ascending order of age?",
            "Find the names of all the teachers ordered in ascending order of age.",
            "List the names of teachers in ascending order of age.",
            "List the names of the teachers in ascending order of age.",
            "Find the names of teachers and their ages in ascending order of the age.",
            "List the teacher names in ascending order of age.",
            "What are all the teachers in ascending order of age?",
            "Please list all teachers in ascending order of age.",
            "What are the names of the teachers in ascending order of age?",
            "Return all the teacher names sorted by the teacher count in ascending order.",
            "What are the different teacher names in ascending order of age?",
            "List in ascending order all the teachers' names.",
            "Give me a list of all the names of teachers in ascending order",
            "What are the names of teachers in ascending order of age?",
            "Find the names of teachers in ascending order of age."
        ],
        "templates": [
            "",
            {
                "question": "List the carriers of devices in ascending alphabetical order.",
                "masked_template": "List the <mask> of <mask> in <mask>",
                "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
                "ted": 0.0,
                "db_id": "device"
            },
            {
                "question": "What are the first names of the people in alphabetical order?",
                "masked_template": "What are the <mask> names of the <mask> in <mask>",
                "query": "SELECT first_name FROM people ORDER BY first_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "List the names of all the customers in alphabetical order.",
                "masked_template": "List the names of all the <mask> in <mask>",
                "query": "SELECT customer_details FROM customers ORDER BY customer_details",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims"
            },
            {
                "question": "Sort the customer names in alphabetical order.",
                "masked_template": "<mask> the <mask> names in <mask>",
                "query": "SELECT customer_details FROM customers ORDER BY customer_details",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims"
            },
            {
                "question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?",
                "masked_template": "What are the names of the <mask> of <mask> in <mask> order of the <mask>",
                "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.",
                "masked_template": "Find the names of all <mask> by their 100 <mask> in <mask>",
                "query": "SELECT name FROM swimmer ORDER BY meter_100",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "List every album ordered by album title in ascending order.",
                "masked_template": "List <mask> ordered by <mask> in <mask>",
                "query": "SELECT title FROM albums ORDER BY title",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "List the first names of people in alphabetical order?",
                "masked_template": "List the <mask> names of <mask> in <mask>",
                "query": "SELECT first_name FROM people ORDER BY first_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "List the names of roller coasters by ascending order of length.",
                "masked_template": "List the names of <mask> by <mask> order of <mask>",
                "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Show the shop addresses ordered by their opening year.",
                "masked_template": "Show the <mask> ordered by their <mask>",
                "query": "SELECT address FROM shop ORDER BY open_year",
                "ted": 0.0,
                "db_id": "coffee_shop"
            },
            {
                "question": "List the names of members in ascending alphabetical order.",
                "masked_template": "List the names of <mask> in <mask>",
                "query": "SELECT Name FROM member ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "What are the names of managers in ascending order of level?",
                "masked_template": "What are the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
                "ted": 0.0,
                "db_id": "railway"
            },
            {
                "question": "List all the name of organizations in order of the date formed.",
                "masked_template": "List all the name of <mask> in order of the <mask>",
                "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
                "masked_template": "What are the names of <mask> ordered by the <mask>",
                "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "What are the titles of all the albums alphabetically ascending?",
                "masked_template": "What are the <mask> of all the <mask>",
                "query": "SELECT title FROM albums ORDER BY title",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the names of the courses in alphabetical order?",
                "masked_template": "What are the names of the <mask> in <mask>",
                "query": "SELECT course_name FROM courses ORDER BY course_name",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Find the first names of all the authors ordered in alphabetical order.",
                "masked_template": "Find the <mask> names of all the <mask> ordered in <mask>",
                "query": "SELECT fname FROM authors ORDER BY fname",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "List the names of pilots in ascending order of rank.",
                "masked_template": "List the names of <mask> in <mask> order of <mask>",
                "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
                "ted": 0.0,
                "db_id": "pilot_record"
            },
            {
                "question": "List the titles of the books in ascending order of issues.",
                "masked_template": "List the <mask> of the <mask> in <mask> order of <mask>",
                "query": "SELECT Title FROM book ORDER BY Issues ASC",
                "ted": 0.0,
                "db_id": "book_2"
            },
            {
                "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
                "masked_template": "<mask> the <mask> and <mask> in <mask> order of the <mask>",
                "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Sort the apartment numbers in ascending order of room count.",
                "masked_template": "<mask> the <mask> numbers in <mask> order of <mask>",
                "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are all the album titles, in alphabetical order?",
                "masked_template": "What are all the <mask> in <mask>",
                "query": "SELECT Title FROM ALBUM ORDER BY Title",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "Please list all album titles in alphabetical order.",
                "masked_template": "<mask> list all <mask> in <mask>",
                "query": "SELECT Title FROM ALBUM ORDER BY Title",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "What are the names of the technicians by ascending order of age?",
                "masked_template": "What are the names of the <mask> by <mask> order of <mask>",
                "query": "SELECT Name FROM technician ORDER BY Age ASC",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "Return all the apartment numbers sorted by the room count in ascending order.",
                "masked_template": "Return all the <mask> numbers <mask> by the <mask> count in <mask>",
                "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are the different dorm amenity names in alphabetical order?",
                "masked_template": "What are the different <mask> names in <mask>",
                "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "List in alphabetic order all different amenities.",
                "masked_template": "List in <mask> order all different <mask>",
                "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Give me a list of all the last names of authors sorted in alphabetical order",
                "masked_template": "<mask> me a list of all the <mask> names of <mask> in <mask> order",
                "query": "SELECT lname FROM authors ORDER BY lname",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "What are the names of mountains in ascending alphabetical order?",
                "masked_template": "What are the names of <mask> in <mask>",
                "query": "SELECT Name FROM mountain ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "Give the names of mountains in alphabetical order.",
                "masked_template": "<mask> the names of <mask> in <mask>",
                "query": "SELECT Name FROM mountain ORDER BY Name ASC",
                "ted": 0.0,
                "db_id": "climbing"
            }
        ],
        "best_hyp": "What are the names of teachers in ascending order of age?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of teachers in ascending order of age?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "proc_query": "( <col> first name </col> ) , ( <col> middle name </col> ) , ( <col> last name </col> ) that belongs to ( <tab> students </tab> ) , ordered by ( ( <col> date left </col> ) in ascending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the first and middle name of the youngest student?",
            "What is the first and last name of the student with the last name left?",
            "What are the first and last names of the students with the last name left?",
            "Find the first and last name of the student that has the last name left.",
            "What is the first and last name of the youngest student that is leaving the school?",
            "What is the first and last name for the most recent student?",
            "What are the first and last names for the top 3 students with the oldest max age?",
            "What is the average first and middle name for the students with the 3 maximum years left?",
            "Find the first and last name of the student that is left in the most recent year.",
            "What is the first and last name of the youngest student that was enrolled in the most recent class?",
            "What is the first and last name of the youngest student with the top 5 longest standing years?",
            "What is the first name, middle name, and last name of the youngest student?",
            "Find the first and last name of the student who has the last name left.",
            "What is the first and last name corresponding to the student with the last name left?",
            "Return the first and last name of the student that was left in the most recent year."
        ],
        "templates": [
            "",
            {
                "question": "What is the name, city, and country of the airport with the lowest altitude?",
                "masked_template": "What is the <mask> and <mask> of the <mask> with the <mask>",
                "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "What are the name, latitude, and city of the station with the lowest latitude?",
                "masked_template": "What are the <mask> and <mask> of the <mask> with the <mask>",
                "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
                "ted": 0.0,
                "db_id": "bike_1"
            },
            {
                "question": "Find the name, city, and country of the airport that has the lowest altitude.",
                "masked_template": "Find the <mask> and <mask> of the <mask> that has the <mask>",
                "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "What is the name, latitude, and city of the station that is located the furthest South?",
                "masked_template": "What is the <mask> and <mask> of the <mask> that is <mask> the <mask>",
                "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
                "ted": 0.0,
                "db_id": "bike_1"
            },
            {
                "question": "What is the name, location and seating for the most recently opened track?",
                "masked_template": "What is the <mask> and <mask> for the most <mask>",
                "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "race_track"
            },
            {
                "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?",
                "masked_template": "What are the <mask> and <mask> for the top 3 <mask> with the <mask> max <mask>",
                "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "ted": 0.045454545454545456,
                "db_id": "bike_1"
            },
            {
                "question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",
                "masked_template": "What is the <mask> average <mask> and <mask> for the <mask> with the 3 <mask> maximum <mask>",
                "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "ted": 0.045454545454545456,
                "db_id": "bike_1"
            },
            {
                "question": "Find the name, type, and flag of the ship that is built in the most recent year.",
                "masked_template": "Find the <mask> and <mask> of the <mask> that is <mask> in the most <mask>",
                "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "ship_1"
            },
            {
                "question": "What is the name, type, and flag of the ship that was built in the most recent year?",
                "masked_template": "What is the <mask> and <mask> of the <mask> that was <mask> in the most <mask>",
                "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "ship_1"
            },
            {
                "question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?",
                "masked_template": "What is the <mask> and <mask> number of the <mask> with the top 5 <mask>",
                "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
                "ted": 0.045454545454545456,
                "db_id": "college_1"
            },
            {
                "question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?",
                "masked_template": "What is the <mask> gpa and <mask> number of the top 5 <mask> with <mask>",
                "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
                "ted": 0.045454545454545456,
                "db_id": "college_1"
            },
            {
                "question": "Find the name, account type, and account balance of the customer who has the highest credit score.",
                "masked_template": "Find the <mask> and <mask> of the <mask> who has the <mask>",
                "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "loan_1"
            },
            {
                "question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?",
                "masked_template": "What is the <mask> and <mask> to the <mask> with the <mask>",
                "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "loan_1"
            },
            {
                "question": "Return the name, location, and seating of the track that was opened in the most recent year.",
                "masked_template": "Return the <mask> and <mask> of the <mask> that was <mask> in the most <mask>",
                "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
                "ted": 0.045454545454545456,
                "db_id": "race_track"
            }
        ],
        "best_hyp": "What is the first and last name of the student with the last name left?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the first and middle name of the youngest student?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select T2.department_name , T1.department_id from degree_programs as T1 join departments as T2 on T1.department_id = T2.department_id group by T1.department_id order by count( * ) desc limit 1",
        "proc_query": "( <col> department name </col> of <tab> departments </tab> ) , ( <col> department id </col> of <tab> degree programs </tab> ) that belongs to ( ( <tab> degree programs </tab> ) , and ( ( <tab> departments </tab> ) satisfied that ( ( <col> department id </col> of <tab> degree programs </tab> ) equal to ( <col> department id </col> of <tab> departments </tab> ) ) ) ) , grouped by ( <col> department id </col> of <tab> degree programs </tab> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the name and id of the department that offers the most degrees?",
            "What is the name and id of the department that is offering the most degrees?",
            "What is the name and id for the department which has the most degrees offered?",
            "Find the name and id of the department that is offering the most degrees.",
            "What are the name and id of the department with the most degrees?",
            "Which department offers the most number of degrees? List the department name and the id.",
            "Find the ID and name of the department with the most degrees.",
            "What is the name and id of the department that offers the most degrees?",
            "What is the name and id of the department that offers most number of degrees?",
            "For the department ids with the top 10 most number of degrees, what are their names?",
            "Return the name and id corresponding to the department that has had the most degrees.",
            "Find the names of the top 10 departments that offer the most number of degrees.",
            "What is the name and id for the department with most number of degrees?",
            "Show the id and name for the department that offers the top 3 number of degrees.",
            "Find the name and id of the department that has the most degrees.",
            "Which department has the most degrees in the database? List both department name and id.",
            "Which department offers the most degrees? Tell me its name and id.",
            "What is the name and id of the department that has the greatest number of degrees in one year?",
            "Find the name of department that offers the most number of degrees.",
            "What is the name and id of the department that has the most degrees?",
            "What are the name and id of the department that offers the most degrees?",
            "Tell me the the name and id of the department that offers the most degrees.",
            "What is the name and id of the department which has the most number of degrees?",
            "What are the name and id of the most popular degree program?",
            "Show the id and name of the department that has the greatest number of degrees.",
            "Find the id and name of the department that has the most number of degrees.",
            "Find the ids and names of the 3 departments that have the most number of degrees.",
            "What is the name and id of the department with the most degrees?",
            "Find the name and id of the department that is involved in the greatest number of degrees.",
            "Find the id and name of the department that has the most degrees.",
            "Which department is involved in the most number of degrees? List the department name and id"
        ],
        "templates": [
            "",
            {
                "question": "What is the description and code of the type of service that is performed the most often?",
                "masked_template": "What is the <mask> and <mask> of the <mask> of <mask> that is <mask> the most <mask>",
                "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What is the name and hours for the project which has the most scientists assigned to it?",
                "masked_template": "What is the name and <mask> for the <mask> which has the most <mask> to it?",
                "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "Find the description and code of the service type that is performed the most times.",
                "masked_template": "Find the <mask> and <mask> of the <mask> that is <mask> the most <mask>",
                "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the details and id of the project with the most outcomes?",
                "masked_template": "What are the <mask> and id of the <mask> with the most <mask>",
                "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "Which project made the most number of outcomes? List the project details and the project id.",
                "masked_template": "Which <mask> the most number of <mask> List the <mask> and the <mask> id.",
                "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "Find the student ID and login name of the student with the most course enrollments",
                "masked_template": "Find the <mask> ID and <mask> name of the <mask> with the most <mask>",
                "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "What is the first and last name of the student who played the most sports?",
                "masked_template": "What is the <mask> and <mask> name of the <mask> who <mask> the most <mask>",
                "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "What is the first name and last name of the student who have most number of sports?",
                "masked_template": "What is the <mask> name and <mask> name of the <mask> who have most number of <mask>",
                "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "For the airline ids with the top 10 most routes operated, what are their names?",
                "masked_template": "For the <mask> ids with the top 10 most <mask> what are their <mask>",
                "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
                "masked_template": "Return the name and <mask> to the <mask> who has had the most <mask>",
                "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "Find the names of the top 10 airlines that operate the most number of routes.",
                "masked_template": "Find the names of the top 10 <mask> that <mask> the most number of <mask>",
                "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "What is the name and country for the artist with most number of exhibitions?",
                "masked_template": "What is the name and <mask> for the <mask> with most number of <mask>",
                "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "Show the id and details for the investors who have the top 3 number of transactions.",
                "masked_template": "Show the id and <mask> for the <mask> who have the top 3 number of <mask>",
                "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Find the full name and id of the college that has the most baseball players.",
                "masked_template": "Find the <mask> name and id of the <mask> that has the most <mask>",
                "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "baseball_1"
            },
            {
                "question": "Which film has the most copies in the inventory? List both title and id.",
                "masked_template": "Which <mask> has the most <mask> in the <mask> List both <mask> and id.",
                "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
                "masked_template": "Which <mask> the most <mask> to? <mask> me its <mask> and <mask>",
                "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Theme_park"
            },
            {
                "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
                "masked_template": "What is the <mask> and id of the <mask> that has the <mask> number of <mask> in <mask>",
                "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "Find the full name of employee who supported the most number of customers.",
                "masked_template": "Find the <mask> name of <mask> who <mask> the most number of <mask>",
                "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the type and id of the organization that has the most research staff?",
                "masked_template": "What is the <mask> and id of the <mask> that has the most <mask>",
                "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the first and last name of the faculty who has the most students?",
                "masked_template": "What are the <mask> and <mask> name of the <mask> who has the most <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Give me the the first and last name of the faculty who advises the most students.",
                "masked_template": "<mask> me the the <mask> and <mask> name of the <mask> who <mask> the most <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
                "masked_template": "What is the <mask> and id of the <mask> which has the most number of <mask>",
                "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the code and description of the most frequent behavior incident type?",
                "masked_template": "What are the <mask> and <mask> of the most <mask>",
                "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Show the id and details of the investor that has the largest number of transactions.",
                "masked_template": "Show the id and <mask> of the <mask> that has the <mask> number of <mask>",
                "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Find the id and first name of the student that has the most number of assessment notes?",
                "masked_template": "Find the id and <mask> name of the <mask> that has the most number of <mask>",
                "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
                "masked_template": "Find the ids and <mask> names of the 3 <mask> that have the most number of <mask>",
                "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "What is the first and last name of the faculty participating in the most activities?",
                "masked_template": "What is the <mask> and <mask> name of the <mask> in the most <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
                "masked_template": "Find the <mask> and <mask> name of the <mask> who is <mask> in the <mask> number of <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Find the id and last name of the student that has the most behavior incidents?",
                "masked_template": "Find the id and <mask> name of the <mask> that has the most <mask>",
                "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
                "masked_template": "Which <mask> is <mask> in <mask> the most number of <mask> List the <mask> id and <mask>",
                "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "assets_maintenance"
            }
        ],
        "best_hyp": "What is the name and id of the department that has the most degrees?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name and id of the department that offers the most degrees?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> teacher </tab> ) , that have ( ( <col> teacher id </col> ) not in ( ( <col> teacher id </col> ) that belongs to ( <tab> course arrange </tab> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the names of the teachers who did not arrange any course?",
            "List the names of teachers that do not have any course arrange.",
            "List the names of teachers that are not involved in any course arrange.",
            "List the names of teachers that are not teaching any course.",
            "Find the name of the teachers that do not have any course arrange.",
            "What are the names of teachers who did not arrange any course?",
            "What are the names of teachers who did not arrange any course?",
            "Find the names of teachers who did not arrange any course.",
            "what are the names of teachers who did not arrange any course?",
            "Find the name of teachers not involved in any course arrange.",
            "What are the names of all teachers that are not teaching any course?",
            "List the names of teachers who did not arrange any course.",
            "What are the names of all teachers that have never won any course arrange?",
            "List the names of teachers that do not have any course arrange.",
            "Which teachers do not have any course arrange? Tell me the teacher names.",
            "List the names of teachers that are not teaching any course.",
            "What are the names of teachers who do not have any course arrange?",
            "Find the names of teachers that do not have any course arrange.",
            "List the names of teachers that have no courses arrange.",
            "What are all names of teachers who teach courses but not arrange courses?",
            "What are the names of teachers who did not arrange any course?",
            "List the names of teachers that are not teaching any course.",
            "What are the names of teachers that do not have a course arrange?",
            "What are the names of teachers that do not arrange any courses?",
            "Which teachers have no courses arrange? List their names.",
            "What are the names of the teachers with no courses arrange?",
            "What are the names of all teachers that have not provided any course arrange?",
            "Find the names of all teachers that have no courses arrange.",
            "List the names of teachers who did not arrange any course.",
            "Find all the name of teachers without any course arrange.",
            "What are the names of teachers that do not have any course arrange?"
        ],
        "templates": [
            "",
            {
                "question": "List the names of mountains that do not have any climber.",
                "masked_template": "List the names of <mask> that do not have any <mask>",
                "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN ( SELECT Mountain_ID FROM climber )",
                "ted": 0.0,
                "db_id": "climbing"
            },
            {
                "question": "List the names of products that are not in any event.",
                "masked_template": "List the names of <mask> that are not in any <mask>",
                "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "List the name of artworks that are not nominated.",
                "masked_template": "List the name of <mask> that are not <mask>",
                "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "Find the name of the courses that do not have any prerequisite?",
                "masked_template": "Find the name of the <mask> that do not have any <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of courses without prerequisites?",
                "masked_template": "What are the names of <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of instructors who didn't teach?",
                "masked_template": "What are the names of <mask> who <mask>",
                "query": "SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Give the names of people who did not participate in the candidate election.",
                "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
                "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
                "ted": 0.0,
                "db_id": "candidate_poll"
            },
            {
                "question": "what are the names of people who did not participate in the candidate election.",
                "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
                "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
                "ted": 0.0,
                "db_id": "candidate_poll"
            },
            {
                "question": "Find the first name of students not enrolled in any course.",
                "masked_template": "Find the <mask> name of <mask> not <mask> in any <mask>",
                "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "What are the first names of all students that are not enrolled in courses?",
                "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
                "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "List the names of aircrafts and that did not win any match.",
                "masked_template": "List the names of <mask> and that did not win any <mask>",
                "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What are the names of all aicrafts that have never won any match?",
                "masked_template": "What are the names of all <mask> that have <mask> won any <mask>",
                "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "List the locations of schools that do not have any player.",
                "masked_template": "List the <mask> of <mask> that do not have any <mask>",
                "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Which schools do not have any player? Give me the school locations.",
                "masked_template": "Which <mask> do not have any <mask> me the <mask>",
                "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player )",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "List the names of people that are not perpetrators.",
                "masked_template": "List the names of <mask> that are not <mask>",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator )",
                "ted": 0.0,
                "db_id": "perpetrator"
            },
            {
                "question": "What are the famous titles of artists who do not have any volumes?",
                "masked_template": "What are the <mask> of <mask> who do not have any <mask>",
                "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "Find the famous titles of artists that do not have any volume.",
                "masked_template": "Find the <mask> of <mask> that do not have any <mask>",
                "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN ( SELECT Artist_ID FROM volume )",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "List the names of buildings that have no company office.",
                "masked_template": "List the names of <mask> that have no <mask>",
                "query": "SELECT name FROM buildings WHERE id NOT IN ( SELECT building_id FROM Office_locations )",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What are all info of students who registered courses but not attended courses?",
                "masked_template": "What are all <mask> of <mask> who <mask> but not <mask>",
                "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance )",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the titles of courses without prerequisites?",
                "masked_template": "What are the <mask> of <mask>",
                "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "List the names of people that are not employed by any company",
                "masked_template": "List the names of <mask> that are not <mask> by any <mask>",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment )",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "What are the titles of films that do not have a film market estimation?",
                "masked_template": "What are the <mask> of <mask> that do not have a <mask>",
                "query": "SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation )",
                "ted": 0.0,
                "db_id": "film_rank"
            },
            {
                "question": "What are the names of counties that do not contain any cities?",
                "masked_template": "What are the names of <mask> that do not <mask> any <mask>",
                "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city )",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Which projects have no outcome? List the project details.",
                "masked_template": "Which <mask> have no <mask> List the <mask>",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the details of the project with no outcomes?",
                "masked_template": "What are the <mask> of the <mask> with no <mask>",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the titles of all movies that have not been rated?",
                "masked_template": "What are the <mask> of all <mask> that have not <mask>",
                "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "Find the titles of all movies that have no ratings.",
                "masked_template": "Find the <mask> of all <mask> that have no <mask>",
                "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "List the names of members who did not participate in any round.",
                "masked_template": "List the names of <mask> who did not <mask> in any <mask>",
                "query": "SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM round )",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "Find all the name of documents without any sections.",
                "masked_template": "Find all the name of <mask> any <mask>",
                "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "What are the names of documents that do not have any sections?",
                "masked_template": "What are the names of <mask> that do not have any <mask>",
                "query": "SELECT document_name FROM documents WHERE document_code NOT IN ( SELECT document_code FROM document_sections )",
                "ted": 0.0,
                "db_id": "document_management"
            }
        ],
        "best_hyp": "What are the names of teachers that do not have a course arrange?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of the teachers who did not arrange any course?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "proc_query": "( <col> transcript date </col> ) that belongs to ( <tab> transcripts </tab> ) , ordered by ( ( <col> transcript date </col> ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the date of the most recent transcript?",
            "Find the name of the date that was used for the first transcript.",
            "Show the dates of the most recent transcript.",
            "What is the date of the first transcript with the greatest number of corresponding dates?",
            "What is the date of the first transcript?",
            "What is the name of the date with the most recent transcript?",
            "What is the date of the first transcript?",
            "Find the date of the first transcript with the earliest date.",
            "What is the name of the date that was used in the most recent transcript?",
            "Which date has the oldest transcript? Tell me the name of the date.",
            "Show the date of the first transcript.",
            "What is the date of the first transcript?",
            "What is the date of the first transcript?",
            "What are the names of the dates corresponding to the most recent transcripts?",
            "What are the names of the dates corresponding to the most recent transcripts?",
            "What is the date of the most recent transcript?",
            "What is the date of the first transcript?",
            "What is the name of the date with the greatest number of transcripts?",
            "What is the id of the most recent transcript?",
            "Find the id of the order of the most recent transcript date.",
            "What are the names of the dates corresponding to the most recent transcript?",
            "Show the date of the first transcript with the earliest date.",
            "Find the ids of the dates in which the first transcript was made.",
            "What are the ids of the top dates that correspond to the oldest transcripts?",
            "List the date of the first transcript that has been made.",
            "What are the dates of the earliest transcripts?",
            "Which date has the oldest transcript been made?",
            "Return the date in the file that has been accessed the most recently on record.",
            "What is the id of the date that the most recent transcript was made?",
            "What is the date in the transcript with the maximum date on record?",
            "Return the date for the earliest transcript."
        ],
        "templates": [
            "",
            {
                "question": "Find the name of project that continues for the longest time.",
                "masked_template": "Find the name of <mask> that <mask> for the <mask>",
                "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "Show the names of the three most recent festivals.",
                "masked_template": "Show the names of the <mask> most <mask>",
                "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "What is the location of the festival with the largest number of audience?",
                "masked_template": "What is the <mask> of the <mask> with the <mask> number of <mask>",
                "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "What is the name of the product with the highest price?",
                "masked_template": "What is the name of the <mask> with the <mask>",
                "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "What is the name of the project with the most hours?",
                "masked_template": "What is the name of the <mask> with the most <mask>",
                "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "What is the stories of highest building?",
                "masked_template": "What is the <mask> of <mask>",
                "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "Find the stories of the building with the largest height.",
                "masked_template": "Find the <mask> of the <mask> with the <mask>",
                "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "company_office"
            },
            {
                "question": "What is the name of the event that happened in the most recent year?",
                "masked_template": "What is the name of the <mask> that <mask> in the most <mask>",
                "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Which county has the largest population? Give me the name of the county.",
                "masked_template": "Which <mask> has the <mask> me the name of the <mask>",
                "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Show the name of the county with the biggest population.",
                "masked_template": "Show the name of the <mask> with the <mask>",
                "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Who is the instructor with the highest salary?",
                "masked_template": "Who is the <mask> with the <mask>",
                "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Give the name of the highest paid instructor.",
                "masked_template": "<mask> the name of the <mask>",
                "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of schools with the top 3 largest size?",
                "masked_template": "What are the names of <mask> with the top 3 <mask>",
                "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "What are the names of the schools with the top 3 largest class sizes?",
                "masked_template": "What are the names of the <mask> with the top 3 <mask>",
                "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "What is the carrier of the most expensive phone?",
                "masked_template": "What is the <mask> of the most <mask>",
                "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "What is the author of the submission with the highest score?",
                "masked_template": "What is the <mask> of the <mask> with the <mask>",
                "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "What is the name of the player with the largest number of votes?",
                "masked_template": "What is the name of the <mask> with the <mask> number of <mask>",
                "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "riding_club"
            },
            {
                "question": "What is the id of the most recent order?",
                "masked_template": "What is the id of the most <mask>",
                "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "Find the id of the order made most recently.",
                "masked_template": "Find the id of the order <mask> most <mask>",
                "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "What are the names of the dorm with the largest capacity?",
                "masked_template": "What are the names of the <mask> with the <mask>",
                "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "Show the park of the roller coaster with the highest speed.",
                "masked_template": "Show the <mask> of the <mask> with the <mask>",
                "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Give the ids of the three products purchased in the largest amounts.",
                "masked_template": "<mask> the ids of the <mask> in the <mask>",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "What are the ids of the top three products that were purchased in the largest amount?",
                "masked_template": "What are the ids of the top <mask> that <mask> in the <mask>",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "department_store"
            },
            {
                "question": "List the school color of the school that has the largest enrollment.",
                "masked_template": "List the <mask> of the <mask> that has the <mask>",
                "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "What are the speeds of the longest roller coaster?",
                "masked_template": "What are the <mask> of the <mask>",
                "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "roller_coaster"
            },
            {
                "question": "Which district has the largest population?",
                "masked_template": "Which <mask> has the <mask>",
                "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "Return the song in the volume that has spent the most weeks on top?",
                "masked_template": "Return the <mask> in the <mask> that has <mask> the most <mask> on <mask>",
                "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What is the id of the appointment that started most recently?",
                "masked_template": "What is the id of the <mask> that <mask> most <mask>",
                "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "What is the song in the volume with the maximum weeks on top?",
                "masked_template": "What is the <mask> in the <mask> with the maximum <mask> on <mask>",
                "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "Return the famous release date for the oldest artist.",
                "masked_template": "Return the <mask> for the <mask>",
                "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "music_4"
            }
        ],
        "best_hyp": "What is the id of the most recent transcript?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the date of the most recent transcript?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count( * ) DESC LIMIT 1",
        "proc_query": "( the number of ( all items ) ) , ( <col> student course id </col> ) that belongs to ( <tab> transcript contents </tab> ) , grouped by ( <col> student course id </col> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "Find the number of transcript contents for the course with the most students.",
            "What are the id and number of students that have the most transcript contents?",
            "List all the student ids and ids of courses with the most transcript contents."
        ],
        "templates": [
            "",
            {
                "question": "What are the usernames and passwords of users that have the most common role?",
                "masked_template": "What are the <mask> and <mask> of <mask> that have the most <mask>",
                "query": "SELECT user_name , password FROM users GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.07692307692307693,
                "db_id": "document_management"
            },
            {
                "question": "List all the username and passwords of users with the most popular role.",
                "masked_template": "List all the <mask> and <mask> of <mask> with the most <mask>",
                "query": "SELECT user_name , password FROM users GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.07692307692307693,
                "db_id": "document_management"
            }
        ],
        "best_hyp": "What are the id and number of students that have the most transcript contents?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Find the number of transcript contents for the course with the most students.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count( * ) = 2",
        "proc_query": "( <col> first name </col> of <tab> students </tab> ) , ( <col> middle name </col> of <tab> students </tab> ) , ( <col> last name </col> of <tab> students </tab> ) , ( <col> student id </col> of <tab> students </tab> ) that belongs to ( ( <tab> students </tab> ) , and ( ( <tab> student enrolment </tab> ) satisfied that ( ( <col> student id </col> of <tab> students </tab> ) equal to ( <col> student id </col> of <tab> student enrolment </tab> ) ) ) ) , grouped by ( <col> student id </col> of <tab> students </tab> ) , that have ( ( the number of ( all items ) ) equal to ( <val> 2 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the first name, middle name, and id of the students who are enrolled in two colleges?",
            "List the first name the student was studying the year it was enrolled and the last name for all the students which had one enrollment record",
            "Which students had exactly one enrollment? For me the the first name the student was the last name it was and the id"
        ],
        "templates": [
            "",
            {
                "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.",
                "masked_template": "List the <mask> the <mask> was <mask> the <mask> it was <mask> and the <mask> for all the <mask> which had <mask> one <mask>",
                "query": "SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count( * ) = 1",
                "ted": 0.09090909090909091,
                "db_id": "insurance_policies"
            },
            {
                "question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.",
                "masked_template": "Which <mask> had <mask> one <mask> For <mask> me the the <mask> the <mask> was <mask> the <mask> it was <mask> and the <mask>",
                "query": "SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count( * ) = 1",
                "ted": 0.09090909090909091,
                "db_id": "insurance_policies"
            }
        ],
        "best_hyp": "List the first name the student was studying the year it was enrolled and the last name for all the students which had one enrollment record",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the first name, middle name, and id of the students who are enrolled in two colleges?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "proc_query": "( <col> semester name </col> of <tab> semesters </tab> ) , ( <col> semester id </col> of <tab> semesters </tab> ) that belongs to ( ( <tab> semesters </tab> ) , and ( ( <tab> student enrolment </tab> ) satisfied that ( ( <col> semester id </col> of <tab> semesters </tab> ) equal to ( <col> semester id </col> of <tab> student enrolment </tab> ) ) ) ) , grouped by ( <col> semester id </col> of <tab> semesters </tab> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the name and id of the semesters that have the most students enrolled?",
            "What is the name and id of the semester that is enrolled the most students?",
            "What is the name and id for the semesters which has the most students enrolled?",
            "Find the name and id of the semester that is enrolled the most students.",
            "What are the name and id of the semesters with the most student enrollment?",
            "Which semesters have the most number of students enrolled? List the semesters name and the semester id.",
            "Find the semester name and id of the semesters with the most student enrollment.",
            "What is the name and id of the semester that has the most students enrolled?",
            "What is the name and id of the semesters that have most number of students enrolled?",
            "For the semesters with the top 10 most enrollments, what are their names?",
            "Return the name and id corresponding to the semester that has had the most student enrollment.",
            "Find the names of the top 10 semesters that enroll the most number of students.",
            "What is the name and id for the semesters with most number of students enrolled?",
            "Show the id and name for the semesters that have the top 3 number of student enrollment.",
            "Find the name and id of the semesters that has the most student enrollment.",
            "Which semesters has the most students enrolled in the courses? List both semesters name and id.",
            "Which semesters have the most students enrolled? Tell me its name and id.",
            "What is the name and id of the semesters that has the largest number of students enrolled in?",
            "Find the name of semesters that have the most number of students enrolled.",
            "What is the name and id of the semesters that has the most student enrollment?",
            "What are the name and id of the semester that has the most students enrolled?",
            "Tell me the the name and id of the semester that has the most student enrollment.",
            "What is the name and id of the semesters which has the most number of students enrolled?",
            "What are the name and id of the semesters with the most student enrollment?",
            "Show the id and name of the semesters that has the greatest number of students enrolled.",
            "Find the id and name of the semester that has the most number of students enrolled.",
            "Find the ids and names of the 3 semesters that have the most number of students enrolled.",
            "What is the name and id of the semesters with the most student enrollment?",
            "Find the name and id of the semester that is enrolled in the greatest number of students.",
            "Find the id and name of the semester that has the most student enrollment.",
            "Which semester is enrolled in the most number of students? List the semester name and id."
        ],
        "templates": [
            "",
            {
                "question": "What is the description and code of the type of service that is performed the most often?",
                "masked_template": "What is the <mask> and <mask> of the <mask> of <mask> that is <mask> the most <mask>",
                "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What is the name and hours for the project which has the most scientists assigned to it?",
                "masked_template": "What is the name and <mask> for the <mask> which has the most <mask> to it?",
                "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "Find the description and code of the service type that is performed the most times.",
                "masked_template": "Find the <mask> and <mask> of the <mask> that is <mask> the most <mask>",
                "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Drama_Workshop_Groups"
            },
            {
                "question": "What are the details and id of the project with the most outcomes?",
                "masked_template": "What are the <mask> and id of the <mask> with the most <mask>",
                "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "Which project made the most number of outcomes? List the project details and the project id.",
                "masked_template": "Which <mask> the most number of <mask> List the <mask> and the <mask> id.",
                "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "Find the student ID and login name of the student with the most course enrollments",
                "masked_template": "Find the <mask> ID and <mask> name of the <mask> with the most <mask>",
                "query": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "What is the first and last name of the student who played the most sports?",
                "masked_template": "What is the <mask> and <mask> name of the <mask> who <mask> the most <mask>",
                "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "What is the first name and last name of the student who have most number of sports?",
                "masked_template": "What is the <mask> name and <mask> name of the <mask> who have most number of <mask>",
                "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "For the airline ids with the top 10 most routes operated, what are their names?",
                "masked_template": "For the <mask> ids with the top 10 most <mask> what are their <mask>",
                "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
                "masked_template": "Return the name and <mask> to the <mask> who has had the most <mask>",
                "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "Find the names of the top 10 airlines that operate the most number of routes.",
                "masked_template": "Find the names of the top 10 <mask> that <mask> the most number of <mask>",
                "query": "SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count( * ) DESC LIMIT 10",
                "ted": 0.0,
                "db_id": "flight_4"
            },
            {
                "question": "What is the name and country for the artist with most number of exhibitions?",
                "masked_template": "What is the name and <mask> for the <mask> with most number of <mask>",
                "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "theme_gallery"
            },
            {
                "question": "Show the id and details for the investors who have the top 3 number of transactions.",
                "masked_template": "Show the id and <mask> for the <mask> who have the top 3 number of <mask>",
                "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Find the full name and id of the college that has the most baseball players.",
                "masked_template": "Find the <mask> name and id of the <mask> that has the most <mask>",
                "query": "SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "baseball_1"
            },
            {
                "question": "Which film has the most copies in the inventory? List both title and id.",
                "masked_template": "Which <mask> has the most <mask> in the <mask> List both <mask> and id.",
                "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
                "masked_template": "Which <mask> the most <mask> to? <mask> me its <mask> and <mask>",
                "query": "SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "cre_Theme_park"
            },
            {
                "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
                "masked_template": "What is the <mask> and id of the <mask> that has the <mask> number of <mask> in <mask>",
                "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "Find the full name of employee who supported the most number of customers.",
                "masked_template": "Find the <mask> name of <mask> who <mask> the most number of <mask>",
                "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the type and id of the organization that has the most research staff?",
                "masked_template": "What is the <mask> and id of the <mask> that has the most <mask>",
                "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the first and last name of the faculty who has the most students?",
                "masked_template": "What are the <mask> and <mask> name of the <mask> who has the most <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Give me the the first and last name of the faculty who advises the most students.",
                "masked_template": "<mask> me the the <mask> and <mask> name of the <mask> who <mask> the most <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
                "masked_template": "What is the <mask> and id of the <mask> which has the most number of <mask>",
                "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_grants_for_research"
            },
            {
                "question": "What are the code and description of the most frequent behavior incident type?",
                "masked_template": "What are the <mask> and <mask> of the most <mask>",
                "query": "SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Show the id and details of the investor that has the largest number of transactions.",
                "masked_template": "Show the id and <mask> of the <mask> that has the <mask> number of <mask>",
                "query": "SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Find the id and first name of the student that has the most number of assessment notes?",
                "masked_template": "Find the id and <mask> name of the <mask> that has the most number of <mask>",
                "query": "SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
                "masked_template": "Find the ids and <mask> names of the 3 <mask> that have the most number of <mask>",
                "query": "SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "What is the first and last name of the faculty participating in the most activities?",
                "masked_template": "What is the <mask> and <mask> name of the <mask> in the most <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
                "masked_template": "Find the <mask> and <mask> name of the <mask> who is <mask> in the <mask> number of <mask>",
                "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Find the id and last name of the student that has the most behavior incidents?",
                "masked_template": "Find the id and <mask> name of the <mask> that has the most <mask>",
                "query": "SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
                "masked_template": "Which <mask> is <mask> in <mask> the most number of <mask> List the <mask> id and <mask>",
                "query": "SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "assets_maintenance"
            }
        ],
        "best_hyp": "What is the name and id for the semesters with most number of students enrolled?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name and id of the semesters that have the most students enrolled?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Schuppe'",
        "proc_query": "( <col> cell mobile number </col> ) that belongs to ( <tab> students </tab> ) , that have ( ( ( <col> first name </col> ) equal to ( <val> Timmothy </val> ) ) and ( ( <col> last name </col> ) equal to ( <val> Schuppe </val> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "Which cell phone number does student Timmothy Schuppe live in?",
            "Which cell phone number has any student who is a student and living in the city of Schuppe?",
            "List the cell phone numbers ids for any students with the first name Timmothy and the last name Schuppe",
            "What is the cell phone number of the student with first name as Timmothy and last name as Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student with first name as Timmothy and last name as Schuppe?",
            "What is the cell phone number of students with first name as Timmothy and last name as Schuppe?",
            "What is the the cell phone number of student Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "In which cell phone number does student Timmothy Schuppe live?",
            "What is the cell phone number of student Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What are the cell phone numbers of students with first name Timmothy and last name Schuppe?",
            "What are the cell phone numbers for students of the first name Timmothy and last name Schuppe?",
            "Find the number of cell phone numbers used by the student named Timmothy Schuppe.",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "When did students with first name as Timmothy and last name as Schuppe get a cell phone number?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "What is the cell phone number of the student with first name as Timmothy and last name as Schuppe?",
            "Return the cell phone number of students with first name as Timmothy and last name as Schuppe.",
            "What is the cell phone number of the student named Timmothy Schuppe?",
            "How old is the student named Timmothy Schuppe?",
            "What is the cell phone number of the student named Timmothy Schuppe?"
        ],
        "templates": [
            "",
            {
                "question": "What is the company where Eduardo Martins is a customer?",
                "masked_template": "What is the <mask> is a <mask>",
                "query": "SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "When did the staff member named Janessa Sawayn join the company?",
                "masked_template": "<mask> did the <mask> named <mask> the <mask>",
                "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "Eduardo Martins is a customer at which company?",
                "masked_template": "<mask> is a <mask> at which <mask>",
                "query": "SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the age of student Linda Smith?",
                "masked_template": "What is the age of <mask>",
                "query": "SELECT Age FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "What is the gender of the student Linda Smith?",
                "masked_template": "What is the <mask> of the <mask>",
                "query": "SELECT Sex FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "Which city does student Linda Smith live in?",
                "masked_template": "Which <mask> in?",
                "query": "SELECT city_code FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "Which college has any student who is a goalie and succeeded in the tryout.",
                "masked_template": "Which <mask> has any <mask> who is a <mask> and <mask> in the <mask>",
                "query": "SELECT cName FROM tryout WHERE decision = 'yes' AND pPos = 'goalie'",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "List the document ids for any documents with the status code done and the type code paper.",
                "masked_template": "List the <mask> ids for any <mask> with the <mask> and the <mask>",
                "query": "SELECT document_id FROM Documents WHERE document_status_code = 'done' AND document_type_code = 'Paper'",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "When did the staff member with first name as Janessa and last name as Sawayn leave the company?",
                "masked_template": "<mask> did the <mask> with <mask> name as <mask> and <mask> name as <mask> the <mask>",
                "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "When did the staff member Janessa Sawayn leave the company?",
                "masked_template": "<mask> did the <mask> the <mask>",
                "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?",
                "masked_template": "What is the <mask> of the <mask> with <mask> name <mask> and <mask> name <mask>",
                "query": "SELECT email_address FROM Students WHERE first_name = 'Emma' AND last_name = 'Rohan'",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "What is the nickname of staff with first name as Janessa and last name as Sawayn?",
                "masked_template": "What is the <mask> of <mask> with <mask> name as <mask> and <mask> name as <mask>",
                "query": "SELECT nickname FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What is the the phone number of Nancy Edwards?",
                "masked_template": "What is the the <mask> number of <mask>",
                "query": "SELECT phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What country does Roberto Almeida live?",
                "masked_template": "What <mask>",
                "query": "SELECT country FROM customers WHERE first_name = 'Roberto' AND last_name = 'Almeida'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "In which country does Roberto Almeida?",
                "masked_template": "In which <mask>",
                "query": "SELECT country FROM customers WHERE first_name = 'Roberto' AND last_name = 'Almeida'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the address of employee Nancy Edwards?",
                "masked_template": "What is the <mask> of <mask>",
                "query": "SELECT address FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is Nancy Edwards's address?",
                "masked_template": "What is <mask>",
                "query": "SELECT address FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?",
                "masked_template": "What are the <mask> of <mask> of <mask> with <mask> and <mask>",
                "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category = 'Best Song' AND RESULT = 'Awarded'",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What are the rooms for members of the faculty who are professors and who live in building NEB?",
                "masked_template": "What are the <mask> for <mask> of the <mask> who are <mask> and who <mask> in <mask>",
                "query": "SELECT Room FROM FACULTY WHERE Rank = 'Professor' AND Building = 'NEB'",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.",
                "masked_template": "Find the number of <mask> in the <mask> by a <mask> ROY <mask>",
                "query": "SELECT kids FROM Reservations WHERE FirstName = 'ROY' AND LastName = 'SWEAZY'",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What college has a student who successfully made the team in the role of a goalie?",
                "masked_template": "What <mask> has a <mask> who <mask> the <mask> in the <mask> of a <mask>",
                "query": "SELECT cName FROM tryout WHERE decision = 'yes' AND pPos = 'goalie'",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "When did customer with first name as Carole and last name as Bernhard became a customer?",
                "masked_template": "<mask> did <mask> with <mask> name as <mask> and <mask> name as <mask> a <mask>",
                "query": "SELECT date_became_customer FROM Customers WHERE first_name = 'Carole' AND last_name = 'Bernhard'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "When did Carole Bernhard first become a customer?",
                "masked_template": "<mask> did <mask> a <mask>",
                "query": "SELECT date_became_customer FROM Customers WHERE first_name = 'Carole' AND last_name = 'Bernhard'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What are the names of all male British artists?",
                "masked_template": "What are the names of all <mask>",
                "query": "SELECT artist_name FROM artist WHERE country = 'UK' AND gender = 'Male'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "What are the names of artists who are Male and are from UK?",
                "masked_template": "What are the names of <mask> who are <mask> and are <mask> UK?",
                "query": "SELECT artist_name FROM artist WHERE country = 'UK' AND gender = 'Male'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?",
                "masked_template": "What is the <mask> of the <mask> with <mask> name as <mask> and <mask> name as <mask>",
                "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".",
                "masked_template": "Return the <mask> of <mask> to <mask> that had the <mask> and <mask>",
                "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category = 'Best Song' AND RESULT = 'Awarded'",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What is the date of birth for the staff member named Janessa Sawayn?",
                "masked_template": "What is the <mask> of <mask> for the <mask> named <mask>",
                "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "How old is the doctor named Zach?",
                "masked_template": "How old is the <mask> named <mask>",
                "query": "SELECT age FROM Person WHERE job = 'doctor' AND name = 'Zach'",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "What is the nickname of the employee named Janessa Sawayn?",
                "masked_template": "What is the <mask> of the <mask> named <mask>",
                "query": "SELECT nickname FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            }
        ],
        "best_hyp": "What is the cell phone number of the student named Timmothy Schuppe?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the cell phone number of the student named Timmothy Schuppe?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Michelleburgh'",
        "proc_query": "( <col> zip postcode </col> ) that belongs to ( <tab> addresses </tab> ) , that have ( ( <col> city </col> ) equal to ( <val> Michelleburgh </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "Find the zip code of the address in the city of Michelleburgh.",
            "Find the zip code of the city of Michelleburgh.",
            "What is the zip code of the city named Michelleburgh?",
            "What is the zip code of the city of Michelleburgh?",
            "Find the zip code of the city of Michelleburgh.",
            "What are the zip codes of all cities in the city of Michelleburgh?",
            "Find the zip code of all addresses in city Michelleburgh.",
            "What is the zip code for the address with city \"Michelleburgh\"?",
            "Find the zip code of the address Michelleburgh.",
            "Which zip codes have the address with city \"Michelleburgh\"? Find their zip codes.",
            "Return the zip code numbers of the address with city \"Michelleburgh\".",
            "Which zip codes have cities in Michelleburgh? Give me their zip codes.",
            "Show the zip code of the city of Michelleburgh.",
            "Show the zip code of the city named Michelleburgh.",
            "What are the zip codes of all the addresses in Michelleburgh city?",
            "Return the zip code of Michelleburgh for all the addresses with city code \"Michelleburgh\".",
            "What are zip codes of all the cities whose city is Michelleburgh?",
            "What is the zip code of address of city whose city is Michelleburgh?",
            "What is the zip code of the address Michelleburgh?",
            "What are the zip codes of cities whose city is Michelleburgh?",
            "What are the zip codes of addresses that are in city Michelleburgh?",
            "What is the zip code of the city the address Michelleburgh belongs to?",
            "What is the zip code of the city of Michelleburgh?",
            "Find the zip code of the address in city Michelleburgh.",
            "Show the zip code for city name Michelleburgh.",
            "What are the zip codes of all cities in Michelleburgh?",
            "How many zip codes is Michelleburgh city located in?",
            "Tell us the zip code of the city named Michelleburgh.",
            "Show zip code for all the cities in Michelleburgh.",
            "What are the zip code ids of all the cities in Michelleburgh?",
            "Find the zip code corresponding to addresses who live in the city of Michelleburgh."
        ],
        "templates": [
            "",
            {
                "question": "Find the name of dorms only for female (F gender).",
                "masked_template": "Find the name of <mask> for <mask> (F <mask>",
                "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "What is the location of the club named \"Tennis Club\"?",
                "masked_template": "What is the <mask> of the <mask> named <mask>",
                "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
                "ted": 0.0,
                "db_id": "club_1"
            },
            {
                "question": "What is the description of the club \"Pen and Paper Gaming\"?",
                "masked_template": "What is the <mask> of the <mask> and <mask>",
                "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
                "ted": 0.0,
                "db_id": "club_1"
            },
            {
                "question": "Find the description of the club \"Pen and Paper Gaming\".",
                "masked_template": "Find the <mask> of the <mask> and <mask>",
                "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
                "ted": 0.0,
                "db_id": "club_1"
            },
            {
                "question": "What are the names of all movies directed by Steven Spielberg?",
                "masked_template": "What are the names of all <mask> by <mask>",
                "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "Find the titles of all movies directed by steven spielberg.",
                "masked_template": "Find the <mask> of all <mask> by <mask>",
                "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
                "masked_template": "What is the <mask> for the <mask> with <mask>",
                "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "Find the description of the club called \"Tennis Club\".",
                "masked_template": "Find the <mask> of the <mask>",
                "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
                "ted": 0.0,
                "db_id": "club_1"
            },
            {
                "question": "Which employees have the role with code \"HR\"? Find their names.",
                "masked_template": "Which <mask> have the <mask> with <mask> Find their <mask>",
                "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
                "masked_template": "Return the <mask> numbers of the <mask> with <mask>",
                "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
                "masked_template": "Which <mask> have <mask> me their <mask>",
                "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "Show the names of all the employees with role \"HR\".",
                "masked_template": "Show the names of all the <mask> with <mask>",
                "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "Show the id of the employee named Ebba.",
                "masked_template": "Show the id of the <mask> named <mask>",
                "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the id of all the files in mp3 format?",
                "masked_template": "What are the id of all the <mask> in mp3 <mask>",
                "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "Return the date of birth for all the guests with gender code \"Male\".",
                "masked_template": "Return the <mask> of <mask> for all the <mask> with <mask>",
                "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
                "masked_template": "What are <mask> of <mask> of all the <mask> whose <mask> is <mask>",
                "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
                "ted": 0.0,
                "db_id": "apartment_rentals"
            },
            {
                "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
                "masked_template": "What is the <mask> of <mask> of <mask> whose <mask> is <mask>",
                "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What is the id for the employee called Ebba?",
                "masked_template": "What is the id for the <mask>",
                "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the id of songs whose format is mp3.",
                "masked_template": "What are the id of <mask> whose <mask> is <mask>",
                "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
                "masked_template": "<mask> are the <mask> of <mask> who are <mask> as <mask>",
                "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What is the code of the school where the accounting department belongs to?",
                "masked_template": "What is the <mask> of the <mask> the <mask> to?",
                "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "What is the school code of the accounting department?",
                "masked_template": "What is the <mask> of the <mask>",
                "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
                "ted": 0.0,
                "db_id": "college_1"
            },
            {
                "question": "Find the department name that is in Building \"Mergenthaler\".",
                "masked_template": "Find the <mask> name that is in <mask>",
                "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Show the description for role name \"Proof Reader\".",
                "masked_template": "Show the <mask> for <mask> name <mask>",
                "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the names of all songs in English?",
                "masked_template": "What are the names of all <mask> in <mask>",
                "query": "SELECT song_name FROM song WHERE languages = 'english'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "How many milliseconds long is Fast As a Shark?",
                "masked_template": "How many <mask> is <mask> As a <mask>",
                "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "Where us the club named \"Tennis Club\" located?",
                "masked_template": "<mask> us the <mask> named <mask>",
                "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
                "ted": 0.0,
                "db_id": "club_1"
            },
            {
                "question": "Show ids for all the male faculty.",
                "masked_template": "Show ids for all the <mask>",
                "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are the faculty ids of all the male faculty members?",
                "masked_template": "What are the <mask> ids of all the <mask>",
                "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
                "masked_template": "Find the <mask> to <mask> who <mask> in the <mask> of <mask>",
                "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
                "ted": 0.0,
                "db_id": "chinook_1"
            }
        ],
        "best_hyp": "What is the zip code of the city named Michelleburgh?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Find the zip code of the address in the city of Michelleburgh.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "proc_query": "( <col> id </col> ) that belongs to ( <tab> high schooler </tab> ), and except that ( ( <col> student id </col> ) that belongs to ( <tab> friend </tab> ))",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the ids of the students who are not friends with any student?",
            "Find the id of students who are not friends with any friends.",
            "Which students do not have friends for any age? Tell me their ids.",
            "Show ids for the students who don't have any friends.",
            "What are the ids of the students who do not have any friends?",
            "What are the ids of all students who are not friends?",
            "Show ids of students who are not friends.",
            "Show the ids of the students who are not friends for any time.",
            "Show ids who do not have any friends.",
            "What are the ids of students who are not friends?",
            "Who is the student that has no friends?",
            "Show the ids of the students who are not friends with any friends.",
            "What are the ids of all students who do not have friends?",
            "Show ids for all students who don't have a friend.",
            "What are the ids of all students that don't have friends?",
            "Which students do not have any friends? Find their ids.",
            "Return the ids of students that do not have friends.",
            "What are the ids of students who do not have friends?",
            "What are the ids of students who don't have any friends?",
            "Which students are not friends with any student?",
            "What are the ids for students who do not have a friend?",
            "What are the ids of all students who are not friends?",
            "Show ids who do not have a friend.",
            "What are the ids of students who are not friends?",
            "Which cmi id is not related to any student?",
            "Find the id of the students that do not have any friends.",
            "What are the ids of the students who are not involved in any activities?",
            "Which students are not a friend of friends? List the student id.",
            "Which students do not have any friends? Find their ids.",
            "Show the ids of all students who don't have any friends.",
            "What are the ids of the students who are not friends with any student?"
        ],
        "templates": [
            "",
            {
                "question": "Find the id of instructors who didn't teach any courses?",
                "masked_template": "Find the id of <mask> who <mask> any <mask>",
                "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
                "masked_template": "Which <mask> do not <mask> for any <mask> me their <mask>",
                "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "Show ids for the faculty members who don't advise any student.",
                "masked_template": "Show ids for the <mask> who <mask> any <mask>",
                "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are the ids of the faculty members who do not advise any student.",
                "masked_template": "What are the ids of the <mask> who do not <mask> any <mask>",
                "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are the ids of all students who don't play sports?",
                "masked_template": "What are the ids of all <mask> who <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "Show ids of students who don't play video game.",
                "masked_template": "Show ids of <mask> who <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "Show the ids of the employees who don't authorize destruction for any document.",
                "masked_template": "Show the ids of the <mask> who <mask> for any <mask>",
                "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "Show student ids who don't have any sports.",
                "masked_template": "Show <mask> ids who <mask> have any <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "What are the ids of courses without prerequisites?",
                "masked_template": "What are the ids of <mask>",
                "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Who is the person that has no friend?",
                "masked_template": "Who is the <mask> that has no <mask>",
                "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "Show the ids of the faculty who don't participate in any activity.",
                "masked_template": "Show the ids of the <mask> who <mask> in any <mask>",
                "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "What are the names of all people who do not have friends?",
                "masked_template": "What are the names of all <mask> who do not have <mask>",
                "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "Show ids for all employees who don't have a certificate.",
                "masked_template": "Show ids for all <mask> who <mask> have a <mask>",
                "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "What are the ids of all employees that don't have certificates?",
                "masked_template": "What are the ids of all <mask> that <mask> have <mask>",
                "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Which employees do not destroy any document? Find their employee ids.",
                "masked_template": "Which <mask> do not <mask> any <mask> Find their <mask>",
                "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "Return the ids of documents that do not have expenses.",
                "masked_template": "Return the ids of <mask> that do not have <mask>",
                "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "What are the ids of documents which don't have expense budgets?",
                "masked_template": "What are the ids of <mask> which <mask> have <mask>",
                "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "What are the student ids of students who don't have any allergies?",
                "masked_template": "What are the <mask> ids of <mask> who <mask> have any <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Which students are unaffected by allergies?",
                "masked_template": "Which <mask> are <mask> by <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "What are the customer ids for customers who do not have an account?",
                "masked_template": "What are the <mask> ids for <mask> who do not have an <mask>",
                "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "What are the ids of all students who are not video game players?",
                "masked_template": "What are the ids of all <mask> who are not <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "Show customer ids who don't have an account.",
                "masked_template": "Show <mask> ids who <mask> have an <mask>",
                "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
                "ted": 0.0,
                "db_id": "customers_and_invoices"
            },
            {
                "question": "What are the ids of instructors who didnt' teach?",
                "masked_template": "What are the ids of <mask> who <mask>",
                "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "Which cmi cross reference id is not related to any parking taxes?",
                "masked_template": "Which cmi <mask> id is not <mask> to any <mask>",
                "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines",
                "ted": 0.0,
                "db_id": "local_govt_mdm"
            },
            {
                "question": "Find the id of the courses that do not have any prerequisite?",
                "masked_template": "Find the id of the <mask> that do not have any <mask>",
                "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
                "ted": 0.0,
                "db_id": "college_2"
            },
            {
                "question": "What are the ids of the students who are not involved in any activity",
                "masked_template": "What are the ids of the <mask> who are not <mask> in any <mask>",
                "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Which organizations are not a parent organization of others? List the organization id.",
                "masked_template": "Which <mask> are not a <mask> of <mask> List the <mask> id.",
                "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
                "ted": 0.0,
                "db_id": "local_govt_and_lot"
            },
            {
                "question": "Which faculty do not participate in any activity? Find their faculty ids.",
                "masked_template": "Which <mask> do not <mask> in any <mask> Find their <mask>",
                "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show the ids of all employees who don't destroy any document.",
                "masked_template": "Show the ids of all <mask> who <mask> any <mask>",
                "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
                "ted": 0.0,
                "db_id": "cre_Doc_Tracking_DB"
            },
            {
                "question": "What are the names of the customers and staff members?",
                "masked_template": "What are the names of the <mask> and <mask>",
                "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
                "ted": 0.05555555555555555,
                "db_id": "insurance_and_eClaims"
            }
        ],
        "best_hyp": "What are the ids of the students who do not have any friends?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the ids of the students who are not friends with any student?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Transcripts",
        "proc_query": "( the number of ( all items ) ) that belongs to ( <tab> transcripts </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "How many transcripts are there?",
            "Count the number of transcripts.",
            "How many transcripts are there?",
            "How many transcripts are there in total?",
            "How many transcripts do we have?",
            "Count the total number of transcripts.",
            "What is the total number of transcripts?",
            "How many transcripts are there?",
            "How many transcripts do we have?",
            "Show the number of transcripts.",
            "Find the number of transcripts in total",
            "What is the number of transcripts?",
            "How many transcripts are there?",
            "How many transcripts are there in total?",
            "Find the total number of transcripts.",
            "How many transcripts are there in total?",
            "How many CSU transcripts are there?",
            "Return the total number of distinct transcripts.",
            "Count the number of total transcripts.",
            "How many transcripts are there?",
            "Count how many transcripts are there.",
            "How many transcripts are there?",
            "How many transcripts are there?",
            "Find the number of transcripts.",
            "Find the number of distinct transcripts.",
            "How many transcripts are there?",
            "What is the total number of transcripts in total?",
            "Count the number of transcripts.",
            "How many transcripts are there?",
            "How many transcripts are there?",
            "How many distinct transcripts are stored in by users?"
        ],
        "templates": [
            "",
            {
                "question": "Count the number of budget codes.",
                "masked_template": "Count the number of <mask>",
                "query": "SELECT count( * ) FROM Ref_budget_codes",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "How many schools are there?",
                "masked_template": "How many <mask> are <mask>",
                "query": "SELECT count( * ) FROM school",
                "ted": 0.0,
                "db_id": "school_finance"
            },
            {
                "question": "How many counties are there in total?",
                "masked_template": "How many <mask> are there in <mask>",
                "query": "SELECT count( * ) FROM county",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "How many statements do we have?",
                "masked_template": "How many <mask> do we <mask>",
                "query": "SELECT count( * ) FROM Statements",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Count the total number of counties.",
                "masked_template": "Count the total number of <mask>",
                "query": "SELECT count( * ) FROM county",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What is the total number of faculty members?",
                "masked_template": "What is the total number of <mask>",
                "query": "SELECT count( * ) FROM Faculty",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "How many video games exist?",
                "masked_template": "How many <mask>",
                "query": "SELECT count( * ) FROM Video_games",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "How many video games do you have?",
                "masked_template": "How many <mask> do you <mask>",
                "query": "SELECT count( * ) FROM Video_games",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "Show the number of trains",
                "masked_template": "Show the number of <mask>",
                "query": "SELECT count( * ) FROM train",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "Find the number of students in total.",
                "masked_template": "Find the number of <mask> in <mask>",
                "query": "SELECT count( * ) FROM STUDENT",
                "ted": 0.0,
                "db_id": "voter_2"
            },
            {
                "question": "What is the number of technicians?",
                "masked_template": "What is the number of <mask>",
                "query": "SELECT count( * ) FROM technician",
                "ted": 0.0,
                "db_id": "machine_repair"
            },
            {
                "question": "how many ships are there?",
                "masked_template": "how many <mask> are <mask>",
                "query": "SELECT count( * ) FROM ship",
                "ted": 0.0,
                "db_id": "ship_1"
            },
            {
                "question": "How many aircrafts exist in the database?",
                "masked_template": "How many <mask> in the <mask>",
                "query": "SELECT count( * ) FROM Aircraft",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Find the total number of catalog contents.",
                "masked_template": "Find the total number of <mask>",
                "query": "SELECT count( * ) FROM catalog_contents",
                "ted": 0.0,
                "db_id": "product_catalog"
            },
            {
                "question": "How many products are there in the records?",
                "masked_template": "How many <mask> are there in the <mask>",
                "query": "SELECT count( * ) FROM catalog_contents",
                "ted": 0.0,
                "db_id": "product_catalog"
            },
            {
                "question": "How many CSU campuses are there?",
                "masked_template": "How many CSU <mask> are <mask>",
                "query": "SELECT count( * ) FROM campuses",
                "ted": 0.0,
                "db_id": "csu_1"
            },
            {
                "question": "Return the total number of distinct customers.",
                "masked_template": "Return the total number of distinct <mask>",
                "query": "SELECT count( * ) FROM customers",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "Count the number of total papers.",
                "masked_template": "Count the number of total <mask>",
                "query": "SELECT count( * ) FROM papers",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "How many staff in total?",
                "masked_template": "How many <mask> in <mask>",
                "query": "SELECT count( * ) FROM Staff",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "Count how many appointments have been made in total.",
                "masked_template": "Count how many <mask> have <mask> in <mask>",
                "query": "SELECT count( * ) FROM appointment",
                "ted": 0.0,
                "db_id": "hospital_1"
            },
            {
                "question": "How many followers does each user have?",
                "masked_template": "How many <mask> each <mask>",
                "query": "SELECT count( * ) FROM follows",
                "ted": 0.0,
                "db_id": "twitter_1"
            },
            {
                "question": "How many papers are published in total?",
                "masked_template": "How many <mask> are <mask> in <mask>",
                "query": "SELECT count( * ) FROM papers",
                "ted": 0.0,
                "db_id": "icfp_1"
            },
            {
                "question": "Find the number of reviews.",
                "masked_template": "Find the number of <mask>",
                "query": "SELECT count( * ) FROM review",
                "ted": 0.0,
                "db_id": "epinions_1"
            },
            {
                "question": "Find the number of distinct amenities.",
                "masked_template": "Find the number of distinct <mask>",
                "query": "SELECT count( * ) FROM dorm_amenity",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "How many dorms are in the database?",
                "masked_template": "How many <mask> are in the <mask>",
                "query": "SELECT count( * ) FROM dorm",
                "ted": 0.0,
                "db_id": "dorm_1"
            },
            {
                "question": "What is the total number of rooms available in this inn?",
                "masked_template": "What is the total number of <mask> in <mask>",
                "query": "SELECT count( * ) FROM Rooms",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Count the number of documents with expenses.",
                "masked_template": "Count the number of <mask> with <mask>",
                "query": "SELECT count( * ) FROM Documents_with_expenses",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "How many documents have expenses?",
                "masked_template": "How many <mask> have <mask>",
                "query": "SELECT count( * ) FROM Documents_with_expenses",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "How many council taxes are collected for renting arrears ?",
                "masked_template": "How many <mask> are <mask> for <mask> ?",
                "query": "SELECT count( * ) FROM rent_arrears",
                "ted": 0.0,
                "db_id": "local_govt_mdm"
            },
            {
                "question": "How many distinct courses are enrolled in by students?",
                "masked_template": "How many distinct <mask> are <mask> in by <mask>",
                "query": "SELECT count( course_id ) FROM Student_Course_Enrolment",
                "ted": 0.0,
                "db_id": "e_learning"
            }
        ],
        "best_hyp": "How many transcripts are there?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "How many transcripts are there?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "proc_query": "( <col> student id </col> ) , ( the number of ( all items ) ) that belongs to ( <tab> friend </tab> ) , grouped by ( <col> student id </col> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "Show all student ids and the number of friends of each student.",
            "For each student id, return the student id and the count of friends with that student.",
            "display the student id and count of friends in each student.",
            "Show each student id and the number of friends they have.",
            "How many friends are there for each student? List the student id and the count.",
            "Show the different student ids and the number of friends they have.",
            "List all student ids along with the number of friends shared by each student.",
            "Show different student ids along with the number of friends of each student.",
            "For each student id, how many friends are there?",
            "Show different ids of students and the number of friends of each student.",
            "What are the student ids and how many friends correspond to each student id?",
            "Show all student ids and the number of friends in each student.",
            "What are the number of friends for each student?",
            "Find the number of friends for each student.",
            "What are the different student ids and how many friends are there for each student?",
            "Show student ids and the number of friends in each student.",
            "Show different ids of students along with the number of friends with each student.",
            "Find the number of friends for each student.",
            "How many friends are there for each student?",
            "How many friends correspond to each student id?",
            "Please show the student ids and the number of friends with each student.",
            "List all student ids and the number of friends in each student.",
            "For each student id, what are the ids and how many friends are there?",
            "display the student ID and number of friends for each student.",
            "For each student id, report the total number of friends shared by him or her.",
            "Show all student IDs and corresponding number of friends.",
            "Find all student ids of friends and number of friends.",
            "Show the student id and number of friends in each student.",
            "What are the different ids of students and how many friends correspond to them?",
            "Show the different student ids and number of friends at each student.",
            "For each student id, show the student id number and find how many friends are there."
        ],
        "templates": [
            "",
            {
                "question": "For each denomination, return the denomination and the count of schools with that denomination.",
                "masked_template": "For each <mask> return the <mask> and the count of <mask> with that <mask>",
                "query": "SELECT Denomination , COUNT( * ) FROM school GROUP BY Denomination",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Give the country id and corresponding count of cities in each country.",
                "masked_template": "<mask> the <mask> id and <mask> count of <mask> in each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "Show each location and the number of cinemas there.",
                "masked_template": "Show each <mask> and the number of <mask>",
                "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "How many hosts does each nationality have? List the nationality and the count.",
                "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Show the different countries and the number of members from each.",
                "masked_template": "Show the different <mask> and the number of <mask>",
                "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
                "ted": 0.0,
                "db_id": "decoration_competition"
            },
            {
                "question": "List all directors along with the number of films directed by each director.",
                "masked_template": "List all <mask> with the number of <mask> by each <mask>",
                "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
                "ted": 0.0,
                "db_id": "cinema"
            },
            {
                "question": "Show different nationalities along with the number of hosts of each nationality.",
                "masked_template": "Show different <mask> with the number of <mask> of each <mask>",
                "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "For each type, how many ships are there?",
                "masked_template": "For each <mask> how many <mask> are <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "Show different types of ships and the number of ships of each type.",
                "masked_template": "Show different <mask> of <mask> and the number of <mask> of each <mask>",
                "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "ship_mission"
            },
            {
                "question": "What are the allergy types and how many allergies correspond to each one?",
                "masked_template": "What are the <mask> and how many <mask> to each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Show all allergy types and the number of allergies in each type.",
                "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "What are the number of rooms for each bed type?",
                "masked_template": "What are the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Find the number of rooms for each bed type.",
                "masked_template": "Find the number of <mask> for each bed <mask>",
                "query": "SELECT bedType , count( * ) FROM Rooms GROUP BY bedType",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What are the different budget type codes, and how many documents are there for each?",
                "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Show budget type codes and the number of documents in each budget type.",
                "masked_template": "Show <mask> and the number of <mask> in each <mask>",
                "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
                "ted": 0.0,
                "db_id": "cre_Docs_and_Epenses"
            },
            {
                "question": "Show different carriers of phones together with the number of phones with each carrier.",
                "masked_template": "Show different <mask> of <mask> with the number of <mask> with each <mask>",
                "query": "SELECT Carrier , COUNT( * ) FROM phone GROUP BY Carrier",
                "ted": 0.0,
                "db_id": "phone_market"
            },
            {
                "question": "find the number of medicines offered by each trade.",
                "masked_template": "find the number of <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "How many medicines are offered by each trade name?",
                "masked_template": "How many <mask> are <mask> by each <mask>",
                "query": "SELECT trade_name , count( * ) FROM medicine GROUP BY trade_name",
                "ted": 0.0,
                "db_id": "medicine_enzyme_interaction"
            },
            {
                "question": "How many counties correspond to each police force?",
                "masked_template": "How many <mask> to each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "Please show the police forces and the number of counties with each police force.",
                "masked_template": "<mask> show the <mask> and the number of <mask> with each <mask>",
                "query": "SELECT Police_force , COUNT( * ) FROM county_public_safety GROUP BY Police_force",
                "ted": 0.0,
                "db_id": "county_public_safety"
            },
            {
                "question": "List all headquarters and the number of companies in each headquarter.",
                "masked_template": "List all <mask> and the number of <mask> in each <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
                "masked_template": "For each <mask> what are the <mask> and how many <mask> are <mask>",
                "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
                "ted": 0.0,
                "db_id": "gas_company"
            },
            {
                "question": "display the country ID and number of cities for each country.",
                "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
                "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
                "ted": 0.0,
                "db_id": "hr_1"
            },
            {
                "question": "For each advisor, report the total number of students advised by him or her.",
                "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
                "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
                "ted": 0.0,
                "db_id": "voter_2"
            },
            {
                "question": "Show all majors and corresponding number of students.",
                "masked_template": "Show all <mask> and <mask> number of <mask>",
                "query": "SELECT major , count( * ) FROM Student GROUP BY major",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Find all types of store and number of them.",
                "masked_template": "Find all <mask> of <mask> and number of <mask>",
                "query": "SELECT TYPE , count( * ) FROM store GROUP BY TYPE",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "Show the race class and number of races in each class.",
                "masked_template": "Show the <mask> and number of <mask> in each <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "What are the different classes of races, and how many races correspond to each?",
                "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
                "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
                "ted": 0.0,
                "db_id": "race_track"
            },
            {
                "question": "Show the different headquarters and number of companies at each headquarter.",
                "masked_template": "Show the different <mask> and number of <mask> at each <mask>",
                "query": "SELECT Headquarters , COUNT( * ) FROM company GROUP BY Headquarters",
                "ted": 0.0,
                "db_id": "company_employee"
            },
            {
                "question": "For each classroom, show the classroom number and find how many students are using it.",
                "masked_template": "For each <mask> show the <mask> number and find how many <mask> are <mask> it.",
                "query": "SELECT classroom , count( * ) FROM list GROUP BY classroom",
                "ted": 0.0,
                "db_id": "student_1"
            }
        ],
        "best_hyp": "What are the different student ids and how many friends are there for each student?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "Show all student ids and the number of friends of each student.",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT avg( transcript_date ) FROM Transcripts",
        "proc_query": "( the average of ( <col> transcript date </col> ) ) that belongs to ( <tab> transcripts </tab> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the average date of all the transcripts?",
            "What is the average date of transcripts?",
            "Compute the average number of dates for transcripts.",
            "Compute the average date of transcripts.",
            "What is the average date of all transcripts?",
            "How many times do the transcripts start on record?",
            "What is the average number of dates for transcripts?",
            "What is the average number of times a transcript was made?",
            "What is the average age for all transcripts in the record?",
            "What is the average date of the transcripts?",
            "Find the average date of the transcripts.",
            "What is the average date of all transcripts?",
            "Find the average date of all transcripts.",
            "What is the average number of transcripts?",
            "How many dates on each transcript have been made?",
            "What is the average date of the transcripts?",
            "Compute the average date of all the transcripts.",
            "What is the average date in the record of the transcripts?",
            "What is the average number of dates for a transcript?",
            "What is the average date of transcripts ordered in each record?",
            "What is the average date of all the transcripts?",
            "Find the average order of dates per transcript.",
            "Find the average date for a transcript.",
            "Compute the average date of the transcripts.",
            "Find the average number of dates for all transcripts.",
            "Show the average date of all transcripts.",
            "What is the average number of dates for an audio record?",
            "What is the average date per transcript?",
            "What is the average number of dates of all transcripts?",
            "What is the average date due for all the transcripts?",
            "What is the average number of dates per transcript?"
        ],
        "templates": [
            "",
            {
                "question": "What is the average enrollment of schools?",
                "masked_template": "What is the average <mask> of <mask>",
                "query": "SELECT avg( Enrollment ) FROM school",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Compute the average number of hosts for parties.",
                "masked_template": "<mask> the average number of <mask> for <mask>",
                "query": "SELECT avg( Number_of_hosts ) FROM party",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "Compute the average score of submissions.",
                "masked_template": "<mask> the average <mask> of <mask>",
                "query": "SELECT avg( Scores ) FROM submission",
                "ted": 0.0,
                "db_id": "workshop_paper"
            },
            {
                "question": "What is the average training hours of all players?",
                "masked_template": "What is the average <mask> of all <mask>",
                "query": "SELECT avg( HS ) FROM Player",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "How many hours do the players train on average?",
                "masked_template": "How many <mask> do the <mask> on <mask>",
                "query": "SELECT avg( HS ) FROM Player",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "What is the average number of hosts for parties?",
                "masked_template": "What is the average number of <mask> for <mask>",
                "query": "SELECT avg( Number_of_hosts ) FROM party",
                "ted": 0.0,
                "db_id": "party_host"
            },
            {
                "question": "What is the average number of years spent working as a journalist?",
                "masked_template": "What is the average number of <mask> as a <mask>",
                "query": "SELECT avg( Years_working ) FROM journalist",
                "ted": 0.0,
                "db_id": "news_report"
            },
            {
                "question": "What is the average age for all people in the table?",
                "masked_template": "What is the average age for all <mask> in the <mask>",
                "query": "SELECT avg( age ) FROM Person",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "What is the average balance in checking accounts?",
                "masked_template": "What is the average <mask> in <mask>",
                "query": "SELECT avg( balance ) FROM checking",
                "ted": 0.0,
                "db_id": "small_bank_1"
            },
            {
                "question": "Find the average checking balance.",
                "masked_template": "Find the average <mask>",
                "query": "SELECT avg( balance ) FROM checking",
                "ted": 0.0,
                "db_id": "small_bank_1"
            },
            {
                "question": "What is the average hours across all projects?",
                "masked_template": "What is the average <mask> all <mask>",
                "query": "SELECT avg( hours ) FROM projects",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "Find the average hours of all projects.",
                "masked_template": "Find the average <mask> of all <mask>",
                "query": "SELECT avg( hours ) FROM projects",
                "ted": 0.0,
                "db_id": "scientist_1"
            },
            {
                "question": "What is the average number of bank customers?",
                "masked_template": "What is the average number of <mask>",
                "query": "SELECT avg( no_of_customers ) FROM bank",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "How many students, on average, does each college have enrolled?",
                "masked_template": "How many <mask> on <mask> each <mask> have <mask>",
                "query": "SELECT avg( enr ) FROM College",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "What is the average enrollment number?",
                "masked_template": "What is the average <mask>",
                "query": "SELECT avg( enr ) FROM College",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "Compute the average price of all the products.",
                "masked_template": "<mask> the average <mask> of all the <mask>",
                "query": "SELECT avg( price ) FROM products",
                "ted": 0.0,
                "db_id": "manufactory_1"
            },
            {
                "question": "What is the average length in feet of the bridges?",
                "masked_template": "What is the average <mask> in <mask> of the <mask>",
                "query": "SELECT avg( length_feet ) FROM bridge",
                "ted": 0.0,
                "db_id": "architecture"
            },
            {
                "question": "What is the average number of gold medals for a club?",
                "masked_template": "What is the average number of <mask> for a <mask>",
                "query": "SELECT avg( Gold ) FROM club_rank",
                "ted": 0.0,
                "db_id": "sports_competition"
            },
            {
                "question": "What is the average amount of items ordered in each order?",
                "masked_template": "What is the average <mask> of <mask> ordered in each <mask>",
                "query": "SELECT avg( order_quantity ) FROM order_items",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "What is the average unit price of all the tracks?",
                "masked_template": "What is the average <mask> of all the <mask>",
                "query": "SELECT AVG( UnitPrice ) FROM TRACK",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "Find the average order quantity per order.",
                "masked_template": "Find the average order <mask> per <mask>",
                "query": "SELECT avg( order_quantity ) FROM order_items",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "Find the average unit price for a track.",
                "masked_template": "Find the average <mask> for a <mask>",
                "query": "SELECT AVG( UnitPrice ) FROM TRACK",
                "ted": 0.0,
                "db_id": "chinook_1"
            },
            {
                "question": "Take the average of the school enrollment.",
                "masked_template": "<mask> the average of the <mask>",
                "query": "SELECT avg( Enrollment ) FROM school",
                "ted": 0.0,
                "db_id": "school_player"
            },
            {
                "question": "Find the average number of customers cross all banks.",
                "masked_template": "Find the average number of <mask> all <mask>",
                "query": "SELECT avg( no_of_customers ) FROM bank",
                "ted": 0.0,
                "db_id": "loan_1"
            },
            {
                "question": "Show the average population of all counties.",
                "masked_template": "Show the average <mask> of all <mask>",
                "query": "SELECT avg( Population ) FROM county",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "What is the average number of international passengers for an airport?",
                "masked_template": "What is the average number of <mask> for an <mask>",
                "query": "SELECT avg( International_Passengers ) FROM airport",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What is the average pages per minute color?",
                "masked_template": "What is the average <mask> per <mask>",
                "query": "SELECT avg( pages_per_minute_color ) FROM product",
                "ted": 0.0,
                "db_id": "store_product"
            },
            {
                "question": "What is the average number of international passengers of all airports?",
                "masked_template": "What is the average number of <mask> of all <mask>",
                "query": "SELECT avg( International_Passengers ) FROM airport",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What is the average amount due for all the payments?",
                "masked_template": "What is the average <mask> due for all the <mask>",
                "query": "SELECT avg( amount_due ) FROM payments",
                "ted": 0.0,
                "db_id": "products_for_hire"
            },
            {
                "question": "What is the average number of pages per minute color?",
                "masked_template": "What is the average number of <mask> per <mask>",
                "query": "SELECT avg( pages_per_minute_color ) FROM product",
                "ted": 0.0,
                "db_id": "store_product"
            }
        ],
        "best_hyp": "What is the average date of all the transcripts?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the average date of all the transcripts?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler WHERE grade = 10",
        "proc_query": "( <col> name </col> ) that belongs to ( <tab> high schooler </tab> ) , that have ( ( <col> grade </col> ) equal to ( <val> 10 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the names of all the students in grade 10?",
            "Who are the students in grade 10?",
            "List the name of the students with grade 10.",
            "What is the name of the high schooler with grade 10?",
            "Find all the names of students whose grade is 11. What are the order of their names?",
            "Find the ids of all the students whose grade is 11.",
            "List all names of students with grade 10.",
            "What is the name of the high schooler with grade 10?",
            "Find the names of all students in grade 10.",
            "What are the names of all the students that are in grade 10?",
            "Find the name of students in grade 10.",
            "Which high schooler is grade 255 in?",
            "What are the names of the students in grade 10?",
            "What are the ids of the students who are in grade 10?",
            "What are the names of students in grade 10?",
            "What are the names of students in grade 10?",
            "Find the names of students in grade 10.",
            "Find the name of students in grade 10.",
            "What are the names of students in grade 10?",
            "Who is the oldest high schooler with grade 10?",
            "Find all the high school students in grade 10.",
            "What are the names of students in grade 10?",
            "What are the names of all the students in grade 10?",
            "What is the name of the high schooler with grade 10?",
            "What are the names of the students in grade 10?",
            "Who is the teacher of grade 1 in the school?",
            "Show the name of students in grade 10.",
            "Show ids for all students who have grade 10.",
            "What are the ids of all students who have grade 10?",
            "Show name for all students with grade 10.",
            "Find the names of students with grade 10."
        ],
        "templates": [
            "",
            {
                "question": "Who advises student 1004?",
                "masked_template": "Who <mask>",
                "query": "SELECT Advisor FROM Student WHERE StuID = 1004",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "List the document type code for the document with the id 2.",
                "masked_template": "List the <mask> for the <mask> with the id 2.",
                "query": "SELECT document_type_code FROM Documents WHERE document_id = 2",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "What is the receipt date of the document with id 3?",
                "masked_template": "What is the <mask> of the <mask> with id 3?",
                "query": "SELECT receipt_date FROM Documents WHERE document_id = 3",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "Find all the order items whose product id is 11. What are the order item ids?",
                "masked_template": "Find all the order <mask> whose <mask> id is 11. What are the order <mask>",
                "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "Find the ids of all the order items whose product id is 11.",
                "masked_template": "Find the ids of all the order <mask> whose <mask> id is 11.",
                "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
                "ted": 0.0,
                "db_id": "tracking_orders"
            },
            {
                "question": "List all names of courses with 1 credit?",
                "masked_template": "List all names of <mask> with 1 <mask>",
                "query": "SELECT CName FROM COURSE WHERE Credits = 1",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "What is draft detail of the document with id 7?",
                "masked_template": "What is <mask> of the <mask> with id 7?",
                "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "Find the names of all races held in 2017.",
                "masked_template": "Find the names of all <mask> in <mask>",
                "query": "SELECT name FROM races WHERE YEAR = 2017",
                "ted": 0.0,
                "db_id": "formula_1"
            },
            {
                "question": "What are the names of all the races that occurred in the year 2017?",
                "masked_template": "What are the names of all the <mask> that <mask> in the <mask>",
                "query": "SELECT name FROM races WHERE YEAR = 2017",
                "ted": 0.0,
                "db_id": "formula_1"
            },
            {
                "question": "Find the city with post code 255.",
                "masked_template": "Find the <mask> with <mask>",
                "query": "SELECT city FROM addresses WHERE zip_postcode = 255",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "Which city is post code 255 located in?",
                "masked_template": "Which <mask> is <mask> 255 <mask> in?",
                "query": "SELECT city FROM addresses WHERE zip_postcode = 255",
                "ted": 0.0,
                "db_id": "customers_and_addresses"
            },
            {
                "question": "What are the details of the car with id 1?",
                "masked_template": "What are the <mask> of the car with id 1?",
                "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What are the ids of the students who registered for course 301?",
                "masked_template": "What are the ids of the <mask> who <mask> for <mask>",
                "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What are the names of festivals held in year 2007?",
                "masked_template": "What are the names of <mask> in <mask>",
                "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR = 2007",
                "ted": 0.0,
                "db_id": "entertainment_awards"
            },
            {
                "question": "What are the first names of students in room 108?",
                "masked_template": "What are the <mask> names of <mask> in <mask>",
                "query": "SELECT firstname FROM list WHERE classroom = 108",
                "ted": 0.0,
                "db_id": "student_1"
            },
            {
                "question": "Find the first names of students studying in room 108.",
                "masked_template": "Find the <mask> names of <mask> in <mask>",
                "query": "SELECT firstname FROM list WHERE classroom = 108",
                "ted": 0.0,
                "db_id": "student_1"
            },
            {
                "question": "Give the phones for departments in room 268.",
                "masked_template": "<mask> the <mask> for <mask> in <mask>",
                "query": "SELECT DPhone FROM DEPARTMENT WHERE Room = 268",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "What are the phones of departments in Room 268?",
                "masked_template": "What are the <mask> of <mask> in <mask>",
                "query": "SELECT DPhone FROM DEPARTMENT WHERE Room = 268",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Who is the advisor of student with ID 1004?",
                "masked_template": "Who is the <mask> of <mask> with ID <mask>",
                "query": "SELECT Advisor FROM Student WHERE StuID = 1004",
                "ted": 0.0,
                "db_id": "allergy_1"
            },
            {
                "question": "Find all the campuses opened in 1958.",
                "masked_template": "Find all the <mask> in <mask>",
                "query": "SELECT campus FROM campuses WHERE YEAR = 1958",
                "ted": 0.0,
                "db_id": "csu_1"
            },
            {
                "question": "What are the campuses that opened in 1958?",
                "masked_template": "What are the <mask> that <mask> in <mask>",
                "query": "SELECT campus FROM campuses WHERE YEAR = 1958",
                "ted": 0.0,
                "db_id": "csu_1"
            },
            {
                "question": "What are the id of students who registered course 301?",
                "masked_template": "What are the id of <mask> who <mask>",
                "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What is the mail date of the document with id 7?",
                "masked_template": "What is the <mask> of the <mask> with id 7?",
                "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "What are the albums produced in year 2010?",
                "masked_template": "What are the <mask> in <mask>",
                "query": "SELECT * FROM Albums WHERE YEAR = 2010",
                "ted": 0.0,
                "db_id": "music_2"
            },
            {
                "question": "Who is the delegate of district 1 in the elections?",
                "masked_template": "Who is the <mask> of <mask> 1 in the <mask>",
                "query": "SELECT Delegate FROM election WHERE District = 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Show the delegate from district 1 in election.",
                "masked_template": "Show the <mask> 1 in <mask>",
                "query": "SELECT Delegate FROM election WHERE District = 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Show ids for all students who have advisor 1121.",
                "masked_template": "Show ids for all <mask> who have <mask>",
                "query": "SELECT StuID FROM Student WHERE Advisor = 1121",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "What are the ids of all students who have advisor number 1121?",
                "masked_template": "What are the ids of all <mask> who have <mask> number <mask>",
                "query": "SELECT StuID FROM Student WHERE Advisor = 1121",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "Show first name for all students with major 600.",
                "masked_template": "Show <mask> name for all <mask> with <mask>",
                "query": "SELECT Fname FROM Student WHERE Major = 600",
                "ted": 0.0,
                "db_id": "game_1"
            },
            {
                "question": "Find the last names of students with major 50.",
                "masked_template": "Find the <mask> names of <mask> with <mask> 50.",
                "query": "SELECT LName FROM STUDENT WHERE Major = 50",
                "ted": 0.0,
                "db_id": "voter_2"
            }
        ],
        "best_hyp": "What are the names of students in grade 10?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of all the students in grade 10?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select cell_mobile_number from students where first_name = 'Milton' and last_name = 'Osinski'",
        "proc_query": "( <col> cell mobile number </col> ) that belongs to ( <tab> students </tab> ) , that have ( ( ( <col> first name </col> ) equal to ( <val> Milton </val> ) ) and ( ( <col> last name </col> ) equal to ( <val> Osinski </val> ) ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the cell phone number of the student named Milton Osinski?",
            "What is the cell phone number of the student Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?",
            "Which cell phone number does student Milton Osinski live in?",
            "Which cell phone number has any student who is a student and living in the city Milton Osinski?",
            "List the cell phone numbers ids for any students with the first name Milton and the last name Osinski",
            "What is the cell phone number of the student with first name as Milton and last name as Osinski?",
            "What is the cell phone number of the student Milton Osinski?",
            "What is the cell phone number of the student with first name Milton and last name Osinski?",
            "What is the cell phone number of students with first name as Milton and last name as Osinski?",
            "What is the the cell phone number of student Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?",
            "In which cell phone number does Milton Osinski live?",
            "What is the cell phone number of student Milton Osinski?",
            "What is the cell phone number of student Milton Osinski?",
            "What are the cell phone numbers of students with first name Milton and last name Osinski?",
            "What are the cell phone numbers for students of the first name Milton and last name Osinski?",
            "Find the number of cell phones used in the study by a student named Milton Osinski.",
            "What cell phone number has a student who is the youngest in the line of a teacher named Milton Osinski?",
            "When did students with first name as Milton and last name as Osinski start using a cell phone?",
            "What is the cell phone number of the student named Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?",
            "What is the cell phone number of the student with first name Milton and last name Osinski?",
            "What is the cell phone number of the student with first name as Milton and last name as Osinski?",
            "Return the cell phone number of students with first name Milton and last name Osinski.",
            "What is the cell phone number of the student named Milton Osinski?",
            "How old is the student named Milton Osinski?",
            "What is the cell phone number of the student named Milton Osinski?"
        ],
        "templates": [
            "",
            {
                "question": "What is the company where Eduardo Martins is a customer?",
                "masked_template": "What is the <mask> is a <mask>",
                "query": "SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "When did the staff member named Janessa Sawayn join the company?",
                "masked_template": "<mask> did the <mask> named <mask> the <mask>",
                "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "Eduardo Martins is a customer at which company?",
                "masked_template": "<mask> is a <mask> at which <mask>",
                "query": "SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the age of student Linda Smith?",
                "masked_template": "What is the age of <mask>",
                "query": "SELECT Age FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "What is the gender of the student Linda Smith?",
                "masked_template": "What is the <mask> of the <mask>",
                "query": "SELECT Sex FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "Which city does student Linda Smith live in?",
                "masked_template": "Which <mask> in?",
                "query": "SELECT city_code FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'",
                "ted": 0.0,
                "db_id": "restaurant_1"
            },
            {
                "question": "Which college has any student who is a goalie and succeeded in the tryout.",
                "masked_template": "Which <mask> has any <mask> who is a <mask> and <mask> in the <mask>",
                "query": "SELECT cName FROM tryout WHERE decision = 'yes' AND pPos = 'goalie'",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "List the document ids for any documents with the status code done and the type code paper.",
                "masked_template": "List the <mask> ids for any <mask> with the <mask> and the <mask>",
                "query": "SELECT document_id FROM Documents WHERE document_status_code = 'done' AND document_type_code = 'Paper'",
                "ted": 0.0,
                "db_id": "cre_Doc_Control_Systems"
            },
            {
                "question": "When did the staff member with first name as Janessa and last name as Sawayn leave the company?",
                "masked_template": "<mask> did the <mask> with <mask> name as <mask> and <mask> name as <mask> the <mask>",
                "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "When did the staff member Janessa Sawayn leave the company?",
                "masked_template": "<mask> did the <mask> the <mask>",
                "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?",
                "masked_template": "What is the <mask> of the <mask> with <mask> name <mask> and <mask> name <mask>",
                "query": "SELECT email_address FROM Students WHERE first_name = 'Emma' AND last_name = 'Rohan'",
                "ted": 0.0,
                "db_id": "behavior_monitoring"
            },
            {
                "question": "What is the nickname of staff with first name as Janessa and last name as Sawayn?",
                "masked_template": "What is the <mask> of <mask> with <mask> name as <mask> and <mask> name as <mask>",
                "query": "SELECT nickname FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What is the the phone number of Nancy Edwards?",
                "masked_template": "What is the the <mask> number of <mask>",
                "query": "SELECT phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What country does Roberto Almeida live?",
                "masked_template": "What <mask>",
                "query": "SELECT country FROM customers WHERE first_name = 'Roberto' AND last_name = 'Almeida'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "In which country does Roberto Almeida?",
                "masked_template": "In which <mask>",
                "query": "SELECT country FROM customers WHERE first_name = 'Roberto' AND last_name = 'Almeida'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is the address of employee Nancy Edwards?",
                "masked_template": "What is the <mask> of <mask>",
                "query": "SELECT address FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What is Nancy Edwards's address?",
                "masked_template": "What is <mask>",
                "query": "SELECT address FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
                "ted": 0.0,
                "db_id": "store_1"
            },
            {
                "question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?",
                "masked_template": "What are the <mask> of <mask> of <mask> with <mask> and <mask>",
                "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category = 'Best Song' AND RESULT = 'Awarded'",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What are the rooms for members of the faculty who are professors and who live in building NEB?",
                "masked_template": "What are the <mask> for <mask> of the <mask> who are <mask> and who <mask> in <mask>",
                "query": "SELECT Room FROM FACULTY WHERE Rank = 'Professor' AND Building = 'NEB'",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.",
                "masked_template": "Find the number of <mask> in the <mask> by a <mask> ROY <mask>",
                "query": "SELECT kids FROM Reservations WHERE FirstName = 'ROY' AND LastName = 'SWEAZY'",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "What college has a student who successfully made the team in the role of a goalie?",
                "masked_template": "What <mask> has a <mask> who <mask> the <mask> in the <mask> of a <mask>",
                "query": "SELECT cName FROM tryout WHERE decision = 'yes' AND pPos = 'goalie'",
                "ted": 0.0,
                "db_id": "soccer_2"
            },
            {
                "question": "When did customer with first name as Carole and last name as Bernhard became a customer?",
                "masked_template": "<mask> did <mask> with <mask> name as <mask> and <mask> name as <mask> a <mask>",
                "query": "SELECT date_became_customer FROM Customers WHERE first_name = 'Carole' AND last_name = 'Bernhard'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "When did Carole Bernhard first become a customer?",
                "masked_template": "<mask> did <mask> a <mask>",
                "query": "SELECT date_became_customer FROM Customers WHERE first_name = 'Carole' AND last_name = 'Bernhard'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "What are the names of all male British artists?",
                "masked_template": "What are the names of all <mask>",
                "query": "SELECT artist_name FROM artist WHERE country = 'UK' AND gender = 'Male'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "What are the names of artists who are Male and are from UK?",
                "masked_template": "What are the names of <mask> who are <mask> and are <mask> UK?",
                "query": "SELECT artist_name FROM artist WHERE country = 'UK' AND gender = 'Male'",
                "ted": 0.0,
                "db_id": "music_1"
            },
            {
                "question": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?",
                "masked_template": "What is the <mask> of the <mask> with <mask> name as <mask> and <mask> name as <mask>",
                "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".",
                "masked_template": "Return the <mask> of <mask> to <mask> that had the <mask> and <mask>",
                "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category = 'Best Song' AND RESULT = 'Awarded'",
                "ted": 0.0,
                "db_id": "music_4"
            },
            {
                "question": "What is the date of birth for the staff member named Janessa Sawayn?",
                "masked_template": "What is the <mask> of <mask> for the <mask> named <mask>",
                "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            },
            {
                "question": "How old is the doctor named Zach?",
                "masked_template": "How old is the <mask> named <mask>",
                "query": "SELECT age FROM Person WHERE job = 'doctor' AND name = 'Zach'",
                "ted": 0.0,
                "db_id": "network_2"
            },
            {
                "question": "What is the nickname of the employee named Janessa Sawayn?",
                "masked_template": "What is the <mask> of the <mask> named <mask>",
                "query": "SELECT nickname FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
                "ted": 0.0,
                "db_id": "driving_school"
            }
        ],
        "best_hyp": "What is the cell phone number of the student named Milton Osinski?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the cell phone number of the student named Milton Osinski?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "proc_query": "( <col> name </col> of <tab> high schooler </tab> ) that belongs to ( ( <tab> friend </tab> ) , and ( ( <tab> high schooler </tab> ) satisfied that ( ( <col> student id </col> of <tab> friend </tab> ) equal to ( <col> id </col> of <tab> high schooler </tab> ) ) ) ) , grouped by ( <col> student id </col> of <tab> friend </tab> ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( <val> 1 </val> )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What is the name of the student who has the most friends?",
            "Find the name of the student who has the greatest number of friends.",
            "Find the most common friend in the school. The most common is the student that had the greatest number of friends.",
            "Which student has the most number of friends?",
            "Which student has the greatest number of friends?",
            "Which student is friends with most people? Tell me the student name.",
            "Return the name of the student who has the most friends.",
            "What are the names of the students who are friends for the most number of years?",
            "What is the name of the student who has the most number of friends?",
            "Which student has the most friends? Tell me the student name.",
            "What is the name of student that has the greatest number of friends?",
            "Return the name of student that has the greatest number of friends.",
            "Which is the name of the student that has the most number of friends?",
            "List the name of the student that has friends named the most number of times.",
            "Find the name of the student that is friends with most people.",
            "What are the names of the students that have the most friends?",
            "What is the name of the student that has the most friends?",
            "Find the name of the student who has the most friends.",
            "What are the names of the students that have the most friends?",
            "What is the name of the student with the least number of friends?",
            "Find the name of the student who has the most friends.",
            "Which student has the most friends?",
            "Return the name of the student that has the greatest number of friends.",
            "Which student has the most friends? Tell me the student name.",
            "Return the name of the student that has the most friends.",
            "Show the name of the student that has the most friends.",
            "Find the top 3 students who have the greatest number of friends.",
            "What is the name of the student that has the most friends?",
            "What is the name of the student that has the most friends?",
            "Which student is involved in by the most friends? Tell me the student name.",
            "Find the name of the student that has the greatest number of friends."
        ],
        "templates": [
            "",
            {
                "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
                "masked_template": "<mask> the <mask> that the <mask> who <mask> the <mask> number of <mask> in.",
                "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
                "masked_template": "Find the most <mask> in the <mask> The most <mask> is the <mask> that had <mask> the <mask> number of <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Which building does the instructor who teaches the most number of courses live in?",
                "masked_template": "Which <mask> the <mask> who <mask> the most number of <mask> in?",
                "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Which room has the largest number of reservations?",
                "masked_template": "Which <mask> has the <mask> number of <mask>",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "inn_1"
            },
            {
                "question": "Which program is broadcast most frequently? Give me the program name.",
                "masked_template": "Which <mask> is <mask> most <mask> me the <mask>",
                "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "Return the name of the organization which has the most contact individuals.",
                "masked_template": "Return the name of the <mask> which has the most <mask>",
                "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "What are the details of the student who registered for the most number of courses?",
                "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
                "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "What is detail of the student who registered the most number of courses?",
                "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
                "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "student_assessment"
            },
            {
                "question": "Which customer uses the most policies? Give me the customer name.",
                "masked_template": "Which <mask> the most <mask> me the <mask>",
                "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_fnol"
            },
            {
                "question": "What is the name of organization that has the greatest number of contact individuals?",
                "masked_template": "What is the name of <mask> that has the <mask> number of <mask>",
                "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Return the party email that has used party services the greatest number of times.",
                "masked_template": "Return the <mask> that has <mask> the <mask> number of <mask>",
                "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Which is the email of the party that has used the services the most number of times?",
                "masked_template": "Which is the <mask> of the <mask> that has <mask> the <mask> the most number of <mask>",
                "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
                "masked_template": "List the name of the <mask> that has <mask> named <mask> the most number of <mask>",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "Find the name of the program that is broadcast most frequently.",
                "masked_template": "Find the name of the <mask> that is <mask> most <mask>",
                "query": "SELECT T1.name FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id GROUP BY T2.program_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "program_share"
            },
            {
                "question": "What are the three products that have the most problems?s",
                "masked_template": "What are the <mask> that have the most <mask>",
                "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "tracking_software_problems"
            },
            {
                "question": "What is the name of the party form that is most common?",
                "masked_template": "What is the name of the <mask> that is most <mask>",
                "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "Find the name of the most popular party form.",
                "masked_template": "Find the name of the most <mask>",
                "query": "SELECT T1.form_name FROM forms AS T1 JOIN party_forms AS T2 ON T1.form_id = T2.form_id GROUP BY T2.form_id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_government"
            },
            {
                "question": "What are the names of the cameras that have taken picture of the most mountains?",
                "masked_template": "What are the names of the <mask> that have <mask> of the most <mask>",
                "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "mountain_photos"
            },
            {
                "question": "What is the structure of the document with the least number of accesses?",
                "masked_template": "What is the <mask> of the <mask> with the least number of <mask>",
                "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Find the city that hosted the most events.",
                "masked_template": "Find the <mask> that <mask> the most <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "Which city has hosted the most events?",
                "masked_template": "Which <mask> has <mask> the most <mask>",
                "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "city_record"
            },
            {
                "question": "Return the structure description of the document that has been accessed the fewest number of times.",
                "masked_template": "Return the <mask> of the <mask> that has <mask> the <mask> number of <mask>",
                "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Which customer have the most policies? Give me the customer details.",
                "masked_template": "Which <mask> have the most <mask> me the <mask>",
                "query": "SELECT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_details ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "insurance_and_eClaims"
            },
            {
                "question": "Return the name of the document that has the most sections.",
                "masked_template": "Return the name of the <mask> that has the most <mask>",
                "query": "SELECT T1.document_name FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code GROUP BY T1.document_code ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "document_management"
            },
            {
                "question": "Show the name of the party that has the most delegates.",
                "masked_template": "Show the name of the <mask> that has the most <mask>",
                "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Find the top 3 products which have the largest number of problems?",
                "masked_template": "Find the top 3 <mask> which have the <mask> number of <mask>",
                "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
                "ted": 0.0,
                "db_id": "tracking_software_problems"
            },
            {
                "question": "What is the name of the aircraft that has won an award the most?",
                "masked_template": "What is the name of the <mask> that has won an <mask> the <mask>",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What is the name of the course that has the most student enrollment?",
                "masked_template": "What is the name of the <mask> that has the most <mask>",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Which course is enrolled in by the most students? Give me the course name.",
                "masked_template": "Which <mask> is <mask> in by the most <mask> me the <mask>",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "e_learning"
            },
            {
                "question": "Find the name of the activity that has the largest number of student participants.",
                "masked_template": "Find the name of the <mask> that has the <mask> number of <mask>",
                "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
                "ted": 0.0,
                "db_id": "activity_1"
            }
        ],
        "best_hyp": "What is the name of the student with the least number of friends?",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What is the name of the student who has the most friends?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count( * ) >= 3",
        "proc_query": "( <col> name </col> of <tab> high schooler </tab> ) that belongs to ( ( <tab> likes </tab> ) , and ( ( <tab> high schooler </tab> ) satisfied that ( ( <col> student id </col> of <tab> likes </tab> ) equal to ( <col> id </col> of <tab> high schooler </tab> ) ) ) ) , grouped by ( <col> student id </col> of <tab> likes </tab> ) , that have ( ( the number of ( all items ) ) greater than or equal to ( <val> 3 </val> ) )",
        "references": [
            ""
        ],
        "hypotheses": [
            "What are the names of the students who have at least 3 likes?",
            "Show the names of students that have at least three likes.",
            "What are the names of students that are followed by at least two people?",
            "Find the name of the student who has at least 3 likes.",
            "Find the name of students who have at least 3 likes.",
            "Show the name of students with at least two likes.",
            "Show the names of students that have at least three likes.",
            "Show the names of students that have at least two likes.",
            "Which students have two or more likes? Tell me the student names.",
            "Which students have at least three likes? Tell me their names.",
            "Show the ids of the students who have at least two likes.",
            "Find the names of the students with at least 3 likes.",
            "Return the names of students that have at least three likes.",
            "What are the names of students with at least two likes?",
            "Which students have at least 3 likes?",
            "What are the names of students that have at least 3 or more likes?",
            "List the names of students who have at least 3 likes.",
            "What are the names of all students that have at least 3 likes?",
            "What are the names of students that have at least 3 likes?",
            "Show all student names that have at least two likes.",
            "Show the ids for all the students who have at least two likes.",
            "Show the names of students who have at least 3 likes.",
            "What are the names of students with two or more likes?",
            "Show names of students who have at least 3 likes.",
            "What are the names of students who have at least 3 or more likes?",
            "Show names for all students with at least two likes.",
            "What are the names for all students with at least two likes?",
            "Find the names of all students who have 3 or more likes.",
            "What are the names of all students that have at least 3 or more likes?",
            "What are the names of students with at least three likes?",
            "What are the names of students who have at least 3 likes?"
        ],
        "templates": [
            "",
            {
                "question": "Show the names of editors that are on at least two journal committees.",
                "masked_template": "Show the names of <mask> that are on at least two <mask>",
                "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "journal_committee"
            },
            {
                "question": "What are the hometowns that are shared by at least two gymnasts?",
                "masked_template": "What are the <mask> that are <mask> by at least two <mask>",
                "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "gymnast"
            },
            {
                "question": "Find the name of the swimmer who has at least 2 records.",
                "masked_template": "Find the name of the <mask> who has at least 2 <mask>",
                "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id GROUP BY T2.swimmer_id HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "swimming"
            },
            {
                "question": "Give the hometowns from which two or more gymnasts are from.",
                "masked_template": "<mask> the <mask> which two or more <mask> are <mask>",
                "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "gymnast"
            },
            {
                "question": "Show the station name with at least two trains.",
                "masked_template": "Show the <mask> name with at least two <mask>",
                "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "train_station"
            },
            {
                "question": "Show the names of products that are in at least two events.",
                "masked_template": "Show the names of <mask> that are in at least two <mask>",
                "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "solvency_ii"
            },
            {
                "question": "Show the names of counties that have at least two delegates.",
                "masked_template": "Show the names of <mask> that have at least two <mask>",
                "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Which counties have two or more delegates? Give me the county names.",
                "masked_template": "Which <mask> have two or more <mask> me the <mask>",
                "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "election"
            },
            {
                "question": "Which faculty members advise two ore more students? Give me their faculty ids.",
                "masked_template": "Which <mask> two ore more <mask> me their <mask>",
                "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show the ids of the investors who have at least two transactions.",
                "masked_template": "Show the ids of the <mask> who have at least two <mask>",
                "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "tracking_share_transactions"
            },
            {
                "question": "Give the names of the courses with at least five enrollments.",
                "masked_template": "<mask> the names of the <mask> with at least <mask>",
                "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT( * ) >= 5",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Return the names of parties that have two or more events.",
                "masked_template": "Return the names of <mask> that have two or more <mask>",
                "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "What are the names of parties with at least 2 events?",
                "masked_template": "What are the names of <mask> with at least 2 <mask>",
                "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "party_people"
            },
            {
                "question": "Which countries have at least 3 cities?",
                "masked_template": "Which <mask> have at least 3 <mask>",
                "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count( * ) >= 3",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "What are the countries that contain 3 or more cities?",
                "masked_template": "What are the <mask> that <mask> 3 or more <mask>",
                "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count( * ) >= 3",
                "ted": 0.0,
                "db_id": "sakila_1"
            },
            {
                "question": "List the names of aircrafts and that won matches at least twice.",
                "masked_template": "List the names of <mask> and that won <mask> at least <mask>",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What are the names of all aircrafts that have won a match at least twice?",
                "masked_template": "What are the names of all <mask> that have won a <mask> at least <mask>",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "aircraft"
            },
            {
                "question": "What are the name of courses that have at least five enrollments?",
                "masked_template": "What are the name of <mask> that have at least <mask>",
                "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT( * ) >= 5",
                "ted": 0.0,
                "db_id": "college_3"
            },
            {
                "question": "Show all church names that have hosted least two weddings.",
                "masked_template": "Show all <mask> names that have <mask> least two <mask>",
                "query": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id GROUP BY T1.church_id HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "wedding"
            },
            {
                "question": "Show the ids for all the faculty members who have at least 2 students.",
                "masked_template": "Show the ids for all the <mask> who have at least 2 <mask>",
                "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "activity_1"
            },
            {
                "question": "Show the names of people who have been on the negative side of debates at least twice.",
                "masked_template": "Show the names of <mask> who have <mask> on the <mask> of <mask> at least <mask>",
                "query": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.People_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
                "ted": 0.0,
                "db_id": "debate"
            },
            {
                "question": "What are the names of regions with two or more storms?",
                "masked_template": "What are the names of <mask> with two or more <mask>",
                "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "storm_record"
            },
            {
                "question": "Show names of musicals which have at least three actors.",
                "masked_template": "Show names of <mask> which have at least <mask>",
                "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT( * ) >= 3",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "What are the names of musicals who have at 3 or more actors?",
                "masked_template": "What are the names of <mask> who have at 3 or more <mask>",
                "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT( * ) >= 3",
                "ted": 0.0,
                "db_id": "musical"
            },
            {
                "question": "Show names for all aircraft with at least two flights.",
                "masked_template": "Show names for all <mask> with at least two <mask>",
                "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "What are the names for all aircrafts with at least 2 flights?",
                "masked_template": "What are the names for all <mask> with at least 2 <mask>",
                "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count( * ) >= 2",
                "ted": 0.0,
                "db_id": "flight_1"
            },
            {
                "question": "Find the names of all reviewers who have contributed three or more ratings.",
                "masked_template": "Find the names of all <mask> who have <mask> or more <mask>",
                "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T1.rID HAVING COUNT( * ) >= 3",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "What are the names of all reviewers that have rated 3 or more movies?",
                "masked_template": "What are the names of all <mask> that have <mask> 3 or more <mask>",
                "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T1.rID HAVING COUNT( * ) >= 3",
                "ted": 0.0,
                "db_id": "movie_1"
            },
            {
                "question": "What are the titles for courses with two prerequisites?",
                "masked_template": "What are the <mask> for <mask> with two <mask>",
                "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) = 2",
                "ted": 0.03125,
                "db_id": "college_2"
            },
            {
                "question": "What are the names of staff who have been assigned multiple jobs?",
                "masked_template": "What are the names of <mask> who have <mask>",
                "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
                "ted": 0.03125,
                "db_id": "department_store"
            }
        ],
        "best_hyp": "Show names for all students with at least two likes.",
        "best_hyp_bleu": 0,
        "best_oracle_bleu": 0,
        "hyp_with_best_oracle_bleu": "What are the names of the students who have at least 3 likes?",
        "corpus_bleu": 0,
        "corpus_best_bleu_oracle": 0
    }
]