[
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Find the id and cell number of the professionals with at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the weight of the pet that has the oldest age?",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 10",
        "question": "How many pets have a weight greater than 10?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Utah' OR state = 'Indiana'",
        "question": "What are the email addresses of the professionals from Utah or Indiana?",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Indiana\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question": "How many dogs are not involved in any treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the id, first name and last name of the owner who owns the greatest number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the weight of the pet with the oldest age?",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count( * ) ASC LIMIT 1 )",
        "question": "What is the name and date of treatment for the dog with the most treatments?",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.date_of_treatment",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.dog_id",
            "=",
            "t2.dog_id",
            "where",
            "t1.breed_code",
            "=",
            "(",
            "select",
            "breed_code",
            "from",
            "dogs",
            "group",
            "by",
            "breed_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.date_of_treatment",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.dog_id",
            "=",
            "t2.dog_id",
            "where",
            "t1.breed_code",
            "=",
            "(",
            "select",
            "breed_code",
            "from",
            "dogs",
            "group",
            "by",
            "breed_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",
        "question": "What are the ids, role codes, and email addresses of the professionals who are not involved in any treatments?",
        "query_toks": [
            "select",
            "professional_id",
            ",",
            "role_code",
            ",",
            "email_address",
            "from",
            "professionals",
            "except",
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.email_address",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "professional_id",
            ",",
            "role_code",
            ",",
            "email_address",
            "from",
            "professionals",
            "except",
            "select",
            "t1.professional_id",
            ",",
            "t1.role_code",
            ",",
            "t1.email_address",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Utah' OR state = 'Indiana'",
        "question": "List the email addresses of all the professionals from Utah or Indiana.",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Indiana\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs do we have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the owner id, first name and last name who has the most dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",
        "question": "Find the dates of all treatments and the first names of all the professionals involved.",
        "query_toks": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question": "Count the number of dogs who did not receive any treatment.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Tell me the arrival date and departure date of each dog.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the id and last name of the owner who treats the most number of dogs.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( age ) FROM Dogs",
        "question": "Find the maximum age of all the dogs.",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'cat'",
        "question": "What are the first names of all the students who have a pet of type 'dog' or cat?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\"",
            "or",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( age ) FROM Dogs",
        "question": "What is the maximum age of all dogs?",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Utah' OR state = 'Indiana'",
        "question": "What are the email addresses of the professionals that are from Utah or Indiana?",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Indiana\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "What are the dates of arrival and departure for all dogs?",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",
        "question": "What are the dates of treatments and first names of all the professionals who have been involved in a treatment?",
        "query_toks": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "What are the ids and cell numbers of the professionals who have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Find the weight of the pet who is the oldest pet.",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner has the greatest number of treatments? Tell me the owner id and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question": "What are the states that are shared by owners and professionals?",
        "query_toks": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Find the ids and cell numbers of the professionals that have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the breed with the least number of dogs?",
        "query_toks": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Utah' OR state = 'Indiana'",
        "question": "Show the email addresses of the professionals living at state \"Utah\" or Indiana",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Indiana\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question": "What are the names of all the states that have both owners and professionals?",
        "query_toks": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'cat'",
        "question": "Find the first names of the students who are either a dog or cat.",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\"",
            "or",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question": "Count the number of dogs who do not have any treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count( * ) ASC LIMIT 1 )",
        "question": "What are the names and dates of treatments for the dogs that is the most common breed among treatments?",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.date_of_treatment",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.dog_id",
            "=",
            "t2.dog_id",
            "where",
            "t1.breed_code",
            "=",
            "(",
            "select",
            "breed_code",
            "from",
            "dogs",
            "group",
            "by",
            "breed_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.date_of_treatment",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.dog_id",
            "=",
            "t2.dog_id",
            "where",
            "t1.breed_code",
            "=",
            "(",
            "select",
            "breed_code",
            "from",
            "dogs",
            "group",
            "by",
            "breed_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( age ) FROM Dogs",
        "question": "What is the maximum age across all dogs?",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "Find the number of distinct dogs who are undergoing treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question": "How many dogs are not involved in any treatments listed?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "What are the ids and cell numbers of the professionals that have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",
        "question": "What are all the dates of treatments and the first names of all the professionals involved in the treatments?",
        "query_toks": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many distinct dogs are there for all treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Show the arrival date and departure date of all dogs.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs have been involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'cat'",
        "question": "What is the first name of the student who has either a pet of type 'dog' or cat?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\"",
            "or",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id, first name and last name of the owner who has the most dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'cat'",
        "question": "Find the names of students who have either the pet type of a dog or the cat type.",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\"",
            "or",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",
        "question": "What are the dates of treatments and first names of all the professionals?",
        "query_toks": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.date_of_treatment",
            ",",
            "t2.first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 10",
        "question": "Count the number of pets that have a number of weights higher than 10.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Which professionals are involved in at least two treatments? Give me the professional ID and cell number.",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'cat'",
        "question": "Find the first names of the students that have either a pet of type 'dog' or cat.",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\"",
            "or",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Return the weight of the pet with the oldest age.",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( age ) FROM Dogs",
        "question": "What is the oldest age of the dogs?",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner has the most number of treatments related to dogs? List owner id and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the breed that has the greatest number of dogs.",
        "query_toks": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' OR T3.pettype = 'cat'",
        "question": "What are the first names of all students who have a pet of type 'dog' or cat?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\"",
            "or",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Utah' OR state = 'Indiana'",
        "question": "What are the email addresses of all professionals living in Utah or Indiana?",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Indiana\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the name of the breed that has the greatest number of dogs.",
        "query_toks": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different kinds of dogs are involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the breeds that are used for the most number of dogs?",
        "query_toks": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 10",
        "question": "How many pets whose weight is at least 10 are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Return the arrival date and departure date for each dog.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the breed that has the greatest number of dogs?",
        "query_toks": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.breed_code",
            "=",
            "t2.breed_code",
            "group",
            "by",
            "t1.breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Find the weight of the pet that has the oldest age.",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max( age ) FROM Dogs",
        "question": "In which age did the most dogs grow?",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the ids and last names of all owners who specialized in the most treatments?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question": "Count the number of dogs that are not involved in any treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 10",
        "question": "How many pets has a weight greater than 10?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "What are the arrival and departure dates of all dogs?",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "question": "Find the names of all instructors who have taught some course and the course_id.",
        "masked_template": "Find the names of all <mask> who have <mask> and the <mask>",
        "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "name",
            ",",
            "course_id",
            "from",
            "instructor",
            "as",
            "t1",
            "join",
            "teaches",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "course_id",
            "from",
            "instructor",
            "as",
            "t1",
            "join",
            "teaches",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.id"
        ]
    },
    {
        "question": "How many different cities have these stations?",
        "masked_template": "How many different <mask> have <mask>",
        "query": "SELECT count( DISTINCT city ) FROM station",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "city",
            ")",
            "from",
            "station"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "city",
            ")",
            "from",
            "station"
        ]
    },
    {
        "question": "How many main stream browsers whose market share is at least 5 exist?",
        "masked_template": "How many <mask> whose <mask> is at least 5 <mask>",
        "query": "SELECT count( * ) FROM browser WHERE market_share >= 5",
        "ted": 0.0625,
        "db_id": "browser_web",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "browser",
            "where",
            "market_share",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "browser",
            "where",
            "market_share",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many flights have a velocity larger than 200?",
        "masked_template": "How many <mask> have a <mask> than <mask>",
        "query": "SELECT count( * ) FROM flight WHERE velocity > 200",
        "ted": 0.0,
        "db_id": "flight_company",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flight",
            "where",
            "velocity",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flight",
            "where",
            "velocity",
            ">",
            "value"
        ]
    },
    {
        "question": "what are the first name and last name of all candidates?",
        "masked_template": "what are the <mask> name and <mask> name of all <mask>",
        "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "candidates",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.candidate_id",
            "=",
            "t2.person_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "candidates",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.candidate_id",
            "=",
            "t2.person_id"
        ]
    },
    {
        "question": "What is the structure of the document with the least number of accesses?",
        "masked_template": "What is the <mask> of the <mask> with the least number of <mask>",
        "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the name of customer who has the lowest credit score.",
        "masked_template": "Find the name of <mask> who has the <mask>",
        "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "cust_name",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which building has the largest number of company offices? Give me the building name.",
        "masked_template": "Which <mask> has the <mask> number of <mask> me the <mask>",
        "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.08333333333333333,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id",
            "group",
            "by",
            "t1.building_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id",
            "group",
            "by",
            "t1.building_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the details of the student who registered for the most number of courses?",
        "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many different colleges do attend the tryout test?",
        "masked_template": "How many different <mask> do <mask> the <mask>",
        "query": "SELECT count( DISTINCT cName ) FROM tryout",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ]
    },
    {
        "question": "How many camera lenses are not used in taking any photos?",
        "masked_template": "How many <mask> are not <mask> in <mask> any <mask>",
        "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "camera_lens",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "camera_lens_id",
            "from",
            "photos",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "camera_lens",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "camera_lens_id",
            "from",
            "photos",
            ")"
        ]
    },
    {
        "question": "Find the maximum age of all the students.",
        "masked_template": "Find the maximum age of all the <mask>",
        "query": "SELECT max( Age ) FROM STUDENT",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ]
    },
    {
        "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
        "masked_template": "What are the <mask> names of all <mask> who have <mask> a <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ]
    },
    {
        "question": "Show the account id and name with at least 4 transactions.",
        "masked_template": "Show the <mask> id and name with at least 4 <mask>",
        "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the party emails associated with parties that used the party form that is the most common?",
        "masked_template": "What are the <mask> with <mask> that <mask> the <mask> that is the most <mask>",
        "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_forms AS T2 ON T1.party_id = T2.party_id WHERE T2.form_id = ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count( * ) DESC LIMIT 1 )",
        "ted": 0.1,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.party_email",
            "from",
            "parties",
            "as",
            "t1",
            "join",
            "party_forms",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.party_id",
            "where",
            "t2.form_id",
            "=",
            "(",
            "select",
            "form_id",
            "from",
            "party_forms",
            "group",
            "by",
            "form_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1.party_email",
            "from",
            "parties",
            "as",
            "t1",
            "join",
            "party_forms",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.party_id",
            "where",
            "t2.form_id",
            "=",
            "(",
            "select",
            "form_id",
            "from",
            "party_forms",
            "group",
            "by",
            "form_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value",
            ")"
        ]
    },
    {
        "question": "What are the names of all airports in Cuba or Argentina?",
        "masked_template": "What are the names of all <mask> in <mask> or <mask>",
        "query": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "name",
            "from",
            "airports",
            "where",
            "country",
            "=",
            "\"Cuba\"",
            "or",
            "country",
            "=",
            "\"Argentina\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "airports",
            "where",
            "country",
            "=",
            "value",
            "or",
            "country",
            "=",
            "value"
        ]
    },
    {
        "question": "List the names of all the channels owned by either CCTV or HBS",
        "masked_template": "List the names of all the <mask> by <mask> or HBS",
        "query": "SELECT name FROM channel WHERE OWNER = 'CCTV' OR OWNER = 'HBS'",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "where",
            "owner",
            "=",
            "\"CCTV\"",
            "or",
            "owner",
            "=",
            "\"HBS\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "where",
            "owner",
            "=",
            "value",
            "or",
            "owner",
            "=",
            "value"
        ]
    },
    {
        "question": "How many budget record has a budget amount smaller than the invested amount?",
        "masked_template": "How many <mask> has a <mask> than the <mask>",
        "query": "SELECT count( * ) FROM budget WHERE budgeted < invested",
        "ted": 0.0625,
        "db_id": "school_finance",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "budget",
            "where",
            "budgeted",
            "<",
            "invested"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "budget",
            "where",
            "budgeted",
            "<",
            "invested"
        ]
    },
    {
        "question": "Find the student ID and personal name of the student with at least two enrollments.",
        "masked_template": "Find the <mask> ID and <mask> name of the <mask> with at least two <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the oldest age among the students?",
        "masked_template": "What is the <mask> age <mask> the <mask>",
        "query": "SELECT max( Age ) FROM STUDENT",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ]
    },
    {
        "question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".",
        "masked_template": "Find the names of <mask> who have <mask> the <mask> a <mask> or the <mask> a <mask>",
        "query": "SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.customer_id = T2.customer_id JOIN services AS T3 ON T2.service_id = T3.service_id WHERE T3.service_name = 'Close a policy' OR T3.service_name = 'Upgrade a policy'",
        "ted": 0.038461538461538464,
        "db_id": "insurance_fnol",
        "query_toks": [
            "select",
            "t1.customer_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "first_notification_of_loss",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2.service_id",
            "=",
            "t3.service_id",
            "where",
            "t3.service_name",
            "=",
            "\"Close a policy\"",
            "or",
            "t3.service_name",
            "=",
            "\"Upgrade a policy\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "first_notification_of_loss",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2.service_id",
            "=",
            "t3.service_id",
            "where",
            "t3.service_name",
            "=",
            "value",
            "or",
            "t3.service_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"",
        "masked_template": "Show the <mask> of the <mask> at <mask> \"TD <mask> or <mask>",
        "query": "SELECT Attendance FROM performance WHERE LOCATION = 'TD Garden' OR LOCATION = 'Bell Centre'",
        "ted": 0.0,
        "db_id": "performance_attendance",
        "query_toks": [
            "select",
            "attendance",
            "from",
            "performance",
            "where",
            "location",
            "=",
            "\"TD Garden\"",
            "or",
            "location",
            "=",
            "\"Bell Centre\""
        ],
        "query_toks_no_value": [
            "select",
            "attendance",
            "from",
            "performance",
            "where",
            "location",
            "=",
            "value",
            "or",
            "location",
            "=",
            "value"
        ]
    },
    {
        "question": "Which part fault requires the most number of skills to fix? List part id and name.",
        "masked_template": "Which <mask> the most number of <mask> to <mask> List <mask> id and <mask>",
        "query": "SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the name of the activity that has the largest number of student participants.",
        "masked_template": "Find the name of the <mask> that has the <mask> number of <mask>",
        "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all the reviewers and movie names?",
        "masked_template": "What are the names of all the <mask> and <mask>",
        "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie",
        "ted": 0.05555555555555555,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "reviewer",
            "union",
            "select",
            "title",
            "from",
            "movie"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "reviewer",
            "union",
            "select",
            "title",
            "from",
            "movie"
        ]
    },
    {
        "question": "What are the manager's first name, last name and id who won the most manager award?",
        "masked_template": "What are the <mask> name and id who won the most <mask>",
        "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the last names that are used by customers and staff?",
        "masked_template": "What are the <mask> names that are <mask> by <mask> and <mask>",
        "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "last_name",
            "from",
            "customers",
            "intersect",
            "select",
            "last_name",
            "from",
            "staff"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "customers",
            "intersect",
            "select",
            "last_name",
            "from",
            "staff"
        ]
    },
    {
        "question": "Return the structure description of the document that has been accessed the fewest number of times.",
        "masked_template": "Return the <mask> of the <mask> that has <mask> the <mask> number of <mask>",
        "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Return the characters and durations for each actor.",
        "masked_template": "Return the <mask> and <mask> for each <mask>",
        "query": "SELECT Character , Duration FROM actor",
        "ted": 0.0,
        "db_id": "musical",
        "query_toks": [
            "select",
            "character",
            ",",
            "duration",
            "from",
            "actor"
        ],
        "query_toks_no_value": [
            "select",
            "character",
            ",",
            "duration",
            "from",
            "actor"
        ]
    },
    {
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "masked_template": "How many distinct <mask> are there for all <mask>",
        "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ]
    },
    {
        "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
        "masked_template": "What are the <mask> number and <mask> of the <mask> who <mask> the <mask> number of <mask>",
        "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many accelerators are not compatible with the browsers listed ?",
        "masked_template": "How many <mask> are not <mask> with the <mask> listed ?",
        "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
        "ted": 0.0,
        "db_id": "browser_web",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ]
    },
    {
        "question": "What are the authors of submissions and their colleges?",
        "masked_template": "What are the <mask> of <mask> and their <mask>",
        "query": "SELECT Author , College FROM submission",
        "ted": 0.0,
        "db_id": "workshop_paper",
        "query_toks": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ],
        "query_toks_no_value": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ]
    },
    {
        "question": "Give the full name and customer id of the customer with the fewest accounts.",
        "masked_template": "<mask> the <mask> name and <mask> id of the <mask> with the <mask>",
        "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
        "ted": 0.025,
        "db_id": "customers_card_transactions",
        "query_toks": [
            "select",
            "t2.customer_first_name",
            ",",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_first_name",
            ",",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the title, id, and description of the movie with the greatest number of actors?",
        "masked_template": "What are the <mask> id, and <mask> of the <mask> with the <mask> number of <mask>",
        "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?",
        "masked_template": "What is the name of the <mask> the <mask> to?",
        "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
        "ted": 0.019230769230769232,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "inst",
            "as",
            "t3",
            "on",
            "t2.instid",
            "=",
            "t3.instid",
            "where",
            "t1.fname",
            "=",
            "\"Katsuhiro\"",
            "and",
            "t1.lname",
            "=",
            "\"Ueno\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "inst",
            "as",
            "t3",
            "on",
            "t2.instid",
            "=",
            "t3.instid",
            "where",
            "t1.fname",
            "=",
            "value",
            "and",
            "t1.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the name of the product that has the smallest capacity.",
        "masked_template": "Find the name of the <mask> that has the <mask>",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "order",
            "by",
            "capacity",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "order",
            "by",
            "capacity",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
        "masked_template": "Find the <mask> and <mask> IDs of the <mask> that <mask> at least two <mask>",
        "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the id of the trip that has the shortest duration?",
        "masked_template": "What is the id of the <mask> that has the <mask>",
        "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "id",
            "from",
            "trip",
            "order",
            "by",
            "duration",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "trip",
            "order",
            "by",
            "duration",
            "limit",
            "value"
        ]
    },
    {
        "question": "Please show the names and the players of clubs.",
        "masked_template": "<mask> show the names and the <mask> of <mask>",
        "query": "SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
        "ted": 0.0,
        "db_id": "sports_competition",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.player_id",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1.club_id",
            "=",
            "t2.club_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.player_id",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1.club_id",
            "=",
            "t2.club_id"
        ]
    },
    {
        "question": "Find the number of distinct room types available.",
        "masked_template": "Find the number of distinct <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
        "masked_template": "What are the <mask> of the <mask> of the <mask> with <mask> name <mask> or <mask>",
        "query": "SELECT date_of_latest_logon FROM Students WHERE family_name = 'Jaskolski' OR family_name = 'Langosh'",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "date_of_latest_logon",
            "from",
            "students",
            "where",
            "family_name",
            "=",
            "\"Jaskolski\"",
            "or",
            "family_name",
            "=",
            "\"Langosh\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_latest_logon",
            "from",
            "students",
            "where",
            "family_name",
            "=",
            "value",
            "or",
            "family_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of the songs that are modern or sung in English?",
        "masked_template": "What are the names of the <mask> that are <mask> or <mask> in <mask>",
        "query": "SELECT song_name FROM song WHERE genre_is = 'modern' OR languages = 'english'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "genre_is",
            "=",
            "\"modern\"",
            "or",
            "languages",
            "=",
            "\"english\""
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "genre_is",
            "=",
            "value",
            "or",
            "languages",
            "=",
            "value"
        ]
    },
    {
        "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
        "masked_template": "What are all the <mask> and the <mask> of all the <mask> in the <mask>",
        "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_description",
            ",",
            "t2.fault_status",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_description",
            ",",
            "t2.fault_status",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id"
        ]
    },
    {
        "question": "What is the name of organization that has the greatest number of contact individuals?",
        "masked_template": "What is the name of <mask> that has the <mask> number of <mask>",
        "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Return the maximum enrollment across all schools.",
        "masked_template": "Return the maximum <mask> all <mask>",
        "query": "SELECT max( Enrollment ) FROM university",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ]
    },
    {
        "question": "Count the number of markets that have a number of cities lower than 300.",
        "masked_template": "Count the number of <mask> that have a number of <mask> than <mask>",
        "query": "SELECT count( * ) FROM market WHERE Number_cities < 300",
        "ted": 0.0625,
        "db_id": "film_rank",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "<",
            "300"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "<",
            "value"
        ]
    },
    {
        "question": "How many clubs does \"Linda Smith\" belong to?",
        "masked_template": "How many <mask> to?",
        "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
        "ted": 0.057692307692307696,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "member_of_club",
            "as",
            "t2",
            "on",
            "t1.clubid",
            "=",
            "t2.clubid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stuid",
            "=",
            "t3.stuid",
            "where",
            "t3.fname",
            "=",
            "\"Linda\"",
            "and",
            "t3.lname",
            "=",
            "\"Smith\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "member_of_club",
            "as",
            "t2",
            "on",
            "t1.clubid",
            "=",
            "t2.clubid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stuid",
            "=",
            "t3.stuid",
            "where",
            "t3.fname",
            "=",
            "value",
            "and",
            "t3.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Count the number of customers who do not have an account.",
        "masked_template": "Count the number of <mask> who do not have an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "What is the last name of the musician that have produced the most number of songs?",
        "masked_template": "What is the <mask> name of the <mask> that have <mask> the most number of <mask>",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.08333333333333333,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "t2.lastname",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "group",
            "by",
            "lastname",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.lastname",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "group",
            "by",
            "lastname",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the maximum enrollment across all schools?",
        "masked_template": "What is the maximum <mask> all <mask>",
        "query": "SELECT max( Enrollment ) FROM university",
        "ted": 0.0,
        "db_id": "university_basketball",
        "query_toks": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ]
    },
    {
        "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
        "masked_template": "Which <mask> log <mask> the most number of <mask> List the <mask> log id, <mask> and <mask>",
        "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_log_entry_id",
            ",",
            "t1.fault_description",
            ",",
            "t1.fault_log_entry_datetime",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id",
            "group",
            "by",
            "t1.fault_log_entry_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_log_entry_id",
            ",",
            "t1.fault_description",
            ",",
            "t1.fault_log_entry_datetime",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id",
            "group",
            "by",
            "t1.fault_log_entry_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "Show the delegate and committee information of elections.",
        "masked_template": "Show the <mask> and <mask> of <mask>",
        "query": "SELECT Delegate , Committee FROM election",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ]
    },
    {
        "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.",
        "masked_template": "Find the total <mask> of the <mask> that <mask> named <mask> or <mask> are <mask> to.",
        "query": "SELECT sum( T2.hours ) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
        "ted": 0.038461538461538464,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t2.hours",
            ")",
            "from",
            "assignedto",
            "as",
            "t1",
            "join",
            "projects",
            "as",
            "t2",
            "on",
            "t1.project",
            "=",
            "t2.code",
            "join",
            "scientists",
            "as",
            "t3",
            "on",
            "t1.scientist",
            "=",
            "t3.ssn",
            "where",
            "t3.name",
            "=",
            "\"Michael Rogers\"",
            "or",
            "t3.name",
            "=",
            "\"Carol Smith\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t2.hours",
            ")",
            "from",
            "assignedto",
            "as",
            "t1",
            "join",
            "projects",
            "as",
            "t2",
            "on",
            "t1.project",
            "=",
            "t2.code",
            "join",
            "scientists",
            "as",
            "t3",
            "on",
            "t1.scientist",
            "=",
            "t3.ssn",
            "where",
            "t3.name",
            "=",
            "value",
            "or",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Count the number of students who did not enroll in any course.",
        "masked_template": "Count the number of <mask> who did not <mask> in any <mask>",
        "query": "SELECT count( * ) FROM Students WHERE student_id NOT IN ( SELECT student_id FROM Student_Course_Enrolment )",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "students",
            "where",
            "student_id",
            "not",
            "in",
            "(",
            "select",
            "student_id",
            "from",
            "student_course_enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "students",
            "where",
            "student_id",
            "not",
            "in",
            "(",
            "select",
            "student_id",
            "from",
            "student_course_enrolment",
            ")"
        ]
    },
    {
        "question": "Count the number of colors that are not used in any products.",
        "masked_template": "Count the number of <mask> that are not <mask> in any <mask>",
        "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
        "ted": 0.0,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "not",
            "in",
            "(",
            "select",
            "color_code",
            "from",
            "products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "not",
            "in",
            "(",
            "select",
            "color_code",
            "from",
            "products",
            ")"
        ]
    },
    {
        "question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.",
        "masked_template": "Find the <mask> names of the <mask> who are <mask> or <mask>",
        "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "distinct",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.facid",
            "join",
            "activity",
            "as",
            "t3",
            "on",
            "t2.actid",
            "=",
            "t2.actid",
            "where",
            "t3.activity_name",
            "=",
            "\"Canoeing\"",
            "or",
            "t3.activity_name",
            "=",
            "\"Kayaking\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.facid",
            "join",
            "activity",
            "as",
            "t3",
            "on",
            "t2.actid",
            "=",
            "t2.actid",
            "where",
            "t3.activity_name",
            "=",
            "value",
            "or",
            "t3.activity_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the id and name of the mountains that have at least 2 photos?",
        "masked_template": "What are the id and name of the <mask> that have at least 2 <mask>",
        "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "t1.id",
            ",",
            "t1.name",
            "from",
            "mountain",
            "as",
            "t1",
            "join",
            "photos",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.mountain_id",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.id",
            ",",
            "t1.name",
            "from",
            "mountain",
            "as",
            "t1",
            "join",
            "photos",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.mountain_id",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many different types of rooms are there?",
        "masked_template": "How many different <mask> of <mask> are <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "Find the id and surname of the driver who participated the most number of races?",
        "masked_template": "Find the id and <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "In which year did the most recent crime happen?",
        "masked_template": "In which <mask> did the most <mask>",
        "query": "SELECT max( YEAR ) FROM perpetrator",
        "ted": 0.0,
        "db_id": "perpetrator",
        "query_toks": [
            "select",
            "max",
            "(",
            "year",
            ")",
            "from",
            "perpetrator"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "year",
            ")",
            "from",
            "perpetrator"
        ]
    },
    {
        "question": "How many players have more than 1000 hours of training?",
        "masked_template": "How many <mask> have more than <mask> of <mask>",
        "query": "SELECT count( * ) FROM Player WHERE HS > 1000",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "player",
            "where",
            "hs",
            ">",
            "1000"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "player",
            "where",
            "hs",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the id of the candidate with the lowest oppose rate?",
        "masked_template": "What is the id of the <mask> with the <mask>",
        "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "candidate_id",
            "from",
            "candidate",
            "order",
            "by",
            "oppose_rate",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_id",
            "from",
            "candidate",
            "order",
            "by",
            "oppose_rate",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
        "masked_template": "Which <mask> are <mask> in at least two <mask> me the <mask> ID and <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the ids and last names of all drivers who participated in the most races?",
        "masked_template": "What are the ids and <mask> names of all <mask> who <mask> in the most <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "Give the name of the department with the lowest budget.",
        "masked_template": "<mask> the name of the <mask> with the <mask>",
        "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "dept_name",
            "from",
            "department",
            "order",
            "by",
            "budget",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "department",
            "order",
            "by",
            "budget",
            "limit",
            "value"
        ]
    }
]