[
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "Show the names of the singers that have produced more than one song.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "What are the names and countries of singers whose song name contains the word \"Hey\"?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What are the names of the conductor whose nationality is not France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "What are the location and name of all stadiums with capacity between 5000 and 10000?",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "Find the names of singers who did not appear in any song.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "What are all the birth years and nationalities of singers?",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "Find the names of all singers that have no songs.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "What are the record companies of all the orchestras in the descending order of founded year?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "List the song name and singer name for each song.",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "Find the names of all the musicians that have been in charge of more than two orchestras.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "Which musicians have more than two orchestras in total? Return the names of these musicians.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of all the orchestras that are not involved in any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "Return the total number of distinct singers.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What are the names of all the conductor who are not from France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "What are the total number of musicians in either DVD format or CD format?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "Find the name, country and age of each singer and show the results in the order of age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "What are the names of singers who have never sung a song?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "What are the different nationalities and how many singers belong to each?",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "What is the total number of orchestras that are either in DVD format or CD format?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "List the name of all stadiums along with the number of concerts that have taken place there",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "List all conductor names ordered by their years of work in descending order.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of singers that have sung more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "List all countries along with the number of singers from each country.",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "List the name and country of all the singers in descending order of age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of all the orchestras that have not provided any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "List the name of the conductor who has more than two orchestras.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "Show all stadium names along with the number of concerts in each stadium.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "List all nations along with the number of singers from each nationality.",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of all singers who sang more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "Please list all conductor names in ascending order of age.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "Return the names of all conductor who are not from France.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "Show the record companies of orchestras in descending order of their founded year.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "Tell me the birth year and citizenship of each singer.",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "Find the number of orchestras that have either DVD or CD format.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "Show the names of all conductor in descending order of year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "What is the total number of singers?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "Show the names and countries of singers whose song name contains the word \"Hey\".",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "How many musicians have either DVD or CD as their major record format?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "How many concerts are held at each stadium? List the stadium name and the number of concerts.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'",
        "question": "What are the names and countries of the singers whose song name contains the word \"Hey\"?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "\"%Hey%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "List the names of all conductor in descending order of year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "For each country, how many singers are from that country?",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "What are the names of all the musicians whose orchestra has more than two tracks?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What is the name of the conductor whose nationality is not France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "What are all the song titles and the names of all the singers in the songs?",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "List all nations and the number of singers from each nationality.",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "Find the name and country of all singers sorted by their ages in the descending order.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "List the record company of the orchestra in descending order of founded year.",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "Find the names of all conductor in the descending order of year of work.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "What is the name of the conductor who has more than two orchestras?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "What are the record companies of the orchestra in descending order of founded year?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "For each stadium, show the name of the stadium and the number of concerts in it.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "What are the names of all the conductor in descending order of year of work?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "What are the different nationalities and how many singers are there for each?",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "what are the names of the orchestras that did not participate in any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "Show the titles of songs and the names of their singers.",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "What are all the conductor names in ascending order of age?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "List all the conductor names in ascending order of age.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of the orchestras that did not have any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "What are the names of singers who have sung out more than one song?",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "For each country, report the total number of singers from that country.",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count( * ) FROM singer",
        "question": "How many singers are there?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "Show all countries and the number of singers in each country.",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship , COUNT( * ) FROM singer GROUP BY Citizenship",
        "question": "What are the different nationalities of singers and how many singers belong to each?",
        "query_toks": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "What are the birth year and citizenship of all singers?",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country , count( * ) FROM singer GROUP BY country",
        "question": "What are the different countries of singers and how many singers belong to each country?",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question": "What are the locations and names of stadiums with capacity between 5000 and 10000?",
        "query_toks": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "5000",
            "and",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "What are the names and countries of all singers ordered by age in descending order?",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "Count the number of orchestras that have either DVD or CD format.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT( * ) > 1",
        "question": "Find the name of the singers that have more than one song.",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id",
            "group",
            "by",
            "t1.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "what are the names of singers who did not appear in any song?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question": "What are the names of all the conductor in ascending order of age?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT( * ) FROM orchestra WHERE Major_Record_Format = 'DVD' OR Major_Record_Format = 'CD'",
        "question": "What is the total number of musicians whose major record format is DVD or CD?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "\"DVD\"",
            "or",
            "major_record_format",
            "=",
            "\"CD\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "What are the names of all singers who sang a song?",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of all the orchestras that have never won any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name , country , age FROM singer ORDER BY age DESC",
        "question": "Show the name and country for all singers in descending order by age.",
        "query_toks": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "List the names of singers that are not in any song.",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year , Citizenship FROM singer",
        "question": "What are the birth year and citizenship of each singer?",
        "query_toks": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "What are the names of all the musicians whose nationality is not France?",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN ( SELECT Singer_ID FROM song )",
        "question": "What are the names of all singers that are not in any song?",
        "query_toks": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question": "What are the names of the record companies of the orchestra ordered by year of founded?",
        "query_toks": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
        "question": "What are the titles and names of all the singers?",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t1.name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1.singer_id",
            "=",
            "t2.singer_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN ( SELECT Orchestra_ID FROM performance )",
        "question": "What are the names of the orchestras that did not participate in any performance?",
        "query_toks": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name , count( * ) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",
        "question": "Show all the stadium names and the number of concerts in each stadium.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "group",
            "by",
            "t1.stadium_id"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question": "Give me a list of all the conductor names ordered by the year of work in descending order.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT( * ) > 2",
        "question": "List the name of conductor who has number of orchestras bigger than 2",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1.conductor_id",
            "=",
            "t2.conductor_id",
            "group",
            "by",
            "t2.conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'France'",
        "question": "Return the names of the conductor that do not have France as their nationality.",
        "query_toks": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "\"France\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the names of companies whose headquarters are not \"USA\"?",
        "masked_template": "What are the names of <mask> whose <mask> are not <mask>",
        "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "\"USA\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "value"
        ]
    },
    {
        "question": "List the method, date and amount of all the payments, in ascending order of date.",
        "masked_template": "List the <mask> and <mask> of all the <mask> in <mask> order of <mask>",
        "query": "SELECT Payment_Method_Code , Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC",
        "ted": 0.05555555555555555,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "payment_method_code",
            ",",
            "date_payment_made",
            ",",
            "amount_payment",
            "from",
            "payments",
            "order",
            "by",
            "date_payment_made",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "date_payment_made",
            ",",
            "amount_payment",
            "from",
            "payments",
            "order",
            "by",
            "date_payment_made",
            "asc"
        ]
    },
    {
        "question": "Find the names of rooms that have been reserved for more than 60 times.",
        "masked_template": "Find the names of <mask> that have <mask> for more than 60 <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Show the working years of managers in descending order of their level.",
        "masked_template": "Show the <mask> of <mask> in <mask> order of their <mask>",
        "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
        "ted": 0.0,
        "db_id": "railway",
        "query_toks": [
            "select",
            "working_year_starts",
            "from",
            "manager",
            "order",
            "by",
            "level",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "working_year_starts",
            "from",
            "manager",
            "order",
            "by",
            "level",
            "desc"
        ]
    },
    {
        "question": "List the votes of elections in descending order.",
        "masked_template": "List the <mask> of <mask> in <mask>",
        "query": "SELECT Votes FROM election ORDER BY Votes DESC",
        "ted": 0.0,
        "db_id": "election_representative",
        "query_toks": [
            "select",
            "votes",
            "from",
            "election",
            "order",
            "by",
            "votes",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "votes",
            "from",
            "election",
            "order",
            "by",
            "votes",
            "desc"
        ]
    },
    {
        "question": "Sort the names of all counties in descending alphabetical order.",
        "masked_template": "<mask> the names of all <mask> in <mask>",
        "query": "SELECT County_name FROM county ORDER BY County_name DESC",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "county_name",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            "from",
            "county",
            "order",
            "by",
            "county_name",
            "desc"
        ]
    },
    {
        "question": "What are the first names of all professors who teach more than one class?",
        "masked_template": "What are the <mask> names of all <mask> who <mask> more than one <mask>",
        "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "group",
            "by",
            "t1.prof_num",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num",
            "group",
            "by",
            "t1.prof_num",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "List the name of all products along with the number of complaints that they have received.",
        "masked_template": "List the name of all <mask> with the number of <mask> that <mask> have <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "What is the sum of budgets of the Marketing and Finance departments?",
        "masked_template": "What is the sum of <mask> of the <mask> and <mask>",
        "query": "SELECT sum( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'",
        "ted": 0.03571428571428571,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "sum",
            "(",
            "budget",
            ")",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "\"Marketing\"",
            "or",
            "dept_name",
            "=",
            "\"Finance\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "budget",
            ")",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "value",
            "or",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of captains, sorted by age descending?",
        "masked_template": "What are the names of <mask> by age <mask>",
        "query": "SELECT name FROM captain ORDER BY age DESC",
        "ted": 0.0,
        "db_id": "ship_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "captain",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "captain",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "question": "Give the names of people who did not participate in the candidate election.",
        "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "Show all the activity names and the number of faculty involved in each activity.",
        "masked_template": "Show all the <mask> names and the number of <mask> in each <mask>",
        "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ]
    },
    {
        "question": "Return the names of all regions other than Denmark.",
        "masked_template": "Return the names of all <mask> than <mask>",
        "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
        "ted": 0.0,
        "db_id": "storm_record",
        "query_toks": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "\"Denmark\""
        ],
        "query_toks_no_value": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the first names of all students that are not enrolled in courses?",
        "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ]
    },
    {
        "question": "Show the authors of submissions and the acceptance results of their submissions.",
        "masked_template": "Show the <mask> of <mask> and the <mask> of their <mask>",
        "query": "SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
        "ted": 0.0,
        "db_id": "workshop_paper",
        "query_toks": [
            "select",
            "t2.author",
            ",",
            "t1.result",
            "from",
            "acceptance",
            "as",
            "t1",
            "join",
            "submission",
            "as",
            "t2",
            "on",
            "t1.submission_id",
            "=",
            "t2.submission_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.author",
            ",",
            "t1.result",
            "from",
            "acceptance",
            "as",
            "t1",
            "join",
            "submission",
            "as",
            "t2",
            "on",
            "t1.submission_id",
            "=",
            "t2.submission_id"
        ]
    },
    {
        "question": "Show the id and salary of Mark Young.",
        "masked_template": "Show the id and <mask> of <mask>",
        "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
        "ted": 0.1,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "eid",
            ",",
            "salary",
            "from",
            "employee",
            "where",
            "name",
            "=",
            "\"Mark Young\""
        ],
        "query_toks_no_value": [
            "select",
            "eid",
            ",",
            "salary",
            "from",
            "employee",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.",
        "masked_template": "Find the <mask> and <mask> of the <mask> whose name has <mask>",
        "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "student_capacity",
            ",",
            "gender",
            "from",
            "dorm",
            "where",
            "dorm_name",
            "like",
            "\"%Donor%\""
        ],
        "query_toks_no_value": [
            "select",
            "student_capacity",
            ",",
            "gender",
            "from",
            "dorm",
            "where",
            "dorm_name",
            "like",
            "value"
        ]
    },
    {
        "question": "What are all the calendar dates and day Numbers?",
        "masked_template": "What are all the <mask> and day <mask>",
        "query": "SELECT calendar_date , day_Number FROM Ref_calendar",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "calendar_date",
            ",",
            "day_number",
            "from",
            "ref_calendar"
        ],
        "query_toks_no_value": [
            "select",
            "calendar_date",
            ",",
            "day_number",
            "from",
            "ref_calendar"
        ]
    },
    {
        "question": "What are the name and level of catalog structure with level number between 5 and 10",
        "masked_template": "What are the name and <mask> of <mask> with <mask> number <mask> 5 and 10",
        "query": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_level_name",
            ",",
            "catalog_level_number",
            "from",
            "catalog_structure",
            "where",
            "catalog_level_number",
            "between",
            "5",
            "and",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_level_name",
            ",",
            "catalog_level_number",
            "from",
            "catalog_structure",
            "where",
            "catalog_level_number",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
        "masked_template": "Which <mask> have <mask> more than <mask> in <mask> of <mask> Return the <mask>",
        "query": "SELECT T2.service_name FROM first_notification_of_loss AS T1 JOIN services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id HAVING count( * ) > 2",
        "ted": 0.0,
        "db_id": "insurance_fnol",
        "query_toks": [
            "select",
            "t2.service_name",
            "from",
            "first_notification_of_loss",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "group",
            "by",
            "t1.service_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.service_name",
            "from",
            "first_notification_of_loss",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "group",
            "by",
            "t1.service_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the names of the counties of public safety, ordered by population descending?",
        "masked_template": "What are the names of the <mask> of <mask> ordered by <mask>",
        "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "name",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "What are the names and ids of products costing between 600 and 700?",
        "masked_template": "What are the names and ids of <mask> 600 and <mask>",
        "query": "SELECT product_name , product_id FROM products WHERE product_price BETWEEN 600 AND 700",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "product_name",
            ",",
            "product_id",
            "from",
            "products",
            "where",
            "product_price",
            "between",
            "600",
            "and",
            "700"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "product_id",
            "from",
            "products",
            "where",
            "product_price",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "Sort the customer names in alphabetical order.",
        "masked_template": "<mask> the <mask> names in <mask>",
        "query": "SELECT customer_details FROM customers ORDER BY customer_details",
        "ted": 0.0,
        "db_id": "insurance_and_eClaims",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "order",
            "by",
            "customer_details"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "order",
            "by",
            "customer_details"
        ]
    },
    {
        "question": "Count the number of female Professors we have.",
        "masked_template": "Count the number of <mask> we <mask>",
        "query": "SELECT count( * ) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor'",
        "ted": 0.03571428571428571,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"F\"",
            "and",
            "rank",
            "=",
            "\"Professor\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value",
            "and",
            "rank",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
        "masked_template": "What are the <mask> of all the <mask> in the <mask> order of <mask>",
        "query": "SELECT venue FROM MATCH ORDER BY date DESC",
        "ted": 0.0,
        "db_id": "city_record",
        "query_toks": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "venue",
            "from",
            "match",
            "order",
            "by",
            "date",
            "desc"
        ]
    },
    {
        "question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?",
        "masked_template": "What are the <mask> and <mask> names of all <mask> with <mask> and <mask>",
        "query": "SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "1000",
            "and",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "What are the official names of cities that have hosted more than one competition?",
        "masked_template": "What are the <mask> names of <mask> that have <mask> more than one <mask>",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the name of the technician whose team is not 'NYY'?",
        "masked_template": "What is the name of the <mask> whose <mask> is not <mask>",
        "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
        "ted": 0.0,
        "db_id": "machine_repair",
        "query_toks": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "\"NYY\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "value"
        ]
    },
    {
        "question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
        "masked_template": "What are the <mask> names and <mask> for all <mask> that <mask> and <mask>",
        "query": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
        "ted": 0.0,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "district_name",
            ",",
            "city_population",
            "from",
            "district",
            "where",
            "city_population",
            "between",
            "200000",
            "and",
            "2000000"
        ],
        "query_toks_no_value": [
            "select",
            "district_name",
            ",",
            "city_population",
            "from",
            "district",
            "where",
            "city_population",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "Return the device carriers that do not have Android as their software platform.",
        "masked_template": "Return the <mask> that do not have <mask> as their <mask>",
        "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "\"Android\""
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "value"
        ]
    },
    {
        "question": "Show the years, book titles, and publishers for all books, in descending order by year.",
        "masked_template": "Show the <mask> and <mask> for all <mask> in <mask> order by <mask>",
        "query": "SELECT YEAR , book_title , publisher FROM book_club ORDER BY YEAR DESC",
        "ted": 0.0,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "year",
            ",",
            "book_title",
            ",",
            "publisher",
            "from",
            "book_club",
            "order",
            "by",
            "year",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            ",",
            "book_title",
            ",",
            "publisher",
            "from",
            "book_club",
            "order",
            "by",
            "year",
            "desc"
        ]
    },
    {
        "question": "Find the titles of all movies that have no ratings.",
        "masked_template": "Find the <mask> of all <mask> that have no <mask>",
        "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ]
    },
    {
        "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
        "masked_template": "<mask> me a list of all the <mask> names <mask> by the <mask> in <mask>",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ]
    },
    {
        "question": "Show the county name and population of all counties.",
        "masked_template": "Show the <mask> name and <mask> of all <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
        "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
        "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ],
        "query_toks_no_value": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ]
    },
    {
        "question": "For each advisor, report the total number of students advised by him or her.",
        "masked_template": "For each <mask> the total number of <mask> by him or <mask>",
        "query": "SELECT Advisor , count( * ) FROM STUDENT GROUP BY Advisor",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ]
    },
    {
        "question": "Please list all album titles in alphabetical order.",
        "masked_template": "<mask> list all <mask> in <mask>",
        "query": "SELECT Title FROM ALBUM ORDER BY Title",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ]
    },
    {
        "question": "List all the name of organizations in order of the date formed.",
        "masked_template": "List all the name of <mask> in order of the <mask>",
        "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "order",
            "by",
            "date_formed",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "order",
            "by",
            "date_formed",
            "asc"
        ]
    },
    {
        "question": "List the name of playlist which has number of tracks greater than 100.",
        "masked_template": "List the name of <mask> which has number of <mask> than <mask>",
        "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count( T1.track_id ) > 100",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "playlist_tracks",
            "as",
            "t1",
            "join",
            "playlists",
            "as",
            "t2",
            "on",
            "t2.id",
            "=",
            "t1.playlist_id",
            "group",
            "by",
            "t1.playlist_id",
            "having",
            "count",
            "(",
            "t1.track_id",
            ")",
            ">",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "playlist_tracks",
            "as",
            "t1",
            "join",
            "playlists",
            "as",
            "t2",
            "on",
            "t2.id",
            "=",
            "t1.playlist_id",
            "group",
            "by",
            "t1.playlist_id",
            "having",
            "count",
            "(",
            "t1.track_id",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "List the carriers of devices in ascending alphabetical order.",
        "masked_template": "List the <mask> of <mask> in <mask>",
        "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "device",
            "order",
            "by",
            "carrier",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "device",
            "order",
            "by",
            "carrier",
            "asc"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "List all headquarters and the number of companies in each headquarter.",
        "masked_template": "List all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
        "ted": 0.0,
        "db_id": "gas_company",
        "query_toks": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ],
        "query_toks_no_value": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ]
    },
    {
        "question": "Return the total number of distinct customers.",
        "masked_template": "Return the total number of distinct <mask>",
        "query": "SELECT count( * ) FROM customers",
        "ted": 0.0,
        "db_id": "customers_and_addresses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers"
        ]
    },
    {
        "question": "List the name of artworks that are not nominated.",
        "masked_template": "List the name of <mask> that are not <mask>",
        "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN ( SELECT Artwork_ID FROM nomination )",
        "ted": 0.0,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "name",
            "from",
            "artwork",
            "where",
            "artwork_id",
            "not",
            "in",
            "(",
            "select",
            "artwork_id",
            "from",
            "nomination",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artwork",
            "where",
            "artwork_id",
            "not",
            "in",
            "(",
            "select",
            "artwork_id",
            "from",
            "nomination",
            ")"
        ]
    },
    {
        "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
        "masked_template": "What are all the <mask> and the <mask> of all the <mask> in the <mask>",
        "query": "SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_description",
            ",",
            "t2.fault_status",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_description",
            ",",
            "t2.fault_status",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id"
        ]
    },
    {
        "question": "How many statements do we have?",
        "masked_template": "How many <mask> do we <mask>",
        "query": "SELECT count( * ) FROM Statements",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "statements"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "What are the total account balances for each customer from Utah or Texas?",
        "masked_template": "What are the total <mask> for each <mask> or <mask>",
        "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
        "ted": 0.03571428571428571,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Texas\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all aicrafts that have never won any match?",
        "masked_template": "What are the names of all <mask> that have <mask> won any <mask>",
        "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH )",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "not",
            "in",
            "(",
            "select",
            "winning_aircraft",
            "from",
            "match",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "not",
            "in",
            "(",
            "select",
            "winning_aircraft",
            "from",
            "match",
            ")"
        ]
    },
    {
        "question": "Find the total number of catalog contents.",
        "masked_template": "Find the total number of <mask>",
        "query": "SELECT count( * ) FROM catalog_contents",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ]
    },
    {
        "question": "What are the name and population of each county?",
        "masked_template": "What are the name and <mask> of each <mask>",
        "query": "SELECT County_name , Population FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            ",",
            "population",
            "from",
            "county"
        ]
    },
    {
        "question": "Give the names of people who did not participate in the candidate election.",
        "masked_template": "<mask> the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.",
        "masked_template": "Find the <mask> and <mask> of all <mask> by their <mask> in the <mask>",
        "query": "SELECT name , headquarter , revenue FROM manufacturers ORDER BY revenue DESC",
        "ted": 0.0,
        "db_id": "manufactory_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "headquarter",
            ",",
            "revenue",
            "from",
            "manufacturers",
            "order",
            "by",
            "revenue",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "headquarter",
            ",",
            "revenue",
            "from",
            "manufacturers",
            "order",
            "by",
            "revenue",
            "desc"
        ]
    },
    {
        "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?",
        "masked_template": "What is the total <mask> of all <mask> whose <mask> is at <mask> or <mask>",
        "query": "SELECT sum( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
        "ted": 0.03571428571428571,
        "db_id": "manufactory_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "revenue",
            ")",
            "from",
            "manufacturers",
            "where",
            "headquarter",
            "=",
            "\"Tokyo\"",
            "or",
            "headquarter",
            "=",
            "\"Taiwan\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "revenue",
            ")",
            "from",
            "manufacturers",
            "where",
            "headquarter",
            "=",
            "value",
            "or",
            "headquarter",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the official names of the cities that have hosted more than one competition.",
        "masked_template": "Show the <mask> names of the <mask> that have <mask> more than one <mask>",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.official_name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "farm_competition",
            "as",
            "t2",
            "on",
            "t1.city_id",
            "=",
            "t2.host_city_id",
            "group",
            "by",
            "t2.host_city_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the names of all person sorted in the descending order using age.",
        "masked_template": "Find the names of all <mask> in the <mask> order <mask>",
        "query": "SELECT name FROM Person ORDER BY age DESC",
        "ted": 0.0,
        "db_id": "network_2",
        "query_toks": [
            "select",
            "name",
            "from",
            "person",
            "order",
            "by",
            "age",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "person",
            "order",
            "by",
            "age",
            "desc"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "What are the names of customers who have taken out more than one loan?",
        "masked_template": "What are the names of <mask> who have <mask> out more than one <mask>",
        "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "t1.cust_name",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id",
            "group",
            "by",
            "t1.cust_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cust_name",
            "from",
            "customer",
            "as",
            "t1",
            "join",
            "loan",
            "as",
            "t2",
            "on",
            "t1.cust_id",
            "=",
            "t2.cust_id",
            "group",
            "by",
            "t1.cust_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "For each building, show the name of the building and the number of institutions in it.",
        "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
        "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
        "ted": 0.0,
        "db_id": "protein_institute",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ]
    },
    {
        "question": "List all channel names ordered by their rating in percent from big to small.",
        "masked_template": "List all <mask> names ordered by their <mask> in <mask> big to <mask>",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "order",
            "by",
            "rating_in_percent",
            "desc"
        ]
    },
    {
        "question": "What are the names and ids of customers whose address contains TN?",
        "masked_template": "What are the names and ids of <mask> whose <mask> TN?",
        "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "customer_name",
            ",",
            "customer_id",
            "from",
            "customers",
            "where",
            "customer_address",
            "like",
            "\"%TN%\""
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            ",",
            "customer_id",
            "from",
            "customers",
            "where",
            "customer_address",
            "like",
            "value"
        ]
    },
    {
        "question": "What are the allergy types and how many allergies correspond to each one?",
        "masked_template": "What are the <mask> and how many <mask> to each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "What are the phone and email for customer Harold?",
        "masked_template": "What are the <mask> and <mask> for <mask>",
        "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
        "ted": 0.1,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "customer_phone",
            ",",
            "customer_email_address",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "\"Harold\""
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            ",",
            "customer_email_address",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the name of the ships that have more than one captain.",
        "masked_template": "Find the name of the <mask> that have more than one <mask>",
        "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id GROUP BY T2.ship_id HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "ship_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "ship",
            "as",
            "t1",
            "join",
            "captain",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "group",
            "by",
            "t2.ship_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "ship",
            "as",
            "t1",
            "join",
            "captain",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "group",
            "by",
            "t2.ship_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the total number of faculty members?",
        "masked_template": "What is the total number of <mask>",
        "query": "SELECT count( * ) FROM Faculty",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty"
        ]
    },
    {
        "question": "What are the titles of all movies that have not been rated?",
        "masked_template": "What are the <mask> of all <mask> that have not <mask>",
        "query": "SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating )",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "mid",
            "not",
            "in",
            "(",
            "select",
            "mid",
            "from",
            "rating",
            ")"
        ]
    },
    {
        "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
        "masked_template": "What are the names of <mask> whose <mask> 60 <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count( * ) > 60",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "How many products are there in the records?",
        "masked_template": "How many <mask> are there in the <mask>",
        "query": "SELECT count( * ) FROM catalog_contents",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "catalog_contents"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "What are all the album titles, in alphabetical order?",
        "masked_template": "What are all the <mask> in <mask>",
        "query": "SELECT Title FROM ALBUM ORDER BY Title",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "album",
            "order",
            "by",
            "title"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.",
        "masked_template": "List the <mask> name and <mask> name of <mask> have the <mask> of <mask> and <mask>",
        "query": "SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "1000",
            "and",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "customers",
            "where",
            "amount_outstanding",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "question": "Find the total account balance of each customer from Utah or Texas.",
        "masked_template": "Find the total <mask> of each <mask> or <mask>",
        "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
        "ted": 0.03571428571428571,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "\"Utah\"",
            "or",
            "state",
            "=",
            "\"Texas\""
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "acc_bal",
            ")",
            "from",
            "customer",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the case burden of counties in descending order of population.",
        "masked_template": "Show the <mask> of <mask> in <mask> order of <mask>",
        "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "case_burden",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "case_burden",
            "from",
            "county_public_safety",
            "order",
            "by",
            "population",
            "desc"
        ]
    },
    {
        "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.",
        "masked_template": "Find the <mask> age and <mask> of each <mask> and show the <mask> in the order of <mask>",
        "query": "SELECT Time_of_purchase , age , address FROM member ORDER BY Time_of_purchase",
        "ted": 0.05555555555555555,
        "db_id": "coffee_shop",
        "query_toks": [
            "select",
            "time_of_purchase",
            ",",
            "age",
            ",",
            "address",
            "from",
            "member",
            "order",
            "by",
            "time_of_purchase"
        ],
        "query_toks_no_value": [
            "select",
            "time_of_purchase",
            ",",
            "age",
            ",",
            "address",
            "from",
            "member",
            "order",
            "by",
            "time_of_purchase"
        ]
    },
    {
        "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
        "masked_template": "What are the <mask> of <mask> whose <mask> are not <mask>",
        "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "\"Android\""
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "device",
            "where",
            "software_platform",
            "!=",
            "value"
        ]
    },
    {
        "question": "Show all cities along with the number of drama workshop groups in each city.",
        "masked_template": "Show all <mask> with the number of <mask> in each <mask>",
        "query": "SELECT T1.City_Town , count( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ],
        "query_toks_no_value": [
            "select",
            "t1.city_town",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "drama_workshop_groups",
            "as",
            "t2",
            "on",
            "t1.address_id",
            "=",
            "t2.address_id",
            "group",
            "by",
            "t1.city_town"
        ]
    },
    {
        "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
        "masked_template": "What are the names and <mask> names of the <mask> which has <mask> in the FDA <mask>",
        "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
        "ted": 0.1,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "name",
            ",",
            "trade_name",
            "from",
            "medicine",
            "where",
            "fda_approved",
            "=",
            "\"Yes\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "trade_name",
            "from",
            "medicine",
            "where",
            "fda_approved",
            "=",
            "value"
        ]
    },
    {
        "question": "Give me the detail and opening hour for each museum.",
        "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
        "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ]
    },
    {
        "question": "What are the first names of all students that are not enrolled in courses?",
        "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ]
    },
    {
        "question": "Display the first name and department name for each employee.",
        "masked_template": "<mask> the <mask> name and <mask> name for each <mask>",
        "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ]
    },
    {
        "question": "What are the titles, years, and directors of all movies, ordered by budget in millions?",
        "masked_template": "What are the <mask> and <mask> of all <mask> ordered by <mask> in <mask>",
        "query": "SELECT title , YEAR , director FROM movie ORDER BY budget_million",
        "ted": 0.05555555555555555,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "title",
            ",",
            "year",
            ",",
            "director",
            "from",
            "movie",
            "order",
            "by",
            "budget_million"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "year",
            ",",
            "director",
            "from",
            "movie",
            "order",
            "by",
            "budget_million"
        ]
    },
    {
        "question": "Show all allergy types and the number of allergies in each type.",
        "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "What are the first and last names of all the candidates?",
        "masked_template": "What are the <mask> and <mask> names of all the <mask>",
        "query": "SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "candidates",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.candidate_id",
            "=",
            "t2.person_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "candidates",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.candidate_id",
            "=",
            "t2.person_id"
        ]
    },
    {
        "question": "List the name of staff who has been assigned multiple jobs.",
        "masked_template": "List the name of <mask> who has <mask>",
        "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT( * ) > 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.staff_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "staff_department_assignments",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id",
            "group",
            "by",
            "t2.staff_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.staff_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "staff_department_assignments",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id",
            "group",
            "by",
            "t2.staff_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    }
]