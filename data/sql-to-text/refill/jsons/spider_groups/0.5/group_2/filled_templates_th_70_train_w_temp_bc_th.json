[
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the owner id, first name and last name of the dog with the most owners.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "What is the number of pets with a weight greater than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type , charge_amount FROM Charges",
        "question": "What are the charge type and amount of all the charges?",
        "query_toks": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "Return the breed code and size code of all the dogs.",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Tell me the arrival date and departure date of each dog.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "Count the average age of dogs that are undergoing treatments.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Which professionals are involved in at least two treatments? Give me the professional ID and cell number.",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'",
        "question": "What are the ids of all students that are not cats?",
        "query_toks": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner has the most number of treatments related to dogs? List owner id and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type , charge_amount FROM Charges",
        "question": "What is the charge type and charge amount for each charge?",
        "query_toks": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type , charge_amount FROM Charges",
        "question": "What are the charge types and amounts of all the charges?",
        "query_toks": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Show the arrival date and departure date of all dogs.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the ids and last names of all owners who specialized in the most treatments?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs have been involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the breed codes and sizes of all the dogs?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Find the weight of the pet who is the oldest pet.",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the breed codes and sizes of each dog in the database?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "What is the total number of pets of the students with age more than 19?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "How many owners do not have any dogs?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "What are the email address, cell number and home phone number of all professionals?",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "What is the total number of pets owned by students with age more than 19?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the id and last name of the owner who treats the most number of dogs.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 1",
        "question": "Return the first names and genders of the students that have more than one pet.",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the distinct breed codes and the sizes of dogs?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE age < ( SELECT avg( age ) FROM Dogs )",
        "question": "What is the total number of dogs for all the dogs that have an age below the average?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "Return the arrival date and departure date for each dog.",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "Count the number of pets that have a number of weights higher than 11.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Alabama' OR state = 'Florida'",
        "question": "Show the email addresses of the professionals living in state \"Alabama\" or \"Florida\".",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Alabama\"",
            "or",
            "state",
            "=",
            "\"Florida\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "Count the number of students who have a pet of age above 19.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id, first name and last name of the owner who has the most dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
        "question": "What are the last names of students in the age of 3 and their pet type is cat?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "3",
            "and",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
        "question": "What are the last names of the students in the age of 3 that have cat as their pet?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "3",
            "and",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "What is the average age of the dogs who are undergoing treatments?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "What is the average age of dogs undergoing any treatment?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "What is the cost of treatment and description of the treatment type?",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "What are the different breed codes and sizes of dogs?",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Find the id and cell number of the professionals with at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "Find the number of distinct dogs who are undergoing treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "Return the weight of the pet with the oldest age.",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Find the ids and cell numbers of the professionals that have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
        "question": "What are the names of all students that belong to the cat type and whose pet type is dog?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\"",
            "or",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What is the average and maximum pet age for each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What are the average and maximum ages of pets in each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 1",
        "question": "Who are the students that had more than one pet? List the student first name and gender.",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the weight of the pet with the oldest age?",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "How many physicians do not have any treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the ids, first names and last names of the owners with the greatest number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What are the average and maximum ages of pets for each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
        "question": "What is the last name of students who are 3 years old and have cat type?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "3",
            "and",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "What are the ids and cell numbers of the professionals who have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different kinds of dogs are involved in treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many different dogs do we have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "Find the cost of treatment and description of each treatment type.",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 1",
        "question": "What are the first names and genders of all students who have more than one pet?",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state = 'Alabama' OR state = 'Florida'",
        "question": "Show the email addresses of professionals in the state of Alabama or Florida.",
        "query_toks": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "\"Alabama\"",
            "or",
            "state",
            "=",
            "\"Florida\""
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
        "question": "What are the names of all students that have cat or dog as their pet type?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\"",
            "or",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first names of all owners who have a dog and the name of the owner?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE age < ( SELECT avg( age ) FROM Dogs )",
        "question": "How many dogs are younger than average?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
        "question": "What are the last names of the students who are 3 years old and have a cat?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "3",
            "and",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the owner id, first name and last name who has the most dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'",
        "question": "What is the full name and email address of the owner whose state is North?",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "from",
            "owners",
            "where",
            "state",
            "like",
            "\"%North%\""
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "from",
            "owners",
            "where",
            "state",
            "like",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "How many physicians are not involved in the treatments listed?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "What are the dates of arrival and departure for all dogs?",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'",
        "question": "What are the first name, last name, and email address of the owners whose state contains the word \"North\"?",
        "query_toks": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "from",
            "owners",
            "where",
            "state",
            "like",
            "\"%North%\""
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "from",
            "owners",
            "where",
            "state",
            "like",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners who do not have any dogs.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question": "What is the weight of the pet that has the oldest age?",
        "query_toks": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "What is the average age of all the dogs?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "Show the average age of all dogs.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count( * ) > 1",
        "question": "Show the first name and gender of all students who have at least one pet.",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
        "question": "Which students have either cat or dog as their pet type? Give me their first names.",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\"",
            "or",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type , charge_amount FROM Charges",
        "question": "Show the charge type and amount of all charges.",
        "query_toks": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets have a weight greater than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "Find the names of all owners who have a dog and the owner's first name.",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg( pet_age ) , max( pet_age ) , pettype FROM pets GROUP BY pettype",
        "question": "What are the average and maximum pet age for each pet type?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE age < ( SELECT avg( age ) FROM Dogs )",
        "question": "Find the number of dogs whose age is smaller than the average age.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id and last name of the owner who has the most treatments?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( DISTINCT dog_id ) FROM Treatments",
        "question": "How many distinct dogs are there for all treatments?",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the id and last name of the owner that have treated the most number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number and home phone number of all professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners who do not have a dog.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE age < ( SELECT avg( age ) FROM Dogs )",
        "question": "What is the number of dogs that is younger than the average age?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "Find the average age of the dogs that are treated by any treatment.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "What is the average age for all dogs?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 19",
        "question": "How many students are older than 19?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "where",
            "t1.age",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "Show the ids and cell numbers of the professionals who have at least two treatments.",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "Tell me the cost and description for each treatment type.",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type , charge_amount FROM Charges",
        "question": "List the charge type and their corresponding charge amount of all the charges",
        "query_toks": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
        "question": "What are the last names of all students who are 3 years old and have a cat?",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "3",
            "and",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pet_age",
            "=",
            "value",
            "and",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "What are the email address, cell number, and home phone number of all professionals?",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count( * ) >= 2",
        "question": "What are the ids and cell numbers of the professionals that have at least two treatments?",
        "query_toks": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.professional_id",
            ",",
            "t1.cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1.professional_id",
            "=",
            "t2.professional_id",
            "group",
            "by",
            "t1.professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "Show the number of all professionals without any treatment.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number, and home phone of all the professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Dogs WHERE age < ( SELECT avg( age ) FROM Dogs )",
        "question": "find the number of dogs whose age is younger than the average age.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
        "question": "What are the first names of all students who have a cat or a dog?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\"",
            "or",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets has a weight greater than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs",
        "question": "What is the average age for all the dogs?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first names of owners and the names of the dogs they are related to?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which owner has the greatest number of treatments? Tell me the owner id and last name.",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t1.last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2.dog_id",
            "=",
            "t3.dog_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "What are the cost and description of each treatment type?",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "question": "What are the cost of treatments and the description of the treatment type they correspond to?",
        "query_toks": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cost_of_treatment",
            ",",
            "t2.treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1.treatment_type_code",
            "=",
            "t2.treatment_type_code"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners who did not have any dogs.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "Count the number of professionals that are not involved in any treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code , size_code FROM dogs",
        "question": "List all the distinct breed codes and the sizes of dogs.",
        "query_toks": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg( age ) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question": "Find the average age of dogs who are undergoing any treatment.",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "What are the first names of owners as well as the names of the dogs they are related to?",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count( * ) FROM pets WHERE weight > 11",
        "question": "How many pets have a weight higher than 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "How many owners are not associated with the dogs listed?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type , charge_amount FROM Charges",
        "question": "Tell me the charge type and amount of each charge.",
        "query_toks": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address , cell_number , home_phone FROM professionals",
        "question": "List the email address, cell number and home phone number for all professionals.",
        "query_toks": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'",
        "question": "What are the ids of the students who do not have a cat?",
        "query_toks": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived , date_departed FROM Dogs",
        "question": "What are the arrival and departure dates of all dogs?",
        "query_toks": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question": "Count the number of owners that do not have any dogs.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the id, first name and last name of the owner who owns the greatest number of dogs?",
        "query_toks": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.owner_id",
            ",",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id",
            "group",
            "by",
            "t1.owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
        "question": "What are the first names of all the students who have a cat or a dog?",
        "query_toks": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\"",
            "or",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value",
            "or",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count( * ) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question": "Count the number of professionals who do not have any treatments.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'",
        "question": "Find the id of students that do not have a cat.",
        "query_toks": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\""
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",
        "question": "Find the first names of all owners who have a dog and the name of the owner.",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1.owner_id",
            "=",
            "t2.owner_id"
        ]
    },
    {
        "question": "Find the number of distinct room types available.",
        "masked_template": "Find the number of distinct <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?",
        "masked_template": "What is the number of <mask> that has <mask> whose <mask> is <mask> than the average <mask>",
        "query": "SELECT count( DISTINCT state ) FROM college WHERE enr < ( SELECT avg( enr ) FROM college )",
        "ted": 0.07692307692307693,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "state",
            ")",
            "from",
            "college",
            "where",
            "enr",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "enr",
            ")",
            "from",
            "college",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "state",
            ")",
            "from",
            "college",
            "where",
            "enr",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "enr",
            ")",
            "from",
            "college",
            ")"
        ]
    },
    {
        "question": "Find the first names of all instructors who have taught some course and the course code.",
        "masked_template": "Find the <mask> names of all <mask> who have <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ]
    },
    {
        "question": "List the names of all the channels owned by either CCTV or HBS",
        "masked_template": "List the names of all the <mask> by <mask> or HBS",
        "query": "SELECT name FROM channel WHERE OWNER = 'CCTV' OR OWNER = 'HBS'",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            "from",
            "channel",
            "where",
            "owner",
            "=",
            "\"CCTV\"",
            "or",
            "owner",
            "=",
            "\"HBS\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "where",
            "owner",
            "=",
            "value",
            "or",
            "owner",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?",
        "masked_template": "What are the names of all <mask> that <mask> or <mask> by <mask>",
        "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000",
        "ted": 0.057692307692307696,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "distinct",
            "t2.title",
            "from",
            "rating",
            "as",
            "t1",
            "join",
            "movie",
            "as",
            "t2",
            "on",
            "t1.mid",
            "=",
            "t2.mid",
            "join",
            "reviewer",
            "as",
            "t3",
            "on",
            "t1.rid",
            "=",
            "t3.rid",
            "where",
            "t3.name",
            "=",
            "\"Brittany Harris\"",
            "or",
            "t2.year",
            ">",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2.title",
            "from",
            "rating",
            "as",
            "t1",
            "join",
            "movie",
            "as",
            "t2",
            "on",
            "t1.mid",
            "=",
            "t2.mid",
            "join",
            "reviewer",
            "as",
            "t3",
            "on",
            "t1.rid",
            "=",
            "t3.rid",
            "where",
            "t3.name",
            "=",
            "value",
            "or",
            "t2.year",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the average amount due for all the payments?",
        "masked_template": "What is the average <mask> due for all the <mask>",
        "query": "SELECT avg( amount_due ) FROM payments",
        "ted": 0.0,
        "db_id": "products_for_hire",
        "query_toks": [
            "select",
            "avg",
            "(",
            "amount_due",
            ")",
            "from",
            "payments"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "amount_due",
            ")",
            "from",
            "payments"
        ]
    },
    {
        "question": "What are the first name and last name of all the teachers?",
        "masked_template": "What are the <mask> name and <mask> name of all the <mask>",
        "query": "SELECT DISTINCT firstname , lastname FROM teachers",
        "ted": 0.0,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "teachers"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "teachers"
        ]
    },
    {
        "question": "Show the first name, last name, and phone number for all female faculty members.",
        "masked_template": "Show the <mask> and <mask> number for all <mask>",
        "query": "SELECT Fname , Lname , phone FROM Faculty WHERE Sex = 'F'",
        "ted": 0.08333333333333333,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "fname",
            ",",
            "lname",
            ",",
            "phone",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"F\""
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            ",",
            "lname",
            ",",
            "phone",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value"
        ]
    },
    {
        "question": "Show names for all employees who do not have certificate of Boeing 737-800.",
        "masked_template": "Show names for all <mask> who do not have <mask> of <mask>",
        "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "employee",
            "except",
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "\"Boeing 737-800\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "employee",
            "except",
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the titles of all movies that were not reviewed by Chris Jackson?",
        "masked_template": "What are the <mask> of all <mask> that <mask> not <mask> by <mask>",
        "query": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Chris Jackson'",
        "ted": 0.037037037037037035,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "distinct",
            "title",
            "from",
            "movie",
            "except",
            "select",
            "t2.title",
            "from",
            "rating",
            "as",
            "t1",
            "join",
            "movie",
            "as",
            "t2",
            "on",
            "t1.mid",
            "=",
            "t2.mid",
            "join",
            "reviewer",
            "as",
            "t3",
            "on",
            "t1.rid",
            "=",
            "t3.rid",
            "where",
            "t3.name",
            "=",
            "\"Chris Jackson\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "title",
            "from",
            "movie",
            "except",
            "select",
            "t2.title",
            "from",
            "rating",
            "as",
            "t1",
            "join",
            "movie",
            "as",
            "t2",
            "on",
            "t1.mid",
            "=",
            "t2.mid",
            "join",
            "reviewer",
            "as",
            "t3",
            "on",
            "t1.rid",
            "=",
            "t3.rid",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the average and minimum weight for each gender.",
        "masked_template": "Find the average and <mask> for each <mask>",
        "query": "SELECT avg( weight ) , min( weight ) , sex FROM people GROUP BY sex",
        "ted": 0.045454545454545456,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ]
    },
    {
        "question": "What are the authors of submissions and their colleges?",
        "masked_template": "What are the <mask> of <mask> and their <mask>",
        "query": "SELECT Author , College FROM submission",
        "ted": 0.0,
        "db_id": "workshop_paper",
        "query_toks": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ],
        "query_toks_no_value": [
            "select",
            "author",
            ",",
            "college",
            "from",
            "submission"
        ]
    },
    {
        "question": "Find the names of all instructors who have taught some course and the course_id.",
        "masked_template": "Find the names of all <mask> who have <mask> and the <mask>",
        "query": "SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "name",
            ",",
            "course_id",
            "from",
            "instructor",
            "as",
            "t1",
            "join",
            "teaches",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "course_id",
            "from",
            "instructor",
            "as",
            "t1",
            "join",
            "teaches",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.id"
        ]
    },
    {
        "question": "Report the first name and last name of all the students.",
        "masked_template": "<mask> the <mask> name and <mask> name of all the <mask>",
        "query": "SELECT DISTINCT firstname , lastname FROM list",
        "ted": 0.0,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "list"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "firstname",
            ",",
            "lastname",
            "from",
            "list"
        ]
    },
    {
        "question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?",
        "masked_template": "What are the names of the <mask> in the <mask> that <mask> as <mask>",
        "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
        "ted": 0.04,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "enzyme",
            "as",
            "t1",
            "join",
            "medicine_enzyme_interaction",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.enzyme_id",
            "join",
            "medicine",
            "as",
            "t3",
            "on",
            "t2.medicine_id",
            "=",
            "t3.id",
            "where",
            "t3.name",
            "=",
            "\"Amisulpride\"",
            "and",
            "t2.interaction_type",
            "=",
            "\"inhibitor\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "enzyme",
            "as",
            "t1",
            "join",
            "medicine_enzyme_interaction",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.enzyme_id",
            "join",
            "medicine",
            "as",
            "t3",
            "on",
            "t2.medicine_id",
            "=",
            "t3.id",
            "where",
            "t3.name",
            "=",
            "value",
            "and",
            "t2.interaction_type",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?",
        "masked_template": "What are the names of all <mask> that <mask> to the <mask> and whose <mask> is <mask>",
        "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = 'Rock' OR T3.name = 'MPEG audio file'",
        "ted": 0.038461538461538464,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "genres",
            "as",
            "t1",
            "join",
            "tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.genre_id",
            "join",
            "media_types",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.media_type_id",
            "where",
            "t1.name",
            "=",
            "\"Rock\"",
            "or",
            "t3.name",
            "=",
            "\"MPEG audio file\""
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "genres",
            "as",
            "t1",
            "join",
            "tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.genre_id",
            "join",
            "media_types",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.media_type_id",
            "where",
            "t1.name",
            "=",
            "value",
            "or",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the average population of all counties.",
        "masked_template": "Show the average <mask> of all <mask>",
        "query": "SELECT avg( Population ) FROM county",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "county"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "county"
        ]
    },
    {
        "question": "What are the id and name of the mountains that have at least 2 photos?",
        "masked_template": "What are the id and name of the <mask> that have at least 2 <mask>",
        "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "t1.id",
            ",",
            "t1.name",
            "from",
            "mountain",
            "as",
            "t1",
            "join",
            "photos",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.mountain_id",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.id",
            ",",
            "t1.name",
            "from",
            "mountain",
            "as",
            "t1",
            "join",
            "photos",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.mountain_id",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many accelerators are not compatible with the browsers listed ?",
        "masked_template": "How many <mask> are not <mask> with the <mask> listed ?",
        "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
        "ted": 0.0,
        "db_id": "browser_web",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ]
    },
    {
        "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
        "masked_template": "What are the <mask> of <mask> and the <mask> of the <mask> to?",
        "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ]
    },
    {
        "question": "Show the names and ids of tourist attractions that are visited at least two times.",
        "masked_template": "Show the names and ids of <mask> that are <mask> at least two <mask>",
        "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
        "ted": 0.027777777777777776,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.tourist_attraction_id",
            "from",
            "tourist_attractions",
            "as",
            "t1",
            "join",
            "visits",
            "as",
            "t2",
            "on",
            "t1.tourist_attraction_id",
            "=",
            "t2.tourist_attraction_id",
            "group",
            "by",
            "t2.tourist_attraction_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.tourist_attraction_id",
            "from",
            "tourist_attractions",
            "as",
            "t1",
            "join",
            "visits",
            "as",
            "t2",
            "on",
            "t1.tourist_attraction_id",
            "=",
            "t2.tourist_attraction_id",
            "group",
            "by",
            "t2.tourist_attraction_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Count the number of customers who do not have an account.",
        "masked_template": "Count the number of <mask> who do not have an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "What is the average unit price of all the tracks?",
        "masked_template": "What is the average <mask> of all the <mask>",
        "query": "SELECT AVG( UnitPrice ) FROM TRACK",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "unitprice",
            ")",
            "from",
            "track"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "unitprice",
            ")",
            "from",
            "track"
        ]
    },
    {
        "question": "Give the full name and customer id of the customer with the fewest accounts.",
        "masked_template": "<mask> the <mask> name and <mask> id of the <mask> with the <mask>",
        "query": "SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count( * ) ASC LIMIT 1",
        "ted": 0.025,
        "db_id": "customers_card_transactions",
        "query_toks": [
            "select",
            "t2.customer_first_name",
            ",",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_first_name",
            ",",
            "t2.customer_last_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the order detail for the products with price above 2000.",
        "masked_template": "Find the order <mask> for the <mask> with <mask>",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
        "ted": 0.07142857142857142,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "t1.other_item_details",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t2.product_price",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the location and nickname of each school?",
        "masked_template": "What are the <mask> and <mask> of each <mask>",
        "query": "SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "t1.location",
            ",",
            "t2.nickname",
            "from",
            "school",
            "as",
            "t1",
            "join",
            "school_details",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.location",
            ",",
            "t2.nickname",
            "from",
            "school",
            "as",
            "t1",
            "join",
            "school_details",
            "as",
            "t2",
            "on",
            "t1.school_id",
            "=",
            "t2.school_id"
        ]
    },
    {
        "question": "What are the distinct registration dates and the election cycles?",
        "masked_template": "What are the distinct <mask> and the <mask>",
        "query": "SELECT DISTINCT Registration_Date , Election_Cycle FROM VOTING_RECORD",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "distinct",
            "registration_date",
            ",",
            "election_cycle",
            "from",
            "voting_record"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "registration_date",
            ",",
            "election_cycle",
            "from",
            "voting_record"
        ]
    },
    {
        "question": "What are the grade number and classroom number of each class in the list?",
        "masked_template": "What are the <mask> number and <mask> number of each <mask> in the <mask>",
        "query": "SELECT DISTINCT classroom , grade FROM list",
        "ted": 0.0,
        "db_id": "student_1",
        "query_toks": [
            "select",
            "distinct",
            "classroom",
            ",",
            "grade",
            "from",
            "list"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "classroom",
            ",",
            "grade",
            "from",
            "list"
        ]
    },
    {
        "question": "How many different types of rooms are there?",
        "masked_template": "How many different <mask> of <mask> are <mask>",
        "query": "SELECT count( DISTINCT roomtype ) FROM room",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "roomtype",
            ")",
            "from",
            "room"
        ]
    },
    {
        "question": "Find the name and email for the users who have more than one follower.",
        "masked_template": "Find the name and <mask> for the <mask> who have more than one <mask>",
        "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "twitter_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the id and surname of the driver who participated the most number of races?",
        "masked_template": "Find the id and <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the manager's first name, last name and id who won the most manager award?",
        "masked_template": "What are the <mask> name and id who won the most <mask>",
        "query": "SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name_first",
            ",",
            "t1.name_last",
            ",",
            "t2.player_id",
            "from",
            "player",
            "as",
            "t1",
            "join",
            "manager_award",
            "as",
            "t2",
            "on",
            "t1.player_id",
            "=",
            "t2.player_id",
            "group",
            "by",
            "t2.player_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "masked_template": "How many distinct <mask> are there for all <mask>",
        "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "currency_code",
            ")",
            "from",
            "drama_workshop_groups"
        ]
    },
    {
        "question": "Show names of ships involved in a mission launched after 1928.",
        "masked_template": "Show names of <mask> in a <mask>",
        "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928",
        "ted": 0.07142857142857142,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "mission",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "where",
            "t1.launched_year",
            ">",
            "1928"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "mission",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1.ship_id",
            "=",
            "t2.ship_id",
            "where",
            "t1.launched_year",
            ">",
            "value"
        ]
    },
    {
        "question": "Count the number of markets that have a number of cities lower than 300.",
        "masked_template": "Count the number of <mask> that have a number of <mask> than <mask>",
        "query": "SELECT count( * ) FROM market WHERE Number_cities < 300",
        "ted": 0.0625,
        "db_id": "film_rank",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "<",
            "300"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "<",
            "value"
        ]
    },
    {
        "question": "Show the account id and name with at least 4 transactions.",
        "masked_template": "Show the <mask> id and name with at least 4 <mask>",
        "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the average and oldest age for each gender of student?",
        "masked_template": "What is the average and <mask> age for each <mask> of <mask>",
        "query": "SELECT avg( age ) , max( age ) , sex FROM student GROUP BY sex",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            ",",
            "sex",
            "from",
            "student",
            "group",
            "by",
            "sex"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            ",",
            "sex",
            "from",
            "student",
            "group",
            "by",
            "sex"
        ]
    },
    {
        "question": "What are the nationalities and ages of journalists?",
        "masked_template": "What are the <mask> and <mask> of <mask>",
        "query": "SELECT Nationality , Age FROM journalist",
        "ted": 0.0,
        "db_id": "news_report",
        "query_toks": [
            "select",
            "nationality",
            ",",
            "age",
            "from",
            "journalist"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "age",
            "from",
            "journalist"
        ]
    },
    {
        "question": "How many different colleges do attend the tryout test?",
        "masked_template": "How many different <mask> do <mask> the <mask>",
        "query": "SELECT count( DISTINCT cName ) FROM tryout",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "cname",
            ")",
            "from",
            "tryout"
        ]
    },
    {
        "question": "How many clubs does \"Linda Smith\" belong to?",
        "masked_template": "How many <mask> to?",
        "query": "SELECT count( * ) FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T3.fname = 'Linda' AND T3.lname = 'Smith'",
        "ted": 0.057692307692307696,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "member_of_club",
            "as",
            "t2",
            "on",
            "t1.clubid",
            "=",
            "t2.clubid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stuid",
            "=",
            "t3.stuid",
            "where",
            "t3.fname",
            "=",
            "\"Linda\"",
            "and",
            "t3.lname",
            "=",
            "\"Smith\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "member_of_club",
            "as",
            "t2",
            "on",
            "t1.clubid",
            "=",
            "t2.clubid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stuid",
            "=",
            "t3.stuid",
            "where",
            "t3.fname",
            "=",
            "value",
            "and",
            "t3.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Display the first name and department name for each employee.",
        "masked_template": "<mask> the <mask> name and <mask> name for each <mask>",
        "query": "SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.first_name",
            ",",
            "t2.department_name",
            "from",
            "employees",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id"
        ]
    },
    {
        "question": "Show the number of all customers without an account.",
        "masked_template": "Show the number of all <mask> an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_card_transactions",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "How many budget record has a budget amount smaller than the invested amount?",
        "masked_template": "How many <mask> has a <mask> than the <mask>",
        "query": "SELECT count( * ) FROM budget WHERE budgeted < invested",
        "ted": 0.0625,
        "db_id": "school_finance",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "budget",
            "where",
            "budgeted",
            "<",
            "invested"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "budget",
            "where",
            "budgeted",
            "<",
            "invested"
        ]
    },
    {
        "question": "How many flights have a velocity larger than 200?",
        "masked_template": "How many <mask> have a <mask> than <mask>",
        "query": "SELECT count( * ) FROM flight WHERE velocity > 200",
        "ted": 0.0,
        "db_id": "flight_company",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flight",
            "where",
            "velocity",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flight",
            "where",
            "velocity",
            ">",
            "value"
        ]
    },
    {
        "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
        "masked_template": "Who are the <mask> that had more than 1 <mask> List the <mask> and id.",
        "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "t1.customer_details",
            ",",
            "t1.customer_id",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_details",
            ",",
            "t1.customer_id",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the average and minimum weights for people of each sex?",
        "masked_template": "What are the average and <mask> for <mask> of each <mask>",
        "query": "SELECT avg( weight ) , min( weight ) , sex FROM people GROUP BY sex",
        "ted": 0.045454545454545456,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "min",
            "(",
            "weight",
            ")",
            ",",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex"
        ]
    },
    {
        "question": "What is the id of the candidate with the lowest oppose rate?",
        "masked_template": "What is the id of the <mask> with the <mask>",
        "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "candidate_id",
            "from",
            "candidate",
            "order",
            "by",
            "oppose_rate",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_id",
            "from",
            "candidate",
            "order",
            "by",
            "oppose_rate",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the first names of all students who took ACCT-211 and received a C?",
        "masked_template": "What are the <mask> names of all <mask> who <mask> and <mask> a C?",
        "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
        "ted": 0.04,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t3.stu_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "enroll",
            "as",
            "t2",
            "on",
            "t1.class_code",
            "=",
            "t2.class_code",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stu_num",
            "=",
            "t3.stu_num",
            "where",
            "t1.crs_code",
            "=",
            "\"ACCT-211\"",
            "and",
            "t2.enroll_grade",
            "=",
            "\"C\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.stu_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "enroll",
            "as",
            "t2",
            "on",
            "t1.class_code",
            "=",
            "t2.class_code",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stu_num",
            "=",
            "t3.stu_num",
            "where",
            "t1.crs_code",
            "=",
            "value",
            "and",
            "t2.enroll_grade",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
        "masked_template": "What are the <mask> names of all <mask> who have <mask> a <mask> and the <mask>",
        "query": "SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ],
        "query_toks_no_value": [
            "select",
            "t2.emp_fname",
            ",",
            "t1.crs_code",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "employee",
            "as",
            "t2",
            "on",
            "t1.prof_num",
            "=",
            "t2.emp_num"
        ]
    },
    {
        "question": "Find the name of the product that has the smallest capacity.",
        "masked_template": "Find the name of the <mask> that has the <mask>",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "order",
            "by",
            "capacity",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "order",
            "by",
            "capacity",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many accelerators are not compatible with the browsers listed ?",
        "masked_template": "How many <mask> are not <mask> with the <mask> listed ?",
        "query": "SELECT count( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ",
        "ted": 0.0,
        "db_id": "browser_web",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            ")"
        ]
    },
    {
        "question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?",
        "masked_template": "What is the <mask> and <mask> of the <mask> at <mask>",
        "query": "SELECT product , chromosome , porphyria FROM enzyme WHERE LOCATION = 'Cytosol'",
        "ted": 0.08333333333333333,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "product",
            ",",
            "chromosome",
            ",",
            "porphyria",
            "from",
            "enzyme",
            "where",
            "location",
            "=",
            "\"Cytosol\""
        ],
        "query_toks_no_value": [
            "select",
            "product",
            ",",
            "chromosome",
            ",",
            "porphyria",
            "from",
            "enzyme",
            "where",
            "location",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the first name of students enrolled in class ACCT-211 and got grade C?",
        "masked_template": "What is the <mask> name of <mask> in <mask> and got <mask> C?",
        "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
        "ted": 0.04,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "t3.stu_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "enroll",
            "as",
            "t2",
            "on",
            "t1.class_code",
            "=",
            "t2.class_code",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stu_num",
            "=",
            "t3.stu_num",
            "where",
            "t1.crs_code",
            "=",
            "\"ACCT-211\"",
            "and",
            "t2.enroll_grade",
            "=",
            "\"C\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.stu_fname",
            "from",
            "class",
            "as",
            "t1",
            "join",
            "enroll",
            "as",
            "t2",
            "on",
            "t1.class_code",
            "=",
            "t2.class_code",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stu_num",
            "=",
            "t3.stu_num",
            "where",
            "t1.crs_code",
            "=",
            "value",
            "and",
            "t2.enroll_grade",
            "=",
            "value"
        ]
    },
    {
        "question": "Which part fault requires the most number of skills to fix? List part id and name.",
        "masked_template": "Which <mask> the most number of <mask> to <mask> List <mask> id and <mask>",
        "query": "SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.part_id",
            ",",
            "t1.part_name",
            "from",
            "parts",
            "as",
            "t1",
            "join",
            "part_faults",
            "as",
            "t2",
            "on",
            "t1.part_id",
            "=",
            "t2.part_id",
            "join",
            "skills_required_to_fix",
            "as",
            "t3",
            "on",
            "t2.part_fault_id",
            "=",
            "t3.part_fault_id",
            "group",
            "by",
            "t1.part_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
        "masked_template": "What are the <mask> number and <mask> of the <mask> who <mask> the <mask> number of <mask>",
        "query": "SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.customer_name",
            ",",
            "t1.customer_phone",
            ",",
            "t1.customer_email",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_orders",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t2.customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "What is the total population for all the districts that have an area larger tahn the average city area?",
        "masked_template": "What is the total <mask> for all the <mask> that have an <mask> the average <mask>",
        "query": "SELECT sum( city_population ) FROM district WHERE city_area > ( SELECT avg( city_area ) FROM district )",
        "ted": 0.08333333333333333,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "sum",
            "(",
            "city_population",
            ")",
            "from",
            "district",
            "where",
            "city_area",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "city_area",
            ")",
            "from",
            "district",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "city_population",
            ")",
            "from",
            "district",
            "where",
            "city_area",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "city_area",
            ")",
            "from",
            "district",
            ")"
        ]
    },
    {
        "question": "How many different cities have these stations?",
        "masked_template": "How many different <mask> have <mask>",
        "query": "SELECT count( DISTINCT city ) FROM station",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "distinct",
            "city",
            ")",
            "from",
            "station"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "city",
            ")",
            "from",
            "station"
        ]
    },
    {
        "question": "List the season, home team, away team of all the games.",
        "masked_template": "List the <mask> of all the <mask>",
        "query": "SELECT season , home_team , away_team FROM game",
        "ted": 0.0,
        "db_id": "game_injury",
        "query_toks": [
            "select",
            "season",
            ",",
            "home_team",
            ",",
            "away_team",
            "from",
            "game"
        ],
        "query_toks_no_value": [
            "select",
            "season",
            ",",
            "home_team",
            ",",
            "away_team",
            "from",
            "game"
        ]
    },
    {
        "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
        "masked_template": "What are the <mask> of <mask> and the <mask> of the <mask> to?",
        "query": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.white",
            ",",
            "t2.crime_rate",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "find the name of people whose height is lower than the average.",
        "masked_template": "find the name of <mask> whose <mask> is <mask> than the <mask>",
        "query": "SELECT name FROM people WHERE height < ( SELECT avg( height ) FROM people )",
        "ted": 0.08333333333333333,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "height",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "height",
            ")",
            "from",
            "people",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "height",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "height",
            ")",
            "from",
            "people",
            ")"
        ]
    },
    {
        "question": "Count the number of courses without prerequisites.",
        "masked_template": "Count the number of <mask>",
        "query": "SELECT count( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "Show the delegate and committee information of elections.",
        "masked_template": "Show the <mask> and <mask> of <mask>",
        "query": "SELECT Delegate , Committee FROM election",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ]
    },
    {
        "question": "What is the total kills of the perpetrators with height more than 1.84.",
        "masked_template": "What is the total <mask> of the <mask> with <mask> more than <mask>",
        "query": "SELECT sum( T2.Killed ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84",
        "ted": 0.03571428571428571,
        "db_id": "perpetrator",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t2.killed",
            ")",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "perpetrator",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t1.height",
            ">",
            "1.84"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t2.killed",
            ")",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "perpetrator",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t1.height",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the average enrollment number?",
        "masked_template": "What is the average <mask>",
        "query": "SELECT avg( enr ) FROM College",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "avg",
            "(",
            "enr",
            ")",
            "from",
            "college"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "enr",
            ")",
            "from",
            "college"
        ]
    },
    {
        "question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?",
        "masked_template": "What are the names of the <mask> of the <mask> that have the <mask>",
        "query": "SELECT T3.characteristic_name FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'sesame' AND T3.characteristic_type_code = 'Grade'",
        "ted": 0.04,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "t3.characteristic_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "join",
            "characteristics",
            "as",
            "t3",
            "on",
            "t2.characteristic_id",
            "=",
            "t3.characteristic_id",
            "where",
            "t1.product_name",
            "=",
            "\"sesame\"",
            "and",
            "t3.characteristic_type_code",
            "=",
            "\"Grade\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.characteristic_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "join",
            "characteristics",
            "as",
            "t3",
            "on",
            "t2.characteristic_id",
            "=",
            "t3.characteristic_id",
            "where",
            "t1.product_name",
            "=",
            "value",
            "and",
            "t3.characteristic_type_code",
            "=",
            "value"
        ]
    },
    {
        "question": "List all the distinct president votes and the vice president votes.",
        "masked_template": "List all the distinct <mask> and the <mask>",
        "query": "SELECT DISTINCT President_Vote , VICE_President_Vote FROM VOTING_RECORD",
        "ted": 0.0,
        "db_id": "voter_2",
        "query_toks": [
            "select",
            "distinct",
            "president_vote",
            ",",
            "vice_president_vote",
            "from",
            "voting_record"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "president_vote",
            ",",
            "vice_president_vote",
            "from",
            "voting_record"
        ]
    },
    {
        "question": "What are the average price and score of wines for each appelation?",
        "masked_template": "What are the average <mask> and <mask> of <mask> for each <mask>",
        "query": "SELECT avg( Price ) , avg( Score ) , Appelation FROM WINE GROUP BY Appelation",
        "ted": 0.045454545454545456,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "price",
            ")",
            ",",
            "avg",
            "(",
            "score",
            ")",
            ",",
            "appelation",
            "from",
            "wine",
            "group",
            "by",
            "appelation"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "price",
            ")",
            ",",
            "avg",
            "(",
            "score",
            ")",
            ",",
            "appelation",
            "from",
            "wine",
            "group",
            "by",
            "appelation"
        ]
    },
    {
        "question": "Return the characters and durations for each actor.",
        "masked_template": "Return the <mask> and <mask> for each <mask>",
        "query": "SELECT Character , Duration FROM actor",
        "ted": 0.0,
        "db_id": "musical",
        "query_toks": [
            "select",
            "character",
            ",",
            "duration",
            "from",
            "actor"
        ],
        "query_toks_no_value": [
            "select",
            "character",
            ",",
            "duration",
            "from",
            "actor"
        ]
    },
    {
        "question": "List the name, location, mascot for all schools.",
        "masked_template": "List the <mask> for all <mask>",
        "query": "SELECT school_name , LOCATION , mascot FROM school",
        "ted": 0.0,
        "db_id": "school_finance",
        "query_toks": [
            "select",
            "school_name",
            ",",
            "location",
            ",",
            "mascot",
            "from",
            "school"
        ],
        "query_toks_no_value": [
            "select",
            "school_name",
            ",",
            "location",
            ",",
            "mascot",
            "from",
            "school"
        ]
    },
    {
        "question": "Count the number of documents that do not have expenses.",
        "masked_template": "Count the number of <mask> that do not have <mask>",
        "query": "SELECT count( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "where",
            "document_id",
            "not",
            "in",
            "(",
            "select",
            "document_id",
            "from",
            "documents_with_expenses",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "where",
            "document_id",
            "not",
            "in",
            "(",
            "select",
            "document_id",
            "from",
            "documents_with_expenses",
            ")"
        ]
    },
    {
        "question": "What are the names of the songs that are modern or sung in English?",
        "masked_template": "What are the names of the <mask> that are <mask> or <mask> in <mask>",
        "query": "SELECT song_name FROM song WHERE genre_is = 'modern' OR languages = 'english'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "genre_is",
            "=",
            "\"modern\"",
            "or",
            "languages",
            "=",
            "\"english\""
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "genre_is",
            "=",
            "value",
            "or",
            "languages",
            "=",
            "value"
        ]
    },
    {
        "question": "Count the number of colors that are not used in any products.",
        "masked_template": "Count the number of <mask> that are not <mask> in any <mask>",
        "query": "SELECT count( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
        "ted": 0.0,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "not",
            "in",
            "(",
            "select",
            "color_code",
            "from",
            "products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "not",
            "in",
            "(",
            "select",
            "color_code",
            "from",
            "products",
            ")"
        ]
    },
    {
        "question": "Give me the detail and opening hour for each museum.",
        "masked_template": "<mask> me the <mask> and <mask> for each <mask>",
        "query": "SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.museum_details",
            ",",
            "t2.opening_hours",
            "from",
            "museums",
            "as",
            "t1",
            "join",
            "tourist_attractions",
            "as",
            "t2",
            "on",
            "t1.museum_id",
            "=",
            "t2.tourist_attraction_id"
        ]
    },
    {
        "question": "Give the total money requested by entrepreneurs who are taller than 1.85.",
        "masked_template": "<mask> the total <mask> by <mask> who are <mask> than <mask>",
        "query": "SELECT sum( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85",
        "ted": 0.03571428571428571,
        "db_id": "entrepreneur",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "1.85"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".",
        "masked_template": "Find the <mask> of the <mask> whose <mask> name is <mask> or <mask>",
        "query": "SELECT date_of_latest_logon FROM Students WHERE family_name = 'Jaskolski' OR family_name = 'Langosh'",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "date_of_latest_logon",
            "from",
            "students",
            "where",
            "family_name",
            "=",
            "\"Jaskolski\"",
            "or",
            "family_name",
            "=",
            "\"Langosh\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_latest_logon",
            "from",
            "students",
            "where",
            "family_name",
            "=",
            "value",
            "or",
            "family_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the names of stadiums whose capacity is smaller than the average capacity.",
        "masked_template": "Find the names of <mask> whose <mask> is <mask> than the average <mask>",
        "query": "SELECT name FROM stadium WHERE capacity < ( SELECT avg( capacity ) FROM stadium )",
        "ted": 0.08333333333333333,
        "db_id": "swimming",
        "query_toks": [
            "select",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            "from",
            "stadium",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            "from",
            "stadium",
            ")"
        ]
    },
    {
        "question": "What are the names of cities, as well as the names of the counties they correspond to?",
        "masked_template": "What are the names of <mask> as <mask> as the names of the <mask> to?",
        "query": "SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "ted": 0.0,
        "db_id": "county_public_safety",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t2.name",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "county_public_safety",
            "as",
            "t2",
            "on",
            "t1.county_id",
            "=",
            "t2.county_id"
        ]
    },
    {
        "question": "Show the names of companies in the banking or retailing industry?",
        "masked_template": "Show the names of <mask> in the <mask> or <mask>",
        "query": "SELECT Name FROM company WHERE Industry = 'Banking' OR Industry = 'Retailing'",
        "ted": 0.0,
        "db_id": "company_employee",
        "query_toks": [
            "select",
            "name",
            "from",
            "company",
            "where",
            "industry",
            "=",
            "\"Banking\"",
            "or",
            "industry",
            "=",
            "\"Retailing\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "company",
            "where",
            "industry",
            "=",
            "value",
            "or",
            "industry",
            "=",
            "value"
        ]
    },
    {
        "question": "Which building has the largest number of company offices? Give me the building name.",
        "masked_template": "Which <mask> has the <mask> number of <mask> me the <mask>",
        "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.08333333333333333,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id",
            "group",
            "by",
            "t1.building_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "office_locations",
            "as",
            "t1",
            "join",
            "buildings",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.id",
            "join",
            "companies",
            "as",
            "t3",
            "on",
            "t1.company_id",
            "=",
            "t3.id",
            "group",
            "by",
            "t1.building_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the count of enzymes without any interactions?",
        "masked_template": "What is the count of <mask> any <mask>",
        "query": "SELECT count( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ",
        "ted": 0.09090909090909091,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "enzyme",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "enzyme_id",
            "from",
            "medicine_enzyme_interaction",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "enzyme",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "enzyme_id",
            "from",
            "medicine_enzyme_interaction",
            ")"
        ]
    },
    {
        "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
        "masked_template": "Find the <mask> and <mask> IDs of the <mask> that <mask> at least two <mask>",
        "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.address_line_1",
            ",",
            "t2.author_id",
            "from",
            "course_authors_and_tutors",
            "as",
            "t1",
            "join",
            "courses",
            "as",
            "t2",
            "on",
            "t1.author_id",
            "=",
            "t2.author_id",
            "group",
            "by",
            "t2.author_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the average credit score for customers who have taken a loan?",
        "masked_template": "What is the average <mask> for <mask> who have <mask> a <mask>",
        "query": "SELECT avg( credit_score ) FROM customer WHERE cust_id IN ( SELECT cust_id FROM loan )",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "credit_score",
            ")",
            "from",
            "customer",
            "where",
            "cust_id",
            "in",
            "(",
            "select",
            "cust_id",
            "from",
            "loan",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "credit_score",
            ")",
            "from",
            "customer",
            "where",
            "cust_id",
            "in",
            "(",
            "select",
            "cust_id",
            "from",
            "loan",
            ")"
        ]
    },
    {
        "question": "Find the student ID and personal name of the student with at least two enrollments.",
        "masked_template": "Find the <mask> ID and <mask> name of the <mask> with at least two <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.",
        "masked_template": "Which <mask> did the <mask> me the <mask>",
        "query": "SELECT T3.title FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T1.fname = 'Olin' AND T1.lname = 'Shivers'",
        "ted": 0.057692307692307696,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "t3.title",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t1.fname",
            "=",
            "\"Olin\"",
            "and",
            "t1.lname",
            "=",
            "\"Shivers\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.title",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t1.fname",
            "=",
            "value",
            "and",
            "t1.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Count the number of customers who do not have an account.",
        "masked_template": "Count the number of <mask> who do not have an <mask>",
        "query": "SELECT count( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts )",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "accounts",
            ")"
        ]
    },
    {
        "question": "What is the id of the trip that has the shortest duration?",
        "masked_template": "What is the id of the <mask> that has the <mask>",
        "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "id",
            "from",
            "trip",
            "order",
            "by",
            "duration",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "trip",
            "order",
            "by",
            "duration",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the number of colleges with a student population greater than 15000?",
        "masked_template": "What is the number of <mask> with a <mask> than <mask>",
        "query": "SELECT count( * ) FROM College WHERE enr > 15000",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "college",
            "where",
            "enr",
            ">",
            "15000"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "college",
            "where",
            "enr",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the number of items without any review.",
        "masked_template": "Find the number of <mask> any <mask>",
        "query": "SELECT count( * ) FROM item WHERE i_id NOT IN ( SELECT i_id FROM review )",
        "ted": 0.09090909090909091,
        "db_id": "epinions_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "item",
            "where",
            "i_id",
            "not",
            "in",
            "(",
            "select",
            "i_id",
            "from",
            "review",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "item",
            "where",
            "i_id",
            "not",
            "in",
            "(",
            "select",
            "i_id",
            "from",
            "review",
            ")"
        ]
    },
    {
        "question": "How many camera lenses are not used in taking any photos?",
        "masked_template": "How many <mask> are not <mask> in <mask> any <mask>",
        "query": "SELECT count( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "camera_lens",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "camera_lens_id",
            "from",
            "photos",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "camera_lens",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "camera_lens_id",
            "from",
            "photos",
            ")"
        ]
    },
    {
        "question": "What are the maximum price and score of wines in each year?",
        "masked_template": "What are the maximum <mask> and <mask> of <mask> in each <mask>",
        "query": "SELECT max( Price ) , max( Score ) , YEAR FROM WINE GROUP BY YEAR",
        "ted": 0.045454545454545456,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "max",
            "(",
            "price",
            ")",
            ",",
            "max",
            "(",
            "score",
            ")",
            ",",
            "year",
            "from",
            "wine",
            "group",
            "by",
            "year"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "price",
            ")",
            ",",
            "max",
            "(",
            "score",
            ")",
            ",",
            "year",
            "from",
            "wine",
            "group",
            "by",
            "year"
        ]
    },
    {
        "question": "What are the ids and last names of all drivers who participated in the most races?",
        "masked_template": "What are the ids and <mask> names of all <mask> who <mask> in the most <mask>",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "formula_1",
        "query_toks": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.driverid",
            ",",
            "t1.surname",
            "from",
            "drivers",
            "as",
            "t1",
            "join",
            "results",
            "as",
            "t2",
            "on",
            "t1.driverid",
            "=",
            "t2.driverid",
            "join",
            "races",
            "as",
            "t3",
            "on",
            "t2.raceid",
            "=",
            "t3.raceid",
            "group",
            "by",
            "t1.driverid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"",
        "masked_template": "Show the <mask> of the <mask> at <mask> \"TD <mask> or <mask>",
        "query": "SELECT Attendance FROM performance WHERE LOCATION = 'TD Garden' OR LOCATION = 'Bell Centre'",
        "ted": 0.0,
        "db_id": "performance_attendance",
        "query_toks": [
            "select",
            "attendance",
            "from",
            "performance",
            "where",
            "location",
            "=",
            "\"TD Garden\"",
            "or",
            "location",
            "=",
            "\"Bell Centre\""
        ],
        "query_toks_no_value": [
            "select",
            "attendance",
            "from",
            "performance",
            "where",
            "location",
            "=",
            "value",
            "or",
            "location",
            "=",
            "value"
        ]
    },
    {
        "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
        "masked_template": "Which <mask> log <mask> the most number of <mask> List the <mask> log id, <mask> and <mask>",
        "query": "SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "assets_maintenance",
        "query_toks": [
            "select",
            "t1.fault_log_entry_id",
            ",",
            "t1.fault_description",
            ",",
            "t1.fault_log_entry_datetime",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id",
            "group",
            "by",
            "t1.fault_log_entry_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fault_log_entry_id",
            ",",
            "t1.fault_description",
            ",",
            "t1.fault_log_entry_datetime",
            "from",
            "fault_log",
            "as",
            "t1",
            "join",
            "fault_log_parts",
            "as",
            "t2",
            "on",
            "t1.fault_log_entry_id",
            "=",
            "t2.fault_log_entry_id",
            "group",
            "by",
            "t1.fault_log_entry_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
        "masked_template": "Which <mask> are <mask> in at least two <mask> me the <mask> ID and <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "List the name, origin and owner of each program.",
        "masked_template": "List the <mask> and <mask> of each <mask>",
        "query": "SELECT name , origin , OWNER FROM program",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ]
    },
    {
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "masked_template": "Which <mask> more than one <mask> me the name and <mask> number of <mask>",
        "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
        "ted": 0.0,
        "db_id": "hospital_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "phone",
            "from",
            "appointment",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.patient",
            "=",
            "t2.ssn",
            "group",
            "by",
            "t1.patient",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "phone",
            "from",
            "appointment",
            "as",
            "t1",
            "join",
            "patient",
            "as",
            "t2",
            "on",
            "t1.patient",
            "=",
            "t2.ssn",
            "group",
            "by",
            "t1.patient",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Find the name of dorms that do not have amenity TV Lounge.",
        "masked_template": "Find the name of <mask> that do not have <mask> TV <mask>",
        "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "except",
            "select",
            "t1.dorm_name",
            "from",
            "dorm",
            "as",
            "t1",
            "join",
            "has_amenity",
            "as",
            "t2",
            "on",
            "t1.dormid",
            "=",
            "t2.dormid",
            "join",
            "dorm_amenity",
            "as",
            "t3",
            "on",
            "t2.amenid",
            "=",
            "t3.amenid",
            "where",
            "t3.amenity_name",
            "=",
            "\"TV Lounge\""
        ],
        "query_toks_no_value": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "except",
            "select",
            "t1.dorm_name",
            "from",
            "dorm",
            "as",
            "t1",
            "join",
            "has_amenity",
            "as",
            "t2",
            "on",
            "t1.dormid",
            "=",
            "t2.dormid",
            "join",
            "dorm_amenity",
            "as",
            "t3",
            "on",
            "t2.amenid",
            "=",
            "t3.amenid",
            "where",
            "t3.amenity_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the protein name and the institution name.",
        "masked_template": "Show the <mask> name and the <mask>",
        "query": "SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",
        "ted": 0.0,
        "db_id": "protein_institute",
        "query_toks": [
            "select",
            "t2.protein_name",
            ",",
            "t1.institution",
            "from",
            "institution",
            "as",
            "t1",
            "join",
            "protein",
            "as",
            "t2",
            "on",
            "t1.institution_id",
            "=",
            "t2.institution_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2.protein_name",
            ",",
            "t1.institution",
            "from",
            "institution",
            "as",
            "t1",
            "join",
            "protein",
            "as",
            "t2",
            "on",
            "t1.institution_id",
            "=",
            "t2.institution_id"
        ]
    },
    {
        "question": "What is the total money requested by entrepreneurs with height more than 1.85?",
        "masked_template": "What is the total <mask> by <mask> with <mask> more than <mask>",
        "query": "SELECT sum( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85",
        "ted": 0.03571428571428571,
        "db_id": "entrepreneur",
        "query_toks": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "1.85"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t1.money_requested",
            ")",
            "from",
            "entrepreneur",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.people_id",
            "=",
            "t2.people_id",
            "where",
            "t2.height",
            ">",
            "value"
        ]
    },
    {
        "question": "List the council tax ids and their related cmi cross references of all the parking fines.",
        "masked_template": "List the <mask> tax ids and their <mask> cmi <mask> of all the <mask>",
        "query": "SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "ted": 0.0,
        "db_id": "local_govt_mdm",
        "query_toks": [
            "select",
            "council_tax_id",
            ",",
            "cmi_cross_ref_id",
            "from",
            "parking_fines"
        ],
        "query_toks_no_value": [
            "select",
            "council_tax_id",
            ",",
            "cmi_cross_ref_id",
            "from",
            "parking_fines"
        ]
    },
    {
        "question": "What are the name, origin and owner of each program?",
        "masked_template": "What are the <mask> and <mask> of each <mask>",
        "query": "SELECT name , origin , OWNER FROM program",
        "ted": 0.0,
        "db_id": "program_share",
        "query_toks": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "origin",
            ",",
            "owner",
            "from",
            "program"
        ]
    },
    {
        "question": "Which institution does \"Katsuhiro Ueno\" belong to?",
        "masked_template": "Which <mask> to?",
        "query": "SELECT DISTINCT T3.name FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN inst AS T3 ON T2.instid = T3.instid WHERE T1.fname = 'Katsuhiro' AND T1.lname = 'Ueno'",
        "ted": 0.019230769230769232,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "inst",
            "as",
            "t3",
            "on",
            "t2.instid",
            "=",
            "t3.instid",
            "where",
            "t1.fname",
            "=",
            "\"Katsuhiro\"",
            "and",
            "t1.lname",
            "=",
            "\"Ueno\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "inst",
            "as",
            "t3",
            "on",
            "t2.instid",
            "=",
            "t3.instid",
            "where",
            "t1.fname",
            "=",
            "value",
            "and",
            "t1.lname",
            "=",
            "value"
        ]
    },
    {
        "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
        "masked_template": "Return the <mask> and names of the <mask> that have more than two <mask> in.",
        "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.course_description",
            ",",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_description",
            ",",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_course_enrolment",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What are the title, id, and description of the movie with the greatest number of actors?",
        "masked_template": "What are the <mask> id, and <mask> of the <mask> with the <mask> number of <mask>",
        "query": "SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.title",
            ",",
            "t2.film_id",
            ",",
            "t2.description",
            "from",
            "film_actor",
            "as",
            "t1",
            "join",
            "film",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t2.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the delegate and committee information of elections.",
        "masked_template": "Show the <mask> and <mask> of <mask>",
        "query": "SELECT Delegate , Committee FROM election",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            ",",
            "committee",
            "from",
            "election"
        ]
    },
    {
        "question": "Find the name of customer who has the lowest credit score.",
        "masked_template": "Find the name of <mask> who has the <mask>",
        "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
        "ted": 0.0,
        "db_id": "loan_1",
        "query_toks": [
            "select",
            "cust_name",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            "from",
            "customer",
            "order",
            "by",
            "credit_score",
            "limit",
            "value"
        ]
    },
    {
        "question": "List the creation year, name and budget of each department.",
        "masked_template": "List the <mask> name and <mask> of each <mask>",
        "query": "SELECT creation , name , budget_in_billions FROM department",
        "ted": 0.0,
        "db_id": "department_management",
        "query_toks": [
            "select",
            "creation",
            ",",
            "name",
            ",",
            "budget_in_billions",
            "from",
            "department"
        ],
        "query_toks_no_value": [
            "select",
            "creation",
            ",",
            "name",
            ",",
            "budget_in_billions",
            "from",
            "department"
        ]
    },
    {
        "question": "What are the reigns and days held of all wrestlers?",
        "masked_template": "What are the <mask> and <mask> of all <mask>",
        "query": "SELECT Reign , Days_held FROM wrestler",
        "ted": 0.0,
        "db_id": "wrestler",
        "query_toks": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "days_held",
            "from",
            "wrestler"
        ]
    },
    {
        "question": "What is the average number of international passengers for an airport?",
        "masked_template": "What is the average number of <mask> for an <mask>",
        "query": "SELECT avg( International_Passengers ) FROM airport",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "avg",
            "(",
            "international_passengers",
            ")",
            "from",
            "airport"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "international_passengers",
            ")",
            "from",
            "airport"
        ]
    },
    {
        "question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?",
        "masked_template": "What are the names of <mask> in the <mask> named <mask> that can <mask> as an <mask>",
        "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
        "ted": 0.04,
        "db_id": "medicine_enzyme_interaction",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "enzyme",
            "as",
            "t1",
            "join",
            "medicine_enzyme_interaction",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.enzyme_id",
            "join",
            "medicine",
            "as",
            "t3",
            "on",
            "t2.medicine_id",
            "=",
            "t3.id",
            "where",
            "t3.name",
            "=",
            "\"Amisulpride\"",
            "and",
            "t2.interaction_type",
            "=",
            "\"inhibitor\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "enzyme",
            "as",
            "t1",
            "join",
            "medicine_enzyme_interaction",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.enzyme_id",
            "join",
            "medicine",
            "as",
            "t3",
            "on",
            "t2.medicine_id",
            "=",
            "t3.id",
            "where",
            "t3.name",
            "=",
            "value",
            "and",
            "t2.interaction_type",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the last name of the musician that have produced the most number of songs?",
        "masked_template": "What is the <mask> name of the <mask> that have <mask> the most number of <mask>",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.08333333333333333,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "t2.lastname",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "group",
            "by",
            "lastname",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.lastname",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "group",
            "by",
            "lastname",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "How many players have more than 1000 hours of training?",
        "masked_template": "How many <mask> have more than <mask> of <mask>",
        "query": "SELECT count( * ) FROM Player WHERE HS > 1000",
        "ted": 0.0,
        "db_id": "soccer_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "player",
            "where",
            "hs",
            ">",
            "1000"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "player",
            "where",
            "hs",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the number of branches that have more than the average number of memberships?",
        "masked_template": "What is the number of <mask> that have more than the average number of <mask>",
        "query": "SELECT count( * ) FROM branch WHERE membership_amount > ( SELECT avg( membership_amount ) FROM branch )",
        "ted": 0.041666666666666664,
        "db_id": "shop_membership",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "branch",
            "where",
            "membership_amount",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "membership_amount",
            ")",
            "from",
            "branch",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "branch",
            "where",
            "membership_amount",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "membership_amount",
            ")",
            "from",
            "branch",
            ")"
        ]
    },
    {
        "question": "Find the average ram mib size of the chip models that are never used by any phone.",
        "masked_template": "Find the average ram mib <mask> of the <mask> that are <mask> by any <mask>",
        "query": "SELECT avg( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone )",
        "ted": 0.045454545454545456,
        "db_id": "phone_1",
        "query_toks": [
            "select",
            "avg",
            "(",
            "ram_mib",
            ")",
            "from",
            "chip_model",
            "where",
            "model_name",
            "not",
            "in",
            "(",
            "select",
            "chip_model",
            "from",
            "phone",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "ram_mib",
            ")",
            "from",
            "chip_model",
            "where",
            "model_name",
            "not",
            "in",
            "(",
            "select",
            "chip_model",
            "from",
            "phone",
            ")"
        ]
    },
    {
        "question": "Give the name of the department with the lowest budget.",
        "masked_template": "<mask> the name of the <mask> with the <mask>",
        "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "dept_name",
            "from",
            "department",
            "order",
            "by",
            "budget",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "department",
            "order",
            "by",
            "budget",
            "limit",
            "value"
        ]
    },
    {
        "question": "Count the number of tourists who did not visit any place.",
        "masked_template": "Count the number of <mask> who did not <mask> any <mask>",
        "query": "SELECT count( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "visitors",
            "where",
            "tourist_id",
            "not",
            "in",
            "(",
            "select",
            "tourist_id",
            "from",
            "visits",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "visitors",
            "where",
            "tourist_id",
            "not",
            "in",
            "(",
            "select",
            "tourist_id",
            "from",
            "visits",
            ")"
        ]
    },
    {
        "question": "Count the number of products that were never ordered.",
        "masked_template": "Count the number of <mask> that <mask>",
        "query": "SELECT count( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
        "ted": 0.09090909090909091,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "order_items",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "order_items",
            ")"
        ]
    }
]