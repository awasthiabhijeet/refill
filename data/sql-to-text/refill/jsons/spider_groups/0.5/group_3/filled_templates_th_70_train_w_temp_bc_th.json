[
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the department that offers the most degrees?",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "Show names for all teachers whose hometown is not Farnworth Municipal Borough.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What are the dates and details of the most recent transcript?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "For each teacher, show the name of the teacher and the number of courses they arrange.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'History'",
        "question": "What are the names of the teachers who arrange the course \"History\"?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"History\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the student that has the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student who has the most number of friends?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "What are the names of all teachers that are not teaching any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the semesters which has the most number of students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'History'",
        "question": "Show names for all teachers who have taught some course of history.",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"History\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "What are the names of teachers who are not from Farnworth Municipal Borough?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "What are the different student ids and how many likes are there for each student?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'dance'",
        "question": "How many degree programs does the dance department offer?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"dance\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Gabriel'",
        "question": "What are the names of all students who have a friend whose name is Gabriel?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Gabriel\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "Show all high schooler names without a friend.",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Gabriel'",
        "question": "Who are the friends of the student named Gabriel? Tell me their names.",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Gabriel\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "Show each student id and the number of friends they have.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the courses that are enrolled for the most number of students?",
        "query_toks": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the most common friend in the school. The most common is the student that had the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Cassandra'",
        "question": "How many likes are there for students whose name is Cassandra?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Cassandra\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "For each grade, how many students are in that grade?",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Cassandra'",
        "question": "How many likes does the student whose name is Cassandra have?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Cassandra\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "Show all student ids and corresponding number of likes.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Elvisfurt'",
        "question": "Show the zip code of all the addresses in Port Elvisfurt.",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Port Elvisfurt\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "Show all student ids and the number of friends of each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name , grade FROM Highschooler",
        "question": "Return the names and grades of all high school students.",
        "query_toks": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT min( grade ) FROM Highschooler WHERE id NOT IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )",
        "question": "What is the minimum grade for students who are not friends with any high schooler?",
        "query_toks": [
            "select",
            "min",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "t1.student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "t1.student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "Show the number of students in grade 10 or 11.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "List all the department descriptions with substring \"computer\".",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "What are all the different teacher names and how many courses has each teacher arrange?",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "List the names of the students who do not have any friends.",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'dance'",
        "question": "How many degree programs are offered by the dance department?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"dance\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",
        "question": "What are the names and corresponding course numbers for all teachers in alphabetical order of their names?",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "List all hometowns along with the number of teachers from each hometown.",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name = 'Andrew'",
        "question": "What are the ids of all the students in the school named Andrew?",
        "query_toks": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Andrew\""
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 3",
        "question": "Find the names of the teachers who arrange at least three courses.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",
        "question": "Show the names of teachers and the corresponding courses they arrange in alphabetical order of their names.",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question": "List the date of the first transcript that has been made.",
        "query_toks": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",
        "question": "Show the names of teachers and the corresponding courses they arrange in alphabetical order.",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id for the department which has the most degrees offered?",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "Show the number of students in grade 10 or 11",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the name of the course that has been enrolled in the greatest number of students.",
        "query_toks": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Kris'",
        "question": "What is the grade of the high schooler named Kris?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Kris\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name = 'Andrew'",
        "question": "What is the id of the high schooler named Andrew?",
        "query_toks": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Andrew\""
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id for the semesters which has the most students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name = 'Andrew'",
        "question": "What are the ids of all students in the school named Andrew?",
        "query_toks": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Andrew\""
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",
        "question": "What are the names of the teachers and the corresponding courses they arrange in alphabetical order?",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count( * ) >= 5",
        "question": "What are the grades of students that have 5 or more grades?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name and id of the department that is offering the most degrees.",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count( * ) >= 5",
        "question": "What are the grades taught by at least five students?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select cell_mobile_number from students where first_name = 'Reva' and last_name = 'Ward'",
        "question": "What are the cell phone numbers for students with first name as Reva and last name as Ward?",
        "query_toks": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "\"Reva\"",
            "and",
            "last_name",
            "=",
            "\"Ward\""
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Cassandra'",
        "question": "Find the number of likes of the student named Cassandra.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Cassandra\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "What are the names of the teachers who did not arrange any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Gabriel'",
        "question": "Who is the friend of the student named Gabriel? Tell me the name of the friend.",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Gabriel\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the name and id of the department that offers the most degrees?",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "Find the number of students in grade 10 or 11.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "How many students are in grade 10 or 11?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name = 'Andrew'",
        "question": "Show the ids of all the students with name Andrew.",
        "query_toks": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Andrew\""
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the degree with the most student enrollment?",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler",
        "question": "What are the grade for each high schooler?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "Show the names of teachers whose hometowns are not Farnworth Municipal Borough.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What is the name of all students who do not have any friends?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'd'",
        "question": "Show the names of all the sections with name d.",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"d\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question": "Show the dates of the most recent transcript.",
        "query_toks": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'd'",
        "question": "What is the section description of section d?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"d\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "What are the student ids and the number of likes for each student?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the students that have the most number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Kris'",
        "question": "Show the grade of all the students with name Kris.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Kris\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question": "What is the date of the most recent transcript?",
        "query_toks": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count( * ) >= 2",
        "question": "Show the names of students who have at least two friends with grade 5 or above",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.grade",
            ">",
            "5",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.grade",
            ">",
            "value",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the student who has the greatest number of likes.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'dance'",
        "question": "How many degree programs end in a dance department?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"dance\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student who has the most friends?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "List all student ids along with the number of friends shared by each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 3",
        "question": "List the names of teachers who arrange at least three courses.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the most common degree summary name in the program. The most common is the degree that had the greatest number of students enrolled.",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'd'",
        "question": "What is the description for the section with name d?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"d\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the course with the most student enrollment?",
        "query_toks": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "What are the different grades of students and how many students belong to each grade?",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name of the student who has the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name = 'Andrew'",
        "question": "What are the ids of all the students named Andrew?",
        "query_toks": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Andrew\""
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "What are the names of the teachers whose hometown is not Farnworth Municipal Borough?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Kris'",
        "question": "What are the grade ids of all the students named Kris?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Kris\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "What are the names of teachers who did not arrange any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the number of transcript contents for the course with the most students.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "from",
            "transcript_contents",
            "group",
            "by",
            "student_course_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "from",
            "transcript_contents",
            "group",
            "by",
            "student_course_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "For each teacher, how many courses are they involved in?",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the name of the student that has the greatest number of friends.",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Find the date and id for the transcripts that have at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "Find the name of the teachers that do not have any course arrange.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name , grade FROM Highschooler",
        "question": "What are the names and grades for all high school students?",
        "query_toks": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count( * ) >= 5",
        "question": "Which grade has at least five students?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler",
        "question": "Tell me the grade of each high schooler.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "display the student ID and number of likes for each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the semesters that have the most students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select cell_mobile_number from students where first_name = 'Reva' and last_name = 'Ward'",
        "question": "What is the cell phone number of the students with first name as Reva and last name as Ward?",
        "query_toks": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "\"Reva\"",
            "and",
            "last_name",
            "=",
            "\"Ward\""
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Find the name and id of the department that is involved in the greatest number of degrees.",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Gabriel'",
        "question": "What are the names of all students that have friends who are related to Gabriel?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Gabriel\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "How many teachers are from each hometown?",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the course name that has been enrolled in the greatest number of students.",
        "query_toks": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = 'Cassandra'",
        "question": "How many likes are there for the student named Cassandra?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "\"Cassandra\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name , grade FROM Highschooler",
        "question": "What is the name and grade of each high schooler?",
        "query_toks": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the department which has the most number of degrees?",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name and id of the semesters that has the largest number of students enrolled in?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Elvisfurt'",
        "question": "What are the zip codes of all the addresses in Port Elvisfurt city?",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Port Elvisfurt\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What are the names of the students who do not have any friends?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Elvisfurt'",
        "question": "What is the zip code of the address in the city of Port Elvisfurt?",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Port Elvisfurt\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 3",
        "question": "Show the names of teachers who have worked on the arrange of courses at least three times",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "what are the names of teachers who did not arrange any course?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What is the date and detail of the most recent transcript?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "What are the different hometowns and how many teachers are there for each hometown?",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name = 'Andrew'",
        "question": "Show ids for all the students named Andrew.",
        "query_toks": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Andrew\""
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Elvisfurt'",
        "question": "What are the zip codes of all the addresses in Port Elvisfurt?",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Port Elvisfurt\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Kris'",
        "question": "What are the grades of all the students whose name is Kris?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Kris\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question": "Which date has the oldest transcript been made?",
        "query_toks": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count( * ) >= 5",
        "question": "What are the grades with 5 or more students? Tell me the grade name.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the summary names of the degree programs that are enrolled for the most number of students?",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the names of the students who have the most number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select cell_mobile_number from students where first_name = 'Reva' and last_name = 'Ward'",
        "question": "What is the cell phone number of the students whose first name is Reva and last name is Ward?",
        "query_toks": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "\"Reva\"",
            "and",
            "last_name",
            "=",
            "\"Ward\""
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'd'",
        "question": "What is the description of the section named d?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"d\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "Show the grade with the most number of students.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "For each teacher, find their name and the number of courses they arrange.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Gabriel'",
        "question": "What are the names of the students who are friends with Gabriel?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "\"Gabriel\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1.friend_id",
            "=",
            "t3.id",
            "where",
            "t2.name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'History'",
        "question": "List the name of all teachers involved in the arrange of course History.",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"History\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the name of the student who has the most number of likes?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "How many friends are there for each student? List the student id and the count.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find the names of all the departments whose name contains the word 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'Washington' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id",
        "question": "What are the last names of students who live in Washington state but are not enrolled in any courses?",
        "query_toks": [
            "select",
            "t1.last_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1.current_address_id",
            "=",
            "t2.address_id",
            "where",
            "t2.state_province_county",
            "=",
            "\"Washington\"",
            "except",
            "select",
            "distinct",
            "t3.last_name",
            "from",
            "students",
            "as",
            "t3",
            "join",
            "student_enrolment",
            "as",
            "t4",
            "on",
            "t3.student_id",
            "=",
            "t4.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.last_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1.current_address_id",
            "=",
            "t2.address_id",
            "where",
            "t2.state_province_county",
            "=",
            "value",
            "except",
            "select",
            "distinct",
            "t3.last_name",
            "from",
            "students",
            "as",
            "t3",
            "join",
            "student_enrolment",
            "as",
            "t4",
            "on",
            "t3.student_id",
            "=",
            "t4.student_id"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 3",
        "question": "What are the names of the teachers who arrange at least three courses?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "Show the most common grade of students in high school.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the most common grade among high school students?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "question": "What are the names of the students who are not friends with any high schooler?",
        "query_toks": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2.name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "List the grade shared by the greatest number of students.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != 'Farnworth Municipal Borough'",
        "question": "What is the name of the teacher whose hometown is not Farnworth Municipal Borough?",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"Farnworth Municipal Borough\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "Show the different student ids and the number of friends they have.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select cell_mobile_number from students where first_name = 'Reva' and last_name = 'Ward'",
        "question": "What is the cell phone number of students with first name as Reva and last name as Ward?",
        "query_toks": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "\"Reva\"",
            "and",
            "last_name",
            "=",
            "\"Ward\""
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "List all hometowns and the number of teachers in each hometown.",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Friend GROUP BY student_id",
        "question": "What are the different student ids and how many friends are there for each student?",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade , count( * ) FROM Highschooler GROUP BY grade",
        "question": "How many students are in each grade?",
        "query_toks": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 3",
        "question": "What are the names of all teachers that have been involved in at least three courses?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Show the date and id for all transcripts with at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "Show the date and detail of the most recent transcript.",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the grade of the youngest high schooler?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN ( SELECT Teacher_id FROM course_arrange )",
        "question": "List the names of teachers that are not involved in any course arrange.",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find the names of all the departments that contain the word 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "Return the name of the degree summary name which has the most student enrollment.",
        "query_toks": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.degree_program_id",
            "=",
            "t2.degree_program_id",
            "group",
            "by",
            "t1.degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count( * ) >= 5",
        "question": "Find the grade that has at least 5 students.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count( * ) >= 5",
        "question": "Find the grade that has at least five students.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count( * ) FROM Highschooler WHERE grade = 10 OR grade = 11",
        "question": "How many students in grade 10 or 11 are in the school?",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "10",
            "or",
            "grade",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "Which semesters have the most number of students enrolled? List the semesters name and the semester id.",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question": "What are the dates and details of the transcripts with the earliest date of creation?",
        "query_toks": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "Show the date and id of the transcript with at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name , grade FROM Highschooler",
        "question": "What are the names and grades of all high school students?",
        "query_toks": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "What are the dates and ids of the transcripts with at least two corresponding contents?",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'History'",
        "question": "What are the names of all teachers involved in the course with the name History?",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "\"History\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "where",
            "t2.course",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'd'",
        "question": "What are the names of all sections described by section d?",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"d\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name , COUNT( * ) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "question": "How many courses are taught by each teacher? Return the teacher names and the number of courses they arrange.",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count( * ) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'dance'",
        "question": "Count the number of degrees offered by the dance department.",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "\"dance\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "where",
            "t1.department_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name = 'd'",
        "question": "Return the descriptions of sections for all the sections with name d.",
        "query_toks": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "\"d\""
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find all the department descriptions whose name starts with the word 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name = 'Kris'",
        "question": "Find the grade of the high schooler named Kris.",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "\"Kris\""
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT( * ) >= 3",
        "question": "What are the names of teachers that are involved in at least three courses?",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1.teacher_id",
            "=",
            "t2.teacher_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id , count( * ) FROM Likes GROUP BY student_id",
        "question": "List all student ids along with the number of likes shared by each student.",
        "query_toks": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT avg( grade ) FROM Highschooler WHERE id IN ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id )",
        "question": "What is the average grade of the students who are friends with some high schooler?",
        "query_toks": [
            "select",
            "avg",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "in",
            "(",
            "select",
            "t1.student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "in",
            "(",
            "select",
            "t1.student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.id",
            ")"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown , COUNT( * ) FROM teacher GROUP BY Hometown",
        "question": "Show all hometowns and the number of teachers in each hometown.",
        "query_toks": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question": "Find all the department descriptions whose names contain the substring 'computer'.",
        "query_toks": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "\"%computer%\""
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count( * ) DESC LIMIT 1",
        "question": "What are the name and id of the semester that has the most students enrolled?",
        "query_toks": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.semester_name",
            ",",
            "t1.semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1.semester_id",
            "=",
            "t2.semester_id",
            "group",
            "by",
            "t1.semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count( * ) DESC LIMIT 1",
        "question": "What is the grade that is most common in high school students?",
        "query_toks": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count( * ) DESC LIMIT 1",
        "question": "List the name of the course that has been enrolled in the most number of students.",
        "query_toks": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "group",
            "by",
            "t1.course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count( * ) >= 2",
        "question": "List the date and id of all the transcripts that have at least two corresponding contents.",
        "query_toks": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.transcript_date",
            ",",
            "t1.transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1.transcript_id",
            "=",
            "t2.transcript_id",
            "group",
            "by",
            "t1.transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",
        "question": "Find the name of the teacher and the course arrange for each of them in alphabetical order.",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1.course_id",
            "=",
            "t2.course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1.teacher_id",
            "=",
            "t3.teacher_id",
            "order",
            "by",
            "t3.name"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Elvisfurt'",
        "question": "Give us the zip code of the city named Port Elvisfurt.",
        "query_toks": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "\"Port Elvisfurt\""
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of companies whose headquarters are not \"USA\"?",
        "masked_template": "What are the names of <mask> whose <mask> are not <mask>",
        "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
        "ted": 0.0,
        "db_id": "company_office",
        "query_toks": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "\"USA\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "companies",
            "where",
            "headquarters",
            "!=",
            "value"
        ]
    },
    {
        "question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.",
        "masked_template": "Show the names of <mask> who have at least 2 <mask> with <mask>",
        "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE outcome_code = 'Order' GROUP BY T1.customer_id HAVING count( * ) >= 2",
        "ted": 0.07142857142857142,
        "db_id": "customers_campaigns_ecommerce",
        "query_toks": [
            "select",
            "t2.customer_name",
            "from",
            "mailshot_customers",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "outcome_code",
            "=",
            "\"Order\"",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_name",
            "from",
            "mailshot_customers",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "outcome_code",
            "=",
            "value",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Return the party email that has used party services the greatest number of times.",
        "masked_template": "Return the <mask> that has <mask> the <mask> number of <mask>",
        "query": "SELECT T1.party_email FROM parties AS T1 JOIN party_services AS T2 ON T1.party_id = T2.customer_id GROUP BY T1.party_email ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.party_email",
            "from",
            "parties",
            "as",
            "t1",
            "join",
            "party_services",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.party_email",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.party_email",
            "from",
            "parties",
            "as",
            "t1",
            "join",
            "party_services",
            "as",
            "t2",
            "on",
            "t1.party_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.party_email",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the name of the activity that has the largest number of student participants.",
        "masked_template": "Find the name of the <mask> that has the <mask> number of <mask>",
        "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List all headquarters and the number of companies in each headquarter.",
        "masked_template": "List all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT headquarters , count( * ) FROM company GROUP BY headquarters",
        "ted": 0.0,
        "db_id": "gas_company",
        "query_toks": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ],
        "query_toks_no_value": [
            "select",
            "headquarters",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ]
    },
    {
        "question": "What are the first names of all students that are not enrolled in courses?",
        "masked_template": "What are the <mask> names of all <mask> that are not <mask> in <mask>",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN )",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "enrolled_in",
            ")"
        ]
    },
    {
        "question": "Give me the theme and location of each party.",
        "masked_template": "<mask> me the <mask> and <mask> of each <mask>",
        "query": "SELECT Party_Theme , LOCATION FROM party",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ]
    },
    {
        "question": "Give me the name of each club.",
        "masked_template": "<mask> me the name of each <mask>",
        "query": "SELECT clubname FROM club",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clubname",
            "from",
            "club"
        ],
        "query_toks_no_value": [
            "select",
            "clubname",
            "from",
            "club"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "Which district has the largest population?",
        "masked_template": "Which <mask> has the <mask>",
        "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "district_name",
            "from",
            "district",
            "order",
            "by",
            "city_population",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "district_name",
            "from",
            "district",
            "order",
            "by",
            "city_population",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many transaction does account with name 337 have?",
        "masked_template": "How many <mask> with name 337 <mask>",
        "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "where",
            "t2.account_name",
            "=",
            "\"337\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "where",
            "t2.account_name",
            "=",
            "value"
        ]
    },
    {
        "question": "List the software platform shared by the greatest number of devices.",
        "masked_template": "List the <mask> by the <mask> number of <mask>",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "device",
        "query_toks": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "group",
            "by",
            "software_platform",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many hosts does each nationality have? List the nationality and the count.",
        "masked_template": "How many <mask> each <mask> List the <mask> and the <mask>",
        "query": "SELECT Nationality , COUNT( * ) FROM HOST GROUP BY Nationality",
        "ted": 0.0,
        "db_id": "party_host",
        "query_toks": [
            "select",
            "nationality",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "host",
            "group",
            "by",
            "nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "host",
            "group",
            "by",
            "nationality"
        ]
    },
    {
        "question": "Find the number of stores in each city.",
        "masked_template": "Find the number of <mask> in each <mask>",
        "query": "SELECT T3.headquartered_city , count( * ) FROM store AS T1 JOIN store_district AS T2 ON T1.store_id = T2.store_id JOIN district AS T3 ON T2.district_id = T3.district_id GROUP BY T3.headquartered_city",
        "ted": 0.1,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "t3.headquartered_city",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "store",
            "as",
            "t1",
            "join",
            "store_district",
            "as",
            "t2",
            "on",
            "t1.store_id",
            "=",
            "t2.store_id",
            "join",
            "district",
            "as",
            "t3",
            "on",
            "t2.district_id",
            "=",
            "t3.district_id",
            "group",
            "by",
            "t3.headquartered_city"
        ],
        "query_toks_no_value": [
            "select",
            "t3.headquartered_city",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "store",
            "as",
            "t1",
            "join",
            "store_district",
            "as",
            "t2",
            "on",
            "t1.store_id",
            "=",
            "t2.store_id",
            "join",
            "district",
            "as",
            "t3",
            "on",
            "t2.district_id",
            "=",
            "t3.district_id",
            "group",
            "by",
            "t3.headquartered_city"
        ]
    },
    {
        "question": "What are the id of all the files in mp3 format?",
        "masked_template": "What are the id of all the <mask> in mp3 <mask>",
        "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "f_id",
            "from",
            "files",
            "where",
            "formats",
            "=",
            "\"mp3\""
        ],
        "query_toks_no_value": [
            "select",
            "f_id",
            "from",
            "files",
            "where",
            "formats",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the advisors",
        "masked_template": "What are the <mask>",
        "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "game_1",
        "query_toks": [
            "select",
            "advisor",
            "from",
            "student",
            "group",
            "by",
            "advisor",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "group",
            "by",
            "advisor",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Find the name and email for the users who have more than one follower.",
        "masked_template": "Find the name and <mask> for the <mask> who have more than one <mask>",
        "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
        "ted": 0.027777777777777776,
        "db_id": "twitter_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.email",
            "from",
            "user_profiles",
            "as",
            "t1",
            "join",
            "follows",
            "as",
            "t2",
            "on",
            "t1.uid",
            "=",
            "t2.f1",
            "group",
            "by",
            "t2.f1",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "Show all majors and corresponding number of students.",
        "masked_template": "Show all <mask> and <mask> number of <mask>",
        "query": "SELECT major , count( * ) FROM Student GROUP BY major",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "major",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "major"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "major"
        ]
    },
    {
        "question": "List the school color of the school that has the largest enrollment.",
        "masked_template": "List the <mask> of the <mask> that has the <mask>",
        "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_player",
        "query_toks": [
            "select",
            "school_colors",
            "from",
            "school",
            "order",
            "by",
            "enrollment",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "school_colors",
            "from",
            "school",
            "order",
            "by",
            "enrollment",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
        "masked_template": "What are the <mask> of the <mask> whose <mask> is not <mask>",
        "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
        "ted": 0.0,
        "db_id": "book_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "book",
            "where",
            "writer",
            "!=",
            "\"Elaine Lee\""
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "book",
            "where",
            "writer",
            "!=",
            "value"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "Where us the club named \"Tennis Club\" located?",
        "masked_template": "<mask> us the <mask> named <mask>",
        "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "\"Tennis Club\""
        ],
        "query_toks_no_value": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "display the country ID and number of cities for each country.",
        "masked_template": "<mask> the <mask> ID and number of <mask> for each <mask>",
        "query": "SELECT country_id , COUNT( * ) FROM locations GROUP BY country_id",
        "ted": 0.0,
        "db_id": "hr_1",
        "query_toks": [
            "select",
            "country_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "country_id"
        ],
        "query_toks_no_value": [
            "select",
            "country_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "country_id"
        ]
    },
    {
        "question": "What is the first name of all employees who do not give any lessons?",
        "masked_template": "What is the <mask> name of all <mask> who do not <mask> any <mask>",
        "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ]
    },
    {
        "question": "What is the code of the school where the accounting department belongs to?",
        "masked_template": "What is the <mask> of the <mask> the <mask> to?",
        "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "school_code",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "\"Accounting\""
        ],
        "query_toks_no_value": [
            "select",
            "school_code",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Count the number of characteristics the product 'sesame' has.",
        "masked_template": "Count the number of <mask> the <mask>",
        "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
        "ted": 0.0,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t1.product_name",
            "=",
            "\"sesame\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "where",
            "t1.product_name",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
        "masked_template": "Find the <mask> and <mask> name of the <mask> who is <mask> in the <mask> number of <mask>",
        "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show ids for all the male faculty.",
        "masked_template": "Show ids for all the <mask>",
        "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"M\""
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the details of the student who registered for the most number of courses?",
        "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is detail of the student who registered the most number of courses?",
        "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Which directors had a movie in either 1999 or 2000?",
        "masked_template": "Which <mask> had a <mask> in <mask> or <mask>",
        "query": "SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000",
        "ted": 0.08333333333333333,
        "db_id": "culture_company",
        "query_toks": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "1999",
            "or",
            "year",
            "=",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the song in the volume with the maximum weeks on top?",
        "masked_template": "What is the <mask> in the <mask> with the maximum <mask> on <mask>",
        "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "music_4",
        "query_toks": [
            "select",
            "song",
            "from",
            "volume",
            "order",
            "by",
            "weeks_on_top",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song",
            "from",
            "volume",
            "order",
            "by",
            "weeks_on_top",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the name of the technician whose team is not 'NYY'?",
        "masked_template": "What is the name of the <mask> whose <mask> is not <mask>",
        "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
        "ted": 0.0,
        "db_id": "machine_repair",
        "query_toks": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "\"NYY\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "technician",
            "where",
            "team",
            "!=",
            "value"
        ]
    },
    {
        "question": "For each user, find their name and the number of reviews written by them.",
        "masked_template": "For each <mask> find their name and the number of <mask> by <mask>",
        "query": "SELECT T1.name , count( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
        "ted": 0.0,
        "db_id": "epinions_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "useracct",
            "as",
            "t1",
            "join",
            "review",
            "as",
            "t2",
            "on",
            "t1.u_id",
            "=",
            "t2.u_id",
            "group",
            "by",
            "t2.u_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "useracct",
            "as",
            "t1",
            "join",
            "review",
            "as",
            "t2",
            "on",
            "t1.u_id",
            "=",
            "t2.u_id",
            "group",
            "by",
            "t2.u_id"
        ]
    },
    {
        "question": "What is the oldest log id and its corresponding problem id?",
        "masked_template": "What is the <mask> log id and its <mask> id?",
        "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_software_problems",
        "query_toks": [
            "select",
            "problem_log_id",
            ",",
            "problem_id",
            "from",
            "problem_log",
            "order",
            "by",
            "log_entry_date",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "problem_log_id",
            ",",
            "problem_id",
            "from",
            "problem_log",
            "order",
            "by",
            "log_entry_date",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the descriptions for each color?",
        "masked_template": "What are the <mask> for each <mask>",
        "query": "SELECT color_description FROM ref_colors",
        "ted": 0.0,
        "db_id": "products_gen_characteristics",
        "query_toks": [
            "select",
            "color_description",
            "from",
            "ref_colors"
        ],
        "query_toks_no_value": [
            "select",
            "color_description",
            "from",
            "ref_colors"
        ]
    },
    {
        "question": "Show each location and the number of cinemas there.",
        "masked_template": "Show each <mask> and the number of <mask>",
        "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ]
    },
    {
        "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
        "masked_template": "List the name of the <mask> that has <mask> named <mask> the most number of <mask>",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.",
        "masked_template": "Who is the <mask> of the <mask> me the <mask>",
        "query": "SELECT T1.lname FROM authors AS T1 JOIN authorship AS T2 ON T1.authid = T2.authid JOIN papers AS T3 ON T2.paperid = T3.paperid WHERE T3.title = 'Binders Unbound'",
        "ted": 0.0,
        "db_id": "icfp_1",
        "query_toks": [
            "select",
            "t1.lname",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t3.title",
            "=",
            "\"Binders Unbound\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.lname",
            "from",
            "authors",
            "as",
            "t1",
            "join",
            "authorship",
            "as",
            "t2",
            "on",
            "t1.authid",
            "=",
            "t2.authid",
            "join",
            "papers",
            "as",
            "t3",
            "on",
            "t2.paperid",
            "=",
            "t3.paperid",
            "where",
            "t3.title",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names and distances for all airplanes?",
        "masked_template": "What are the names and <mask> for all <mask>",
        "query": "SELECT name , distance FROM Aircraft",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "name",
            ",",
            "distance",
            "from",
            "aircraft"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "distance",
            "from",
            "aircraft"
        ]
    },
    {
        "question": "What are the names of all employees who have a certificate to fly Boeing 737-800?",
        "masked_template": "What are the names of all <mask> who have a <mask> to fly <mask>",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "\"Boeing 737-800\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "what are the names of people who did not participate in the candidate election.",
        "masked_template": "what are the names of <mask> who did not <mask> in the <mask>",
        "query": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM candidate )",
        "ted": 0.0,
        "db_id": "candidate_poll",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "candidate",
            ")"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "Find the wineries that have at least four wines.",
        "masked_template": "Find the <mask> that have at least <mask>",
        "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "winery",
            "from",
            "wine",
            "group",
            "by",
            "winery",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "winery",
            "from",
            "wine",
            "group",
            "by",
            "winery",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
        "masked_template": "Find the most <mask> in the <mask> The most <mask> is the <mask> that had <mask> the <mask> number of <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "Give the names of the courses with at least five enrollments.",
        "masked_template": "<mask> the names of the <mask> with at least <mask>",
        "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT( * ) >= 5",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "t1.cname",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "enrolled_in",
            "as",
            "t2",
            "on",
            "t1.cid",
            "=",
            "t2.cid",
            "group",
            "by",
            "t2.cid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "t1.cname",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "enrolled_in",
            "as",
            "t2",
            "on",
            "t1.cid",
            "=",
            "t2.cid",
            "group",
            "by",
            "t2.cid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the names of artists who are Male and are from UK?",
        "masked_template": "What are the names of <mask> who are <mask> and are <mask> UK?",
        "query": "SELECT artist_name FROM artist WHERE country = 'UK' AND gender = 'Male'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "artist_name",
            "from",
            "artist",
            "where",
            "country",
            "=",
            "\"UK\"",
            "and",
            "gender",
            "=",
            "\"Male\""
        ],
        "query_toks_no_value": [
            "select",
            "artist_name",
            "from",
            "artist",
            "where",
            "country",
            "=",
            "value",
            "and",
            "gender",
            "=",
            "value"
        ]
    },
    {
        "question": "Which wineries produce at least four wines?",
        "masked_template": "Which <mask> at least <mask>",
        "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "wine_1",
        "query_toks": [
            "select",
            "winery",
            "from",
            "wine",
            "group",
            "by",
            "winery",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "winery",
            "from",
            "wine",
            "group",
            "by",
            "winery",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "List the details of the customers who do not have any policies.",
        "masked_template": "List the <mask> of the <mask> who do not have any <mask>",
        "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id",
        "ted": 0.0,
        "db_id": "insurance_policies",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "except",
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "except",
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id"
        ]
    },
    {
        "question": "What is detail of the student who registered the most number of courses?",
        "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the different classes of races, and how many races correspond to each?",
        "masked_template": "What are the different <mask> of <mask> and how many <mask> to <mask>",
        "query": "SELECT CLASS , count( * ) FROM race GROUP BY CLASS",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "race",
            "group",
            "by",
            "class"
        ]
    },
    {
        "question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?",
        "masked_template": "What are the names of all <mask> by the <mask> with the <mask> name <mask>",
        "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "t3.title",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "where",
            "t2.firstname",
            "=",
            "\"Marianne\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.title",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "where",
            "t2.firstname",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the number of vocal types used in song \"Le Pop\"",
        "masked_template": "Find the number of <mask> in <mask> \"Le <mask>",
        "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "\"Le Pop\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of courses without prerequisites?",
        "masked_template": "What are the names of <mask>",
        "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "What is the name and hours for the project which has the most scientists assigned to it?",
        "masked_template": "What is the name and <mask> for the <mask> which has the most <mask> to it?",
        "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the faculty ids of all the male faculty members?",
        "masked_template": "What are the <mask> ids of all the <mask>",
        "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"M\""
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value"
        ]
    },
    {
        "question": "What products are sold at the store named Miramichi?",
        "masked_template": "What <mask> are <mask> at the <mask> named <mask>",
        "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.product_id JOIN store AS T3 ON T2.store_id = T3.store_id WHERE T3.store_name = 'Miramichi'",
        "ted": 0.0,
        "db_id": "store_product",
        "query_toks": [
            "select",
            "t1.product",
            "from",
            "product",
            "as",
            "t1",
            "join",
            "store_product",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "join",
            "store",
            "as",
            "t3",
            "on",
            "t2.store_id",
            "=",
            "t3.store_id",
            "where",
            "t3.store_name",
            "=",
            "\"Miramichi\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.product",
            "from",
            "product",
            "as",
            "t1",
            "join",
            "store_product",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "join",
            "store",
            "as",
            "t3",
            "on",
            "t2.store_id",
            "=",
            "t3.store_id",
            "where",
            "t3.store_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the id of all the files in mp3 format?",
        "masked_template": "What are the id of all the <mask> in mp3 <mask>",
        "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "f_id",
            "from",
            "files",
            "where",
            "formats",
            "=",
            "\"mp3\""
        ],
        "query_toks_no_value": [
            "select",
            "f_id",
            "from",
            "files",
            "where",
            "formats",
            "=",
            "value"
        ]
    },
    {
        "question": "Show names for all regions except for Denmark.",
        "masked_template": "Show names for all <mask> for <mask>",
        "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
        "ted": 0.0,
        "db_id": "storm_record",
        "query_toks": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "\"Denmark\""
        ],
        "query_toks_no_value": [
            "select",
            "region_name",
            "from",
            "region",
            "where",
            "region_name",
            "!=",
            "value"
        ]
    },
    {
        "question": "Return the lot details and investor ids.",
        "masked_template": "Return the lot <mask> and <mask>",
        "query": "SELECT lot_details , investor_id FROM LOTS",
        "ted": 0.0,
        "db_id": "tracking_share_transactions",
        "query_toks": [
            "select",
            "lot_details",
            ",",
            "investor_id",
            "from",
            "lots"
        ],
        "query_toks_no_value": [
            "select",
            "lot_details",
            ",",
            "investor_id",
            "from",
            "lots"
        ]
    },
    {
        "question": "For each building, show the name of the building and the number of institutions in it.",
        "masked_template": "For each <mask> show the name of the <mask> and the number of <mask> in it.",
        "query": "SELECT T1.name , count( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",
        "ted": 0.0,
        "db_id": "protein_institute",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "institution",
            "as",
            "t2",
            "on",
            "t1.building_id",
            "=",
            "t2.building_id",
            "group",
            "by",
            "t1.building_id"
        ]
    },
    {
        "question": "Show the details and star ratings of the 3 least expensive hotels.",
        "masked_template": "Show the <mask> and <mask> of the 3 least <mask>",
        "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "other_hotel_details",
            ",",
            "star_rating_code",
            "from",
            "hotels",
            "order",
            "by",
            "price_range",
            "asc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "other_hotel_details",
            ",",
            "star_rating_code",
            "from",
            "hotels",
            "order",
            "by",
            "price_range",
            "asc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the account id and name with at least 4 transactions.",
        "masked_template": "Show the <mask> id and name with at least 4 <mask>",
        "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "t1.account_id",
            ",",
            "t2.account_name",
            "from",
            "financial_transactions",
            "as",
            "t1",
            "join",
            "accounts",
            "as",
            "t2",
            "on",
            "t1.account_id",
            "=",
            "t2.account_id",
            "group",
            "by",
            "t1.account_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the first and last name of the faculty who has the most students?",
        "masked_template": "What are the <mask> and <mask> name of the <mask> who has the most <mask>",
        "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List first name and last name of customers that have more than 2 payments.",
        "masked_template": "List <mask> name and <mask> name of <mask> that have more than 2 <mask>",
        "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
        "ted": 0.027777777777777776,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "customer_payments",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.first_name",
            ",",
            "t2.last_name",
            "from",
            "customer_payments",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ]
    },
    {
        "question": "What is the station station and end station for the trips with the three smallest ids?",
        "masked_template": "What is the <mask> and end <mask> for the <mask> with the <mask>",
        "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
        "ted": 0.0,
        "db_id": "bike_1",
        "query_toks": [
            "select",
            "start_station_name",
            ",",
            "end_station_name",
            "from",
            "trip",
            "order",
            "by",
            "id",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "start_station_name",
            ",",
            "end_station_name",
            "from",
            "trip",
            "order",
            "by",
            "id",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of the cameras that have taken picture of the most mountains?",
        "masked_template": "What are the names of the <mask> that have <mask> of the most <mask>",
        "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "mountain_photos",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "photos",
            "as",
            "t1",
            "join",
            "camera_lens",
            "as",
            "t2",
            "on",
            "t1.camera_lens_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t2.id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "photos",
            "as",
            "t1",
            "join",
            "camera_lens",
            "as",
            "t2",
            "on",
            "t1.camera_lens_id",
            "=",
            "t2.id",
            "group",
            "by",
            "t2.id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the name of dorms only for female (F gender).",
        "masked_template": "Find the name of <mask> for <mask> (F <mask>",
        "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
        "ted": 0.0,
        "db_id": "dorm_1",
        "query_toks": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "where",
            "gender",
            "=",
            "\"F\""
        ],
        "query_toks_no_value": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "where",
            "gender",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.",
        "masked_template": "Find the number of <mask> of <mask> is <mask> in <mask>",
        "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
        "ted": 0.041666666666666664,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "1885",
            "and",
            "ties",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "value",
            "and",
            "ties",
            "=",
            "value"
        ]
    },
    {
        "question": "How many vocal types are used in the song \"Le Pop\"?",
        "masked_template": "How many <mask> are <mask> in the <mask> \"Le <mask>",
        "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "\"Le Pop\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vocals",
            "as",
            "t1",
            "join",
            "songs",
            "as",
            "t2",
            "on",
            "t1.songid",
            "=",
            "t2.songid",
            "where",
            "title",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
        "masked_template": "What is the <mask> for the <mask> with <mask>",
        "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
        "ted": 0.0,
        "db_id": "behavior_monitoring",
        "query_toks": [
            "select",
            "incident_type_description",
            "from",
            "ref_incident_type",
            "where",
            "incident_type_code",
            "=",
            "\"VIOLENCE\""
        ],
        "query_toks_no_value": [
            "select",
            "incident_type_description",
            "from",
            "ref_incident_type",
            "where",
            "incident_type_code",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the details of the student who registered for the most number of courses?",
        "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the roles with three or more employees? Give me the role codes.",
        "masked_template": "What are the <mask> with <mask> or more <mask> me the <mask>",
        "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count( * ) >= 3",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "role_code",
            "from",
            "employees",
            "group",
            "by",
            "role_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "employees",
            "group",
            "by",
            "role_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What is the first name of the staff who did not give any lesson?",
        "masked_template": "What is the <mask> name of the <mask> who did not <mask> any <mask>",
        "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "staff",
            "except",
            "select",
            "t2.first_name",
            "from",
            "lessons",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1.staff_id",
            "=",
            "t2.staff_id"
        ]
    },
    {
        "question": "What are all the different product names, and how many complains has each received?",
        "masked_template": "What are all the different <mask> and how many <mask> has each <mask>",
        "query": "SELECT T1.product_name , count( * ) FROM products AS T1 JOIN complaints AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
        "ted": 0.0,
        "db_id": "customer_complaints",
        "query_toks": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ],
        "query_toks_no_value": [
            "select",
            "t1.product_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "complaints",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.product_name"
        ]
    },
    {
        "question": "What is the number of routes that end at John F Kennedy International Airport?",
        "masked_template": "What is the number of <mask> that end at <mask> F <mask>",
        "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "t1.name",
            "=",
            "\"John F Kennedy International Airport\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
        "masked_template": "<mask> the <mask> that the <mask> who <mask> the <mask> number of <mask> in.",
        "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Return the structure description of the document that has been accessed the fewest number of times.",
        "masked_template": "Return the <mask> of the <mask> that has <mask> the <mask> number of <mask>",
        "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "List all the document names which contains \"CV\".",
        "masked_template": "List all the <mask> names which <mask>",
        "query": "SELECT document_name FROM documents WHERE document_name LIKE '%CV%'",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "document_name",
            "from",
            "documents",
            "where",
            "document_name",
            "like",
            "\"%CV%\""
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            "from",
            "documents",
            "where",
            "document_name",
            "like",
            "value"
        ]
    },
    {
        "question": "What are the first and last names of the employee with the earliest date of birth?",
        "masked_template": "What are the <mask> and <mask> names of the <mask> with the <mask> of <mask>",
        "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "emp_fname",
            ",",
            "emp_lname",
            "from",
            "employee",
            "order",
            "by",
            "emp_dob",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "emp_fname",
            ",",
            "emp_lname",
            "from",
            "employee",
            "order",
            "by",
            "emp_dob",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the name of the aircraft that has won an award the most?",
        "masked_template": "What is the name of the <mask> that has won an <mask> the <mask>",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the description of the club \"Pen and Paper Gaming\"?",
        "masked_template": "What is the <mask> of the <mask> and <mask>",
        "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clubdesc",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "\"Pen and Paper Gaming\""
        ],
        "query_toks_no_value": [
            "select",
            "clubdesc",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the faculty ids of all the male faculty members?",
        "masked_template": "What are the <mask> ids of all the <mask>",
        "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"M\""
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the names of people aged either 35 or 36.",
        "masked_template": "Show the names of <mask> 35 or 36.",
        "query": "SELECT Name FROM people WHERE Age = 35 OR Age = 36",
        "ted": 0.08333333333333333,
        "db_id": "debate",
        "query_toks": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "age",
            "=",
            "35",
            "or",
            "age",
            "=",
            "36"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ]
    },
    {
        "question": "List the names of products that are not in any event.",
        "masked_template": "List the names of <mask> that are not in any <mask>",
        "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events )",
        "ted": 0.0,
        "db_id": "solvency_ii",
        "query_toks": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "products_in_events",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "products_in_events",
            ")"
        ]
    },
    {
        "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
        "masked_template": "<mask> the <mask> that the <mask> who <mask> the <mask> number of <mask> in.",
        "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.building",
            "from",
            "course",
            "as",
            "t1",
            "join",
            "faculty",
            "as",
            "t2",
            "on",
            "t1.instructor",
            "=",
            "t2.facid",
            "group",
            "by",
            "t1.instructor",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the names of all the tracks that contain the word \"you\".",
        "masked_template": "Find the names of all the <mask> that <mask> the <mask>",
        "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
        "ted": 0.0,
        "db_id": "chinook_1",
        "query_toks": [
            "select",
            "name",
            "from",
            "track",
            "where",
            "name",
            "like",
            "\"%you%\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "track",
            "where",
            "name",
            "like",
            "value"
        ]
    },
    {
        "question": "Show each location and the number of cinemas there.",
        "masked_template": "Show each <mask> and the number of <mask>",
        "query": "SELECT LOCATION , count( * ) FROM cinema GROUP BY LOCATION",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ]
    },
    {
        "question": "Show the census ranking of cities whose status are not \"Village\".",
        "masked_template": "Show the <mask> of <mask> whose <mask> are not <mask>",
        "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
        "ted": 0.0,
        "db_id": "farm",
        "query_toks": [
            "select",
            "census_ranking",
            "from",
            "city",
            "where",
            "status",
            "!=",
            "\"Village\""
        ],
        "query_toks_no_value": [
            "select",
            "census_ranking",
            "from",
            "city",
            "where",
            "status",
            "!=",
            "value"
        ]
    },
    {
        "question": "Show the home city with the most number of drivers.",
        "masked_template": "Show the <mask> with the most number of <mask>",
        "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "school_bus",
        "query_toks": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List the names of aircrafts and that won matches at least twice.",
        "masked_template": "List the names of <mask> and that won <mask> at least <mask>",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
        "masked_template": "How many <mask> are <mask> by each <mask> of <mask> List the <mask> and the number of <mask>",
        "query": "SELECT T1.rank , count( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ],
        "query_toks_no_value": [
            "select",
            "t1.rank",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.rank"
        ]
    },
    {
        "question": "What are the names and locations of all tracks?",
        "masked_template": "What are the names and <mask> of all <mask>",
        "query": "SELECT name , LOCATION FROM track",
        "ted": 0.0,
        "db_id": "race_track",
        "query_toks": [
            "select",
            "name",
            ",",
            "location",
            "from",
            "track"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "location",
            "from",
            "track"
        ]
    },
    {
        "question": "Show the names of all the employees with role \"HR\".",
        "masked_template": "Show the names of all the <mask> with <mask>",
        "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "\"HR\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the product id and product type of the cheapest product?",
        "masked_template": "What are the <mask> id and <mask> of the <mask>",
        "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the names of journalists and the names of the events they reported in ascending order",
        "masked_template": "Show the names of <mask> and the names of the <mask> in <mask> order",
        "query": "SELECT T3.Name , T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID ORDER BY T2.Event_Attendance ASC",
        "ted": 0.0,
        "db_id": "news_report",
        "query_toks": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "news_report",
            "as",
            "t1",
            "join",
            "event",
            "as",
            "t2",
            "on",
            "t1.event_id",
            "=",
            "t2.event_id",
            "join",
            "journalist",
            "as",
            "t3",
            "on",
            "t1.journalist_id",
            "=",
            "t3.journalist_id",
            "order",
            "by",
            "t2.event_attendance",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            ",",
            "t2.name",
            "from",
            "news_report",
            "as",
            "t1",
            "join",
            "event",
            "as",
            "t2",
            "on",
            "t1.event_id",
            "=",
            "t2.event_id",
            "join",
            "journalist",
            "as",
            "t3",
            "on",
            "t1.journalist_id",
            "=",
            "t3.journalist_id",
            "order",
            "by",
            "t2.event_attendance",
            "asc"
        ]
    },
    {
        "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
        "masked_template": "What are <mask> of <mask> of all the <mask> whose <mask> is <mask>",
        "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
        "ted": 0.0,
        "db_id": "apartment_rentals",
        "query_toks": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "gender_code",
            "=",
            "\"Male\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "gender_code",
            "=",
            "value"
        ]
    },
    {
        "question": "Return all the information for each election record.",
        "masked_template": "Return all the <mask> for each <mask>",
        "query": "SELECT * FROM election",
        "ted": 0.0,
        "db_id": "election",
        "query_toks": [
            "select",
            "*",
            "from",
            "election"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "election"
        ]
    },
    {
        "question": "Find the student ID and personal name of the student with at least two enrollments.",
        "masked_template": "Find the <mask> ID and <mask> name of the <mask> with at least two <mask>",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "e_learning",
        "query_toks": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_id",
            ",",
            "t2.personal_name",
            "from",
            "student_course_enrolment",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Find the number of routes that have destination John F Kennedy International Airport.",
        "masked_template": "Find the number of <mask> that have <mask> F <mask>",
        "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "t1.name",
            "=",
            "\"John F Kennedy International Airport\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
        "masked_template": "Show all the <mask> and <mask> of <mask>",
        "query": "SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "planned_delivery_date",
            ",",
            "actual_delivery_date",
            "from",
            "bookings"
        ],
        "query_toks_no_value": [
            "select",
            "planned_delivery_date",
            ",",
            "actual_delivery_date",
            "from",
            "bookings"
        ]
    },
    {
        "question": "Show names for all employees who have certificate of Boeing 737-800.",
        "masked_template": "Show names for all <mask> who have <mask> of <mask>",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "\"Boeing 737-800\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "What is the carrier of the most expensive phone?",
        "masked_template": "What is the <mask> of the most <mask>",
        "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "phone_market",
        "query_toks": [
            "select",
            "carrier",
            "from",
            "phone",
            "order",
            "by",
            "price",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "phone",
            "order",
            "by",
            "price",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show all product names without an order.",
        "masked_template": "Show all <mask> names <mask> an <mask>",
        "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "product_name",
            "from",
            "products",
            "except",
            "select",
            "t1.product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "except",
            "select",
            "t1.product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id"
        ]
    },
    {
        "question": "Show the names of people who have been on the negative side of debates at least twice.",
        "masked_template": "Show the names of <mask> who have <mask> on the <mask> of <mask> at least <mask>",
        "query": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.People_ID GROUP BY T2.Name HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "debate",
        "query_toks": [
            "select",
            "t2.name",
            "from",
            "debate_people",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.negative",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            "from",
            "debate_people",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.negative",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Show all allergy types and the number of allergies in each type.",
        "masked_template": "Show all <mask> and the number of <mask> in each <mask>",
        "query": "SELECT allergytype , count( * ) FROM Allergy_type GROUP BY allergytype",
        "ted": 0.0,
        "db_id": "allergy_1",
        "query_toks": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ],
        "query_toks_no_value": [
            "select",
            "allergytype",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "allergy_type",
            "group",
            "by",
            "allergytype"
        ]
    },
    {
        "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
        "masked_template": "What is the <mask> and id of the <mask> which has the most number of <mask>",
        "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.organisation_type",
            ",",
            "t1.organisation_id",
            "from",
            "organisations",
            "as",
            "t1",
            "join",
            "research_staff",
            "as",
            "t2",
            "on",
            "t1.organisation_id",
            "=",
            "t2.employer_organisation_id",
            "group",
            "by",
            "t1.organisation_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organisation_type",
            ",",
            "t1.organisation_id",
            "from",
            "organisations",
            "as",
            "t1",
            "join",
            "research_staff",
            "as",
            "t2",
            "on",
            "t1.organisation_id",
            "=",
            "t2.employer_organisation_id",
            "group",
            "by",
            "t1.organisation_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the rooms for members of the faculty who are professors and who live in building NEB?",
        "masked_template": "What are the <mask> for <mask> of the <mask> who are <mask> and who <mask> in <mask>",
        "query": "SELECT Room FROM FACULTY WHERE Rank = 'Professor' AND Building = 'NEB'",
        "ted": 0.0,
        "db_id": "college_3",
        "query_toks": [
            "select",
            "room",
            "from",
            "faculty",
            "where",
            "rank",
            "=",
            "\"Professor\"",
            "and",
            "building",
            "=",
            "\"NEB\""
        ],
        "query_toks_no_value": [
            "select",
            "room",
            "from",
            "faculty",
            "where",
            "rank",
            "=",
            "value",
            "and",
            "building",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the location of the club named \"Tennis Club\"?",
        "masked_template": "What is the <mask> of the <mask> named <mask>",
        "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "\"Tennis Club\""
        ],
        "query_toks_no_value": [
            "select",
            "clublocation",
            "from",
            "club",
            "where",
            "clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?",
        "masked_template": "How many <mask> in <mask> in <mask> is, the <mask> of <mask> is <mask>",
        "query": "SELECT count( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1",
        "ted": 0.041666666666666664,
        "db_id": "baseball_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "1885",
            "and",
            "ties",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "postseason",
            "where",
            "year",
            "=",
            "value",
            "and",
            "ties",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
        "masked_template": "What is the <mask> and id of the <mask> which has the most number of <mask>",
        "query": "SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.organisation_type",
            ",",
            "t1.organisation_id",
            "from",
            "organisations",
            "as",
            "t1",
            "join",
            "research_staff",
            "as",
            "t2",
            "on",
            "t1.organisation_id",
            "=",
            "t2.employer_organisation_id",
            "group",
            "by",
            "t1.organisation_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organisation_type",
            ",",
            "t1.organisation_id",
            "from",
            "organisations",
            "as",
            "t1",
            "join",
            "research_staff",
            "as",
            "t2",
            "on",
            "t1.organisation_id",
            "=",
            "t2.employer_organisation_id",
            "group",
            "by",
            "t1.organisation_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the most common participant type?",
        "masked_template": "What is the most <mask>",
        "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "local_govt_in_alabama",
        "query_toks": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the names of all the employees with role \"HR\".",
        "masked_template": "Show the names of all the <mask> with <mask>",
        "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "\"HR\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "value"
        ]
    },
    {
        "question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.",
        "masked_template": "Who are the <mask> of the <mask> named <mask> me their <mask>",
        "query": "SELECT T3.lname FROM club AS T1 JOIN member_of_club AS T2 ON T1.clubid = T2.clubid JOIN student AS T3 ON T2.stuid = T3.stuid WHERE T1.clubname = 'Bootup Baltimore'",
        "ted": 0.0,
        "db_id": "club_1",
        "query_toks": [
            "select",
            "t3.lname",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "member_of_club",
            "as",
            "t2",
            "on",
            "t1.clubid",
            "=",
            "t2.clubid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stuid",
            "=",
            "t3.stuid",
            "where",
            "t1.clubname",
            "=",
            "\"Bootup Baltimore\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.lname",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "member_of_club",
            "as",
            "t2",
            "on",
            "t1.clubid",
            "=",
            "t2.clubid",
            "join",
            "student",
            "as",
            "t3",
            "on",
            "t2.stuid",
            "=",
            "t3.stuid",
            "where",
            "t1.clubname",
            "=",
            "value"
        ]
    },
    {
        "question": "Find all the songs whose name contains the word \"the\".",
        "masked_template": "Find all the <mask> whose name <mask> the <mask>",
        "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "songs",
            "where",
            "title",
            "like",
            "\"% the %\""
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "songs",
            "where",
            "title",
            "like",
            "value"
        ]
    },
    {
        "question": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?",
        "masked_template": "What is the <mask> of the <mask> with <mask> name as <mask> and <mask> name as <mask>",
        "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "date_of_birth",
            "from",
            "staff",
            "where",
            "first_name",
            "=",
            "\"Janessa\"",
            "and",
            "last_name",
            "=",
            "\"Sawayn\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "staff",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ]
    },
    {
        "question": "For each type, how many ships are there?",
        "masked_template": "For each <mask> how many <mask> are <mask>",
        "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
        "ted": 0.0,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ]
    },
    {
        "question": "Show first name and id for all customers with at least 2 accounts.",
        "masked_template": "Show <mask> name and id for all <mask> with at least 2 <mask>",
        "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
        "ted": 0.0,
        "db_id": "customers_and_invoices",
        "query_toks": [
            "select",
            "t2.customer_first_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.customer_first_name",
            ",",
            "t1.customer_id",
            "from",
            "accounts",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Show the most common position of players in match seasons.",
        "masked_template": "Show the most <mask> of <mask> in <mask>",
        "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the first and last name of the faculty who has the most students?",
        "masked_template": "What are the <mask> and <mask> name of the <mask> who has the most <mask>",
        "query": "SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.fname",
            ",",
            "t1.lname",
            "from",
            "faculty",
            "as",
            "t1",
            "join",
            "student",
            "as",
            "t2",
            "on",
            "t1.facid",
            "=",
            "t2.advisor",
            "group",
            "by",
            "t1.facid",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.",
        "masked_template": "Show the names of <mask> and the <mask> of <mask> in <mask> order of <mask> of the <mask>",
        "query": "SELECT T2.Name , T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T3.Attendance DESC",
        "ted": 0.02631578947368421,
        "db_id": "performance_attendance",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "t3.date",
            "from",
            "member_attendance",
            "as",
            "t1",
            "join",
            "member",
            "as",
            "t2",
            "on",
            "t1.member_id",
            "=",
            "t2.member_id",
            "join",
            "performance",
            "as",
            "t3",
            "on",
            "t1.performance_id",
            "=",
            "t3.performance_id",
            "order",
            "by",
            "t3.attendance",
            "desc"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "t3.date",
            "from",
            "member_attendance",
            "as",
            "t1",
            "join",
            "member",
            "as",
            "t2",
            "on",
            "t1.member_id",
            "=",
            "t2.member_id",
            "join",
            "performance",
            "as",
            "t3",
            "on",
            "t1.performance_id",
            "=",
            "t3.performance_id",
            "order",
            "by",
            "t3.attendance",
            "desc"
        ]
    },
    {
        "question": "What is the name of organization that has the greatest number of contact individuals?",
        "masked_template": "What is the name of <mask> that has the <mask> number of <mask>",
        "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the details of the student who registered for the most number of courses?",
        "masked_template": "What are the <mask> of the <mask> who <mask> for the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the position that is most common among players in match seasons?",
        "masked_template": "What is the <mask> that is most <mask> in <mask>",
        "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "match_season",
        "query_toks": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "match_season",
            "group",
            "by",
            "position",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
        "masked_template": "What is the <mask> and id of the <mask> that has the <mask> number of <mask> in <mask>",
        "query": "SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "sakila_1",
        "query_toks": [
            "select",
            "t1.title",
            ",",
            "t1.film_id",
            "from",
            "film",
            "as",
            "t1",
            "join",
            "inventory",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t1.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.title",
            ",",
            "t1.film_id",
            "from",
            "film",
            "as",
            "t1",
            "join",
            "inventory",
            "as",
            "t2",
            "on",
            "t1.film_id",
            "=",
            "t2.film_id",
            "group",
            "by",
            "t1.film_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many classes does the professor whose last name is Graztevski teach?",
        "masked_template": "How many <mask> the <mask> whose <mask> name is <mask>",
        "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "class",
            "as",
            "t2",
            "on",
            "t1.emp_num",
            "=",
            "t2.prof_num",
            "where",
            "t1.emp_lname",
            "=",
            "\"Graztevski\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "class",
            "as",
            "t2",
            "on",
            "t1.emp_num",
            "=",
            "t2.prof_num",
            "where",
            "t1.emp_lname",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
        "masked_template": "What are the names of all <mask> that <mask> have <mask> to be <mask> to <mask>",
        "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "\"John Williams\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "For each type, how many ships are there?",
        "masked_template": "For each <mask> how many <mask> are <mask>",
        "query": "SELECT TYPE , COUNT( * ) FROM ship GROUP BY TYPE",
        "ted": 0.0,
        "db_id": "ship_mission",
        "query_toks": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ]
    },
    {
        "question": "Show the names of the three most recent festivals.",
        "masked_template": "Show the names of the <mask> most <mask>",
        "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
        "ted": 0.0,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "festival_name",
            "from",
            "festival_detail",
            "order",
            "by",
            "year",
            "desc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "festival_name",
            "from",
            "festival_detail",
            "order",
            "by",
            "year",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "List all directors along with the number of films directed by each director.",
        "masked_template": "List all <mask> with the number of <mask> by each <mask>",
        "query": "SELECT directed_by , count( * ) FROM film GROUP BY directed_by",
        "ted": 0.0,
        "db_id": "cinema",
        "query_toks": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "directed_by",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "film",
            "group",
            "by",
            "directed_by"
        ]
    },
    {
        "question": "Find the name of the courses that do not have any prerequisite?",
        "masked_template": "Find the name of the <mask> that do not have any <mask>",
        "query": "SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq )",
        "ted": 0.0,
        "db_id": "college_2",
        "query_toks": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "course",
            "where",
            "course_id",
            "not",
            "in",
            "(",
            "select",
            "course_id",
            "from",
            "prereq",
            ")"
        ]
    },
    {
        "question": "Find the names of all the products whose stock number starts with \"2\".",
        "masked_template": "Find the names of all the <mask> whose <mask> number <mask> with <mask>",
        "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE '2%'",
        "ted": 0.0,
        "db_id": "product_catalog",
        "query_toks": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "where",
            "product_stock_number",
            "like",
            "\"2%\""
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "where",
            "product_stock_number",
            "like",
            "value"
        ]
    },
    {
        "question": "What are the names of the clients who do not have any booking?",
        "masked_template": "What are the names of the <mask> who do not have any <mask>",
        "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID = T2.Client_ID",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "customer_name",
            "from",
            "clients",
            "except",
            "select",
            "t2.customer_name",
            "from",
            "bookings",
            "as",
            "t1",
            "join",
            "clients",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.client_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "clients",
            "except",
            "select",
            "t2.customer_name",
            "from",
            "bookings",
            "as",
            "t1",
            "join",
            "clients",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.client_id"
        ]
    },
    {
        "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
        "masked_template": "What are the names of all <mask> that <mask> have <mask> to be <mask> to <mask>",
        "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = 'John Williams'",
        "ted": 0.0,
        "db_id": "flight_1",
        "query_toks": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "\"John Williams\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "certificate",
            "as",
            "t2",
            "on",
            "t1.eid",
            "=",
            "t2.eid",
            "join",
            "aircraft",
            "as",
            "t3",
            "on",
            "t3.aid",
            "=",
            "t2.aid",
            "where",
            "t1.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Which project made the most number of outcomes? List the project details and the project id.",
        "masked_template": "Which <mask> the most number of <mask> List the <mask> and the <mask> id.",
        "query": "SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "tracking_grants_for_research",
        "query_toks": [
            "select",
            "t1.project_details",
            ",",
            "t1.project_id",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "project_outcomes",
            "as",
            "t2",
            "on",
            "t1.project_id",
            "=",
            "t2.project_id",
            "group",
            "by",
            "t1.project_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.project_details",
            ",",
            "t1.project_id",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "project_outcomes",
            "as",
            "t2",
            "on",
            "t1.project_id",
            "=",
            "t2.project_id",
            "group",
            "by",
            "t1.project_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "How many documents were shipped by USPS?",
        "masked_template": "How many <mask> by <mask>",
        "query": "SELECT count( * ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS'",
        "ted": 0.0,
        "db_id": "cre_Doc_Control_Systems",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_shipping_agents",
            "join",
            "documents",
            "on",
            "documents.shipping_agent_code",
            "=",
            "ref_shipping_agents.shipping_agent_code",
            "where",
            "ref_shipping_agents.shipping_agent_name",
            "=",
            "\"USPS\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_shipping_agents",
            "join",
            "documents",
            "on",
            "documents.shipping_agent_code",
            "=",
            "ref_shipping_agents.shipping_agent_code",
            "where",
            "ref_shipping_agents.shipping_agent_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the codes of card types that have 5 or more cards?",
        "masked_template": "What are the <mask> of <mask> that have 5 or more <mask>",
        "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count( * ) >= 5",
        "ted": 0.0,
        "db_id": "customers_card_transactions",
        "query_toks": [
            "select",
            "card_type_code",
            "from",
            "customers_cards",
            "group",
            "by",
            "card_type_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "card_type_code",
            "from",
            "customers_cards",
            "group",
            "by",
            "card_type_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "What are the names of all movies directed by Steven Spielberg?",
        "masked_template": "What are the names of all <mask> by <mask>",
        "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
        "ted": 0.0,
        "db_id": "movie_1",
        "query_toks": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "director",
            "=",
            "\"Steven Spielberg\""
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "where",
            "director",
            "=",
            "value"
        ]
    },
    {
        "question": "How many classes are professor whose last name is Graztevski has?",
        "masked_template": "How many <mask> are <mask> whose <mask> name is <mask>",
        "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
        "ted": 0.0,
        "db_id": "college_1",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "class",
            "as",
            "t2",
            "on",
            "t1.emp_num",
            "=",
            "t2.prof_num",
            "where",
            "t1.emp_lname",
            "=",
            "\"Graztevski\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "class",
            "as",
            "t2",
            "on",
            "t1.emp_num",
            "=",
            "t2.prof_num",
            "where",
            "t1.emp_lname",
            "=",
            "value"
        ]
    },
    {
        "question": "List the name of all tracks in the playlists of Movies.",
        "masked_template": "List the name of all <mask> in the <mask> of <mask>",
        "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = 'Movies'",
        "ted": 0.0,
        "db_id": "store_1",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "\"Movies\""
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "tracks",
            "as",
            "t1",
            "join",
            "playlist_tracks",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.track_id",
            "join",
            "playlists",
            "as",
            "t3",
            "on",
            "t3.id",
            "=",
            "t2.playlist_id",
            "where",
            "t3.name",
            "=",
            "value"
        ]
    },
    {
        "question": "Show the different countries and the number of members from each.",
        "masked_template": "Show the different <mask> and the number of <mask>",
        "query": "SELECT Country , COUNT( * ) FROM member GROUP BY Country",
        "ted": 0.0,
        "db_id": "decoration_competition",
        "query_toks": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "member",
            "group",
            "by",
            "country"
        ]
    },
    {
        "question": "What are the hometowns that are shared by at least two gymnasts?",
        "masked_template": "What are the <mask> that are <mask> by at least two <mask>",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "gymnast",
        "query_toks": [
            "select",
            "t2.hometown",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.gymnast_id",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2.hometown",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1.gymnast_id",
            "=",
            "t2.people_id",
            "group",
            "by",
            "t2.hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Return the name of the organization which has the most contact individuals.",
        "masked_template": "Return the name of the <mask> which has the most <mask>",
        "query": "SELECT T1.organization_name FROM organizations AS T1 JOIN organization_contact_individuals AS T2 ON T1.organization_id = T2.organization_id GROUP BY T1.organization_name ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "e_government",
        "query_toks": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.organization_name",
            "from",
            "organizations",
            "as",
            "t1",
            "join",
            "organization_contact_individuals",
            "as",
            "t2",
            "on",
            "t1.organization_id",
            "=",
            "t2.organization_id",
            "group",
            "by",
            "t1.organization_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all aircrafts that have won a match at least twice?",
        "masked_template": "What are the names of all <mask> that have won a <mask> at least <mask>",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT( * ) >= 2",
        "ted": 0.0,
        "db_id": "aircraft",
        "query_toks": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1.aircraft",
            "from",
            "aircraft",
            "as",
            "t1",
            "join",
            "match",
            "as",
            "t2",
            "on",
            "t1.aircraft_id",
            "=",
            "t2.winning_aircraft",
            "group",
            "by",
            "t2.winning_aircraft",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">=",
            "value"
        ]
    },
    {
        "question": "Show the names of all the employees with role \"HR\".",
        "masked_template": "Show the names of all the <mask> with <mask>",
        "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "\"HR\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the names and phone numbers for all suppliers, sorted in alphabetical order of their addressed?",
        "masked_template": "What are the names and <mask> numbers for all <mask> in <mask> order of their <mask>",
        "query": "SELECT T1.supplier_name , T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details",
        "ted": 0.0,
        "db_id": "department_store",
        "query_toks": [
            "select",
            "t1.supplier_name",
            ",",
            "t1.supplier_phone",
            "from",
            "suppliers",
            "as",
            "t1",
            "join",
            "supplier_addresses",
            "as",
            "t2",
            "on",
            "t1.supplier_id",
            "=",
            "t2.supplier_id",
            "join",
            "addresses",
            "as",
            "t3",
            "on",
            "t2.address_id",
            "=",
            "t3.address_id",
            "order",
            "by",
            "t3.address_details"
        ],
        "query_toks_no_value": [
            "select",
            "t1.supplier_name",
            ",",
            "t1.supplier_phone",
            "from",
            "suppliers",
            "as",
            "t1",
            "join",
            "supplier_addresses",
            "as",
            "t2",
            "on",
            "t1.supplier_id",
            "=",
            "t2.supplier_id",
            "join",
            "addresses",
            "as",
            "t3",
            "on",
            "t2.address_id",
            "=",
            "t3.address_id",
            "order",
            "by",
            "t3.address_details"
        ]
    },
    {
        "question": "Show the number of audience in year 2008 or 2010.",
        "masked_template": "Show the number of <mask> in <mask> or <mask>",
        "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010",
        "ted": 0.08333333333333333,
        "db_id": "entertainment_awards",
        "query_toks": [
            "select",
            "num_of_audience",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "2008",
            "or",
            "year",
            "=",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_audience",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the nickname of staff with first name as Janessa and last name as Sawayn?",
        "masked_template": "What is the <mask> of <mask> with <mask> name as <mask> and <mask> name as <mask>",
        "query": "SELECT nickname FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
        "ted": 0.0,
        "db_id": "driving_school",
        "query_toks": [
            "select",
            "nickname",
            "from",
            "staff",
            "where",
            "first_name",
            "=",
            "\"Janessa\"",
            "and",
            "last_name",
            "=",
            "\"Sawayn\""
        ],
        "query_toks_no_value": [
            "select",
            "nickname",
            "from",
            "staff",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ]
    },
    {
        "question": "What is detail of the student who registered the most number of courses?",
        "masked_template": "What is <mask> of the <mask> who <mask> the most number of <mask>",
        "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "student_assessment",
        "query_toks": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.student_details",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_course_registrations",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the faculty ids of all the male faculty members?",
        "masked_template": "What are the <mask> ids of all the <mask>",
        "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "\"M\""
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "sex",
            "=",
            "value"
        ]
    },
    {
        "question": "What is the name and hours for the project which has the most scientists assigned to it?",
        "masked_template": "What is the name and <mask> for the <mask> which has the most <mask> to it?",
        "query": "SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "scientist_1",
        "query_toks": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            ",",
            "t1.hours",
            "from",
            "projects",
            "as",
            "t1",
            "join",
            "assignedto",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.project",
            "group",
            "by",
            "t2.project",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Show the names of all the employees with role \"HR\".",
        "masked_template": "Show the names of all the <mask> with <mask>",
        "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
        "ted": 0.0,
        "db_id": "cre_Doc_Tracking_DB",
        "query_toks": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "\"HR\""
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "value"
        ]
    },
    {
        "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
        "masked_template": "How many <mask> in each <mask> Return the <mask> names and the number of <mask>",
        "query": "SELECT T1.activity_name , count( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "ted": 0.0,
        "db_id": "activity_1",
        "query_toks": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ],
        "query_toks_no_value": [
            "select",
            "t1.activity_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "activity",
            "as",
            "t1",
            "join",
            "faculty_participates_in",
            "as",
            "t2",
            "on",
            "t1.actid",
            "=",
            "t2.actid",
            "group",
            "by",
            "t1.actid"
        ]
    },
    {
        "question": "How many routes end in a Canadian airport?",
        "masked_template": "How many <mask> end in a <mask>",
        "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
        "ted": 0.0,
        "db_id": "flight_4",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "country",
            "=",
            "\"Canada\""
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "routes",
            "as",
            "t2",
            "on",
            "t1.apid",
            "=",
            "t2.dst_apid",
            "where",
            "country",
            "=",
            "value"
        ]
    },
    {
        "question": "Find all the locations whose names contain the word \"film\".",
        "masked_template": "Find all the <mask> whose names <mask> the <mask>",
        "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE '%film%'",
        "ted": 0.0,
        "db_id": "cre_Theme_park",
        "query_toks": [
            "select",
            "location_name",
            "from",
            "locations",
            "where",
            "location_name",
            "like",
            "\"%film%\""
        ],
        "query_toks_no_value": [
            "select",
            "location_name",
            "from",
            "locations",
            "where",
            "location_name",
            "like",
            "value"
        ]
    },
    {
        "question": "Return the date of birth for all the guests with gender code \"Male\".",
        "masked_template": "Return the <mask> of <mask> for all the <mask> with <mask>",
        "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
        "ted": 0.0,
        "db_id": "apartment_rentals",
        "query_toks": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "gender_code",
            "=",
            "\"Male\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "gender_code",
            "=",
            "value"
        ]
    },
    {
        "question": "Find the description and code of the service type that is performed the most times.",
        "masked_template": "Find the <mask> and <mask> of the <mask> that is <mask> the most <mask>",
        "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "cre_Drama_Workshop_Groups",
        "query_toks": [
            "select",
            "t1.service_type_description",
            ",",
            "t1.service_type_code",
            "from",
            "ref_service_types",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_type_code",
            "=",
            "t2.service_type_code",
            "group",
            "by",
            "t1.service_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1.service_type_description",
            ",",
            "t1.service_type_code",
            "from",
            "ref_service_types",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_type_code",
            "=",
            "t2.service_type_code",
            "group",
            "by",
            "t1.service_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
        "masked_template": "Find the most <mask> in the <mask> The most <mask> is the <mask> that had <mask> the <mask> number of <mask>",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "inn_1",
        "query_toks": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.roomname",
            "from",
            "reservations",
            "as",
            "t1",
            "join",
            "rooms",
            "as",
            "t2",
            "on",
            "t1.room",
            "=",
            "t2.roomid",
            "group",
            "by",
            "t1.room",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?",
        "masked_template": "What are the <mask> of <mask> of <mask> with <mask> and <mask>",
        "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category = 'Best Song' AND RESULT = 'Awarded'",
        "ted": 0.0,
        "db_id": "music_4",
        "query_toks": [
            "select",
            "date_of_ceremony",
            "from",
            "music_festival",
            "where",
            "category",
            "=",
            "\"Best Song\"",
            "and",
            "result",
            "=",
            "\"Awarded\""
        ],
        "query_toks_no_value": [
            "select",
            "date_of_ceremony",
            "from",
            "music_festival",
            "where",
            "category",
            "=",
            "value",
            "and",
            "result",
            "=",
            "value"
        ]
    },
    {
        "question": "What are the different budget type codes, and how many documents are there for each?",
        "masked_template": "What are the different <mask> and how many <mask> are there for <mask>",
        "query": "SELECT budget_type_code , count( * ) FROM Documents_with_expenses GROUP BY budget_type_code",
        "ted": 0.0,
        "db_id": "cre_Docs_and_Epenses",
        "query_toks": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ]
    },
    {
        "question": "Show the names of members and the location of performances they attended in ascending alphabetical order of their names.",
        "masked_template": "Show the names of <mask> and the <mask> of <mask> in <mask> order of their <mask>",
        "query": "SELECT T2.Name , T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T2.Name ASC",
        "ted": 0.0,
        "db_id": "performance_attendance",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "t3.location",
            "from",
            "member_attendance",
            "as",
            "t1",
            "join",
            "member",
            "as",
            "t2",
            "on",
            "t1.member_id",
            "=",
            "t2.member_id",
            "join",
            "performance",
            "as",
            "t3",
            "on",
            "t1.performance_id",
            "=",
            "t3.performance_id",
            "order",
            "by",
            "t2.name",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "t3.location",
            "from",
            "member_attendance",
            "as",
            "t1",
            "join",
            "member",
            "as",
            "t2",
            "on",
            "t1.member_id",
            "=",
            "t2.member_id",
            "join",
            "performance",
            "as",
            "t3",
            "on",
            "t1.performance_id",
            "=",
            "t3.performance_id",
            "order",
            "by",
            "t2.name",
            "asc"
        ]
    },
    {
        "question": "What are the names of all songs in English?",
        "masked_template": "What are the names of all <mask> in <mask>",
        "query": "SELECT song_name FROM song WHERE languages = 'english'",
        "ted": 0.0,
        "db_id": "music_1",
        "query_toks": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "languages",
            "=",
            "\"english\""
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "song",
            "where",
            "languages",
            "=",
            "value"
        ]
    },
    {
        "question": "Return the structure description of the document that has been accessed the fewest number of times.",
        "masked_template": "Return the <mask> of the <mask> that has <mask> the <mask> number of <mask>",
        "query": "SELECT T2.document_structure_description FROM documents AS T1 JOIN document_structures AS T2 ON T1.document_structure_code = T2.document_structure_code GROUP BY T1.document_structure_code ORDER BY count( * ) DESC LIMIT 1",
        "ted": 0.0,
        "db_id": "document_management",
        "query_toks": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.document_structure_description",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "document_structures",
            "as",
            "t2",
            "on",
            "t1.document_structure_code",
            "=",
            "t2.document_structure_code",
            "group",
            "by",
            "t1.document_structure_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the three products that have the most problems?s",
        "masked_template": "What are the <mask> that have the most <mask>",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count( * ) DESC LIMIT 3",
        "ted": 0.0,
        "db_id": "tracking_software_problems",
        "query_toks": [
            "select",
            "t2.product_name",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "product",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t2.product_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2.product_name",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "product",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t2.product_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ]
    },
    {
        "question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?",
        "masked_template": "What are the names of all <mask> by the <mask> with the <mask> name <mask>",
        "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = 'Marianne'",
        "ted": 0.0,
        "db_id": "music_2",
        "query_toks": [
            "select",
            "t3.title",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "where",
            "t2.firstname",
            "=",
            "\"Marianne\""
        ],
        "query_toks_no_value": [
            "select",
            "t3.title",
            "from",
            "performance",
            "as",
            "t1",
            "join",
            "band",
            "as",
            "t2",
            "on",
            "t1.bandmate",
            "=",
            "t2.id",
            "join",
            "songs",
            "as",
            "t3",
            "on",
            "t3.songid",
            "=",
            "t1.songid",
            "where",
            "t2.firstname",
            "=",
            "value"
        ]
    }
]