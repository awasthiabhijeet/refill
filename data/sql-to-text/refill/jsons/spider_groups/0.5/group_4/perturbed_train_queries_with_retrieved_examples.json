{
    "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5": [
        {
            "db_id": "document_management",
            "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
            "question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
            "question": "Which room has the highest base price?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
            "question": "Find the name and id of the top 3 expensive rooms.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
            "question": "What are the name and id of the three highest priced rooms?",
            "ted": 0.0
        },
        {
            "db_id": "wedding",
            "query": "SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3",
            "question": "Show the name and opening year for three churches that opened most recently.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
            "question": "Show the id and name of the employee with maximum salary.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
            "question": "List the official name and status of the city with the largest population.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",
            "question": "What is the official name and status of the city with the most residents?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
            "question": "Show the name and the nationality of the oldest host.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
            "question": "What are the name and the nationality of the host of the highest age?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1",
            "question": "Find the id and name of the most expensive base price room.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
            "question": "What si the youngest employee's first and last name?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name and date of the race that occurred most recently?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1",
            "question": "Which restaurants have highest rating? List the restaurant name and its rating.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT venue , name FROM event ORDER BY Event_Attendance DESC LIMIT 2",
            "question": "List the event venues and names that have the top 2 most number of people attended.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
            "question": "What is the flight number and its distance for the one with the maximum price?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",
            "question": "Show the flight number and distance of the flight with maximum price.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
            "question": "Who is the youngest employee in the company? List employee's first and last name.",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT open_year , name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1",
            "question": "Which manufacturer has the most number of shops? List its name and year of opening.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
            "question": "Show the id and name of the aircraft with the maximum distance.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",
            "question": "What is the id and name of the aircraft that can cover the maximum distance?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name , date FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name and date of the most recent race?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
            "question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
            "question": "Show the names and main services for train stations that have the top three total number of passengers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",
            "question": "What is the id and name of the employee with the highest salary?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
            "question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
            "question": "Which film has the highest rental rate? And what is the rate?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
            "question": "What is the name of the song that was released in the most recent year?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
            "question": "What is the department name and corresponding building for the department with the greatest budget?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "What is the name and category code of the product with the highest price?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
            "question": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",
            "question": "Find the name and building of the department with the highest budget.",
            "ted": 0.0
        },
        {
            "db_id": "cinema",
            "query": "SELECT name , LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",
            "question": "What are the name and location of the cinema with the largest capacity?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
            "question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
            "question": "What are the dates that have the 5 highest cloud cover rates and what are the rates?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
            "question": "What is the name of the song that was released most recently?",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT amount , donator_name FROM endowment ORDER BY amount DESC LIMIT 1",
            "question": "List the amount and donor name for the largest amount of donation.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
            "question": "What are the title and rental rate of the film with the highest rental rate?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",
            "question": "What are the ids and durations of the trips with the top 3 durations?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",
            "question": "What are the ids of the trips that lasted the longest and how long did they last?",
            "ted": 0.0
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT name , furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
            "question": "Return the name and id of the furniture with the highest market rate.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "Find the name and category of the most expensive product.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
            "question": "What is the first and last name of the oldest employee?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_1",
            "query": "SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
            "question": "What are the first and last names of the employee with the earliest date of birth?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
            "question": "List top 10 employee work longest in the company. List employee's first and last name.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "store_1",
            "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10",
            "question": "What are the first and last names of the top 10 longest-serving employees?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "city_record",
            "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
            "question": "Which city has the lowest GDP? Please list the city name and its GDP.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
            "question": "What is the name and price of the cheapest product?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "city_record",
            "query": "SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",
            "question": "What is the city with the smallest GDP? Return the city and its GDP.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
            "question": "Show the details and star ratings of the 3 least expensive hotels.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
            "question": "What are the details and star ratings of the three hotels with the lowest price ranges?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
            "question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
            "question": "What are the room name and base price of the room with the lowest base price?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1",
            "question": "Which room has cheapest base price? List the room's name and the base price.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",
            "question": "Select the name and price of the cheapest product.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
            "question": "Find the oldest log id and its corresponding problem id.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name , email FROM user_profiles ORDER BY followers LIMIT 1",
            "question": "Find the name and email of the user followed by the least number of people.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
            "question": "what are the order id and customer id of the oldest order?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
            "question": "Find the order id and customer id associated with the oldest order.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
            "question": "What is the station station and end station for the trips with the three smallest ids?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "bike_1",
            "query": "SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",
            "question": "Give me the start station and end station for the trips with the three oldest id.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
            "question": "Give the id and product type of the product with the lowest price.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
            "question": "What is the oldest log id and its corresponding problem id?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",
            "question": "What are the product id and product type of the cheapest product?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",
            "question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
            "question": "Show the enrollment and primary_conference of the oldest college.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
            "question": "Which part has the least chargeable amount? List the part id and amount.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Model_name , RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1",
            "question": "Which model has the least amount of RAM? List the model name and the amount of RAM.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",
            "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufacturer",
            "query": "SELECT name , Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1",
            "question": "Find the name and component amount of the least popular furniture.",
            "ted": 0.05555555555555555
        }
    ],
    "SELECT sum( Population ) FROM country WHERE Name NOT IN ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Ainu' )": [
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' )",
            "question": "Find the number of patients who are not using the medication of Procrastin-X.",
            "ted": 0.022727272727272728
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' )",
            "question": "How many patients are not using Procrastin-X as medication?",
            "ted": 0.022727272727272728
        },
        {
            "db_id": "wine_1",
            "query": "SELECT avg( price ) FROM wine WHERE Appelation NOT IN ( SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma' )",
            "question": "What is the average price for wines not produced in Sonoma county?",
            "ted": 0.022727272727272728
        },
        {
            "db_id": "wine_1",
            "query": "SELECT avg( price ) FROM wine WHERE Appelation NOT IN ( SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma' )",
            "question": "Find the average price of wines that are not produced from Sonoma county.",
            "ted": 0.022727272727272728
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM student WHERE id NOT IN ( SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'Biology' )",
            "question": "Find the name of students who didn't take any course from Biology department.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM student WHERE id NOT IN ( SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'Biology' )",
            "question": "What are the names of students who haven't taken any Biology courses?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( DISTINCT name ) FROM products WHERE name NOT IN ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony' )",
            "question": "How many products are not made by Sony?",
            "ted": 0.06521739130434782
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( DISTINCT name ) FROM products WHERE name NOT IN ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony' )",
            "question": "Find number of products which Sony does not make.",
            "ted": 0.06521739130434782
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'Mobile Computing' )",
            "question": "What is the title of the course that is a prerequisite for Mobile Computing?",
            "ted": 0.06818181818181818
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id IN ( SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id = T2.course_id WHERE T2.title = 'Differential Geometry' )",
            "question": "What is the title of the course with Differential Geometry as a prerequisite?",
            "ted": 0.06818181818181818
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'Mobile Computing' )",
            "question": "What is the course title of the prerequisite of course Mobile Computing?",
            "ted": 0.06818181818181818
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id IN ( SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id = T2.course_id WHERE T2.title = 'Differential Geometry' )",
            "question": "Find the title of course whose prerequisite is course Differential Geometry.",
            "ted": 0.06818181818181818
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance' )",
            "question": "What is the title of the prerequisite class of International Finance course?",
            "ted": 0.06818181818181818
        },
        {
            "db_id": "college_2",
            "query": "SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance' )",
            "question": "Give the title of the prerequisite to the course International Finance.",
            "ted": 0.06818181818181818
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT fname , lname FROM Student WHERE StuID NOT IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = 'food' )",
            "question": "List the first and last name of the students who do not have any food type allergy.",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT fname , lname FROM Student WHERE StuID NOT IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = 'food' )",
            "question": "What is the full name of each student who is not allergic to any type of food.",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "film_rank",
            "query": "SELECT title , director FROM film WHERE film_id NOT IN ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China' )",
            "question": "Return the titles and directors of films that were never in the market of China.",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "film_rank",
            "query": "SELECT title , director FROM film WHERE film_id NOT IN ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China' )",
            "question": "What are the titles and directors of the films were never presented in China?",
            "ted": 0.08695652173913043
        }
    ],
    "SELECT sum( Population ) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg( LifeExpectancy ) > 78": [
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , city_code FROM student GROUP BY city_code HAVING count( * ) > 1",
            "question": "How many students are from each city, and which cities have more than one cities?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT sum( Enrollment ) , affiliation FROM university WHERE founded > 1850 GROUP BY affiliation",
            "question": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT sum( Enrollment ) , affiliation FROM university WHERE founded > 1850 GROUP BY affiliation",
            "question": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( acc_bal ) , state FROM customer WHERE credit_score > 100 GROUP BY state",
            "question": "For each state, find the total account balance of customers whose credit score is above 100.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( acc_bal ) , state FROM customer WHERE credit_score > 100 GROUP BY state",
            "question": "What is the total account balance for customers with a credit score of above 100 for the different states?",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , city_code FROM student GROUP BY city_code HAVING count( * ) > 1",
            "question": "Find the number of students for the cities where have more than one student.",
            "ted": 0.07692307692307693
        }
    ],
    "SELECT CountryCode , max( Percentage ) FROM countrylanguage WHERE LANGUAGE = 'Naudemba' GROUP BY CountryCode": [
        {
            "db_id": "store_1",
            "query": "SELECT billing_state , COUNT( * ) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_state",
            "question": "List the number of invoices from the US, grouped by state.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "activity_1",
            "query": "SELECT sex , count( * ) FROM Faculty WHERE rank = 'AsstProf' GROUP BY sex",
            "question": "How many male and female assistant professors do we have?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "activity_1",
            "query": "SELECT sex , count( * ) FROM Faculty WHERE rank = 'AsstProf' GROUP BY sex",
            "question": "Show the number of male and female assistant professors.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "store_1",
            "query": "SELECT billing_state , COUNT( * ) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_state",
            "question": "How many invoices were billed from each state?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT investor_id , COUNT( * ) FROM TRANSACTIONS WHERE transaction_type_code = 'SALE' GROUP BY investor_id",
            "question": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list WHERE grade = '0' GROUP BY classroom",
            "question": "For each grade 0 classroom, report the total number of students.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor , count( * ) FROM Rooms WHERE bedType = 'King' GROUP BY decor",
            "question": "How many rooms have king beds? Report the number for each decor type.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list WHERE grade = '0' GROUP BY classroom",
            "question": "For each grade 0 classroom, return the classroom number and the count of students.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list WHERE grade = '4' GROUP BY classroom",
            "question": "Report the total number of students for each fourth-grade classroom.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor , count( * ) FROM Rooms WHERE bedType = 'King' GROUP BY decor",
            "question": "Find the number of rooms with king bed for each decor type.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT complaint_status_code , count( * ) FROM complaints WHERE complaint_type_code = 'Product Failure' GROUP BY complaint_status_code",
            "question": "Of complaints with the type code \"Product Failure\", how many had each different status code?",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom , count( * ) FROM list WHERE grade = '4' GROUP BY classroom",
            "question": "For each fourth-grade classroom, show the classroom number and the total number of students using it.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT complaint_status_code , count( * ) FROM complaints WHERE complaint_type_code = 'Product Failure' GROUP BY complaint_status_code",
            "question": "Find the number of complaints with Product Failure type for each complaint status.",
            "ted": 0.038461538461538464
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_id , AVG( salary ) FROM employees WHERE commission_pct != 'null' GROUP BY department_id",
            "question": "display the average salary of employees for each department who gets a commission percentage.",
            "ted": 0.07692307692307693
        },
        {
            "db_id": "hr_1",
            "query": "SELECT department_id , AVG( salary ) FROM employees WHERE commission_pct != 'null' GROUP BY department_id",
            "question": "What is the average salary of employees who have a commission percentage that is not null?",
            "ted": 0.07692307692307693
        }
    ],
    "SELECT count( DISTINCT LANGUAGE ) FROM countrylanguage": [
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "How many different teams have had eliminated wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "How many distinct governors are there?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "How many different types of rooms are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the unique types of player positions in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergy ) FROM Allergy_type",
            "question": "How many allergy entries are there?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many different allergy types exist?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT allergytype ) FROM Allergy_type",
            "question": "How many distinct allergies are there?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges were represented at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT count( DISTINCT Governor ) FROM party",
            "question": "Count the number of distinct governors.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "How many distinct currency codes are there for all drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT cName ) FROM tryout",
            "question": "How many different colleges do attend the tryout test?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "How many different types of transactions are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "From the trip record, find the number of unique bikes.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT bike_id ) FROM trip",
            "question": "How many different bike ids are there?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "What is the number of distinct cities the stations are located at?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( DISTINCT city ) FROM station",
            "question": "How many different cities have these stations?",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "Count the number of different affected regions.",
            "ted": 0.0
        },
        {
            "db_id": "storm_record",
            "query": "SELECT count( DISTINCT region_id ) FROM affected_region",
            "question": "How many regions are affected?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT count( DISTINCT Currency_Code ) FROM Drama_Workshop_Groups",
            "question": "Find the number of distinct currency codes used in drama workshop groups.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT transaction_type ) FROM Financial_Transactions",
            "question": "Show the number of transaction types.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( DISTINCT roomtype ) FROM room",
            "question": "Find the number of distinct room types available.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of artists who have had volumes.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many different types of sports do we offer?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many students play sports?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "How many distinct countries are the climbers from?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT COUNT( DISTINCT Country ) FROM climber",
            "question": "Count the number of different countries that climbers are from.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Sportsinfo",
            "question": "How many different students are involved in sports?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "How many different levels do members have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "What is the count of distinct employees with certificates?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "How many distinct companies are there?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists have volumes?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many students play video games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "How many distinct payment methods are used by parties?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( DISTINCT nationality ) FROM swimmer",
            "question": "How many different countries are all the swimmers from?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT StuID ) FROM Plays_games",
            "question": "How many different students play games?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( DISTINCT payment_method_code ) FROM parties",
            "question": "Count the number of different payment method codes used by parties.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( DISTINCT pPos ) FROM tryout",
            "question": "What are the different types of player positions?",
            "ted": 0.0
        },
        {
            "db_id": "election_representative",
            "query": "SELECT count( DISTINCT Party ) FROM representative",
            "question": "How many distinct parties are there for representatives?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "how many different positions are there?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different position for players are listed?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT count( DISTINCT Birth_Place ) FROM people",
            "question": "How many distinct birth places are there?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( DISTINCT eid ) FROM Certificate",
            "question": "How many employees have certificate.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT COUNT( DISTINCT team ) FROM elimination",
            "question": "What is the number of distinct teams that suffer elimination?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "Show the number of card types.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "How many distinct president votes are recorded?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( DISTINCT President_Vote ) FROM VOTING_RECORD",
            "question": "Find the distinct number of president votes.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "Count the number of different hometowns of these people.",
            "ted": 0.0
        },
        {
            "db_id": "gymnast",
            "query": "SELECT count( DISTINCT Hometown ) FROM people",
            "question": "How many distinct hometowns did these people have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT count( DISTINCT Status_of_Thing_Code ) FROM Timed_Status_of_Things",
            "question": "How many different status codes of things are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "How many students have advisors?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT s_id ) FROM advisor",
            "question": "Count the number of students who have advisors.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "How many departments offer courses?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have an account?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "what is the number of different channel owners?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT dept_name ) FROM course",
            "question": "Count the number of departments which offer courses.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "How many different instructors have taught some course?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT COUNT( DISTINCT id ) FROM teaches",
            "question": "Count the number of distinct instructors who have taught a course.",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "How many different positions of players are there?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT count( DISTINCT LEVEL ) FROM member",
            "question": "What are the different membership levels?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT count( DISTINCT POSITION ) FROM player",
            "question": "Count the number of distinct player positions.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "How many distinct students are enrolled in courses?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( DISTINCT student_id ) FROM Student_Course_Enrolment",
            "question": "Find the number of distinct students enrolled in courses.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT OWNER ) FROM channel",
            "question": "Count the number of distinct channel owners.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT card_type_code ) FROM Customers_Cards",
            "question": "How many different card types are there?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who hold an account.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "Count the number of distinct artists who have volumes.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT COUNT( DISTINCT transaction_type_code ) FROM TRANSACTIONS",
            "question": "How many distinct transaction types are used in the transactions?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "Give me the number of faculty members who participate in an activity",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( DISTINCT FacID ) FROM Faculty_participates_in",
            "question": "How many faculty members participate in an activity?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many different advisors are listed?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( DISTINCT advisor ) FROM Student",
            "question": "How many advisors are there?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT u_id ) FROM review",
            "question": "How many different users wrote some reviews?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "How many unique labels are there for albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( DISTINCT label ) FROM albums",
            "question": "What are the unique labels for the albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT COUNT( DISTINCT Artist_ID ) FROM volume",
            "question": "How many distinct artists do the volumes associate to?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT count( DISTINCT i_id ) FROM review",
            "question": "How many different items were reviewed by some users?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "Find the number of distinct bed types available in this inn.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( DISTINCT bedType ) FROM Rooms",
            "question": "How many different types of beds are there?",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT count( DISTINCT client ) FROM web_client_accelerator",
            "question": "How many different kinds of clients are supported by the web clients accelerators?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Find the number of different product types.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products",
            "question": "Count the number of distinct product types.",
            "ted": 0.0
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT count( DISTINCT brand ) FROM camera_lens",
            "question": "How many different kinds of lens brands are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT count( DISTINCT SOURCE ) FROM injury_accident",
            "question": "How many different kinds of information sources are there for injury accidents?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT count( DISTINCT UID ) FROM tweets",
            "question": "Find the number of users who posted some tweets.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT count( DISTINCT source_system_code ) FROM CMI_cross_references",
            "question": "How many different source system code for the cmi cross references are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT sportname ) FROM Sportsinfo",
            "question": "How many sports do we have?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( DISTINCT participant_id ) FROM participants_in_Events",
            "question": "What are all the distinct participant ids who attended any events?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "Count the number of distinct claim outcome codes.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "Count the number of distinct names associated with the photos.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many type of jobs do they have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "How many different statuses do cities have?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT count( DISTINCT Status ) FROM city",
            "question": "Count the number of different statuses.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "Count the number of different account types.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "Count the number of different last names actors have.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities do people originate from?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many distinct FDA approval statuses are there for the medicines?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT last_name ) FROM actor",
            "question": "How many different last names do the actors and actresses have?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( DISTINCT FDA_approved ) FROM medicine",
            "question": "How many different FDA approval statuses exist for medicines?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "How many schools are in the basketball match?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT incident_type_code ) FROM Behavior_Incident",
            "question": "How many distinct incident type codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT count( DISTINCT claim_outcome_code ) FROM claims_processing",
            "question": "How many distinct claim outcome codes are there?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT school_id ) FROM basketball_match",
            "question": "Count the number of schools that have had basketball matches.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "Count the number of different complaint type codes.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( DISTINCT complaint_type_code ) FROM complaints",
            "question": "How many distinct complaint type codes are there in the database?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( DISTINCT student_id ) FROM Students_in_Detention",
            "question": "How many distinct students have been in detention?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT acc_type ) FROM customer",
            "question": "How many distinct types of accounts are there?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "In how many different states are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT state ) FROM bank",
            "question": "Find the number of different states which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "In how many different cities are banks located?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "Count the number of different film ratings.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "Count the number of different scientists assigned to any project.",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "Find the number of distinct projects.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT rating ) FROM film",
            "question": "How many kinds of different ratings are listed?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT name ) FROM projects",
            "question": "How many different projects are there?",
            "ted": 0.0
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT count( DISTINCT LOCATION ) FROM perpetrator",
            "question": "How many distinct locations of perpetrators are there?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "How many different software platforms are there for devices?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT count( DISTINCT Software_Platform ) FROM device",
            "question": "Count the number of different software platforms.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "Find the number of different cities that employees live in.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "Count the number of different directors.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT COUNT( DISTINCT director ) FROM movie",
            "question": "How many movie directors are there?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "Count the number of different languages in these films.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( DISTINCT language_id ) FROM film",
            "question": "How many languages are in these films?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "How many parties do we have?",
            "ted": 0.0
        },
        {
            "db_id": "party_people",
            "query": "SELECT count( DISTINCT party_name ) FROM party",
            "question": "Count the number of different parties.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT count( DISTINCT city ) FROM bank",
            "question": "Find the number of different cities which banks are located at.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT job ) FROM Person",
            "question": "How many different jobs are listed?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT count( DISTINCT Name ) FROM PHOTOS",
            "question": "How many distinct names are associated with all the photos?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT count( DISTINCT temporary_acting ) FROM management",
            "question": "How many acting statuses are there?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( DISTINCT city ) FROM EMPLOYEE",
            "question": "How many distinct cities does the employees live in?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( DISTINCT scientist ) FROM assignedto",
            "question": "How many different scientists are assigned to any project?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Count the number of different affiliation types.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "Find the number of distinct gender for dorms.",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "What is the number of distinct publication dates?",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT count( DISTINCT affiliation ) FROM university",
            "question": "Find how many different affiliation types there are.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "How many dorms have amenities?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT dormid ) FROM has_amenity",
            "question": "Find the number of dorms that have some amenity.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "How many customers have opened an account?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many different roles are there on the project staff?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( DISTINCT role_code ) FROM Project_Staff",
            "question": "How many kinds of roles are there for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT count( DISTINCT payment_method ) FROM customers",
            "question": "How many different payment methods are there?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( DISTINCT gender ) FROM dorm",
            "question": "How many different genders are there in the dorms?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "Count the number of different ranks of captain.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "How many schools are there in the department?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many different classes are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_code ) FROM CLASS",
            "question": "How many unique classes are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "How many courses are offered?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT crs_code ) FROM CLASS",
            "question": "What are the number of different course codes?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many departments does the college has?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_name ) FROM department",
            "question": "How many different departments are there?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT count( DISTINCT Company ) FROM entrepreneur",
            "question": "Count the number of different companies.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT count( DISTINCT rank ) FROM captain",
            "question": "How many different captain ranks are there?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT school_code ) FROM department",
            "question": "how many schools exist in total?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "Count the number of different teams involved in match season.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( DISTINCT customer_id ) FROM Accounts",
            "question": "Count the number of customers who have an account.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "Count the number of distinct company industries.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( DISTINCT city ) FROM Person",
            "question": "How many different cities are they from?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( DISTINCT Industry ) FROM Companies",
            "question": "How many different industries are the companies in?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT COUNT( DISTINCT Publication_Date ) FROM publication",
            "question": "How many distinct publication dates are there in our record?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT count( DISTINCT Team ) FROM match_season",
            "question": "How many distinct teams are involved in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "station_weather",
            "query": "SELECT count( DISTINCT services ) FROM station",
            "question": "How many different services are provided by all stations?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "How many video game types exist?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT count( DISTINCT product_type_code ) FROM products_for_hire",
            "question": "How many different product types are there?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( DISTINCT gtype ) FROM Video_games",
            "question": "What is the count of different game types?",
            "ted": 0.0
        }
    ],
    "SELECT Name FROM country WHERE Continent = 'Oceania' AND population > ( SELECT max( population ) FROM country WHERE Continent = 'Oceania' )": [
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE job = 'student' AND age = ( SELECT max( age ) FROM person WHERE job = 'student' )",
            "question": "Who is the oldest person whose job is student?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE job = 'student' AND age = ( SELECT max( age ) FROM person WHERE job = 'student' )",
            "question": "What is the name of the oldest student?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = ( SELECT max( YEAR ) FROM PersonFriend WHERE name = 'Zach' )",
            "question": "Who is the friend of Zach with longest year relationship?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = ( SELECT max( YEAR ) FROM PersonFriend WHERE name = 'Zach' )",
            "question": "Which friend of Zach has the longest-lasting friendship?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE gender = 'male' AND age = ( SELECT min( age ) FROM person WHERE gender = 'male' )",
            "question": "Who is the youngest male?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE gender = 'male' AND age = ( SELECT min( age ) FROM person WHERE gender = 'male' )",
            "question": "What is the name of the youngest male?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM PersonFriend WHERE friend = 'Alice' AND YEAR = ( SELECT min( YEAR ) FROM PersonFriend WHERE friend = 'Alice' )",
            "question": "Find the name of persons who are friends with Alice for the shortest years.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM PersonFriend WHERE friend = 'Alice' AND YEAR = ( SELECT min( YEAR ) FROM PersonFriend WHERE friend = 'Alice' )",
            "question": "What are the names of all people who are friends with Alice for the shortest amount of time?",
            "ted": 0.047619047619047616
        }
    ],
    "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != 'Akan'": [
        {
            "db_id": "musical",
            "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != 'Tony Award'",
            "question": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != 'Tournament'",
            "question": "What are the different years for all competitions that are not of type equal to tournament?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != 'Tokyo , Japan'",
            "question": "Give the different reigns of wrestlers who are not located in Tokyo, Japan.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != 'Tony Award'",
            "question": "Return the different nominees of musicals that have an award that is not the Tony Award.",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != 'Tournament'",
            "question": "What are the distinct years in which the competitions type is not \"Tournament\"?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != 'Tokyo , Japan'",
            "question": "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != 'East'",
            "question": "List the distinct police forces of counties whose location is not on east side.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != 'East'",
            "question": "What are the different police forces of counties that are not located in the East?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT DISTINCT YEAR FROM party WHERE Governor = 'Eliot Spitzer'",
            "question": "In which distinct years was the governor \"Eliot Spitzer\"?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date = '08/30/2015'",
            "question": "Show all the distinct president votes made on 08/30/2015.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date = '08/30/2015'",
            "question": "What are the distinct president votes on 08/30/2015?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE = 'Fall'",
            "question": "Return all the distinct secretary votes made in the fall election cycle.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE = 'Fall'",
            "question": "What are the distinct secretary votes in the fall election cycle?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype = 'food'",
            "question": "Show all allergies with type food.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype = 'food'",
            "question": "What are all the different food allergies?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "election",
            "query": "SELECT DISTINCT YEAR FROM party WHERE Governor = 'Eliot Spitzer'",
            "question": "Find the distinct years when the governor was named \"Eliot Spitzer\".",
            "ted": 0.05555555555555555
        }
    ],
    "SELECT COUNT( T2.Language ) , T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT( * ) > 3": [
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name",
            "question": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT count( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name",
            "question": "Find the number of scientists involved for the projects that require more than 300 hours.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "city_record",
            "query": "SELECT T1.gdp , T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.Host_City HAVING count( * ) > 1",
            "question": "What are the GDP and population of the city that already served as a host more than once?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "List first name and last name of customers that have more than 2 payments.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) > 2",
            "question": "What are the first and last names of all customers with more than 2 payments?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "What is the order id and order details for the order more than two invoices.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "railway",
            "query": "SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT( * ) > 1",
            "question": "Show id and location of railways that are associated with more than one train.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count( * ) > 2",
            "question": "Return the order ids and details for orderes with two or more invoices.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "What are the full names of actors who had roles in more than 30 films?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count( * ) > 30",
            "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count( * ) > 2",
            "question": "Which parts have more than 2 faults? Show the part name and id.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count( * ) > 2",
            "question": "What is the project id and detail for the project with at least two documents?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count( * ) > 1",
            "question": "What are the ids and details of events that have more than one participants?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count( * ) > 1",
            "question": "Find the the customer details and id for the customers who had more than one policy.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count( * ) > 1",
            "question": "Find the name and email for the users who have more than one follower.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count( * ) > 1",
            "question": "What are the ids and names of the companies that operated more than one flight?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "what are name and phone number of patients who had more than one appointment?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid",
            "question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid",
            "question": "For each dorm, how many amenities does it have?",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count( * ) > 1",
            "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT( * ) > 2",
            "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
            "ted": 0.05263157894736842
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count( * ) >= 1",
            "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "What are the ids and names of accounts with 4 or more transactions?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "What are the names and locations of tracks that have had exactly 1 race?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT( * ) >= 3",
            "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg( T1.price ) >= 150",
            "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT avg( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg( T1.price ) >= 150",
            "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "What are the names and ids of the tourist attractions that are visited at most once?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) <= 1",
            "question": "Show the names and ids of tourist attractions that are visited at most once.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT max( T1.HS ) , pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 1000 GROUP BY T2.pPos",
            "question": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count( * ) >= 4",
            "question": "Show the account id and name with at least 4 transactions.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count( * ) >= 2",
            "question": "Show the names and ids of tourist attractions that are visited at least two times.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 3",
            "question": "What are the id and details of the customers who have at least 3 events?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum( T2.amount ) > 5000",
            "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "Show first name and id for all customers with at least 2 accounts.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count( * ) >= 2",
            "question": "What are the first names and ids for customers who have two or more accounts?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT max( T1.HS ) , pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 1000 GROUP BY T2.pPos",
            "question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum( T1.grant_amount ) > 6000",
            "question": "Find the organisation ids and details of the organisations which are involved in",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "station_weather",
            "query": "SELECT T2.id , T2.local_authority FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T1.station_id HAVING max( T1.precipitation ) > 50",
            "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockfloor",
            "question": "How many rooms does each block floor have?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode",
            "question": "How many rooms are located for each block code?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "What are the student IDs and middle names of the students enrolled in at most two courses?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) <= 2",
            "question": "Find the student ID and middle name for all the students with at most two enrollments.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT( * ) >= 2",
            "question": "Find the student ID and personal name of the student with at least two enrollments.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "browser_web",
            "query": "SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode",
            "question": "Find the number of rooms for different block code?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "race_track",
            "query": "SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count( * ) = 1",
            "question": "Show the name and location of track with 1 race.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count( * ) >= 2",
            "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count( * ) >= 2",
            "question": "What are the id and name of the mountains that have at least 2 photos?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT count( * ) , T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockfloor",
            "question": "Find the number of rooms located on each block floor.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count( * ) < 2",
            "question": "Find the name and partition id for users who tweeted less than twice.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT( * ) >= 10",
            "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "architecture",
            "query": "SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count( * ) >= 3",
            "question": "What are the ids and names of the architects who built at least 3 bridges ?",
            "ted": 0.07894736842105263
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) > 1",
            "question": "Find the title, credit, and department name of courses that have more than one prerequisites?",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count( * ) > 1",
            "question": "What is the title, credit value, and department name for courses with more than one prerequisite?",
            "ted": 0.1
        }
    ],
    "SELECT Name FROM country ORDER BY Population ASC LIMIT 3": [
        {
            "db_id": "bike_1",
            "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
            "question": "What is the id of the shortest trip?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
            "question": "What are the three most costly procedures?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
            "question": "Find the three most expensive procedures.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
            "question": "Which catalog content has the smallest capacity? Return the catalog entry name.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
            "question": "What are the aircrafts with top 3 shortest lengthes? List their names.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
            "question": "What is the id of the trip that has the shortest duration?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3",
            "question": "List the publication dates of publications with 3 lowest prices.",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1",
            "question": "What is the joined year of the pilot of the highest rank?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
            "question": "What is the name of the 3 employees who get paid the least?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
            "question": "What is the name of the youngest captain?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
            "question": "Show the 3 counties with the smallest population.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
            "question": "What are the numbers of the shortest flights?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
            "question": "Show the flight number of flights with three lowest distances.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
            "question": "Of all the claims, what was the earliest date when any claim was made?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
            "question": "Tell me the the date when the first claim was made.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
            "question": "What are the 3 counties that have the smallest population? Give me the county names.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
            "question": "What is the weight of the shortest person?",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
            "question": "Return the weight of the shortest person.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
            "question": "Give the name of the department with the lowest budget.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1",
            "question": "What is the party of the youngest people?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
            "question": "Which department has the lowest budget?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
            "question": "Which district has the least area?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
            "question": "Find the name of the product that has the smallest capacity.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
            "question": "What is the name of the district with the smallest area?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
            "question": "Return the name of the youngest captain.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
            "question": "What was the date of the earliest payment?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
            "question": "What is the name of the highest rated wine?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
            "question": "Give the name of the wine with the highest score.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
            "question": "Which winery is the wine that has the highest score from?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
            "question": "What is the name of the customer with the worst credit score?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
            "question": "Find the name of customer who has the lowest credit score.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
            "question": "What is the winery at which the wine with the highest score was made?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
            "question": "Show the name of aircrafts with top three lowest distances.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
            "question": "What is the id of the candidate with the lowest oppose rate?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
            "question": "Return the issue date of the volume that has spent the fewest weeks on top.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
            "question": "What is the issue date of the volume with the minimum weeks on top?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
            "question": "What is the name of the wrestler with the fewest days held?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
            "question": "Return the name of the wrestler who had the lowest number of days held.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
            "question": "Find the name of the first 5 customers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
            "question": "Show the name of employees with three lowest salaries.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
            "question": "Find the id of the candidate who got the lowest oppose rate.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
            "question": "Find the patient who has the most recent undergoing treatment?",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
            "question": "Which patient is undergoing the most recent treatment?",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1",
            "question": "List the name of the school with the smallest enrollment.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
            "question": "When did the first staff for the projects started working?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
            "question": "When did the first staff member start working?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
            "question": "When was the first asset acquired?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
            "question": "When did the first payment happen?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1",
            "question": "What is the name of the youngest editor?",
            "ted": 0.0
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
            "question": "Which team has the oldest player?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
            "question": "What is the name of the project with the most hours?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
            "question": "What is the shop name corresponding to the shop that opened in the most recent year?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "device",
            "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
            "question": "List the name of the shop with the latest open year.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
            "question": "List the names of the top 5 oldest people.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
            "question": "Find the id of the song that lasts the longest.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
            "question": "What is the id of the longest song?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
            "question": "Return the age of the person with the greatest height.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
            "question": "Find the name of project that continues for the longest time.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_host",
            "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
            "question": "Which party had the most hosts? Give me the party location.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
            "question": "What is the duration of the oldest actor?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
            "question": "What are the names of the five oldest people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name of the race that occurred most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
            "question": "What is the name of the race held most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
            "question": "Which program was launched most recently? Return the program name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
            "question": "find the name of the program that was launched most recently.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
            "question": "Show me the owner of the channel with the highest rating.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
            "question": "What is the owner of the channel that has the highest rating ratio?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
            "question": "List the name of the county with the largest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
            "question": "What is the name of the county with the greatest population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
            "question": "List the names of the city with the top 5 white percentages.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
            "question": "What are the names of the five cities with the greatest proportion of white people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1",
            "question": "Show the park of the roller coaster with the highest speed.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_host",
            "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
            "question": "What is the location of the party with the most hosts?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
            "question": "Tell me the name of the most pricy product.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1",
            "question": "List the publisher of the publication with the highest price.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
            "question": "What is the last date of the staff leaving the projects?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
            "question": "What is the last date that a staff member left a project?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1",
            "question": "Find the name of the room with the maximum occupancy.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1",
            "question": "What is the name of the room that can accommodate the most people?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
            "question": "Return the name of the mountain with the greatest height.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
            "question": "Return the duration of the actor with the greatest age.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
            "question": "Find the GDP of the city with the largest regional population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
            "question": "what is the GDP of the city with the largest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
            "question": "What is the author of the submission with the highest score?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "Which country is the airport that has the highest altitude located in?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
            "question": "What is the name of the most expensive product?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "gymnast",
            "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
            "question": "What is the age of the tallest person?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
            "question": "Show the name of the county with the biggest population.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
            "question": "Find the name of the user who has the largest number of followers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
            "question": "List the teams of the players with the top 5 largest ages.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
            "question": "Find the team of the player of the highest age.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
            "question": "Find the name of the stadium that has the maximum capacity.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
            "question": "Find the name of the dorm with the largest capacity.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
            "question": "What are the ids of the top three products that were purchased in the largest amount?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
            "question": "Give the ids of the three products purchased in the largest amounts.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
            "question": "What is the name of the artist who joined latest?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
            "question": "Return the name of the artist who has the latest join year.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "aircraft",
            "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
            "question": "What is all the information on the airport with the largest number of international passengers?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "aircraft",
            "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
            "question": "Show all information on the airport that has the largest number of international passengers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
            "question": "What is the largest payment amount?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
            "question": "Return the amount of the largest payment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
            "question": "What are the speeds of the longest roller coaster?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
            "question": "What is id of the city that hosted events in the most recent year?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
            "question": "Find the city that hosted some events in the most recent year. What is the id of this city?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
            "question": "Return the minister who left office at the latest time.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
            "question": "Which minister left office the latest?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "swimming",
            "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
            "question": "What is the name of the event that happened in the most recent year?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
            "question": "Find the branch name of the bank that has the most number of customers.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
            "question": "What is the name of the bank branch with the greatest number of customers?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
            "question": "Which three cities have the largest regional population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "city_record",
            "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
            "question": "What are the three largest cities in terms of regional population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1",
            "question": "Find the author who achieved the highest score in a submission.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
            "question": "What are the teams that have the 5 oldest players?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
            "question": "What is the name of the highest mountain?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
            "question": "List the school color of the school that has the largest enrollment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
            "question": "What is the location of the festival with the largest number of audience?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
            "question": "List the names of 5 users followed by the largest number of other users.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
            "question": "What are the names of the schools with the top 3 largest class sizes?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
            "question": "What are the names of schools with the top 3 largest size?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
            "question": "Give the name of the highest paid instructor.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
            "question": "What is the entry name of the most expensive catalog (in USD)?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
            "question": "Find the entry name of the catalog with the highest price (in USD).",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
            "question": "Who is the instructor with the highest salary?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
            "question": "What is the product with the highest height? Give me the catalog entry name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
            "question": "Which catalog content has the highest height? Give me the catalog entry name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
            "question": "Show the details of the top 3 most expensive hotels.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
            "question": "Which county has the largest population? Give me the name of the county.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
            "question": "What is the name of the player with the largest number of votes?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
            "question": "What is the nationality of the journalist with the largest number of years working?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_office",
            "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
            "question": "Find the stories of the building with the largest height.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
            "question": "What is the date of the performance with the highest number of attendees?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1",
            "question": "Find the name of the most expensive product.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_office",
            "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
            "question": "What is the stories of highest building?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
            "question": "What are the names of the dorm with the largest capacity?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1",
            "question": "What is the name of the tallest building?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
            "question": "What is the name of the product with the highest price?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
            "question": "What is the name of the district with the most residents?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_product",
            "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
            "question": "Which district has the largest population?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "school_player",
            "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
            "question": "What is the school color of the school with the largest enrollment?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
            "question": "Show the names of the three most recent festivals.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
            "question": "What are the details of the three most expensive hotels?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "What is the country of the airport with the highest elevation?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
            "question": "What is the apartment number of the apartment with the most beds?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
            "question": "What is the starting year for the oldest technician?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
            "question": "Return the highest acc percent across all basketball matches.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
            "question": "What is the carrier of the most expensive phone?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1",
            "question": "What are the clean and jerk score of the body builder with the highest total score?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
            "question": "What are names for top three branches with most number of membership?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
            "question": "Return the song in the volume that has spent the most weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
            "question": "What is the headquarter of the company with the largest sales?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
            "question": "Return the apartment number with the largest number of bedrooms.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
            "question": "What is the song in the volume with the maximum weeks on top?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
            "question": "Return the poll source corresponding to the candidate who has the oppose rate.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
            "question": "What is the starting year of the oldest technicians?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
            "question": "which poll source does the highest oppose rate come from?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
            "question": "Return the famous release date for the oldest artist.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
            "question": "What is the famous release date of the artist with the oldest age?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
            "question": "Return the top 3 greatest support rates.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
            "question": "what are the top 3 highest support rates?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "railway",
            "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
            "question": "What is the name of the oldest manager?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
            "question": "Which problem log was created most recently? Give me the log id.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
            "question": "What is the id of the problem log that is created most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
            "question": "Find the id of the appointment with the most recent start date?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
            "question": "What is the id of the appointment that started most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
            "question": "What is the id of the candidate who most recently accessed the course?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1",
            "question": "What is the location of the perpetrator with the largest kills.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
            "question": "What are the names for the 3 branches that have the most memberships?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
            "question": "Find id of the candidate who most recently accessed the course?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
            "question": "What is the id of the most recent order?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
            "question": "Return the founded year for the school with the largest enrollment.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
            "question": "What is the ship with the largest amount of tonnage called?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
            "question": "What is the highest acc percent score in the competition?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
            "question": "Find the name of the youngest organization.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "e_government",
            "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
            "question": "What is the name of the organization that was formed most recently?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
            "question": "Find the id of the order made most recently.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
            "question": "What is the name of the ship with the largest tonnage?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
            "question": "When was the school with the largest enrollment founded?",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT Name , population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1": [
        {
            "db_id": "ship_1",
            "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
            "question": "What is the name, type, and flag of the ship that was built in the most recent year?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "What is the name, city, and country of the airport with the highest elevation?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation DESC LIMIT 1",
            "question": "Find the name, city, and country of the airport that has the highest latitude.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
            "question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
            "question": "Find the name, account type, and account balance of the customer who has the highest credit score.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
            "question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
            "question": "Return the name, location, and seating of the track that was opened in the most recent year.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1",
            "question": "What is the name, location and seating for the most recently opened track?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
            "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
            "question": "What are the names, headquarters and founders of the company with the highest revenue?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1",
            "question": "Find the name, type, and flag of the ship that is built in the most recent year.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
            "question": "Find the name, headquarter and founder of the manufacturer that has the highest revenue.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
            "question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
            "question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
            "question": "What is the name, latitude, and city of the station that is located the furthest South?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "bike_1",
            "query": "SELECT name , lat , city FROM station ORDER BY lat LIMIT 1",
            "question": "What are the name, latitude, and city of the station with the lowest latitude?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
            "question": "What is the name, city, and country of the airport with the lowest altitude?",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1",
            "question": "Find the name, city, and country of the airport that has the lowest altitude.",
            "ted": 0.045454545454545456
        }
    ],
    "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Arapiraca'": [
        {
            "db_id": "climbing",
            "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
            "question": "Show the times used by climbers to climb mountains in Country Uganda.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.unit_of_measure FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code WHERE T1.product_name = 'cumin'",
            "question": "What is the unit of measurement of product named \"cumin\"?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = 'Texas'",
            "question": "What are the monthly rentals of student addresses in Texas state?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = 'Schuster'",
            "question": "Find the texts of assessment notes for teachers with last name \"Schuster\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = 'Fanny'",
            "question": "Find the dates of assessment notes for students with first name \"Fanny\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'AC/DC'",
            "question": "Find the title of all the albums of the artist \"AC/DC\".",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'AC/DC'",
            "question": "What are the titles of albums by the artist \"AC/DC\"?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = 'Balls to the Wall'",
            "question": "Which artist does the album \"Balls to the Wall\" belong to?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = 'Balls to the Wall'",
            "question": "Find the name of the artist who made the album \"Balls to the Wall\".",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'white'",
            "question": "What are the names of products with 'white' as their color description?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'white'",
            "question": "List all the product names with the color description \"white\".",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = 'catnip'",
            "question": "Give the color description for the product 'catnip'.",
            "ted": 0.0
        },
        {
            "db_id": "game_injury",
            "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T2.player = 'Walter Samuel'",
            "question": "What is the season of the game which causes the player 'Walter Samuel' to get injured?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.color_description FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = 'catnip'",
            "question": "What is the color description of the product with name \"catnip\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
            "question": "Give the name of the products that have a color description 'yellow'.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
            "question": "Find the states of the colleges that have students in the tryout who played in striker position.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
            "question": "What are the states of the colleges where students who tried out for the striker position attend?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = 'Appropriations'",
            "question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T2.unit_of_measure FROM products AS T1 JOIN ref_product_categories AS T2 ON T1.product_category_code = T2.product_category_code WHERE T1.product_name = 'cumin'",
            "question": "Give the unit of measure for the product with the name 'cumin'.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
            "question": "What is the name of the product with the color description 'yellow'?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Win'",
            "question": "Find the names of swimmers who has a result of \"win\".",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
            "question": "Give id of the instructor who advises students in the History department.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
            "question": "Find the name of persons who are friends with Bob.",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
            "question": "What are the names of all of Bob's friends?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'",
            "question": "Who has a friend that is from new york city?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'",
            "question": "What are the names of all friends who are from New York?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'",
            "question": "List name of all tracks in Balls to the Wall.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'",
            "question": "What is the name of all tracks in the album named Balls to the Wall?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = 'game1'",
            "question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.section_title FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code WHERE T1.document_name = 'David CV'",
            "question": "What are all the section titles of the document named \"David CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT T2.section_title FROM documents AS T1 JOIN document_sections AS T2 ON T1.document_code = T2.document_code WHERE T1.document_name = 'David CV'",
            "question": "Give the section titles of the document with the name \"David CV\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_details = 'Dayana Robel'",
            "question": "What are the type codes of the policies used by the customer \"Dayana Robel\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = 'game1'",
            "question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'",
            "question": "What is the name of the language that the film 'AIRPORT POLLOCK' is in?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_details = 'Dayana Robel'",
            "question": "Find all the policy type codes associated with the customer \"Dayana Robel\"",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = '918'",
            "question": "What are the email addresses of teachers whose address has zip code \"918\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = 'l'",
            "question": "Return the lot details of lots that belong to investors with details \"l\"?",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name = 'Andaman Exp'",
            "question": "Show the builder of railways associated with the trains named \"Andaman Exp\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'Lyla'",
            "question": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
            "question": "What is the id of the instructor who advises of all students from History department?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'",
            "question": "Who are Bob's friends?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'",
            "question": "What city does the employee who helps the customer with postal code 70174 live in?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'",
            "question": "Tell me the booking status code for the apartment with number \"Suite 634\".",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "Find all the instruments ever used by the musician with last name \"Heilo\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = 'Heilo'",
            "question": "What are all the instruments used by the musician with the last name \"Heilo\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the vocal types used in song \"Le Pop\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the types of vocals used in the song \"Le Pop\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = 'Bosco'",
            "question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Ryley Goldner'",
            "question": "Return the positions of players on the team Ryley Goldner.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Ryley Goldner'",
            "question": "Show the positions of the players from the team with name \"Ryley Goldner\".",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = 'Bosco'",
            "question": "Find the ids of the problems that are reported by the staff whose last name is Bosco.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop'",
            "question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = 'Indonesia'",
            "question": "Who are the players from Indonesia?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic'",
            "question": "Return all the committees that have delegates from Democratic party.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = 'Indonesia'",
            "question": "Which players are from Indonesia?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "What are the vocal types used in song \"Badlands\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Badlands'",
            "question": "What types of vocals are used in the song \"Badlands\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop'",
            "question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
            "question": "Give the address of the staff member who has the first name Elsa.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
            "question": "Where does the staff member with the first name Elsa live?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What are the instruments are used in the song \"Le Pop\"?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'",
            "question": "Find the cities corresponding to employees who help customers with the postal code 70174.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "What instruments does the the song \"Le Pop\" use?",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
            "question": "What are the times used by climbers who climbed mountains in the country of Uganda?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'",
            "question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = 'Appropriations'",
            "question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = 'FJA Filming'",
            "question": "Which city is the address of the store named \"FJA Filming\" located in?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = 'FJA Filming'",
            "question": "Find the city the store named \"FJA Filming\" is in.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = 'CA'",
            "question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = 'CA'",
            "question": "Find the states or counties where the stores with marketing region code \"CA\" are located.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = 'Professor'",
            "question": "Which students have professors as their advisors? Find their student ids.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = 'Professor'",
            "question": "Show the ids of students whose advisors are professors.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = 'Rob Dinning'",
            "question": "What is the name of the marketing region that the store Rob Dinning belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = 'Rob Dinning'",
            "question": "Return the name of the marketing region the store Rob Dinning is located in.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT T1.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.catalog_level_number = '8'",
            "question": "Find the names of catalog entries with level number 8.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'",
            "question": "What are the names of the drama workshop groups with address in Feliciaberg city?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'",
            "question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'",
            "question": "What are the email addresses of the drama workshop groups with address in Alaska state?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'",
            "question": "List the email addresses of the drama workshop groups located in Alaska state.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = 'stop'",
            "question": "What are the names of the workshop groups that have bookings with status code \"stop\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = 'stop'",
            "question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic'",
            "question": "Which committees have delegates from the Democratic party?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'",
            "question": "Who are the friends of Bob?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'",
            "question": "Which language does the film AIRPORT POLLOCK use? List the language name.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = 'Balls to the Wall'",
            "question": "What is title of album which track Balls to the Wall belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = 'Airbus A340-300'",
            "question": "Show all flight numbers with aircraft Airbus A340-300.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Fail'",
            "question": "What are the completion dates of all the tests that have result \"Fail\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Pass'",
            "question": "Find the enrollment date for all the tests that have \"Pass\" result.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = 'Government'",
            "question": "Show ids for all documents with budget types described as 'Government'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = 'King Book'",
            "question": "Give the details of the project with the document name 'King Book'.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Pass'",
            "question": "What are the enrollment dates of all the tests that have result \"Pass\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = 'Nominated'",
            "question": "Please show the songs that have result \"nominated\" at music festivals.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = 'Nominated'",
            "question": "What are the songs in volumes that have resulted in a nomination at music festivals?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'",
            "question": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'Spanish'",
            "question": "Find the the date of enrollment of the \"Spanish\" course.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'Spanish'",
            "question": "What is the date of enrollment of the course named \"Spanish\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = 'Balls to the Wall'",
            "question": "What is the name of the album that has the track Ball to the Wall?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage'",
            "question": "what are the event details of the services that have the type code 'Marriage'?",
            "ted": 0.0
        },
        {
            "db_id": "company_1",
            "query": "SELECT T1.dname FROM department AS T1 JOIN dept_locations AS T2 ON T1.dnumber = T2.dnumber WHERE T2.dlocation = 'Houston'",
            "question": "Find the names of departments that are located in Houston.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = 'Julio'",
            "question": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = 'King Book'",
            "question": "What is the project detail for the project with document \"King Book\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = 'Julio'",
            "question": "Find the names of courses taught by the tutor who has personal name \"Julio\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'advanced database'",
            "question": "Which course author teaches the \"advanced database\" course? Give me his or her login name.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'advanced database'",
            "question": "Find the login name of the course author that teaches the course with name \"advanced database\".",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning'",
            "question": "Which channels are broadcast in the morning? Give me the channel names.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning'",
            "question": "Find the names of the channels that are broadcast in the morning.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'",
            "question": "Return the issue dates of volumes that are by the artist named Gorgoroth.",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = 'Shanghai'",
            "question": "Give me the temperature of Shanghai in January.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax'",
            "question": "what are the details of the cmi masters that have the cross reference code 'Tax'?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = 'Shanghai'",
            "question": "What is the temperature of \"Shanghai\" city in January?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = 'Taizhou ( Zhejiang ) '",
            "question": "What is the host year of city \"Taizhou ( Zhejiang )\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = 'Taizhou ( Zhejiang ) '",
            "question": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = 'Airbus A340-300'",
            "question": "What are the flight numbers for the aircraft Airbus A340-300?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = 'Koby'",
            "question": "What is the role of the employee named Koby?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = 'Government'",
            "question": "Give the ids for documents that have the budget description 'Government'.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
            "question": "List all company names with a book published by Alyson.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = 'Fail'",
            "question": "Return the completion date for all the tests that have \"Fail\" result.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
            "question": "Show last names for all student who are on scholarship.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock'",
            "question": "What is the name of tracks whose genre is Rock?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'",
            "question": "What is the id of the candidate whose email is stanley.monahan@example.org?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'",
            "question": "Find id of the candidate whose email is stanley.monahan@example.org?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk'",
            "question": "What are the details of the shops that can be accessed by walk?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk'",
            "question": "Find the details of the shops that can be reached by walk.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = 'US museum'",
            "question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = 'US museum'",
            "question": "Tell me the name of the staff in charge of the attraction called \"US museum\".",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = 'Right Wing'",
            "question": "Show the names of clubs that have players with position \"Right Wing\".",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = 'Right Wing'",
            "question": "What are the names of the clubs that have players in the position of \"Right Wing\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Aerosmith'",
            "question": "What are the titles of all the Aerosmith albums?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Aerosmith'",
            "question": "List Aerosmith's albums.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeramie'",
            "question": "Find the dates of orders which belong to the customer named \"Jeramie\".",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeramie'",
            "question": "What are the dates of the orders made by the customer named \"Jeramie\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Editor'",
            "question": "Find the names of all the employees whose the role name is \"Editor\".",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock'",
            "question": "What is the name of all tracks in the Rock genre?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
            "question": "Find the organisation type description of the organisation detailed as 'quo'.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
            "question": "What are the last names for all scholarship students?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = 'The Phantom of the Opera'",
            "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = 'The Phantom of the Opera'",
            "question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = 'How to read a book'",
            "question": "Find the document type name of the document named \"How to read a book\".",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
            "question": "What is the type description of the organization whose detail is listed as 'quo'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = 'How to read a book'",
            "question": "What is the document type name for the document with name \"How to read a book\"?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT T1.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.catalog_level_number = '8'",
            "question": "What are the names of catalog entries with level number 8?",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
            "question": "What are all the company names that have a book published by Alyson?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Editor'",
            "question": "Show the names of employees with role name Editor.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != 'Rachel Elnaugh'",
            "question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != 'Santo Domingo'",
            "question": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country != 'China'",
            "question": "What are the names of perpetrators whose country is not \"China\"?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != 'Progress Party'",
            "question": "Which member names corresponding to members who are not in the Progress Party?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != 'Rachel Elnaugh'",
            "question": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "party_people",
            "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != 'Progress Party'",
            "question": "Show member names that are not in the Progress Party.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "gymnast",
            "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != 'Santo Domingo'",
            "question": "Return the names of gymnasts who did not grow up in Santo Domingo.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "Count the total number of policies used by the customer named \"Dayana Robel\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = 'Fall'",
            "question": "What are the distinct ages of students who have secretary votes in the fall election cycle?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN customers_policies AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Dayana Robel'",
            "question": "How many policies are listed for the customer named \"Dayana Robel\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'Red'",
            "question": "List the names of all distinct wines that are made of red color grape.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "How many cities are in Australia?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems are there for product voluptatem?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT count( * ) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'voluptatem'",
            "question": "How many problems did the product called \"voluptatem\" have in record?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
            "question": "Count the number of cities in Australia.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = 'North Coast'",
            "question": "What are the distinct names of wines that have appellations in the North Coast area?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = 'North Coast'",
            "question": "Find the names of all distinct wines that have appellations in North Coast area.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'Red'",
            "question": "What are the names of wines made from red grapes?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = 'Fall'",
            "question": "Find the distinct ages of students who have secretary votes in the fall election cycle.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT AVG( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'",
            "question": "Give me the average prices of wines that are produced by appelations in Sonoma County.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Germany'",
            "question": "Find the address of all customers that live in Germany and have invoice.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = 'Spring'",
            "question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums has Billy Cobam released?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = 'Billy Cobham'",
            "question": "How many albums does Billy Cobham has?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "Count the number of characteristics the product 'sesame' has.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students are affected by food related allergies?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Hom many albums does the artist \"Metallica\" have?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Metallica'",
            "question": "Find the number of albums by the artist \"Metallica\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = 'food'",
            "question": "How many students have a food allergy?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT DISTINCT channel_code FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products AS T1 JOIN product_characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'sesame'",
            "question": "How many characteristics does the product named \"sesame\" have?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT DISTINCT channel_code FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT max( T2.active_to_date ) FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT max( T2.active_to_date ) FROM customers AS T1 JOIN customer_contact_channels AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Tillman Ernser'",
            "question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "wine_1",
            "query": "SELECT AVG( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'",
            "question": "What is the average price of wines produced in appelations in Sonoma County?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status = 'Cancelled'",
            "question": "What is the total number of products that are in orders with status \"Cancelled\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "How many tracks belong to rock genre?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Count the number of tracks that are part of the rock genre.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Jazz'",
            "question": "What is the average unit price of tracks that belong to Jazz genre?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Jazz'",
            "question": "Find the average unit price of jazz tracks.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Brazil'",
            "question": "Find the first names of all customers that live in Brazil and have an invoice.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Brazil'",
            "question": "What are the different first names for customers from Brazil who have also had an invoice?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = 'Germany'",
            "question": "What are the addresses of customers living in Germany who have had an invoice?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "How many tracks are in the AAC audio file media type?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT COUNT( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = 'AAC audio file'",
            "question": "Count the number of tracks that are of the media type \"AAC audio file\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "What is the average unit price of rock tracks?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Rock'",
            "question": "Find the average unit price of tracks from the Rock genre.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "voter_2",
            "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = 'Spring'",
            "question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status = 'Cancelled'",
            "question": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT avg( T1.sales ) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'",
            "question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT sum( T1.Order_Quantity ) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = 'photo'",
            "question": "What are the total order quantities of photo products?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Country = 'Canada'",
            "question": "Show the distinct leader names of colleges associated with members from country \"Canada\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road'",
            "question": "Find the details of all the distinct customers who have orders with status \"On Road\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students attend course English?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT count( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = 'English'",
            "question": "How many students are attending English courses?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "How many professors are in the accounting dept?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = 'Accounting'",
            "question": "Find the number of professors in accounting department.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Packing'",
            "question": "Which customers have orders with status \"Packing\"? Give me the customer names.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Packing'",
            "question": "List the name of all the distinct customers who have orders with status \"Packing\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road'",
            "question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
            "question": "How many friends does Dan have?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "How many transaction does account with name 337 have?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy'",
            "question": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy'",
            "question": "Find the names of the customers who have an deputy policy.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "What is the number of routes that end at John F Kennedy International Airport?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
            "question": "Find the number of routes that have destination John F Kennedy International Airport.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "What is the number of routes whose destinations are Italian airports?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
            "question": "Find the number of routes with destination airports in Italy.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "How many department stores does the store chain South have?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT count( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = '337'",
            "question": "Count the number of financial transactions that the account with the name 337 has.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "department_store",
            "query": "SELECT count( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = 'South'",
            "question": "Count the number of stores the chain South has.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes are professor whose last name is Graztevski has?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses are offered by the Computer Info. Systems department?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'AIB'",
            "question": "What is the average points of players from club with name \"AIB\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT avg( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'AIB'",
            "question": "What is the average number of points for players from the \"AIB\" club?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "department_management",
            "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'",
            "question": "What are the distinct ages of the heads who are acting?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( T2.rating ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female'",
            "question": "What is the average rating of songs produced by female artists?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( T2.rating ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female'",
            "question": "How many songs, on average, are sung by a female artist?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS'",
            "question": "How many documents were shipped by USPS?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "What is average salary of the players in the team named 'Boston Red Stockings' ?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT avg( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "Compute the average salary of the players in the team called 'Boston Red Stockings'.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'",
            "question": "How many classes does the professor whose last name is Graztevski teach?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT max( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "List the maximum scores of the team Boston Red Stockings when the team won in postseason?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'",
            "question": "What are the first names of all students who got a grade C in a class?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'",
            "question": "What is the first name of students who got grade C in any class?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "school_finance",
            "query": "SELECT sum( T1.budgeted ) FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn'",
            "question": "What is the total budget amount for school \"Glenn\" in all years?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "What are the total number of students enrolled in ACCT-211?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = 'United States'",
            "question": "Show the distinct fate of missions that involve ships with nationality \"United States\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = 'United States'",
            "question": "What are the different fates of the mission that involved ships from the United States?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
            "question": "How many students enrolled in class ACCT-211?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = 'Computer Info. Systems'",
            "question": "How many courses does the department of Computer Information Systmes offer?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT max( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
            "question": "What are the maximum scores the team Boston Red Stockings got when the team won in postseason?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "How many routes end in a Canadian airport?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb , Becker and Wyman'",
            "question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "How many routes does American Airlines operate?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed'",
            "question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = 'Solveig'",
            "question": "Find all the stage positions of the musicians with first name \"Solveig\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "Find the number of vocal types used in song \"Demon Kitty Rag\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed'",
            "question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'",
            "question": "Find the average hours for the students whose tryout decision is no.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'",
            "question": "What is the average number of hours spent practicing for students who got rejected?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Show the average room count of the apartments that have booking status code \"Provisional\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "Find the number of vocal types used in song \"Le Pop\"",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = 'Dublin'",
            "question": "Give the different positions of players who play for the country with the capital Dublin.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "election_representative",
            "query": "SELECT avg( T1.Votes ) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Party = 'Republican'",
            "question": "What is the average number of votes of representatives from party \"Republican\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = 'West Germany'",
            "question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'",
            "question": "Find the number of routes whose destination airports are in Canada.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT sum( T1.Order_Quantity ) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = 'photo'",
            "question": "Compute the total order quantities of the product \"photo\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Demon Kitty Rag'",
            "question": "What are the types of vocals used in the song \"Demon Kitty Rag\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = 'Dublin'",
            "question": "What are the distinct positions of the players from a country whose capital is Dublin?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "What is the average room count of the apartments whose booking status code is \"Provisional\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = 'Gym'",
            "question": "Show the total number of rooms of all apartments with facility code \"Gym\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( T2.amount ) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
            "question": "Find the total amount of loans provided by bank branches in the state of New York.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
            "question": "Find the number of routes operated by American Airlines.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = 'null'",
            "question": "Find the names of all reviewers who have ratings with a NULL value for the date.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "phone_1",
            "query": "SELECT avg( T1.ROM_MiB ) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = 'Nokia Corporation'",
            "question": "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lesson does customer with first name Ray took?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "movie_1",
            "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = 'null'",
            "question": "What are the different names of all reviewers whose ratings do not have a date field?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "local_govt_and_lot",
            "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'",
            "question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( T2.amount ) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
            "question": "What is the total amount of money loaned by banks in New York state?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = 'Gym'",
            "question": "Find the total number of rooms in the apartments that have facility code \"Gym\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "climbing",
            "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = 'West Germany'",
            "question": "What are the different names of mountains ascended by climbers from the country of West Germany?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
            "question": "Find the states where have some college students in tryout and their decisions are yes.",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = 'Le Pop'",
            "question": "How many vocal types are used in the song \"Le Pop\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Ray'",
            "question": "How many lessons did the customer with the first name Ray take?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "music_2",
            "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = 'Solveig'",
            "question": "What are the different stage positions for all musicians whose first name is \"Solveig\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
            "question": "What are the different states that had students successfully try out?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = 'Columbus Square'",
            "question": "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT sum( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = 'Columbus Square'",
            "question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT count( * ) FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'England'",
            "question": "How many leagues are there in England?",
            "ted": 0.06666666666666667
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99",
            "question": "What is the aircraft name for the flight with number 99",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%'",
            "question": "Find the name of rooms booked by some customers whose first name contains ROY.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'",
            "question": "What are the ids of documents with letter 's' in the name with any expense budgets.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2",
            "question": "What is the name of the shipping agent of the document with id 2?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4",
            "question": "What address was the document with id 4 mailed to?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1",
            "question": "List all employees in the circulation history of the document with id 1. List the employee's name.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.year = 1999",
            "question": "Show all company names with a movie directed in year 1999.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'",
            "question": "Find the name of department that offers the class whose description has the word \"Statistics\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'",
            "question": "What is the name of the department that offers a course that has a description including the word \"Statistics\"?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'",
            "question": "Give the ids of documents that have expenses and contain the letter s in their names.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%'",
            "question": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99",
            "question": "What is the name of the aircraft that was on flight number 99?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "body_builder",
            "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T2.Birth_Date LIKE '%January%'",
            "question": "What are the total scores of the body builders whose birthday contains the string \"January\" ?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.available_yn = 1",
            "question": "What are the names of products whose availability equals to 1?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.customer_id = 10",
            "question": "What is the address for the customer with id 10?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "department_store",
            "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.customer_id = 10",
            "question": "Return the address of customer 10.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE store_id = 1",
            "question": "Return the address of store 1.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'",
            "question": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'",
            "question": "Find the category descriptions of the products whose descriptions include letter 't'.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'",
            "question": "What is the title of the album that was released by the artist whose name has the phrase 'Led'?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'",
            "question": "List the name of albums that are released by aritist whose name has 'Led'",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1",
            "question": "What is the document status description of the document with id 1?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.cName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T2.pName LIKE 'D%'",
            "question": "Which colleges do the tryout players whose name starts with letter D go to?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.cName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T2.pName LIKE 'D%'",
            "question": "Which colleges does each player with a name that starts with the letter D  who tried out go to?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name LIKE '%ee%'",
            "question": "What is the checking balance of the account whose owner\u2019s name contains the substring \u2018ee\u2019?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name LIKE '%ee%'",
            "question": "Find the balance of the checking account belonging to an owner whose name contains 'ee'.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1",
            "question": "What are the actual delivery dates of orders with quantity 1?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1",
            "question": "List the actual delivery date for all the orders with quantity 1",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500",
            "question": "Are the customers holding coupons with amount 500 bad or good?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.booked_amount = 102.76",
            "question": "What is the product description of the product booked with an amount of 102.76?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating = 10",
            "question": "Find the names of goods that receive a rating of 10.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE store_id = 1",
            "question": "Where is store 1 located?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "culture_company",
            "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.year = 1999",
            "question": "What are all company names that have a corresponding movie directed in the year 1999?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
            "question": "On what day was the order with invoice number 10 placed?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
            "question": "When was the order placed whose shipment tracking number is 3452? Give me the date.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1",
            "question": "Find the parties associated with the delegates from district 1. Who served as governors of the parties?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
            "question": "On which day was the order placed whose shipment tracking number is 3452?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
            "question": "What is the placement date of the order whose invoice number is 10?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1",
            "question": "Who were the governors of the parties associated with delegates from district 1?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "How many trips did not end in San Francisco?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_date < '2018-03-17 07:13:53'",
            "question": "What is the total amount of products purchased before 2018-03-17 07:13:53?",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT count( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != 'San Francisco'",
            "question": "Count the number of trips that did not end in San Francisco city.",
            "ted": 0.1
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'",
            "question": "What is the total balance of savings accounts not belonging to someone with the name Brown?",
            "ted": 0.1
        },
        {
            "db_id": "small_bank_1",
            "query": "SELECT sum( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'",
            "question": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT sum( T2.order_quantity ) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_date < '2018-03-17 07:13:53'",
            "question": "Find the total amount of products ordered before 2018-03-17 07:13:53.",
            "ted": 0.1
        }
    ],
    "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count( * ) DESC LIMIT 1": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy type is most common?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy type has most number of allergies?",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the industry shared by the most companies.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the event with the most participants?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which people severed as governor most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the payment method code used by the most orders?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the three colleges from which the most players are from?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT College FROM match_season GROUP BY College ORDER BY count( * ) DESC LIMIT 3",
            "question": "Show the top 3 most common colleges of players in match seasons.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the position that is most common among players in match seasons?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the people that have been governor the most times.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the most common position of players in match seasons.",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the name of film studio that have the most number of films.",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT country FROM stadium GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the country that has the most stadiums.",
            "ted": 0.0
        },
        {
            "db_id": "school_bus",
            "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the home city with the most number of drivers.",
            "ted": 0.0
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most frequently used carrier of the phones.",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the software platform shared by the greatest number of devices.",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common participant type?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most used instrument?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common competition type?",
            "ted": 0.0
        },
        {
            "db_id": "sports_competition",
            "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of competition.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count( * ) DESC LIMIT 1",
            "question": "What instrument is used the most?",
            "ted": 0.0
        },
        {
            "db_id": "film_rank",
            "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the name of teh studio that created the most films?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the names of the top 3 departments that provide the largest amount of courses?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the rank for which there are the fewest captains.",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which location has the most corresponding counties?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which advisor has most number of students?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the deparment with the highest enrollment?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the code of the city with the most students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the largest major?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT major FROM Student GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which major has most number of students?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the document type that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of city where most of students are living in.",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common result of the music festival?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of the location with the largest number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the location code with the most documents?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which game type has most number of games?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) DESC LIMIT 1",
            "question": "What type has the most games?",
            "ted": 0.0
        },
        {
            "db_id": "county_public_safety",
            "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the location shared by most counties?",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the institution type with the largest number of institutions.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the names of the 3 departments with the most courses?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT label FROM albums GROUP BY label ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the label that has the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT label FROM albums GROUP BY label ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the label with the most albums?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the code of the role that have the most employees.",
            "ted": 0.0
        },
        {
            "db_id": "company_office",
            "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which industry has the most companies?",
            "ted": 0.0
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common location of performances.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the role code with the largest number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the race class with most number of races.",
            "ted": 0.0
        },
        {
            "db_id": "debate",
            "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the party that has the most people.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most popular payment method?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which payment method is used the most often?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which kind of policy type was chosen by the most customers?",
            "ted": 0.0
        },
        {
            "db_id": "journal_committee",
            "query": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common age of editors.",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common headquarter for companies.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which policy type has the most records in the database?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which position is most popular among players in the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the type code of the most frequently used policy.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the nominee who has been nominated the greatest number of times.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Who is the nominee who has been nominated for the most musicals?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common result of the musicals.",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the most frequent result across all musicals.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which type of policy is most frequently used? Give me the policy type code.",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the poll resource associated with the most candidates.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the budget type code that is most common among documents with expenses.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count( * ) DESC LIMIT 1",
            "question": "What was the most popular position at tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the card type that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the card type code with most number of cards?",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count( * ) DESC LIMIT 1",
            "question": "which pilot is in charge of the most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the budget type code with most number of documents.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which reign is the most common among wrestlers?",
            "ted": 0.0
        },
        {
            "db_id": "assets_maintenance",
            "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which gender makes up the majority of the staff?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common reigns of wrestlers.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the country with the most number of home airlines?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT country FROM airlines GROUP BY country ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which countries has the most number of airlines?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which rank is the most common among captains?",
            "ted": 0.0
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which poll resource provided the most number of candidate information?",
            "ted": 0.0
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality of pilots.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the investor who have invested in the greatest number of entrepreneurs.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the payment method that is used most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "news_report",
            "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality for journalists.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which policy type appears most frequently in the available policies?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which building has most faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the building that has the largest number of faculty members.",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which classroom has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the year in which most ships were built?",
            "ted": 0.0
        },
        {
            "db_id": "student_1",
            "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the classroom that the most students use.",
            "ted": 0.0
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the policy type the most customers choose.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count( departmentID ) DESC LIMIT 1",
            "question": "Which department has the largest number of employees?",
            "ted": 0.0
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common country across members.",
            "ted": 0.0
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count( departmentID ) DESC LIMIT 1",
            "question": "Find the department with the most employees.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which vocal type is the most frequently appearring type?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of vocables that appears most frequently?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which year were most of ships built?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the software platform that is most common amongst all devices?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which college has the most authors with submissions?",
            "ted": 0.0
        },
        {
            "db_id": "book_2",
            "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common publication date.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the flag that is most common among all ships.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which flag is most widely used among all ships?",
            "ted": 0.0
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common college of authors of submissions.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count( * ) DESC LIMIT 1",
            "question": "What place has the most flights coming from there?",
            "ted": 0.0
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common occupation of players.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which origin has most number of flights?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the transaction type code that occurs the most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which payment method is used by most customers?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the advisor with the most students.",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the class of races that is most common.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the code of the city that has the most students.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the publisher with most number of books?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most popular first name of the actors?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which marketing region has the most drama workshop groups? Give me the region code.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the range that has the most number of mountains.",
            "ted": 0.0
        },
        {
            "db_id": "culture_company",
            "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the publisher that has published the most books.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which status code is the most common of all the bookings?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the document type code with most number of documents?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the most common first name among all actors.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which role is most common for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the city_code of the city that the most students live in?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the transportation method most people choose to get to tourist attractions.",
            "ted": 0.0
        },
        {
            "db_id": "climbing",
            "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which range contains the most mountains?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the marketing region code that has the most drama workshop groups?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count( * ) DESC LIMIT 2",
            "question": "What are the ids of the two department store chains with the largest number of department stores?",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Give the product id for the product that was ordered most frequently.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the product ID of the most frequently ordered item on invoices?",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the most prominent max page size among all the products.",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of Status across cities.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which transportation method is used the most often to get to tourist attractions?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the file format that is used by the most files.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which apartment type code appears the most often?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the most common apartment type code.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which major has the most students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the account id with most number of transactions.",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the catalog publisher that has the most catalogs.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most popular file format?",
            "ted": 0.0
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which month has the most happy hours?",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the membership level with most number of members.",
            "ted": 0.0
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the membership level with the most people?",
            "ted": 0.0
        },
        {
            "db_id": "farm",
            "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common status across all cities?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the major that is studied by the largest number of students.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most frequent status of bookings?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_invoices",
            "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the account with the most transactions?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Find the id of the product ordered the most often on invoices.",
            "ted": 0.0
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the investor that has invested in the most number of entrepreneurs?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy has most number of students affected?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the team that has the most number of technicians.",
            "ted": 0.0
        },
        {
            "db_id": "store_product",
            "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common maximum page size?",
            "ted": 0.0
        },
        {
            "db_id": "department_management",
            "query": "SELECT creation FROM department GROUP BY creation ORDER BY count( * ) DESC LIMIT 1",
            "question": "In which year were most departments established?",
            "ted": 0.0
        },
        {
            "db_id": "body_builder",
            "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common birth place of people?",
            "ted": 0.0
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "List the most common type of artworks.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the product that was ordered the most often?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which allergy is the most common?",
            "ted": 0.0
        },
        {
            "db_id": "train_station",
            "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count( * ) DESC LIMIT 1",
            "question": "Show the location with most number of train stations.",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Which nationality has the most hosts?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which catalog publisher has published the most catalogs?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which year had the greatest number of courses?",
            "ted": 0.0
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What are the teams with the most technicians?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id of the store that has the most items in inventory?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the year which offers the largest number of courses.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the most common role for the staff?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Return the id of the store with the most customers.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT languages FROM song GROUP BY languages ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the languages that are used most often in songs?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Return the result that is most frequent at music festivals.",
            "ted": 0.0
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common type code across products.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the name of department has the highest amount of students?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common type of ships.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT languages FROM song GROUP BY languages ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the language used most often in the songs?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which store owns most items?",
            "ted": 0.0
        },
        {
            "db_id": "party_host",
            "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common nationality of hosts.",
            "ted": 0.0
        },
        {
            "db_id": "railway",
            "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Show the most common builder of railways.",
            "ted": 0.0
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "Please show the most common status of roller coasters.",
            "ted": 0.0
        },
        {
            "db_id": "department_store",
            "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count( * ) DESC LIMIT 2",
            "question": "Return the ids of the two department store chains with the most department stores.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which store has most the customers?",
            "ted": 0.0
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1",
            "question": "What is the most common type of ships?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the least common faculty rank?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "Which year has the most degrees conferred?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "Return the id of the project that has the fewest corresponding documents.",
            "ted": 0.05
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the payment method that were used the least often?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "In what year was the most degrees conferred?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg( salary ) DESC LIMIT 1",
            "question": "Which department has the highest average instructor salary?",
            "ted": 0.05
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum( transaction_amount ) DESC LIMIT 1",
            "question": "Return the type of transaction with the highest total amount.",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg( salary ) DESC LIMIT 1",
            "question": "Find the name of the department which has the highest average salary of professors.",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT state FROM customers GROUP BY state ORDER BY count( * ) LIMIT 1",
            "question": "Give the state that has the most customers.",
            "ted": 0.05
        },
        {
            "db_id": "college_3",
            "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the rank of the faculty that the fewest faculties belong to.",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count( * ) ASC LIMIT 3",
            "question": "List three countries which are the origins of the least players.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the id of the project with least number of documents?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "What campus has the most degrees  conferrred over its entire existence?",
            "ted": 0.05
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count( * ) LIMIT 1",
            "question": "Which destination has least number of flights?",
            "ted": 0.05
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum( degrees ) DESC LIMIT 1",
            "question": "Which campus has the most degrees conferred in all times?",
            "ted": 0.05
        },
        {
            "db_id": "flight_1",
            "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count( * ) LIMIT 1",
            "question": "What destination has the fewest number of flights?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count( * ) ASC LIMIT 3",
            "question": "What are the three countries that the least players are from?",
            "ted": 0.05
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "Tell me the employee id of the head of the department with the least employees.",
            "ted": 0.05
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count( departmentID ) LIMIT 1",
            "question": "What is the employee id of the head whose department has the least number of employees?",
            "ted": 0.05
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT( * ) ASC LIMIT 1",
            "question": "Show the transaction type code that occurs the fewest times.",
            "ted": 0.05
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the faculty rank that has the least members.",
            "ted": 0.05
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum( transaction_amount ) DESC LIMIT 1",
            "question": "What is the transaction type that has processed the greatest total amount in transactions?",
            "ted": 0.05
        },
        {
            "db_id": "activity_1",
            "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which rank has the smallest number of faculty members?",
            "ted": 0.05
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT state FROM customers GROUP BY state ORDER BY count( * ) LIMIT 1",
            "question": "Which state has the most customers?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum( credits ) DESC LIMIT 1",
            "question": "What is the name of the department with the most credits?",
            "ted": 0.05
        },
        {
            "db_id": "insurance_policies",
            "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count( * ) ASC LIMIT 1",
            "question": "With which kind of payment method were the least number of payments processed?",
            "ted": 0.05
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count( * ) LIMIT 1",
            "question": "What are the ids of the students who registered for some courses but had the least number of courses for all students?",
            "ted": 0.05
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which customer status code has least number of customers?",
            "ted": 0.05
        },
        {
            "db_id": "driving_school",
            "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the status code with the least number of customers?",
            "ted": 0.05
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which allergy type has least number of allergies?",
            "ted": 0.05
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count( * ) ASC LIMIT 1",
            "question": "Which allergy type is the least common?",
            "ted": 0.05
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) LIMIT 1",
            "question": "What is the type with the fewest games?",
            "ted": 0.05
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count( * ) LIMIT 1",
            "question": "Which game type has least number of games?",
            "ted": 0.05
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg( room_count ) DESC LIMIT 3",
            "question": "What are the top three apartment types in terms of the average room count? Give me the",
            "ted": 0.05
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count( * ) LIMIT 1",
            "question": "what is id of students who registered some courses but the least number of courses in these students?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count( * ) ASC LIMIT 1",
            "question": "In which year did the least people enter hall of fame?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "Show the role code with the least employees.",
            "ted": 0.05
        },
        {
            "db_id": "department_store",
            "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count( * ) LIMIT 1",
            "question": "Return the id of the department with the fewest staff assignments.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count( * ) ASC LIMIT 1",
            "question": "What is the role with the smallest number of employees? Find the role codes.",
            "ted": 0.05
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state FROM bank GROUP BY state ORDER BY sum( no_of_customers ) DESC LIMIT 1",
            "question": "Which state has the greatest total number of bank customers?",
            "ted": 0.05
        },
        {
            "db_id": "loan_1",
            "query": "SELECT state FROM bank GROUP BY state ORDER BY sum( no_of_customers ) DESC LIMIT 1",
            "question": "Find the state which has the most number of customers.",
            "ted": 0.05
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg( room_count ) DESC LIMIT 3",
            "question": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.",
            "ted": 0.05
        },
        {
            "db_id": "department_store",
            "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count( * ) LIMIT 1",
            "question": "What is the id of the department with the least number of staff?",
            "ted": 0.05
        },
        {
            "db_id": "college_2",
            "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum( credits ) DESC LIMIT 1",
            "question": "Find the name of the department that offers the highest total credits?",
            "ted": 0.05
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count( * ) ASC LIMIT 1",
            "question": "Find the year in which the least people enter hall of fame.",
            "ted": 0.05
        },
        {
            "db_id": "document_management",
            "query": "SELECT sum( access_count ) FROM documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the total access count of documents that are of the most common document type?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers GROUP BY customer_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Count the number of customers that have the customer type that is most common.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT count( * ) FROM customers GROUP BY customer_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "How many customers are there in the customer type with the most customers?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "document_management",
            "query": "SELECT sum( access_count ) FROM documents GROUP BY document_type_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the total access count of all documents in the most popular document type.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg( mean_sea_level_pressure_inches ) LIMIT 1",
            "question": "What is the zip code that has the lowest average mean sea level pressure?",
            "ted": 0.1
        },
        {
            "db_id": "bike_1",
            "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg( mean_sea_level_pressure_inches ) LIMIT 1",
            "question": "What is the zip code in which the average mean sea level pressure is the lowest?",
            "ted": 0.1
        }
    ],
    "SELECT Population , LifeExpectancy FROM country WHERE Name = 'Russian Federation'": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
            "question": "What are the phone and email for customer Harold?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT city , state FROM bank WHERE bname = 'morningside'",
            "question": "What city and state is the bank with the name morningside in?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT chip_model , screen_mode FROM phone WHERE Hardware_Model_name = 'LG-P760'",
            "question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
            "question": "What are the names and trade names of the medcines that are FDA approved?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = 'Democratic'",
            "question": "Who are the lieutenant governor and comptroller from the democratic party?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_name , document_type_description FROM Ref_document_types WHERE document_type_code = 'RV'",
            "question": "What is the name and description for document type code RV?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM EMPLOYEE WHERE City = 'Calgary'",
            "question": "What are the first names and last names of the employees who live in Calgary city.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT email_address , date_of_birth FROM Customers WHERE first_name = 'Carole'",
            "question": "What are the email addresses and date of births for all customers who have a first name of Carole?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM EMPLOYEE WHERE City = 'Calgary'",
            "question": "Find the full names of employees living in the city of Calgary.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT name , built_year FROM mill WHERE TYPE = 'Grondzeiler'",
            "question": "What are the names and year of construction for the mills of 'Grondzeiler' type?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",
            "question": "What is the description for the CIS-220 and how many credits does it have?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Open_Date , Open_Year FROM shop WHERE Shop_Name = 'Apple'",
            "question": "What are the open dates and years for the shop named Apple?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",
            "question": "How many credits does course CIS-220 have, and what its description?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , bedType FROM Rooms WHERE decor = 'traditional'",
            "question": "What are the bed type and name of all the rooms with traditional decor?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_name , role_description FROM ROLES WHERE role_code = 'MG'",
            "question": "What are the name and description for role code \"MG\"?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_address , building_phone FROM Apartment_Buildings WHERE building_manager = 'Brenden'",
            "question": "What are the address and phone number of the buildings managed by \"Brenden\"?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Open_Date , Open_Year FROM shop WHERE Shop_Name = 'Apple'",
            "question": "List the open date of open year of the shop named \"Apple\".",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , bedType FROM Rooms WHERE decor = 'traditional'",
            "question": "List the type of bed and name of all traditional rooms.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_name , document_type_description FROM Ref_document_types WHERE document_type_code = 'RV'",
            "question": "Give me the name and description of the document type code RV.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE POSITION = 'Defender'",
            "question": "What are the draft pick numbers and draft classes for players who play the Defender position?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'QM-261'",
            "question": "Find the description and credit for the course QM-261?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE POSITION = 'Defender'",
            "question": "Show the draft pick numbers and draft classes of players whose positions are defenders.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT date_valid_from , date_valid_to FROM Customers_cards WHERE card_number = '4560596484842'",
            "question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'QM-261'",
            "question": "What is the course description and number of credits for QM-261?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_name , role_description FROM ROLES WHERE role_code = 'MG'",
            "question": "Find the name and description of the role with code \"MG\".",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT payment_method_code , party_phone FROM parties WHERE party_email = 'enrico09@example.com'",
            "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code , typical_buying_price FROM products WHERE product_name = 'cumin'",
            "question": "Return the category code and typical price of 'cumin'.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT email_address , date_of_birth FROM Customers WHERE first_name = 'Carole'",
            "question": "List email address and birthday of customer whose first name as Carole.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT International_Passengers , Domestic_Passengers FROM airport WHERE Airport_Name = 'London Heathrow'",
            "question": "How many international and domestic passengers are there in the airport London Heathrow?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT city , state FROM bank WHERE bname = 'morningside'",
            "question": "Find the city and state of the bank branch named morningside.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT customer_email , customer_name FROM customers WHERE payment_method = 'Visa'",
            "question": "List the names and emails of customers who payed by Visa card.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT id , market_share FROM browser WHERE name = 'Safari'",
            "question": "What is the id and market share of the browser Safari?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT date_incident_start , date_incident_end FROM Behavior_Incident WHERE incident_type_code = 'NOISE'",
            "question": "What are the start and end dates for incidents with incident type code \"NOISE\"?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT International_Passengers , Domestic_Passengers FROM airport WHERE Airport_Name = 'London Heathrow'",
            "question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'researcher'",
            "question": "When do all the researcher role staff start to work, and when do they stop working?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'researcher'",
            "question": "When did researchers start and stop working?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM CUSTOMER WHERE Email = 'luisg@embraer.com.br'",
            "question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT forename , surname FROM drivers WHERE nationality = 'German'",
            "question": "What is the first and last name of all the German drivers?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the product category description and unit of measurement of category \"Herbs\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_name , document_id FROM Documents WHERE document_type_code = 'BK'",
            "question": "What are the names and ids of documents that have the type code BK?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_name , document_id FROM Documents WHERE document_type_code = 'BK'",
            "question": "Find names and ids of all documents with document type code BK.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT fname , lname FROM Faculty WHERE Rank = 'Instructor'",
            "question": "Show the first name and last name for all the instructors.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT date_valid_from , date_valid_to FROM Customers_cards WHERE card_number = '4560596484842'",
            "question": "What are the valid from and valid to dates for the card with the number 4560596484842?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
            "question": "Show the id and salary of Mark Young.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT name_first , name_last FROM player WHERE death_year = ''",
            "question": "What are the first name and last name of the players whose death record is empty?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT name_first , name_last FROM player WHERE death_year = ''",
            "question": "Find all the players' first name and last name who have empty death record.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT school , LOCATION FROM university WHERE affiliation = 'Public'",
            "question": "List all public schools and their locations.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the description and unit of measurement for products in the 'Herbs' category.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT payment_method_code , party_phone FROM parties WHERE party_email = 'enrico09@example.com'",
            "question": "Find the payment method and phone of the party with email \"enrico09@example.com\".",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
            "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT address_line_1 , address_line_2 FROM customers WHERE email_address = 'vbogisich@example.org'",
            "question": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT phone , postal_code FROM address WHERE address = '1031 Daugavpils Parkway'",
            "question": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_name , location_description FROM Ref_locations WHERE location_code = 'x'",
            "question": "What are the name and description for location code x?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_name , location_description FROM Ref_locations WHERE location_code = 'x'",
            "question": "Give me the name and description of the location with code x.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM CUSTOMER WHERE Email = 'luisg@embraer.com.br'",
            "question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
            "question": "What is the id and salary of the employee named Mark Young?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT phone , postal_code FROM address WHERE address = '1031 Daugavpils Parkway'",
            "question": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT fname , lname FROM Faculty WHERE Rank = 'Instructor'",
            "question": "What are the first name and last name of all the instructors?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , department_id FROM employees WHERE last_name = 'McEwen'",
            "question": "Display the first name, and department number for all employees whose last name is \"McEwen\".",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT forename , surname FROM drivers WHERE nationality = 'German'",
            "question": "Find the forename and surname of drivers whose nationality is German?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , department_id FROM employees WHERE last_name = 'McEwen'",
            "question": "What are the first names and department numbers for employees with last name McEwen?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
            "question": "Find the phone number and email address of customer \"Harold\".",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code , typical_buying_price FROM products WHERE product_name = 'cumin'",
            "question": "What is the category and typical buying price  of the product with name \"cumin\"?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_address , building_phone FROM Apartment_Buildings WHERE building_manager = 'Brenden'",
            "question": "Show the addresses and phones of all the buildings managed by \"Brenden\".",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT school , LOCATION FROM university WHERE affiliation = 'Public'",
            "question": "What are the public schools and what are their locations?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT meter_200 , meter_300 FROM swimmer WHERE nationality = 'Australia'",
            "question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT address_line_1 , address_line_2 FROM customers WHERE email_address = 'vbogisich@example.org'",
            "question": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = 'Democratic'",
            "question": "Show the lieutenant governor and comptroller from the democratic party.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT salary , manager_id FROM employees WHERE manager_id != 'null'",
            "question": "Find the salary and manager number for those employees who is working under a manager.",
            "ted": 0.05
        },
        {
            "db_id": "gas_company",
            "query": "SELECT company , main_industry FROM company WHERE headquarters != 'USA'",
            "question": "Show the company name and the main industry for all companies whose headquarters are not from USA.",
            "ted": 0.05
        },
        {
            "db_id": "hr_1",
            "query": "SELECT salary , manager_id FROM employees WHERE manager_id != 'null'",
            "question": "What are the salaries and manager ids for employees who have managers?",
            "ted": 0.05
        },
        {
            "db_id": "gas_company",
            "query": "SELECT company , main_industry FROM company WHERE headquarters != 'USA'",
            "question": "What are the companies and main industries of all companies that are not headquartered in the United States?",
            "ted": 0.05
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name , residence FROM player WHERE Occupation != 'Researcher'",
            "question": "List the name and residence for players whose occupation is not \"Researcher\".",
            "ted": 0.05
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name , year_join FROM artist WHERE country != 'United States'",
            "question": "Show all artist names and the year joined who are not from United States.",
            "ted": 0.05
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , total_passengers FROM station WHERE LOCATION != 'London'",
            "question": "Show the names and total passengers for all train stations not in London.",
            "ted": 0.05
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name , year_join FROM artist WHERE country != 'United States'",
            "question": "What are the names and year of joining for artists that do not have the country \"United States\"?",
            "ted": 0.05
        },
        {
            "db_id": "browser_web",
            "query": "SELECT name , operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'",
            "question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?",
            "ted": 0.05
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Fname , Lname FROM Student WHERE Major = 600",
            "question": "List all students' first names and last names who majored in 600.",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
            "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
            "question": "Return the names and ids of customers who have TN in their address.",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT title , Studio FROM film WHERE Studio LIKE '%Universal%'",
            "question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".",
            "ted": 0.1
        },
        {
            "db_id": "department_management",
            "query": "SELECT head_id , name FROM head WHERE name LIKE '%Ha%'",
            "question": "Which head's name has the substring 'Ha'? List the id and name.",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT title , Studio FROM film WHERE Studio LIKE '%Universal%'",
            "question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , salary FROM Employee WHERE eid = 242518965",
            "question": "What is the name and salary for employee with id 242518965?",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , salary FROM Employee WHERE eid = 242518965",
            "question": "What is the name and salary of the employee with the id 242518965?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_date FROM problem_log WHERE problem_id = 10",
            "question": "Find all the ids and dates of the logs for the problem whose id is 10.",
            "ted": 0.1
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name , email FROM user_profiles WHERE name LIKE '%Swift%'",
            "question": "Find the name and email of the user whose name contains the word \u2018Swift\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Hardware_Model_name , Company_name FROM phone WHERE Accreditation_type LIKE 'Full'",
            "question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
            "question": "What are the names and ids of customers whose address contains TN?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_date FROM problem_log WHERE problem_id = 10",
            "question": "For the problem with id 10, return the ids and dates of its problem logs.",
            "ted": 0.1
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT physician , department FROM affiliated_with WHERE primaryaffiliation = 1",
            "question": "What are each physician's employee id and department id primarily affiliated.",
            "ted": 0.1
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT physician , department FROM affiliated_with WHERE primaryaffiliation = 1",
            "question": "List the physicians' employee ids together with their primary affiliation departments' ids.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE '4%'",
            "question": "Find the state and country of all cities with post code starting with 4.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE '4%'",
            "question": "What are the state and country of all the cities that have post codes starting with 4.\\",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft WHERE aid = 12",
            "question": "What is the name and distance for the aircraft that has an id of 12?",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",
            "question": "What are the names and account balances of customers with the letter a in their names?",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",
            "question": "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft WHERE aid = 12",
            "question": "What is the name and distance for aircraft with id 12?",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
            "question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?",
            "ted": 0.1
        }
    ],
    "SELECT LANGUAGE , CountryCode , max( Percentage ) FROM countrylanguage GROUP BY CountryCode": [
        {
            "db_id": "soccer_2",
            "query": "SELECT cName , state , min( enr ) FROM college GROUP BY state",
            "question": "What is the name of school that has the smallest enrollment in each state?",
            "ted": 0.05
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT code , name , min( price ) FROM products GROUP BY name",
            "question": "What are the codes and names of the cheapest products in each category?",
            "ted": 0.05
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT cName , state , min( enr ) FROM college GROUP BY state",
            "question": "What is the name of the school with smallest enrollment size per state?",
            "ted": 0.05
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT code , name , min( price ) FROM products GROUP BY name",
            "question": "Select the code of the product that is cheapest in each product category.",
            "ted": 0.05
        }
    ],
    "SELECT COUNT( * ) FROM ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Khmer' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Maltese' )": [
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ) ",
            "question": "How many times in total did the team Boston Red Stockings participate in postseason games?",
            "ted": 0.013888888888888888
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT COUNT( * ) FROM ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' )",
            "question": "What is the count of states with college students playing in the mid position but not as goalies?",
            "ted": 0.013888888888888888
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT COUNT( * ) FROM ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' )",
            "question": "How many states that have some college students playing in the mid position but not in the goalie position.",
            "ted": 0.013888888888888888
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ) ",
            "question": "What is the total number of postseason games that team Boston Red Stockings participated in?",
            "ted": 0.013888888888888888
        }
    ],
    "SELECT count( * ) , max( Percentage ) FROM countrylanguage WHERE LANGUAGE = 'Russian' GROUP BY CountryCode": [
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) , project_id FROM Documents WHERE document_type_code = 'BK' GROUP BY project_id",
            "question": "How many documents are with document type code BK for each product id?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code",
            "question": "Find the number of professors with a Ph.D. degree in each department.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) , dept_code FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code",
            "question": "How many professors have a Ph.D. in each department?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) , city FROM employees WHERE title = 'IT Staff' GROUP BY city",
            "question": "How many employees who are IT staff are from each city?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) , city FROM employees WHERE title = 'IT Staff' GROUP BY city",
            "question": "Find the number of employees whose title is IT Staff from each city?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT count( * ) , project_id FROM Documents WHERE document_type_code = 'BK' GROUP BY project_id",
            "question": "Count the number of documents with the type code BK that correspond to each product id.",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT Continent FROM country WHERE Name = 'New Zealand'": [
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "Find the name of dorms only for female (F gender).",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the location of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "What is the description of the club \"Pen and Paper Gaming\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the description of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "What are the names of all movies directed by Steven Spielberg?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'",
            "question": "Find the titles of all movies directed by steven spielberg.",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'VIOLENCE'",
            "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "Find the description of the club called \"Tennis Club\".",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club'",
            "question": "What is the description of the club named \"Tennis Club\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Which employees have the role with code \"HR\"? Find their names.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT apt_number FROM Apartments WHERE apt_type_code = 'Flat'",
            "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_name FROM Employees WHERE role_code = 'HR'",
            "question": "Show the names of all the employees with role \"HR\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "Show the id of the employee named Ebba.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of all the files in mp3 format?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "Return the date of birth for all the guests with gender code \"Male\".",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT date_of_birth FROM Guests WHERE gender_code = 'Male'",
            "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT employee_ID FROM Employees WHERE employee_name = 'Ebba'",
            "question": "What is the id for the employee called Ebba?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT f_id FROM files WHERE formats = 'mp3'",
            "question": "What are the id of songs whose format is mp3.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
            "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the code of the school where the accounting department belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT school_code FROM department WHERE dept_name = 'Accounting'",
            "question": "What is the school code of the accounting department?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "Find the department name that is in Building \"Mergenthaler\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "What is the description of the role named \"Proof Reader\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_description FROM ROLES WHERE role_name = 'Proof Reader'",
            "question": "Show the description for role name \"Proof Reader\".",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "What are the names of all songs in English?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How many milliseconds long is Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club'",
            "question": "Where us the club named \"Tennis Club\" located?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Find the location of the club \"Pen and Paper Gaming\".",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "Show ids for all the male faculty.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT FacID FROM Faculty WHERE Sex = 'M'",
            "question": "What are the faculty ids of all the male faculty members?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT BirthDate FROM EMPLOYEE WHERE City = 'Edmonton'",
            "question": "What are the birth dates of employees living in Edmonton?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Find the name of all the clubs at \"AKW\".",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "Find the branch names of banks in the New York state.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT bname FROM bank WHERE state = 'New York'",
            "question": "What are the names of banks in the state of New York?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "What are the names of the airports in the city of Goroka?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE city = 'Goroka'",
            "question": "Find the name of the airport in the city of Goroka.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "What are the document ids for the budget type code 'SF'?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "Show student ids for all male students.",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Hopkins Student Enterprises'",
            "question": "Where is the club \"Hopkins Student Enterprises\" located?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT StuID FROM Student WHERE Sex = 'M'",
            "question": "What are the student ids for all male students?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Which city does the student whose last name is \"Kim\" live in?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How long does track Fast As a Shark has?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming'",
            "question": "Where is the club \"Pen and Paper Gaming\" located?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "Where is the headquarter of the company founded by James?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Return the founder of Sony.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT city_code FROM Student WHERE LName = 'Kim'",
            "question": "Give the city that the student whose family name is Kim lives in.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
            "question": "Who is the founder of Sony?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the id of the reviewer named Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'",
            "question": "What is the reviewer id of Daniel Lewis?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the unit price of the tune \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "How much is the track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Show the short names of the buildings managed by \"Emma\".",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT gender FROM TEACHERS WHERE last_name = 'Medhurst'",
            "question": "What is the gender of the teacher with last name \"Medhurst\"?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who directed Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "movie_1",
            "query": "SELECT director FROM Movie WHERE title = 'Avatar'",
            "question": "Who is the director of movie Avatar?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = 'Emma'",
            "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT headquarter FROM manufacturers WHERE founder = 'James'",
            "question": "What is the headquarter of the company whose founder is James?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT clubname FROM club WHERE clublocation = 'AKW'",
            "question": "Which clubs are located at \"AKW\"? Return the club names.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "what is the address of history department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "What is the composer who created the track \"Fast As a Shark\"?",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "Return the elimination movies of wrestlers on Team Orton.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "What are the names of all wines produced in 2008?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "Find all the customer information in state NY.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT * FROM CUSTOMER WHERE State = 'NY'",
            "question": "What is all the customer information for customers in NY state?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the unit of measure for 'Herb' products.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What campuses are located in Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE LOCATION = 'Chico'",
            "question": "What are the names of all campuses located at Chico?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are located in the county of Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "Report the name of all campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "Find the attribute data type for the attribute named \"Green\".",
            "ted": 0.0
        },
        {
            "db_id": "product_catalog",
            "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'",
            "question": "What is the attribute data type of the attribute with name \"Green\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "city_record",
            "query": "SELECT match_id FROM MATCH WHERE competition = '1994 FIFA World Cup qualification'",
            "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "Which category does the product named \"flax\" belong to?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code FROM products WHERE product_name = 'flax'",
            "question": "What is the code of the category that the product with the name 'flax' belongs to?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT email FROM user_profiles WHERE name = 'Mary'",
            "question": "Find the emails of the user named \"Mary\".",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'",
            "question": "What is the partition id of the user named \"Iron Man\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "Find the phone number of performer \"Ashley\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = 'Ashley'",
            "question": "What is the phone number of the performer Ashley?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "Find the marketing region description of China?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = 'China'",
            "question": "What is the description of the marketing region China?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "Display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "What are all the employees without a department number?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE department_id = 'null'",
            "question": "Return all the information for all employees without any department number.",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "Return the description of the product called \"Chocolate\".",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT Name FROM WINE WHERE YEAR = '2008'",
            "question": "Find the names of all wines produced in 2008.",
            "ted": 0.0
        },
        {
            "db_id": "wrestler",
            "query": "SELECT Elimination_Move FROM Elimination WHERE Team = 'Team Orton'",
            "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "What is the description of the claim status \"Open\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "What are the names of all instructors in the Comp. Sci. department?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark'",
            "question": "Who is the composer of track Fast As a Shark?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE languages = 'english'",
            "question": "Find the names of all English songs.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "What is all the information about the Marketing department?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM departments WHERE department_name = 'Marketing'",
            "question": "display all the information about the department Marketing.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "Show the location code of the country \"Canada\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_code FROM Ref_locations WHERE location_name = 'Canada'",
            "question": "What is the location code for the country \"Canada\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "When was the document named \"Marry CV\" stored? Give me the date.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT date_stored FROM All_documents WHERE Document_name = 'Marry CV'",
            "question": "What is the date when the document \"Marry CV\" was stored?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "What are the names of products with category \"Spices\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_name FROM products WHERE product_category_code = 'Spices'",
            "question": "Return the names of products in the category 'Spices'.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT DName FROM DEPARTMENT WHERE Building = 'Mergenthaler'",
            "question": "What is the name of the department in the Building Mergenthaler?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "What are the famous titles of the artist \"Triumfall\"?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall'",
            "question": "Return the famous titles of the artist called \"Triumfall\".",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT dept_address FROM department WHERE dept_name = 'History'",
            "question": "Where is the history department?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "Find the code of the document type \"Paper\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT product_description FROM products WHERE product_name = 'Chocolate'",
            "question": "What is the description of the product named \"Chocolate\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "List the codes of all courses that take place in room KLR209.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT class_code FROM CLASS WHERE class_room = 'KLR209'",
            "question": "What are the codes of all the courses that are located in room KLR209?",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "Return the categories of music festivals that have the result \"Awarded\".",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "What campuses are in Los Angeles county?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE county = 'Los Angeles'",
            "question": "List the campuses in Los Angeles county.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = 'Paper'",
            "question": "What is the document type code for document type \"Paper\"?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "What is the description of the product category with the code 'Spices'?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices'",
            "question": "Find the product category description of the product category with code \"Spices\".",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open'",
            "question": "Find the description of the claim status \"Open\".",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
            "ted": 0.0
        },
        {
            "db_id": "musical",
            "query": "SELECT Name FROM musical WHERE Nominee = 'Bob Fosse'",
            "question": "Return the names of musicals who have the nominee Bob Fosse.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'",
            "question": "Find the names of all instructors in computer science department",
            "ted": 0.0
        },
        {
            "db_id": "music_4",
            "query": "SELECT Category FROM music_festival WHERE RESULT = 'Awarded'",
            "question": "What are the category of music festivals with result \"Awarded\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "Return the description of the budget type that has the code ORG.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
            "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = 'ORG'",
            "question": "What is the description for the budget type with code ORG?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "Show all video games with type Collectible card game.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gname FROM Video_games WHERE gtype = 'Collectible card game'",
            "question": "What are the names of all video games that are collectible cards?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "What are the majors of male (sex is M) students?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Major FROM STUDENT WHERE Sex = 'M'",
            "question": "List the major of each male student.",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Address FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the address of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Rating FROM Restaurant WHERE ResName = 'Subway'",
            "question": "What is the rating of the restaurant Subway?",
            "ted": 0.0
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = 'Sandwich'",
            "question": "What is the description of the restaurant type Sandwich?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What is the type of video game Call of Destiny.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT gtype FROM Video_games WHERE gname = 'Call of Destiny'",
            "question": "What type of game is Call of Destiny?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = 'Paper'",
            "question": "What is the description of document type 'Paper'?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT role_description FROM ROLES WHERE role_code = 'ED'",
            "question": "What is the description of role code ED?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "Which courses are taught on days MTW?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT CName FROM COURSE WHERE Days = 'MTW'",
            "question": "What are the course names for courses taught on MTW?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = '3452'",
            "question": "Find the id of the order whose shipment tracking number is \"3452\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success'",
            "question": "Find the ids of orders whose status is 'Success'.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "Show ids for all students who live in CHI.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Student WHERE city_code = 'CHI'",
            "question": "What are the ids of all students who live in CHI?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "Return the description of the document type name 'Film'.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "What are the login names of the students with family name \"Ward\"?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "Find id of candidates whose assessment code is \"Pass\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = 'Film'",
            "question": "What is the document type description for document type named Film?",
            "ted": 0.0
        },
        {
            "db_id": "student_assessment",
            "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass'",
            "question": "What are the ids of the candidates that have an outcome code of Pass?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = 'working'",
            "question": "What is the description of document status code 'working'?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "What is the decor of room Recluse and defiance?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "What are the descriptions of the courses with name \"database\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT course_description FROM COURSES WHERE course_name = 'database'",
            "question": "Return the description for the courses named \"database\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = 'bus'",
            "question": "What are the names of the tourist attractions that can be accessed by bus?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Who are the players from UCLA?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Player FROM match_season WHERE College = 'UCLA'",
            "question": "Show the players from college UCLA.",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "Return the type code of the document named \"David CV\".",
            "ted": 0.0
        },
        {
            "db_id": "document_management",
            "query": "SELECT document_type_code FROM documents WHERE document_name = 'David CV'",
            "question": "What is the type of the document named \"David CV\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Return the detail of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "Show the zip code of the county with name \"Howard\".",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT dorm_name FROM dorm WHERE gender = 'F'",
            "question": "What are the names of the all-female dorms?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the detail of the location UK Gallery?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "Find the address of the location named \"UK Gallery\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = 'Cathrine'",
            "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Find the dates of the tests taken with result \"Pass\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT Address FROM LOCATIONS WHERE Location_Name = 'UK Gallery'",
            "question": "What is the address of the location \"UK Gallery\"?",
            "ted": 0.0
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT i_id FROM item WHERE title = 'orange'",
            "question": "Find the id of the item whose title is \"orange\".",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "What are the price ranges of five star hotels?",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
            "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT price_range FROM HOTELS WHERE star_rating_code = '5'",
            "question": "Show the price ranges of hotels with 5 star ratings.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT decor FROM Rooms WHERE roomName = 'Recluse and defiance'",
            "question": "Return the decor of the room named \"Recluse and defiance\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Zip_code FROM county WHERE County_name = 'Howard'",
            "question": "What is the zip code the county named \"Howard\" is located in?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'UPS'",
            "question": "What is the shipping agent code of shipping agent UPS?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What are the numbers of all flights coming from Los Angeles?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = 'PUR'",
            "question": "Show the description of transaction type with code \"PUR\".",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is the type of allergy Cat?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "What are the other account details for the account with the name 338?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the job of a researcher?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "Return the titles of any movies with an R rating.",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT title FROM film WHERE rating = 'R'",
            "question": "What are all the movies rated as R? List the titles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT flno FROM Flight WHERE origin = 'Los Angeles'",
            "question": "Show all flight number from Los Angeles.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "Show origins of all flights with destination Honolulu.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT allergytype FROM Allergy_type WHERE allergy = 'Cat'",
            "question": "What is allergy type of a cat allergy?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher'",
            "question": "What is the complete description of the researcher role.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = 'SALE'",
            "question": "Show all dates of transactions whose type code is \"SALE\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT other_account_details FROM Accounts WHERE account_name = '338'",
            "question": "Show other account details for account with name 338.",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT origin FROM Flight WHERE destination = 'Honolulu'",
            "question": "What are the origins of all flights that are headed to Honolulu?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "List ids for all student who are on scholarship.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y'",
            "question": "What are the ids for all sporty students who are on scholarship?",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Show the advisors of the students whose city of residence has city code \"BAL\".",
            "ted": 0.0
        },
        {
            "db_id": "voter_2",
            "query": "SELECT Advisor FROM STUDENT WHERE city_code = 'BAL'",
            "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Which authors have first name \"Amal\"? List their last names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT lname FROM authors WHERE fname = 'Amal'",
            "question": "Find the last name of the author with first name \"Amal\".",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "Which authors have last name \"Ueno\"? List their first names.",
            "ted": 0.0
        },
        {
            "db_id": "icfp_1",
            "query": "SELECT fname FROM authors WHERE lname = 'Ueno'",
            "question": "What is the first name of the author with last name \"Ueno\"?",
            "ted": 0.0
        },
        {
            "db_id": "company_1",
            "query": "SELECT Dependent_name FROM dependent WHERE relationship = 'Spouse'",
            "question": "find all dependent names who have a spouse relation with some employee.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT login_name FROM Students WHERE family_name = 'Ward'",
            "question": "Return the login names of the students whose family name is \"Ward\".",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method = 'Cash'",
            "question": "What are the names of customers who use payment method \"Cash\"?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_fnol",
            "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code = 'Life Insurance'",
            "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code = 'PUR'",
            "question": "Show all transaction ids with transaction code 'PUR'.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Find the names of channels that are not owned by CCTV.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
            "question": "Which channels are not owned by CCTV? Give me the channel names.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "display those employees who joined after 7th September, 1987.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
            "question": "Which employees were hired after September 7th, 1987?",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens'",
            "question": "Return the hosts of competitions for which the theme is not Aliens?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT order_id FROM shipments WHERE shipment_date > '2000-01-01'",
            "question": "Find the ids of orders which are shipped after 2000-01-01.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "Return the device carriers that do not have Android as their software platform.",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "What is all the information about employees hired before June 21, 2002?",
            "ted": 0.0625
        },
        {
            "db_id": "hr_1",
            "query": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
            "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "What is the name of customers who do not use Cash as payment method.",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "List the name of technicians whose team is not \"NYY\".",
            "ted": 0.0625
        },
        {
            "db_id": "machine_repair",
            "query": "SELECT Name FROM technician WHERE Team != 'NYY'",
            "question": "What is the name of the technician whose team is not 'NYY'?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "What are the names of the ships that are not from the United States?",
            "ted": 0.0625
        },
        {
            "db_id": "architecture",
            "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
            "question": "What are the names of the mills which are not located in 'Donceel'?",
            "ted": 0.0625
        },
        {
            "db_id": "entertainment_awards",
            "query": "SELECT Name FROM artwork WHERE TYPE != 'Program Talent Show'",
            "question": "List the name of artworks whose type is not \"Program Talent Show\".",
            "ted": 0.0625
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
            "question": "Find the name of customers who did not pay with Cash.",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "find the names of programs whose origin is not in Beijing.",
            "ted": 0.0625
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Name FROM Representative WHERE Party != 'Republican'",
            "question": "What are the names of representatives whose party is not \"Republican\"?",
            "ted": 0.0625
        },
        {
            "db_id": "roller_coaster",
            "query": "SELECT Name FROM country WHERE Languages != 'German'",
            "question": "List the names of countries whose language is not \"German\".",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "What are the nicknames of schools whose division is not 1?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported < '1978-06-26'",
            "question": "What are the ids of the problems which are reported before 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Show names for all regions except for Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "device",
            "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
            "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
            "ted": 0.0625
        },
        {
            "db_id": "storm_record",
            "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
            "question": "Return the names of all regions other than Denmark.",
            "ted": 0.0625
        },
        {
            "db_id": "flight_company",
            "query": "SELECT name FROM airport WHERE country != 'Iceland'",
            "question": "What are the names of the airports which are not in the country 'Iceland'?",
            "ted": 0.0625
        },
        {
            "db_id": "department_management",
            "query": "SELECT name FROM head WHERE born_state != 'California'",
            "question": "What are the names of the heads who are born outside the California state?",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "Find the ids of the problems reported after 1978-06-26.",
            "ted": 0.0625
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26'",
            "question": "What are the ids of the problems which are reported after 1978-06-26?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "List the names of climbers whose country is not Switzerland.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes who does not produce 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "climbing",
            "query": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
            "question": "What are the names of climbers who are not from the country of Switzerland?",
            "ted": 0.0625
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM program WHERE origin != 'Beijing'",
            "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Nickname FROM school_details WHERE Division != 'Division 1'",
            "question": "Show the nicknames of schools that are not in division 1.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "What are the census rankings of cities that do not have the status \"Village\"?",
            "ted": 0.0625
        },
        {
            "db_id": "school_player",
            "query": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
            "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
            "ted": 0.0625
        },
        {
            "db_id": "farm",
            "query": "SELECT Census_Ranking FROM city WHERE Status != 'Village'",
            "question": "Show the census ranking of cities whose status are not \"Village\".",
            "ted": 0.0625
        },
        {
            "db_id": "book_2",
            "query": "SELECT Title FROM book WHERE Writer != 'Elaine Lee'",
            "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
            "ted": 0.0625
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality != 'United States'",
            "question": "List the name of ships whose nationality is not \"United States\".",
            "ted": 0.0625
        },
        {
            "db_id": "company_office",
            "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
            "question": "What are the names of companies whose headquarters are not \"USA\"?",
            "ted": 0.0625
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
            "question": "What are the names of enzymes whose product is not 'Heme'?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Which ministers are not a part of the Progress Party?",
            "ted": 0.0625
        },
        {
            "db_id": "party_people",
            "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
            "question": "Show all ministers who do not belong to Progress Party.",
            "ted": 0.0625
        }
    ],
    "select distinct T3.name from country as T1 join countrylanguage as T2 on T1.code = T2.countrycode join city as T3 on T1.code = T3.countrycode where T2.isofficial = 'F' and T2.language = 'Madura' and T1.continent = 'Oceania'": [
        {
            "db_id": "restaurant_1",
            "query": "SELECT count( * ) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = 'Linda' AND Student.Lname = 'Smith' AND Restaurant.ResName = 'Subway'",
            "question": "How many times has the student Linda Smith visited Subway?",
            "ted": 0.03225806451612903
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = 'Linda' AND Student.Lname = 'Smith' AND Restaurant.ResName = 'Subway'",
            "question": "When did Linda Smith visit Subway?",
            "ted": 0.03225806451612903
        }
    ],
    "SELECT sum( Population ) , max( GNP ) FROM country WHERE Continent = 'Asia'": [
        {
            "db_id": "wine_1",
            "query": "SELECT max( Price ) , max( Score ) FROM WINE WHERE Appelation = 'St. Helena'",
            "question": "Give the maximum price and score for wines produced in the appelation St. Helena.",
            "ted": 0.041666666666666664
        },
        {
            "db_id": "wine_1",
            "query": "SELECT max( Price ) , max( Score ) FROM WINE WHERE Appelation = 'St. Helena'",
            "question": "What are the maximum price and score of wines produced by St. Helena appelation?",
            "ted": 0.041666666666666664
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT avg( height ) , avg( weight ) FROM people WHERE sex = 'M'",
            "question": "What are the average height and weight across males (sex is M)?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT avg( lat ) , avg( long ) FROM station WHERE city = 'San Jose'",
            "question": "What is the average latitude and longitude of stations located in San Jose city?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT avg( lat ) , avg( long ) FROM station WHERE city = 'San Jose'",
            "question": "What is the average latitude and longitude in San Jose?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT sum( duration ) , max( duration ) FROM trip WHERE bike_id = 636",
            "question": "What is the total and maximum duration of trips with bike id 636?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "bike_1",
            "query": "SELECT sum( duration ) , max( duration ) FROM trip WHERE bike_id = 636",
            "question": "What is the total and maximum duration for all trips with the bike id 636?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT avg( student_capacity ) , sum( student_capacity ) FROM dorm WHERE gender = 'X'",
            "question": "Find the average and total capacity of dorms for the students with gender X.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT avg( student_capacity ) , sum( student_capacity ) FROM dorm WHERE gender = 'X'",
            "question": "What is the average and total capacity for all dorms who are of gender X?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( rating ) , avg( resolution ) FROM song WHERE languages = 'bangla'",
            "question": "What are the average rating and resolution of songs that are in Bangla?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT avg( age ) , min( age ) FROM artist WHERE country = 'United States'",
            "question": "What is the average and minimum age of all artists from United States.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT avg( age ) , min( age ) FROM artist WHERE country = 'United States'",
            "question": "Return the average and minimum ages across artists from the United States.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "flight_1",
            "query": "SELECT avg( distance ) , avg( price ) FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What is the average distance and average price for flights from Los Angeles.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "flight_1",
            "query": "SELECT avg( distance ) , avg( price ) FROM Flight WHERE origin = 'Los Angeles'",
            "question": "What is the average distance and price for all flights from LA?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "music_1",
            "query": "SELECT avg( rating ) , avg( resolution ) FROM song WHERE languages = 'bangla'",
            "question": "What is the average rating and resolution of all bangla songs?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "candidate_poll",
            "query": "SELECT avg( height ) , avg( weight ) FROM people WHERE sex = 'M'",
            "question": "Find the average height and weight for all males (sex is M).",
            "ted": 0.08333333333333333
        }
    ],
    "select T1.name from country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T2.language = 'Luxembourgish' and isofficial = 'F' UNION select T1.name from country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T2.language = 'Sumo' and isofficial = 'F'": [
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Dameon' AND T2.staff_last_name = 'Frami' UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Jolie' AND T2.staff_last_name = 'Weber'",
            "question": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Dameon' AND T2.staff_last_name = 'Frami' UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Jolie' AND T2.staff_last_name = 'Weber'",
            "question": "Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop' AND T2.staff_last_name = 'Berge' INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Ashley' AND T2.staff_last_name = 'Medhurst'",
            "question": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?",
            "ted": 0.012195121951219513
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Christop' AND T2.staff_last_name = 'Berge' INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Ashley' AND T2.staff_last_name = 'Medhurst'",
            "question": "For which product was there a problem reported by Christop Berge, with closure authorised by Ashley Medhurst? Return the product ids.",
            "ted": 0.012195121951219513
        }
    ],
    "select name from city where population between 160000 and 900000": [
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
            "question": "Find the name of airports whose altitude is between -50 and 50.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
            "question": "What are the names of players whose training hours is between 500 and 1500?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004",
            "question": "the names of models that launched between 2002 and 2004.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE YEAR >= 1935 AND YEAR <= 1939",
            "question": "What campuses opened between 1935 and 1939?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011",
            "question": "What are the names of races held between 2009 and 2011?",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011",
            "question": "What are the names of all races held between 2009 and 2011?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
            "question": "What are the dates in which the mean sea level pressure was between 30.3 and 31?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150",
            "question": "Find the name of rooms whose base price is between 120 and 150.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
            "question": "What are the dates that have an average sea level pressure between 30.3 and 31?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
            "question": "what is the phone number of employees whose salary is in the range of 8000 and 12000?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
            "question": "Return the phone numbers of employees with salaries between 8000 and 12000.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150",
            "question": "What are the names of companies with revenue between 100 and 150?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120",
            "question": "Find all information of all the products with a price between $60 and $120.",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120",
            "question": "What is all the information of all the products that have a price between 60 and 120?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000",
            "question": "What are the years of opening for tracks with seating between 4000 and 5000?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150",
            "question": "Find the name of companies whose revenue is between 100 and 150.",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150",
            "question": "Which rooms cost between 120 and 150? Give me the room names.",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
            "question": "What are the names of all airports whose elevation is between -50 and 50?",
            "ted": 0.0
        },
        {
            "db_id": "race_track",
            "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000",
            "question": "Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT campus FROM campuses WHERE YEAR >= 1935 AND YEAR <= 1939",
            "question": "Which campus was opened between 1935 and 1939?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
            "question": "What are the names of players who train between 500 and 1500 hours?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300",
            "question": "What are the names of projects that require between 100 and 300 hours?",
            "ted": 0.0
        },
        {
            "db_id": "scientist_1",
            "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300",
            "question": "Find the name of projects that require between 100 and 300 hours of work.",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20",
            "question": "What are the dates when customers with ids between 10 and 20 became customers?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20",
            "question": "Find the \"date became customers\" of the customers whose ID is between 10 and 20.",
            "ted": 0.0
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT name FROM building WHERE height_feet >= 200 AND floors >= 20",
            "question": "List the names of buildings with at least 200 feet of height and with at least 20 floors.",
            "ted": 0.045454545454545456
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000",
            "question": "What is the count of aircrafts that have a distance between 1000 and 5000?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "department_management",
            "query": "SELECT avg( num_employees ) FROM department WHERE ranking BETWEEN 10 AND 15",
            "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000",
            "question": "How many aircrafts have distance between 1000 and 5000?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005",
            "question": "How many gas station are opened between 2000 and 2005?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "formula_1",
            "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017",
            "question": "What are the unique names of all race held between 2014 and 2017?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100",
            "question": "What are the distinct wineries which produce wines costing between 50 and 100?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "formula_1",
            "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017",
            "question": "Find the distinct names of all races held between 2014 and 2017?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100",
            "question": "Find the distinct winery of wines having price between 50 and 100.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee WHERE salary BETWEEN 100000 AND 200000",
            "question": "What is the number of employees that have a salary between 100000 and 200000?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "flight_1",
            "query": "SELECT count( * ) FROM Employee WHERE salary BETWEEN 100000 AND 200000",
            "question": "How many employees have salary between 100000 and 200000?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "gas_company",
            "query": "SELECT count( * ) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005",
            "question": "What is the total number of gas stations that opened between 2000 and 2005?",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
            "question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1",
            "question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "protein_institute",
            "query": "SELECT TYPE FROM institution WHERE founded > 1990 AND enrollment >= 1000",
            "question": "Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",
            "question": "What are the dates of transactions with at least 100 share count or amount bigger than 100?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "shop_membership",
            "query": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
            "question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1",
            "question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.",
            "ted": 0.09090909090909091
        }
    ],
    "SELECT count( * ) , District FROM city WHERE Population > ( SELECT avg( Population ) FROM city ) GROUP BY District": [
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , sex FROM student WHERE age > ( SELECT avg( age ) FROM student ) GROUP BY sex",
            "question": "How many students are older than average for each gender?",
            "ted": 0.0
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT count( * ) , sex FROM student WHERE age > ( SELECT avg( age ) FROM student ) GROUP BY sex",
            "question": "Find the number of students whose age is older than the average age for each gender.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT min( salary ) , dept_name FROM instructor GROUP BY dept_name HAVING avg( salary ) > ( SELECT avg( salary ) FROM instructor )",
            "question": "What is the lowest salary in departments with average salary greater than the overall average.",
            "ted": 0.08823529411764706
        },
        {
            "db_id": "college_2",
            "query": "SELECT min( salary ) , dept_name FROM instructor GROUP BY dept_name HAVING avg( salary ) > ( SELECT avg( salary ) FROM instructor )",
            "question": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors.",
            "ted": 0.08823529411764706
        }
    ],
    "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Nepali' OR T2.Language = 'Nkole'": [
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy' OR T1.policy_type_code = 'Uniform'",
            "question": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = 'Graphics' OR T2.Company_name = 'Nokia Corporation'",
            "question": "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\"",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS T2 ON T1.architect_id = T2.id WHERE T2.nationality = 'American' OR T2.nationality = 'Canadian'",
            "question": "What are the distinct types of mills that are built by American or Canadian architects?",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.country = 'United States' OR T1.name = 'Billund Airport'",
            "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?",
            "ted": 0.0
        },
        {
            "db_id": "insurance_and_eClaims",
            "query": "SELECT DISTINCT T2.customer_details FROM policies AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.policy_type_code = 'Deputy' OR T1.policy_type_code = 'Uniform'",
            "question": "Find the names of customers who either have an deputy policy or uniformed policy.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = 'Maryland' OR T2.College = 'Duke'",
            "question": "Return the official native languages of countries who have players from Maryland or Duke colleges.",
            "ted": 0.05
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology'",
            "question": "How many professors who are from either Accounting or Biology department?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk' OR T2.How_to_Get_There = 'bus'",
            "question": "Find the details of all the markets that are accessible by walk or bus.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = 'walk' OR T2.How_to_Get_There = 'bus'",
            "question": "What are the details of the markets that can be accessed by walk or bus?",
            "ted": 0.05
        },
        {
            "db_id": "local_govt_mdm",
            "query": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.source_system_code = 'Electoral' OR T2.source_system_code = 'Tax'",
            "question": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '254 Ottilie Junction' OR T2.How_to_Get_There = 'bus'",
            "question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?",
            "ted": 0.05
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Latin' OR T1.Name = 'Pop'",
            "question": "Find the average millisecond length of Latin and Pop tracks.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '254 Ottilie Junction' OR T2.How_to_Get_There = 'bus'",
            "question": "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '660 Shea Crescent' OR T2.How_to_Get_There = 'walk'",
            "question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?",
            "ted": 0.05
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology'",
            "question": "What is the number of professors who are in the Accounting or Biology departments?",
            "ted": 0.05
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = 'Maryland' OR T2.College = 'Duke'",
            "question": "What are the official languages of the countries of players from Maryland or Duke college?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Human Resource' OR T2.role_name = 'Manager'",
            "question": "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\".",
            "ted": 0.05
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock' OR T1.name = 'Jazz'",
            "question": "What are the names of the tracks that are Rock or Jazz songs?",
            "ted": 0.05
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus'",
            "question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "ted": 0.05
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = 'Human Resource' OR T2.role_name = 'Manager'",
            "question": "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?",
            "ted": 0.05
        },
        {
            "db_id": "phone_1",
            "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Company_name = 'Nokia Corporation' AND T1.Type != 'Text'",
            "question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.",
            "ted": 0.05
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'operating system' OR T2.course_name = 'data structure'",
            "question": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.",
            "ted": 0.05
        },
        {
            "db_id": "e_learning",
            "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'operating system' OR T2.course_name = 'data structure'",
            "question": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".",
            "ted": 0.05
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = 'Mary' OR T1.name = 'Susan'",
            "question": "Find the id of users who are followed by Mary or Susan.",
            "ted": 0.05
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = 'Simon Woodroffe' OR T1.Investor = 'Peter Jones'",
            "question": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
            "ted": 0.05
        },
        {
            "db_id": "store_1",
            "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock' OR T1.name = 'Jazz'",
            "question": "List the name of tracks belongs to genre Rock or genre Jazz.",
            "ted": 0.05
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT AVG( Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Latin' OR T1.Name = 'Pop'",
            "question": "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?",
            "ted": 0.05
        },
        {
            "db_id": "entrepreneur",
            "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = 'Simon Woodroffe' OR T1.Investor = 'Peter Jones'",
            "question": "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.",
            "ted": 0.05
        },
        {
            "db_id": "cre_Theme_park",
            "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = '660 Shea Crescent' OR T2.How_to_Get_There = 'walk'",
            "question": "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.",
            "ted": 0.05
        },
        {
            "db_id": "perpetrator",
            "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = 'China' OR T2.Country = 'Japan'",
            "question": "What are the names of perpetrators in country \"China\" or \"Japan\"?",
            "ted": 0.05
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' AND T1.gender = 'female'",
            "question": "Find the names of females who are friends with Zach",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = 'Steve' AND T1.last_name = 'Johnson'",
            "question": "What is the count of customers that Steve Johnson supports?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "In what city does Janessa Sawayn live?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'CHRISSY' AND T1.lastname = 'NABOZNY'",
            "question": "How many teachers does the student named CHRISSY NABOZNY have?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "Which city does staff with first name as Janessa and last name as Sawayn live?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'CHRISSY' AND T1.lastname = 'NABOZNY'",
            "question": "Find the number of teachers who teach the student called CHRISSY NABOZNY.",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.lesson_time ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Rylan' AND T2.last_name = 'Goodwin'",
            "question": "How long is the total lesson time took by the customer named Rylan Goodwin?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.lesson_time ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Rylan' AND T2.last_name = 'Goodwin'",
            "question": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?",
            "ted": 0.075
        },
        {
            "db_id": "network_2",
            "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' AND T1.gender = 'female'",
            "question": "What are the names of all females who are friends with Zach?",
            "ted": 0.075
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "Find the number of activities Mark Giuliano is involved in.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = 'F' AND T2.Election_Cycle = 'Spring'",
            "question": "What is the average age of the female students with secretary votes in the spring election cycle?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the zip code of the hosue of the employee named Janessa Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( lesson_time ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( lesson_time ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the total time for all lessons taught by Janessa Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT avg( price ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT avg( price ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Janessa' AND T2.last_name = 'Sawayn'",
            "question": "What is the average price for a lesson taught by Janessa Sawayn?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "How many orders does Lucas Mancini has?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.amount_payment ) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Carole' AND T2.last_name = 'Bernhard'",
            "question": "What is the total amount of moeny paid by the customer Carole Bernhard?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT sum( T1.amount_payment ) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Carole' AND T2.last_name = 'Bernhard'",
            "question": "How much in total does customer with first name as Carole and last name as Bernhard paid?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "What is the zip code of the customer Carole Bernhard?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "What is zip code of customer with first name as Carole and last name as Bernhard?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "What is the country in which the customer Carole Bernhard lived?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT sum( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "How much money did Lucas Mancini spend?",
            "ted": 0.075
        },
        {
            "db_id": "driving_school",
            "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = 'Carole' AND T1.last_name = 'Bernhard'",
            "question": "Which country does customer with first name as Carole and last name as Bernhard lived in?",
            "ted": 0.075
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT sum( Spent ) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = 'Linda' AND Student.Lname = 'Smith'",
            "question": "How long does student Linda Smith spend on the restaurant in total?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'KAWA' AND T2.lastname = 'GORDON'",
            "question": "Find the number of students taught by the teacher KAWA GORDON.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'KAWA' AND T2.lastname = 'GORDON'",
            "question": "How many students does KAWA GORDON teaches?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'LORIA' AND T2.lastname = 'ONDERSMA'",
            "question": "Count the number of students the teacher LORIA ONDERSMA teaches.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'LORIA' AND T2.lastname = 'ONDERSMA'",
            "question": "How many students does LORIA ONDERSMA teaches?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'GELL' AND T1.lastname = 'TAMI'",
            "question": "What are the last names of the teachers who teach the student called GELL TAMI?",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'GELL' AND T1.lastname = 'TAMI'",
            "question": "Find the last names of all the teachers that teach GELL TAMI.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'TARRING' AND T2.lastname = 'LEIA'",
            "question": "Find the number of students taught by TARRING LEIA.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'TARRING' AND T2.lastname = 'LEIA'",
            "question": "How many students are taught by teacher TARRING LEIA?",
            "ted": 0.075
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'",
            "question": "What are the names of all students who successfully tried out for the position of striker?",
            "ted": 0.075
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'",
            "question": "Find the names of the students who are in the position of striker and got a yes tryout decision.",
            "ted": 0.075
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T1.fname = 'Mark' AND T1.lname = 'Giuliano'",
            "question": "How many activities does Mark Giuliano participate in?",
            "ted": 0.075
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'",
            "question": "Find the female friends of Alice.",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = 'Steve' AND T1.last_name = 'Johnson'",
            "question": "How many customers does Steve Johnson support?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "How many orders does Luca Mancini have in his invoices?",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "Count the number of cards the customer with the first name Art and last name Turcotte has.",
            "ted": 0.075
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= '1975-01-01' AND T1.date_order_placed <= '1976-01-01'",
            "question": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??",
            "ted": 0.075
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= '1975-01-01' AND T1.date_order_placed <= '1976-01-01'",
            "question": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?",
            "ted": 0.075
        },
        {
            "db_id": "customers_campaigns_ecommerce",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE shipping_method_code = 'FedEx' AND order_status_code = 'Paid'",
            "question": "Show the names of customers having an order with shipping method FedEx and order status Paid.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = 'F' AND T2.Election_Cycle = 'Spring'",
            "question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "Return the number of accounts that the customer with the first name Art and last name Turcotte has.",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "How many accounts does the customer with first name Art and last name Turcotte have?",
            "ted": 0.075
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = 'Astrid' AND LastName = 'Gruber'",
            "question": "What are the invoice dates for customers with the first name Astrid and the last name Gruber?",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = 'M' AND T2.Election_Cycle = 'Fall'",
            "question": "Count the number of male students who had class senator votes in the fall election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = 'M' AND T2.Election_Cycle = 'Fall'",
            "question": "How many male (sex is M) students have class senator votes in the fall election cycle?",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'MADLOCK' AND T1.lastname = 'RAY'",
            "question": "Find the number of teachers who teach the student called MADLOCK RAY.",
            "ted": 0.075
        },
        {
            "db_id": "student_1",
            "query": "SELECT count( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = 'MADLOCK' AND T1.lastname = 'RAY'",
            "question": "How many teachers does the student named MADLOCK RAY have?",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "What is the average age of students who have city code \"NYC\" and have secretary votes for the spring election cycle?",
            "ted": 0.075
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female' AND T2.languages = 'bangla'",
            "question": "What is the country of origin of the artist who is female and produced a song in Bangla?",
            "ted": 0.075
        },
        {
            "db_id": "store_1",
            "query": "SELECT sum( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini'",
            "question": "What is the total amount of money spent by Lucas Mancini?",
            "ted": 0.075
        },
        {
            "db_id": "network_2",
            "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'",
            "question": "What are all the friends of Alice who are female?",
            "ted": 0.075
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'Female' AND T2.languages = 'bangla'",
            "question": "What countries are the female artists who sung in the language Bangla from?",
            "ted": 0.075
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = 'Astrid' AND LastName = 'Gruber'",
            "question": "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber.",
            "ted": 0.075
        },
        {
            "db_id": "voter_2",
            "query": "SELECT count( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = 'NYC' AND T2.Election_Cycle = 'Spring'",
            "question": "Which students live in the city with code \"NYC\" and have class senator votes in the spring election cycle? Count the numbers.",
            "ted": 0.075
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Art' AND T2.customer_last_name = 'Turcotte'",
            "question": "How many cards does customer Art Turcotte have?",
            "ted": 0.075
        },
        {
            "db_id": "network_2",
            "query": "SELECT DISTINCT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' OR T2.friend = 'Alice'",
            "question": "What are the different names and ages of every friend of either Dan or alice?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "network_2",
            "query": "SELECT DISTINCT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' OR T2.friend = 'Alice'",
            "question": "Find the name and age of the person who is a friend of Dan or Alice.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT DISTINCT T1.fname , T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = 'Milk' OR T2.Allergy = 'Cat'",
            "question": "What are the distinct first names and cities of the students who have allergy either to milk or to cat?",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT DISTINCT T1.fname , T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = 'Milk' OR T2.Allergy = 'Cat'",
            "question": "Find the different first names and cities of the students who have allergy to milk or cat.",
            "ted": 0.09090909090909091
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",
            "question": "What are the names of all students taking a course who received an A or C?",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = 'Football' OR T1.SportName = 'Lacrosse'",
            "question": "What is the first and last name of all students who play Football or Lacrosse?",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",
            "question": "Find names of all students who took some course and got A or C.",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "game_1",
            "query": "SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = 'Football' OR T1.SportName = 'Lacrosse'",
            "question": "Find the last and first name of students who are playing Football or Lacrosse.",
            "ted": 0.09523809523809523
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'voluptatem' AND T1.date_problem_reported > '1995'",
            "question": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?",
            "ted": 0.1
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'White' AND T2.score > 90",
            "question": "Find the the grape whose white color grapes are used to produce wines with scores higher than 90.",
            "ted": 0.1
        },
        {
            "db_id": "wine_1",
            "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'White' AND T2.score > 90",
            "question": "Find the white grape used to produce wines with scores above 90.",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE YEAR = 2009 OR YEAR = 2010",
            "question": "What are the names of the students who took classes in 2009 or 2010?",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE YEAR = 2009 OR YEAR = 2010",
            "question": "Find the name of students who took any class in the years of 2009 and 2010.",
            "ted": 0.1
        },
        {
            "db_id": "soccer_1",
            "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing > 90 AND T2.preferred_foot = 'right'",
            "question": "List the names of all players who have a crossing score higher than 90 and prefer their right foot.",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'voluptatem' AND T1.date_problem_reported > '1995'",
            "question": "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?",
            "ted": 0.1
        },
        {
            "db_id": "formula_1",
            "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = 'Spain' AND T1.year > 2000",
            "question": "What are the names of all races held after 2000 in Spain?",
            "ted": 0.1
        },
        {
            "db_id": "formula_1",
            "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = 'Spain' AND T1.year > 2000",
            "question": "What are the unique names of races that held after 2000 and the circuits were in Spain?",
            "ted": 0.1
        }
    ],
    "SELECT count( * ) FROM country WHERE continent = 'Africa'": [
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Addresses WHERE state_province_county = 'Georgia'",
            "question": "How many employees live in Georgia?",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT count( * ) FROM participants WHERE participant_type_code = 'Organizer'",
            "question": "How many participants belong to the type 'Organizer'?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM customer WHERE active = '1'",
            "question": "Count the number of customers who are active.",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games WHERE gtype = 'Massively multiplayer online game'",
            "question": "How many video games have type Massively multiplayer online game?",
            "ted": 0.0
        },
        {
            "db_id": "game_1",
            "query": "SELECT count( * ) FROM Video_games WHERE gtype = 'Massively multiplayer online game'",
            "question": "Count the number of video games with Massively multiplayer online game type .",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( * ) FROM Person WHERE gender = 'female'",
            "question": "How many females are in the network?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products WHERE product_category_code = 'Seeds'",
            "question": "Count the number of products in the category 'Seeds'.",
            "ted": 0.0
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT count( * ) FROM member WHERE Membership_card = 'Black'",
            "question": "How many members have the black membership card?",
            "ted": 0.0
        },
        {
            "db_id": "network_2",
            "query": "SELECT count( * ) FROM Person WHERE gender = 'female'",
            "question": "How many females does this network has?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT count( * ) FROM products WHERE product_category_code = 'Seeds'",
            "question": "How many products are there under the category \"Seeds\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM DEPARTMENT WHERE Division = 'AS'",
            "question": "What is the number of departments in Division \"AS\"?",
            "ted": 0.0
        },
        {
            "db_id": "college_3",
            "query": "SELECT count( * ) FROM DEPARTMENT WHERE Division = 'AS'",
            "question": "How many departments are in the division AS?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy WHERE Allergy = 'Cat'",
            "question": "How many students are affected by cat allergies?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Has_allergy WHERE Allergy = 'Cat'",
            "question": "How many students have cat allergies?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Project_outcomes WHERE outcome_code = 'Patent'",
            "question": "How many patents outcomes were listed for all the projects?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Project_outcomes WHERE outcome_code = 'Patent'",
            "question": "How many Patent outcomes are generated from all the projects?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) FROM manufacturers WHERE founder = 'Andy'",
            "question": "How many companies were created by Andy?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM tryout WHERE pPos = 'goalie'",
            "question": "What is the number of students playing as a goalie?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM tryout WHERE pPos = 'goalie'",
            "question": "How many students whose are playing the role of goalie?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT count( * ) FROM ADDRESSES WHERE zip_postcode = '197'",
            "question": "How many addresses have zip code 197?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customer_orders WHERE order_details = 'Second time'",
            "question": "How many orders have detail \"Second time\"?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( * ) FROM customer_orders WHERE order_details = 'Second time'",
            "question": "Tell me the number of orders with \"Second time\" as order detail.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT count( * ) FROM architect WHERE gender = 'female'",
            "question": "How many architects are female?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM tryout WHERE decision = 'yes'",
            "question": "How many students received a yes from tryouts?",
            "ted": 0.0
        },
        {
            "db_id": "company_1",
            "query": "SELECT count( * ) FROM dependent WHERE sex = 'F'",
            "question": "how many female dependents are there?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM customer WHERE active = '1'",
            "question": "How many customers have an active value of 1?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM classroom WHERE building = 'Lamberton'",
            "question": "How many rooms does the Lamberton building have?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM classroom WHERE building = 'Lamberton'",
            "question": "Count the number of classrooms in Lamberton.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers WHERE city = 'Prague'",
            "question": "How many customers live in Prague city?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers WHERE city = 'Prague'",
            "question": "How many customers live in the city of Prague?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers WHERE state = 'CA'",
            "question": "How many customers in state of CA?",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT count( * ) FROM addresses WHERE country = 'USA'",
            "question": "How many addresses are there in country USA?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM customers WHERE state = 'CA'",
            "question": "How many customers are from California?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor WHERE prof_high_degree = 'Ph.D.'",
            "question": "How many professors do have a Ph.D. degree?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor WHERE prof_high_degree = 'Ph.D.'",
            "question": "What is the total number of professors with a Ph.D. ?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM instruments WHERE instrument = 'drums'",
            "question": "How many songs use drums as an instrument?",
            "ted": 0.0
        },
        {
            "db_id": "company_employee",
            "query": "SELECT count( * ) FROM company WHERE Headquarters = 'USA'",
            "question": "How many companies are headquartered in the US?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards WHERE card_type_code = 'Debit'",
            "question": "How many debit cards do we have?",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT count( * ) FROM Customers_cards WHERE card_type_code = 'Debit'",
            "question": "Count the number of customer cards of the type Debit.",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses WHERE county = 'Los Angeles'",
            "question": "How many campuses are there in Los Angeles county?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT count( * ) FROM instruments WHERE instrument = 'drums'",
            "question": "How many songs have used the instrument \"drums\"?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT count( * ) FROM WINE WHERE Winery = 'Robert Biale'",
            "question": "Count the number of wines produced at Robert Biale winery.",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT COUNT( * ) FROM station WHERE city = 'Mountain View'",
            "question": "How many stations are in Mountain View?",
            "ted": 0.0
        },
        {
            "db_id": "bike_1",
            "query": "SELECT COUNT( * ) FROM station WHERE city = 'Mountain View'",
            "question": "How many stations does Mountain View city has?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT count( * ) FROM APPELLATIONS WHERE County = 'Napa'",
            "question": "How many appelations are in Napa Country?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT count( * ) FROM APPELLATIONS WHERE County = 'Napa'",
            "question": "Count the number of appelations in Napa County.",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM employees WHERE country = 'Canada'",
            "question": "How many employees are living in Canada?",
            "ted": 0.0
        },
        {
            "db_id": "store_1",
            "query": "SELECT count( * ) FROM employees WHERE country = 'Canada'",
            "question": "How many employees live in Canada?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT count( * ) FROM Documents WHERE document_status_code = 'done'",
            "question": "How many documents have the status code done?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM address WHERE district = 'California'",
            "question": "How many addresses are in the district of California?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons WHERE lesson_status_code = 'Cancelled'",
            "question": "How many lessons have been cancelled?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT count( * ) FROM address WHERE district = 'California'",
            "question": "Count the number of addressed in the California district.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT count( * ) FROM WINE WHERE Winery = 'Robert Biale'",
            "question": "How many wines are produced at Robert Biale winery?",
            "ted": 0.0
        },
        {
            "db_id": "csu_1",
            "query": "SELECT count( * ) FROM campuses WHERE county = 'Los Angeles'",
            "question": "How many campuses exist are in the county of LA?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Lessons WHERE lesson_status_code = 'Cancelled'",
            "question": "How many lessons were in cancelled state?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) FROM manufacturers WHERE founder = 'Andy'",
            "question": "Return the number of companies created by Andy.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM park WHERE city = 'Atlanta'",
            "question": "How many parks does Atlanta city have?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines WHERE country = 'Russia'",
            "question": "What is the number of airlines based in Russia?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM medicine WHERE FDA_approved = 'No'",
            "question": "How many medicines have the FDA approval status 'No' ?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT count( * ) FROM medicine WHERE FDA_approved = 'No'",
            "question": "How many medicines were not approved by the FDA?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT count( * ) FROM phone WHERE Company_name = 'Nokia Corporation'",
            "question": "How many phone hardware models are produced by the company named \"Nokia Corporation\"?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( * ) FROM airlines WHERE country = 'Russia'",
            "question": "How many airlines does Russia has?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT count( * ) FROM artist WHERE country = 'Bangladesh'",
            "question": "How many Bangladeshi artists are listed?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Addresses WHERE state_province_county = 'Georgia'",
            "question": "How many staff live in state Georgia?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM addresses WHERE state_province_county = 'Colorado'",
            "question": "How many cities are there in state \"Colorado\"?",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT count( * ) FROM addresses WHERE state_province_county = 'Colorado'",
            "question": "Count the number of cities in the state of Colorado.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM park WHERE state = 'NY'",
            "question": "How many parks are there in the state of NY?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM park WHERE state = 'NY'",
            "question": "Show me the number of parks the state of NY has.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Student_Tests_Taken WHERE test_result = 'Fail'",
            "question": "Count the number of tests with \"Fail\" result.",
            "ted": 0.0
        },
        {
            "db_id": "e_learning",
            "query": "SELECT count( * ) FROM Student_Tests_Taken WHERE test_result = 'Fail'",
            "question": "How many tests have result \"Fail\"?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Allergy_type WHERE allergytype = 'animal'",
            "question": "How many animal type allergies exist?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT count( * ) FROM artist WHERE country = 'Bangladesh'",
            "question": "How many artists are from Bangladesh?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM park WHERE city = 'Atlanta'",
            "question": "How many parks are there in Atlanta city?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM team_franchise WHERE active = 'Y'",
            "question": "How many team franchises are active, with active value 'Y'?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms WHERE bedType = 'King'",
            "question": "How many rooms have a king bed?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT count( * ) FROM chip_model WHERE wifi = 'No'",
            "question": "Count the number of chip model that do not have wifi.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT count( * ) FROM chip_model WHERE wifi = 'No'",
            "question": "How many models do not have the wifi function?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT count( * ) FROM tryout WHERE decision = 'yes'",
            "question": "How many students got accepted after the tryout?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Rooms WHERE bedType = 'King'",
            "question": "Find the number of rooms with a king bed.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff WHERE first_name = 'Ludie'",
            "question": "How many employees have a first name of Ludie?",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT count( * ) FROM Staff WHERE first_name = 'Ludie'",
            "question": "How many staff have the first name Ludie?",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club WHERE clublocation = 'HHH'",
            "question": "Count the number of clubs located at \"HHH\".",
            "ted": 0.0
        },
        {
            "db_id": "club_1",
            "query": "SELECT count( * ) FROM club WHERE clublocation = 'HHH'",
            "question": "How many clubs are located at \"HHH\"?",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Allergy_type WHERE allergytype = 'animal'",
            "question": "How many allergies have type animal?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM team_franchise WHERE active = 'Y'",
            "question": "Find the number of team franchises that are active (have 'Y' as \"active\" information).",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM classroom WHERE building != 'Lamberton'",
            "question": "How many classrooms are not in Lamberton?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "program_share",
            "query": "SELECT sum( Share_in_percent ) FROM channel WHERE OWNER = 'CCTV'",
            "question": "What is the total share (in percent) of all the channels owned by CCTV?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( Age ) FROM STUDENT WHERE Sex = 'F'",
            "question": "What is the average age of female (sex is F) students?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "voter_2",
            "query": "SELECT avg( Age ) FROM STUDENT WHERE Sex = 'F'",
            "question": "Find the average age of female students.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( no_of_customers ) FROM bank WHERE state = 'Utah'",
            "question": "What is the average number of customers across banks in the state of Utah?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT avg( no_of_customers ) FROM bank WHERE state = 'Utah'",
            "question": "Find the average number of customers in all banks of Utah state.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) FROM manufacturers WHERE headquarter = 'Austin'",
            "question": "Find the total revenue created by the companies whose headquarter is located at Austin.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "swimming",
            "query": "SELECT count( * ) FROM stadium WHERE country != 'Russia'",
            "question": "How many stadiums are not in country \"Russia\"?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT avg( product_price ) FROM products WHERE product_type_code = 'Clothes'",
            "question": "What is the average price of clothes?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT avg( Order_Quantity ) FROM Invoices WHERE payment_method_code = 'MasterCard'",
            "question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( no_of_customers ) FROM bank WHERE city = 'New York City'",
            "question": "Find the number of customers in the banks at New York City.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) FROM manufacturers WHERE headquarter = 'Austin'",
            "question": "What is the sum of revenue from companies with headquarters in Austin?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_4",
            "query": "SELECT max( elevation ) FROM airports WHERE country = 'Iceland'",
            "question": "What is the highest elevation of an airport in the country of Iceland?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "program_share",
            "query": "SELECT sum( Share_in_percent ) FROM channel WHERE OWNER = 'CCTV'",
            "question": "find the total percentage share of all channels owned by CCTV.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT avg( Order_Quantity ) FROM Invoices WHERE payment_method_code = 'MasterCard'",
            "question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "mountain_photos",
            "query": "SELECT avg( prominence ) FROM mountain WHERE country = 'Morocco'",
            "question": "What are the average prominence of the mountains in country 'Morocco'?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "tracking_share_transactions",
            "query": "SELECT avg( amount_of_transaction ) FROM TRANSACTIONS WHERE transaction_type_code = 'SALE'",
            "question": "Show the average amount of transactions with type code \"SALE\".",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "department_store",
            "query": "SELECT avg( product_price ) FROM products WHERE product_type_code = 'Clothes'",
            "question": "Find the average price of all product clothes.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( no_of_customers ) FROM bank WHERE city = 'New York City'",
            "question": "What is the total number of customers who use banks in New York City?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( * ) FROM classroom WHERE building != 'Lamberton'",
            "question": "Count the number of rooms that are not in the Lamberton building.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( enr ) FROM College WHERE state = 'FL'",
            "question": "What is average enrollment of colleges in the state FL?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "climbing",
            "query": "SELECT max( Points ) FROM climber WHERE Country = 'United Kingdom'",
            "question": "What is the maximum point for climbers whose country is United Kingdom?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "climbing",
            "query": "SELECT max( Points ) FROM climber WHERE Country = 'United Kingdom'",
            "question": "Return the maximum number of points for climbers from the United Kingdom.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT sum( maxOccupancy ) FROM Rooms WHERE decor = 'modern'",
            "question": "What is the total number of people who could stay in the modern rooms in this inn?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT avg( enr ) FROM College WHERE state = 'FL'",
            "question": "What is average number of students enrolled in Florida colleges?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_company",
            "query": "SELECT avg( velocity ) FROM flight WHERE pilot = 'Thompson'",
            "question": "What is the velocity of the pilot named 'Thompson'?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "flight_4",
            "query": "SELECT max( elevation ) FROM airports WHERE country = 'Iceland'",
            "question": "What is the maximum elevation of all airports in the country of Iceland?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT sum( maxOccupancy ) FROM Rooms WHERE decor = 'modern'",
            "question": "How many people in total can stay in the modern rooms of this inn?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartments WHERE apt_type_code = 'Studio'",
            "question": "What is the average number of rooms of apartments with type code \"Studio\"?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT avg( room_count ) FROM Apartments WHERE apt_type_code = 'Studio'",
            "question": "Find the average room count of the apartments that have the \"Studio\" type code.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT count( * ) FROM member WHERE address != 'Hartford'",
            "question": "How many members are not living in Hartford?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT sum( beds ) FROM Rooms WHERE bedtype = 'King'",
            "question": "How many king beds are there?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "inn_1",
            "query": "SELECT sum( beds ) FROM Rooms WHERE bedtype = 'King'",
            "question": "Find the total number of king beds available.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT PROF_NUM ) FROM CLASS WHERE CRS_CODE = 'ACCT-211'",
            "question": "How many professors are teaching class with code ACCT-211?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( DISTINCT city ) FROM airports WHERE country = 'Greenland'",
            "question": "In how many cities are there airports in the country of Greenland?",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT program_id ) FROM broadcast WHERE time_of_day = 'Night'",
            "question": "find the number of different programs that are broadcast during night time.",
            "ted": 0.1
        },
        {
            "db_id": "program_share",
            "query": "SELECT count( DISTINCT program_id ) FROM broadcast WHERE time_of_day = 'Night'",
            "question": "How many distinct programs are broadcast at \"Night\" time?",
            "ted": 0.1
        },
        {
            "db_id": "flight_4",
            "query": "SELECT count( DISTINCT city ) FROM airports WHERE country = 'Greenland'",
            "question": "How many different cities do have some airport in the country of Greenland?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT PROF_NUM ) FROM CLASS WHERE CRS_CODE = 'ACCT-211'",
            "question": "How many professors teach a class with the code ACCT-211?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_section ) FROM CLASS WHERE crs_code = 'ACCT-211'",
            "question": "How many sections does course ACCT-211 has?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( DISTINCT customer_id ) FROM customer_orders WHERE order_status = 'Cancelled'",
            "question": "How many customers have at least one order with status \"Cancelled\"?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT class_section ) FROM CLASS WHERE crs_code = 'ACCT-211'",
            "question": "What is the number of different class sections offered in the course ACCT-211?",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT course_id ) FROM course WHERE dept_name = 'Physics'",
            "question": "How many different courses offered by Physics department?",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT count( DISTINCT customer_id ) FROM customer_orders WHERE order_status = 'Cancelled'",
            "question": "Return the number of customers who have at least one order with \"Cancelled\" status.",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT COUNT( DISTINCT StuID ) FROM ENROLLED_IN WHERE Grade = 'B'",
            "question": "Find the number of students that have at least one grade \"B\".",
            "ted": 0.1
        },
        {
            "db_id": "college_2",
            "query": "SELECT count( DISTINCT course_id ) FROM course WHERE dept_name = 'Physics'",
            "question": "Count the number of courses in the Physics department.",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_address ) FROM department WHERE school_code = 'BUS'",
            "question": "How many different locations does the school with code BUS has?",
            "ted": 0.1
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( DISTINCT dept_address ) FROM department WHERE school_code = 'BUS'",
            "question": "What are the different locations of the school with the code BUS?",
            "ted": 0.1
        },
        {
            "db_id": "college_3",
            "query": "SELECT COUNT( DISTINCT StuID ) FROM ENROLLED_IN WHERE Grade = 'B'",
            "question": "How many students have had at least one \"B\" grade?",
            "ted": 0.1
        }
    ],
    "SELECT Population , Region FROM country WHERE Name = 'Wallis and Futuna'": [
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
            "question": "What are the phone and email for customer Harold?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT city , state FROM bank WHERE bname = 'morningside'",
            "question": "What city and state is the bank with the name morningside in?",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT chip_model , screen_mode FROM phone WHERE Hardware_Model_name = 'LG-P760'",
            "question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
            "question": "What are the names and trade names of the medcines that are FDA approved?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = 'Democratic'",
            "question": "Who are the lieutenant governor and comptroller from the democratic party?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_name , document_type_description FROM Ref_document_types WHERE document_type_code = 'RV'",
            "question": "What is the name and description for document type code RV?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM EMPLOYEE WHERE City = 'Calgary'",
            "question": "What are the first names and last names of the employees who live in Calgary city.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT email_address , date_of_birth FROM Customers WHERE first_name = 'Carole'",
            "question": "What are the email addresses and date of births for all customers who have a first name of Carole?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM EMPLOYEE WHERE City = 'Calgary'",
            "question": "Find the full names of employees living in the city of Calgary.",
            "ted": 0.0
        },
        {
            "db_id": "architecture",
            "query": "SELECT name , built_year FROM mill WHERE TYPE = 'Grondzeiler'",
            "question": "What are the names and year of construction for the mills of 'Grondzeiler' type?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",
            "question": "What is the description for the CIS-220 and how many credits does it have?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Open_Date , Open_Year FROM shop WHERE Shop_Name = 'Apple'",
            "question": "What are the open dates and years for the shop named Apple?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",
            "question": "How many credits does course CIS-220 have, and what its description?",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , bedType FROM Rooms WHERE decor = 'traditional'",
            "question": "What are the bed type and name of all the rooms with traditional decor?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_name , role_description FROM ROLES WHERE role_code = 'MG'",
            "question": "What are the name and description for role code \"MG\"?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_address , building_phone FROM Apartment_Buildings WHERE building_manager = 'Brenden'",
            "question": "What are the address and phone number of the buildings managed by \"Brenden\"?",
            "ted": 0.0
        },
        {
            "db_id": "device",
            "query": "SELECT Open_Date , Open_Year FROM shop WHERE Shop_Name = 'Apple'",
            "question": "List the open date of open year of the shop named \"Apple\".",
            "ted": 0.0
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName , bedType FROM Rooms WHERE decor = 'traditional'",
            "question": "List the type of bed and name of all traditional rooms.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT document_type_name , document_type_description FROM Ref_document_types WHERE document_type_code = 'RV'",
            "question": "Give me the name and description of the document type code RV.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE POSITION = 'Defender'",
            "question": "What are the draft pick numbers and draft classes for players who play the Defender position?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'QM-261'",
            "question": "Find the description and credit for the course QM-261?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE POSITION = 'Defender'",
            "question": "Show the draft pick numbers and draft classes of players whose positions are defenders.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT date_valid_from , date_valid_to FROM Customers_cards WHERE card_number = '4560596484842'",
            "question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT crs_credit , crs_description FROM course WHERE crs_code = 'QM-261'",
            "question": "What is the course description and number of credits for QM-261?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT role_name , role_description FROM ROLES WHERE role_code = 'MG'",
            "question": "Find the name and description of the role with code \"MG\".",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT payment_method_code , party_phone FROM parties WHERE party_email = 'enrico09@example.com'",
            "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code , typical_buying_price FROM products WHERE product_name = 'cumin'",
            "question": "Return the category code and typical price of 'cumin'.",
            "ted": 0.0
        },
        {
            "db_id": "driving_school",
            "query": "SELECT email_address , date_of_birth FROM Customers WHERE first_name = 'Carole'",
            "question": "List email address and birthday of customer whose first name as Carole.",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT International_Passengers , Domestic_Passengers FROM airport WHERE Airport_Name = 'London Heathrow'",
            "question": "How many international and domestic passengers are there in the airport London Heathrow?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT city , state FROM bank WHERE bname = 'morningside'",
            "question": "Find the city and state of the bank branch named morningside.",
            "ted": 0.0
        },
        {
            "db_id": "customer_deliveries",
            "query": "SELECT customer_email , customer_name FROM customers WHERE payment_method = 'Visa'",
            "question": "List the names and emails of customers who payed by Visa card.",
            "ted": 0.0
        },
        {
            "db_id": "browser_web",
            "query": "SELECT id , market_share FROM browser WHERE name = 'Safari'",
            "question": "What is the id and market share of the browser Safari?",
            "ted": 0.0
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT date_incident_start , date_incident_end FROM Behavior_Incident WHERE incident_type_code = 'NOISE'",
            "question": "What are the start and end dates for incidents with incident type code \"NOISE\"?",
            "ted": 0.0
        },
        {
            "db_id": "aircraft",
            "query": "SELECT International_Passengers , Domestic_Passengers FROM airport WHERE Airport_Name = 'London Heathrow'",
            "question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'researcher'",
            "question": "When do all the researcher role staff start to work, and when do they stop working?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'researcher'",
            "question": "When did researchers start and stop working?",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM CUSTOMER WHERE Email = 'luisg@embraer.com.br'",
            "question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT forename , surname FROM drivers WHERE nationality = 'German'",
            "question": "What is the first and last name of all the German drivers?",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "What is the product category description and unit of measurement of category \"Herbs\"?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_name , document_id FROM Documents WHERE document_type_code = 'BK'",
            "question": "What are the names and ids of documents that have the type code BK?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT document_name , document_id FROM Documents WHERE document_type_code = 'BK'",
            "question": "Find names and ids of all documents with document type code BK.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT fname , lname FROM Faculty WHERE Rank = 'Instructor'",
            "question": "Show the first name and last name for all the instructors.",
            "ted": 0.0
        },
        {
            "db_id": "customers_card_transactions",
            "query": "SELECT date_valid_from , date_valid_to FROM Customers_cards WHERE card_number = '4560596484842'",
            "question": "What are the valid from and valid to dates for the card with the number 4560596484842?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
            "question": "Show the id and salary of Mark Young.",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT name_first , name_last FROM player WHERE death_year = ''",
            "question": "What are the first name and last name of the players whose death record is empty?",
            "ted": 0.0
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT name_first , name_last FROM player WHERE death_year = ''",
            "question": "Find all the players' first name and last name who have empty death record.",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT school , LOCATION FROM university WHERE affiliation = 'Public'",
            "question": "List all public schools and their locations.",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = 'Herbs'",
            "question": "Return the description and unit of measurement for products in the 'Herbs' category.",
            "ted": 0.0
        },
        {
            "db_id": "e_government",
            "query": "SELECT payment_method_code , party_phone FROM parties WHERE party_email = 'enrico09@example.com'",
            "question": "Find the payment method and phone of the party with email \"enrico09@example.com\".",
            "ted": 0.0
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",
            "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT address_line_1 , address_line_2 FROM customers WHERE email_address = 'vbogisich@example.org'",
            "question": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT phone , postal_code FROM address WHERE address = '1031 Daugavpils Parkway'",
            "question": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_name , location_description FROM Ref_locations WHERE location_code = 'x'",
            "question": "What are the name and description for location code x?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT location_name , location_description FROM Ref_locations WHERE location_code = 'x'",
            "question": "Give me the name and description of the location with code x.",
            "ted": 0.0
        },
        {
            "db_id": "chinook_1",
            "query": "SELECT FirstName , LastName FROM CUSTOMER WHERE Email = 'luisg@embraer.com.br'",
            "question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?",
            "ted": 0.0
        },
        {
            "db_id": "flight_1",
            "query": "SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",
            "question": "What is the id and salary of the employee named Mark Young?",
            "ted": 0.0
        },
        {
            "db_id": "sakila_1",
            "query": "SELECT phone , postal_code FROM address WHERE address = '1031 Daugavpils Parkway'",
            "question": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT fname , lname FROM Faculty WHERE Rank = 'Instructor'",
            "question": "What are the first name and last name of all the instructors?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , department_id FROM employees WHERE last_name = 'McEwen'",
            "question": "Display the first name, and department number for all employees whose last name is \"McEwen\".",
            "ted": 0.0
        },
        {
            "db_id": "formula_1",
            "query": "SELECT forename , surname FROM drivers WHERE nationality = 'German'",
            "question": "Find the forename and surname of drivers whose nationality is German?",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT first_name , department_id FROM employees WHERE last_name = 'McEwen'",
            "question": "What are the first names and department numbers for employees with last name McEwen?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = 'Harold'",
            "question": "Find the phone number and email address of customer \"Harold\".",
            "ted": 0.0
        },
        {
            "db_id": "products_gen_characteristics",
            "query": "SELECT product_category_code , typical_buying_price FROM products WHERE product_name = 'cumin'",
            "question": "What is the category and typical buying price  of the product with name \"cumin\"?",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT building_address , building_phone FROM Apartment_Buildings WHERE building_manager = 'Brenden'",
            "question": "Show the addresses and phones of all the buildings managed by \"Brenden\".",
            "ted": 0.0
        },
        {
            "db_id": "university_basketball",
            "query": "SELECT school , LOCATION FROM university WHERE affiliation = 'Public'",
            "question": "What are the public schools and what are their locations?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT meter_200 , meter_300 FROM swimmer WHERE nationality = 'Australia'",
            "question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".",
            "ted": 0.0
        },
        {
            "db_id": "customer_complaints",
            "query": "SELECT address_line_1 , address_line_2 FROM customers WHERE email_address = 'vbogisich@example.org'",
            "question": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = 'Democratic'",
            "question": "Show the lieutenant governor and comptroller from the democratic party.",
            "ted": 0.0
        },
        {
            "db_id": "hr_1",
            "query": "SELECT salary , manager_id FROM employees WHERE manager_id != 'null'",
            "question": "Find the salary and manager number for those employees who is working under a manager.",
            "ted": 0.05
        },
        {
            "db_id": "gas_company",
            "query": "SELECT company , main_industry FROM company WHERE headquarters != 'USA'",
            "question": "Show the company name and the main industry for all companies whose headquarters are not from USA.",
            "ted": 0.05
        },
        {
            "db_id": "hr_1",
            "query": "SELECT salary , manager_id FROM employees WHERE manager_id != 'null'",
            "question": "What are the salaries and manager ids for employees who have managers?",
            "ted": 0.05
        },
        {
            "db_id": "gas_company",
            "query": "SELECT company , main_industry FROM company WHERE headquarters != 'USA'",
            "question": "What are the companies and main industries of all companies that are not headquartered in the United States?",
            "ted": 0.05
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Player_name , residence FROM player WHERE Occupation != 'Researcher'",
            "question": "List the name and residence for players whose occupation is not \"Researcher\".",
            "ted": 0.05
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name , year_join FROM artist WHERE country != 'United States'",
            "question": "Show all artist names and the year joined who are not from United States.",
            "ted": 0.05
        },
        {
            "db_id": "train_station",
            "query": "SELECT name , total_passengers FROM station WHERE LOCATION != 'London'",
            "question": "Show the names and total passengers for all train stations not in London.",
            "ted": 0.05
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT name , year_join FROM artist WHERE country != 'United States'",
            "question": "What are the names and year of joining for artists that do not have the country \"United States\"?",
            "ted": 0.05
        },
        {
            "db_id": "browser_web",
            "query": "SELECT name , operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'",
            "question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?",
            "ted": 0.05
        },
        {
            "db_id": "restaurant_1",
            "query": "SELECT Fname , Lname FROM Student WHERE Major = 600",
            "question": "List all students' first names and last names who majored in 600.",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
            "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
            "question": "Return the names and ids of customers who have TN in their address.",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT title , Studio FROM film WHERE Studio LIKE '%Universal%'",
            "question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".",
            "ted": 0.1
        },
        {
            "db_id": "department_management",
            "query": "SELECT head_id , name FROM head WHERE name LIKE '%Ha%'",
            "question": "Which head's name has the substring 'Ha'? List the id and name.",
            "ted": 0.1
        },
        {
            "db_id": "film_rank",
            "query": "SELECT title , Studio FROM film WHERE Studio LIKE '%Universal%'",
            "question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , salary FROM Employee WHERE eid = 242518965",
            "question": "What is the name and salary for employee with id 242518965?",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , salary FROM Employee WHERE eid = 242518965",
            "question": "What is the name and salary of the employee with the id 242518965?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_date FROM problem_log WHERE problem_id = 10",
            "question": "Find all the ids and dates of the logs for the problem whose id is 10.",
            "ted": 0.1
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT name , email FROM user_profiles WHERE name LIKE '%Swift%'",
            "question": "Find the name and email of the user whose name contains the word \u2018Swift\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "phone_1",
            "query": "SELECT Hardware_Model_name , Company_name FROM phone WHERE Accreditation_type LIKE 'Full'",
            "question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.",
            "ted": 0.1
        },
        {
            "db_id": "department_store",
            "query": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE '%TN%'",
            "question": "What are the names and ids of customers whose address contains TN?",
            "ted": 0.1
        },
        {
            "db_id": "tracking_software_problems",
            "query": "SELECT problem_log_id , log_entry_date FROM problem_log WHERE problem_id = 10",
            "question": "For the problem with id 10, return the ids and dates of its problem logs.",
            "ted": 0.1
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT physician , department FROM affiliated_with WHERE primaryaffiliation = 1",
            "question": "What are each physician's employee id and department id primarily affiliated.",
            "ted": 0.1
        },
        {
            "db_id": "hospital_1",
            "query": "SELECT physician , department FROM affiliated_with WHERE primaryaffiliation = 1",
            "question": "List the physicians' employee ids together with their primary affiliation departments' ids.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE '4%'",
            "question": "Find the state and country of all cities with post code starting with 4.",
            "ted": 0.1
        },
        {
            "db_id": "customers_and_addresses",
            "query": "SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE '4%'",
            "question": "What are the state and country of all the cities that have post codes starting with 4.\\",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft WHERE aid = 12",
            "question": "What is the name and distance for the aircraft that has an id of 12?",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",
            "question": "What are the names and account balances of customers with the letter a in their names?",
            "ted": 0.1
        },
        {
            "db_id": "loan_1",
            "query": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",
            "question": "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019.",
            "ted": 0.1
        },
        {
            "db_id": "flight_1",
            "query": "SELECT name , distance FROM Aircraft WHERE aid = 12",
            "question": "What is the name and distance for aircraft with id 12?",
            "ted": 0.1
        },
        {
            "db_id": "dorm_1",
            "query": "SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
            "question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?",
            "ted": 0.1
        }
    ],
    "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Polish' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Somali'": [
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed' INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic' INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Liberal'",
            "question": "Find the committees that have delegates both from from the democratic party and the liberal party.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Democratic' INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Liberal'",
            "question": "Which committees have delegates from both democratic party and liberal party?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film'",
            "question": "Give me the description of the service type that offers not only the photo product but also the film product.",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Appropriations' INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Economic Matters'",
            "question": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?",
            "ted": 0.0
        },
        {
            "db_id": "election",
            "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Appropriations' INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = 'Economic Matters'",
            "question": "What are the names of parties that have both delegates on \"Appropriations\" committee and",
            "ted": 0.0
        },
        {
            "db_id": "local_govt_in_alabama",
            "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'",
            "question": "Which services type had both successful and failure event details?",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent'",
            "question": "What are the details of the project that is producing both patents and papers as outcomes?",
            "ted": 0.0
        },
        {
            "db_id": "swimming",
            "query": "SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT T1.name FROM swimmer AS T1 JOIN record AS T2 ON T1.id = T2.swimmer_id WHERE RESULT = 'Loss'",
            "question": "Find the names of the swimmers who have both \"win\" and \"loss\" results in the record.",
            "ted": 0.0
        },
        {
            "db_id": "phone_1",
            "query": "SELECT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Accreditation_type = 'Provisional' INTERSECT SELECT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Accreditation_type = 'Full'",
            "question": "Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent'",
            "question": "List the project details of the project both producing patent and paper as outcomes.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'",
            "question": "Find the ids of the students who participate in Canoeing and Kayaking.",
            "ted": 0.0
        },
        {
            "db_id": "activity_1",
            "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'",
            "question": "Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".",
            "ted": 0.0
        },
        {
            "db_id": "tracking_orders",
            "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'On Road' INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'Shipped'",
            "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film'",
            "question": "What is the description of the service type which offers both the photo product and the film product?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning' INTERSECT SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Night'",
            "question": "what are the names of the channels that broadcast in both morning and night?",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'",
            "question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Morning' INTERSECT SELECT T1.name FROM channel AS T1 JOIN broadcast AS T2 ON T1.channel_id = T2.channel_id WHERE T2.time_of_day = 'Night'",
            "question": "Which channels broadcast both in the morning and at night? Give me the channel names.",
            "ted": 0.0
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Confirmed' INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = 'Provisional'",
            "question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"",
            "ted": 0.0
        },
        {
            "db_id": "customers_and_products_contacts",
            "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Part'",
            "question": "Show the names of customers who have both an order in completed status and an order in part status.",
            "ted": 0.0
        },
        {
            "db_id": "school_finance",
            "query": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Triton'",
            "question": "Show the names of donors who donated to both school \"Glenn\" and \"Triton.\"",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'",
            "question": "Find the name of product that is produced by both companies Creative Labs and Sony.",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Morning' INTERSECT SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Night'",
            "question": "Who are the owners of the programs that broadcast both in the morning and at night?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'",
            "question": "What are the names of products produced by both Creative Labs and Sony?",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'",
            "question": "Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261.",
            "ted": 0.0
        },
        {
            "db_id": "college_1",
            "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'",
            "question": "What is the first name of the professor who is teaching CIS-220 and QM-261?",
            "ted": 0.0
        },
        {
            "db_id": "twitter_1",
            "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = 'Mary' INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = 'Susan'",
            "question": "Find the id of users who are followed by Mary and Susan.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'",
            "question": "What are the names of customers who have taken both Mortgage and Auto loans?",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Midshipman' INTERSECT SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Lieutenant'",
            "question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'",
            "question": "Find the name of customers who have loans of both Mortgages and Auto.",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
            "question": "What are the dates for the documents with both 'GV' type and 'SF' type expenses?",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Forward' INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.",
            "ted": 0.0
        },
        {
            "db_id": "match_season",
            "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Forward' INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = 'Defender'",
            "question": "What are the names of countries that have both players with position forward and players with position defender?",
            "ted": 0.0
        },
        {
            "db_id": "products_for_hire",
            "query": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad'",
            "question": "What are the coupon amount of the coupons owned by both good and bad customers?",
            "ted": 0.0
        },
        {
            "db_id": "program_share",
            "query": "SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Morning' INTERSECT SELECT T1.owner FROM program AS T1 JOIN broadcast AS T2 ON T1.program_id = T2.program_id WHERE T2.Time_of_day = 'Night'",
            "question": "find the program owners that have some programs in both morning and night time.",
            "ted": 0.0
        },
        {
            "db_id": "flight_company",
            "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS T2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'",
            "question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.",
            "ted": 0.0
        },
        {
            "db_id": "ship_1",
            "query": "SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Midshipman' INTERSECT SELECT T1.name FROM ship AS T1 JOIN captain AS T2 ON T1.ship_id = T2.ship_id WHERE T2.rank = 'Lieutenant'",
            "question": "What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?",
            "ted": 0.0
        },
        {
            "db_id": "cre_Docs_and_Epenses",
            "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
            "question": "Give the dates of creation for documents that have both budget type codes 'GV' and 'SF'.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'",
            "question": "Find the names of states that have some college students playing in goalie and mid positions.",
            "ted": 0.0
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'",
            "question": "What are the names of all the states with college students playing in the mid position but no goalies?",
            "ted": 0.016129032258064516
        },
        {
            "db_id": "soccer_2",
            "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'",
            "question": "Find the names of states that have some college students playing in the mid position but not in the goalie position.",
            "ted": 0.016129032258064516
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 4",
            "question": "What are the names of all movies that received 3 or 4 stars?",
            "ted": 0.06451612903225806
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 4",
            "question": "What are the names of movies that get 3 star and 4 star?",
            "ted": 0.06451612903225806
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 4",
            "question": "What are the names of reviewers who had rated 3 star and 4 star?",
            "ted": 0.06451612903225806
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1",
            "question": "Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.",
            "ted": 0.06451612903225806
        },
        {
            "db_id": "apartment_rentals",
            "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1",
            "question": "Show the apartment numbers of apartments with unit status availability of both 0 and 1.",
            "ted": 0.06451612903225806
        },
        {
            "db_id": "movie_1",
            "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 4",
            "question": "What are the names of all reviewers that have given 3 or 4 stars for reviews?",
            "ted": 0.06451612903225806
        },
        {
            "db_id": "cre_Doc_Control_Systems",
            "query": "SELECT document_id FROM Documents WHERE document_status_code = 'done' AND document_type_code = 'Paper' INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS'",
            "question": "List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS.",
            "ted": 0.0967741935483871
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500",
            "question": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?",
            "ted": 0.0967741935483871
        },
        {
            "db_id": "epinions_1",
            "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > 8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating < 5",
            "question": "Find the titles of items that received both a rating higher than 8 and a rating below 5.",
            "ted": 0.0967741935483871
        },
        {
            "db_id": "music_4",
            "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2",
            "question": "Show the famous titles of the artists with both volumes that lasted more than 2 weeks on top and volumes that lasted less than 2 weeks on top.",
            "ted": 0.0967741935483871
        },
        {
            "db_id": "music_4",
            "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2",
            "question": "What are the famous titles of artists who have not only had volumes that spent more than 2 weeks on top but also volumes that spent less than 2 weeks on top?",
            "ted": 0.0967741935483871
        },
        {
            "db_id": "theme_gallery",
            "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500",
            "question": "Show the theme for exhibitions with both records of an attendance below 100 and above 500.",
            "ted": 0.0967741935483871
        }
    ],
    "SELECT sum( SurfaceArea ) FROM country WHERE Continent = 'Asia' OR Continent = 'North America'": [
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
            "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT sum( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'",
            "question": "Find the total budgets of the Marketing or Finance department.",
            "ted": 0.0
        },
        {
            "db_id": "college_2",
            "query": "SELECT sum( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'",
            "question": "What is the sum of budgets of the Marketing and Finance departments?",
            "ted": 0.0
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT sum( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
            "question": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
            "question": "What are the total account balances for each customer from Utah or Texas?",
            "ted": 0.0
        },
        {
            "db_id": "loan_1",
            "query": "SELECT sum( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'",
            "question": "Find the total account balance of each customer from Utah or Texas.",
            "ted": 0.0
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student WHERE city_code = 'HKG' OR city_code = 'CHI'",
            "question": "How many students live in HKG or CHI?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing'",
            "question": "Find the number of manufactures that are based in Tokyo or Beijing.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "manufactory_1",
            "query": "SELECT count( * ) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing'",
            "question": "How many manufacturers have headquarters in either Tokyo or Beijing?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "allergy_1",
            "query": "SELECT count( * ) FROM Student WHERE city_code = 'HKG' OR city_code = 'CHI'",
            "question": "Give the number of students living in either HKG or CHI.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "store_1",
            "query": "SELECT sum( total ) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL'",
            "question": "List total amount of  invoice from Chicago, IL.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "game_1",
            "query": "SELECT sum( gamesplayed ) FROM Sportsinfo WHERE sportname = 'Football' AND onscholarship = 'Y'",
            "question": "What is the total number of all football games played by scholarship students?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "game_1",
            "query": "SELECT sum( gamesplayed ) FROM Sportsinfo WHERE sportname = 'Football' AND onscholarship = 'Y'",
            "question": "How many games are played for all football games by students on scholarship?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'",
            "question": "How many professors who has a either Ph.D. or MA degree?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM All_documents WHERE document_type_code = 'CV' OR document_type_code = 'BK'",
            "question": "Show the number of documents with document type code CV or BK.",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies WHERE Industry = 'Banking' OR Industry = 'Conglomerate'",
            "question": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "company_office",
            "query": "SELECT count( * ) FROM Companies WHERE Industry = 'Banking' OR Industry = 'Conglomerate'",
            "question": "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "cre_Doc_Tracking_DB",
            "query": "SELECT count( * ) FROM All_documents WHERE document_type_code = 'CV' OR document_type_code = 'BK'",
            "question": "How many documents have document type code CV or BK?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "college_1",
            "query": "SELECT count( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'",
            "question": "How many professors attained either Ph.D. or Masters degrees?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "store_1",
            "query": "SELECT sum( total ) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL'",
            "question": "What are the total amount of money in the invoices billed from Chicago, Illinois?",
            "ted": 0.03571428571428571
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms WHERE bedType = 'King' OR bedType = 'Queen'",
            "question": "What are the names of rooms that have either king or queen bed?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT roomName FROM Rooms WHERE bedType = 'King' OR bedType = 'Queen'",
            "question": "List the name of rooms with king or queen bed.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_latest_logon FROM Students WHERE family_name = 'Jaskolski' OR family_name = 'Langosh'",
            "question": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "e_learning",
            "query": "SELECT date_of_latest_logon FROM Students WHERE family_name = 'Jaskolski' OR family_name = 'Langosh'",
            "question": "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER = 'CCTV' OR OWNER = 'HBS'",
            "question": "List the names of all the channels owned by either CCTV or HBS",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "program_share",
            "query": "SELECT name FROM channel WHERE OWNER = 'CCTV' OR OWNER = 'HBS'",
            "question": "What are the names of the channels owned by CCTV or HBS?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
            "question": "What are the names of all airports in Cuba or Argentina?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "performance_attendance",
            "query": "SELECT Attendance FROM performance WHERE LOCATION = 'TD Garden' OR LOCATION = 'Bell Centre'",
            "question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "solvency_ii",
            "query": "SELECT Product_Price FROM Products WHERE Product_Name = 'Dining' OR Product_Name = 'Trading Policy'",
            "question": "Show the prices of the products named \"Dining\" or \"Trading Policy\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "decoration_competition",
            "query": "SELECT Name FROM member WHERE Country = 'United States' OR Country = 'Canada'",
            "question": "Show the names of members whose country is \"United States\" or \"Canada\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_4",
            "query": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
            "question": "Find the name of the airports located in Cuba or Argentina.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Project_Staff WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54'",
            "question": "How many project members were leaders or started working before '1989-04-24 23:51:54'?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM circuits WHERE country = 'UK' OR country = 'Malaysia'",
            "question": "What are the names of all the circuits that are in the UK or Malaysia?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "riding_club",
            "query": "SELECT Sponsor_name FROM player WHERE Residence = 'Brandon' OR Residence = 'Birtle'",
            "question": "Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor'",
            "question": "How many female Professors do we have?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor'",
            "question": "Count the number of female Professors we have.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty WHERE Rank = 'Professor' AND building = 'NEB'",
            "question": "How many Professors are in building NEB?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "activity_1",
            "query": "SELECT count( * ) FROM Faculty WHERE Rank = 'Professor' AND building = 'NEB'",
            "question": "Count the number of Professors who have office in building NEB.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT POSITION FROM match_season WHERE College = 'UCLA' OR College = 'Duke'",
            "question": "What are the different positions of players from UCLA or Duke colleges?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "match_season",
            "query": "SELECT DISTINCT POSITION FROM match_season WHERE College = 'UCLA' OR College = 'Duke'",
            "question": "Show the distinct position of players from college UCLA or Duke.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "formula_1",
            "query": "SELECT name FROM circuits WHERE country = 'UK' OR country = 'Malaysia'",
            "question": "What are the names of circuits that belong to UK or Malaysia?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations WHERE FirstName = 'ROY' AND LastName = 'SWEAZY'",
            "question": "How many times does ROY SWEAZY has reserved a room.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT COUNT( * ) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL'",
            "question": "How many invoices were billed from Chicago, IL?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "store_1",
            "query": "SELECT COUNT( * ) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL'",
            "question": "List the number of invoices from Chicago, IL.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "tracking_grants_for_research",
            "query": "SELECT count( * ) FROM Project_Staff WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54'",
            "question": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE College = 'Florida' OR College = 'Temple'",
            "question": "Show the names of authors from college \"Florida\" or \"Temple\"",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "election_representative",
            "query": "SELECT Lifespan FROM representative WHERE State = 'New York' OR State = 'Indiana'",
            "question": "What are the life spans of representatives from New York state or Indiana state?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality = 'United States' OR Nationality = 'United Kingdom'",
            "question": "What are the names of the ships  that are from either the US or the UK?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_mission",
            "query": "SELECT Name FROM ship WHERE Nationality = 'United States' OR Nationality = 'United Kingdom'",
            "question": "Show the name of ships whose nationality is either United States or United Kingdom.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "inn_1",
            "query": "SELECT count( * ) FROM Reservations WHERE FirstName = 'ROY' AND LastName = 'SWEAZY'",
            "question": "Find the number of times ROY SWEAZY has reserved a room.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "workshop_paper",
            "query": "SELECT Author FROM submission WHERE College = 'Florida' OR College = 'Temple'",
            "question": "Which authors with submissions are from college \"Florida\" or \"Temple\"?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "company_employee",
            "query": "SELECT Name FROM company WHERE Industry = 'Banking' OR Industry = 'Retailing'",
            "question": "Show the names of companies in the banking or retailing industry?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "book_2",
            "query": "SELECT Price FROM publication WHERE Publisher = 'Person' OR Publisher = 'Wiley'",
            "question": "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT TIME FROM elimination WHERE Eliminated_By = 'Punk' OR Eliminated_By = 'Orton'",
            "question": "Show the times of elimination by \"Punk\" or \"Orton\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wrestler",
            "query": "SELECT TIME FROM elimination WHERE Eliminated_By = 'Punk' OR Eliminated_By = 'Orton'",
            "question": "What are the times of elimination for any instances in which the elimination was done by Punk or Orton?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE genre_is = 'modern' OR languages = 'english'",
            "question": "Find the names of songs whose genre is modern or language is English.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT avg( price ) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
            "question": "What is the average price for flights from Los Angeles to Honolulu.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "architecture",
            "query": "SELECT LOCATION FROM bridge WHERE name = 'Kolob Arch' OR name = 'Rainbow Bridge'",
            "question": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical WHERE Award = 'Tony Award' OR Award = 'Cleavant Derricks'",
            "question": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "musical",
            "query": "SELECT Nominee FROM musical WHERE Award = 'Tony Award' OR Award = 'Cleavant Derricks'",
            "question": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "music_1",
            "query": "SELECT song_name FROM song WHERE genre_is = 'modern' OR languages = 'english'",
            "question": "What are the names of the songs that are modern or sung in English?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "flight_1",
            "query": "SELECT avg( price ) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
            "question": "What is the average price for flights from LA to Honolulu?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain WHERE rank = 'Midshipman' OR rank = 'Lieutenant'",
            "question": "What are the names of captains that have either the rank Midshipman or Lieutenant?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "news_report",
            "query": "SELECT Name FROM journalist WHERE Nationality = 'England' OR Nationality = 'Wales'",
            "question": "Show the names of journalists from \"England\" or \"Wales\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "phone_market",
            "query": "SELECT Name FROM phone WHERE Carrier = 'Sprint' OR Carrier = 'TMobile'",
            "question": "Show the names of phones with carrier either \"Sprint\" or \"TMobile\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "ship_1",
            "query": "SELECT name FROM captain WHERE rank = 'Midshipman' OR rank = 'Lieutenant'",
            "question": "Find the name of captains whose rank are either Midshipman or Lieutenant.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "pilot_record",
            "query": "SELECT Pilot_name FROM pilot WHERE Team = 'Bradley' OR Team = 'Fordham'",
            "question": "Show the names of pilots from team \"Bradley\" or \"Fordham\".",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R'",
            "question": "Count the number of players who were born in USA and have bats information 'R'.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT count( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R'",
            "question": "How many players born in USA are right-handed batters? That is, have the batter value 'R'.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "coffee_shop",
            "query": "SELECT name FROM member WHERE address = 'Harford' OR address = 'Waterbury'",
            "question": "Give me the names of members whose address is in Harford or Waterbury.",
            "ted": 0.07142857142857142
        }
    ],
    "SELECT avg( LifeExpectancy ) FROM country WHERE Name NOT IN ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chuvash' AND T2.IsOfficial = 'T' )": [],
    "SELECT T1.Name , T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'Mortlock' ORDER BY T1.Population DESC LIMIT 1": [],
    "SELECT Name FROM country WHERE Continent = 'Europe' AND population < ( SELECT max( population ) FROM country WHERE Continent = 'Asia' )": [
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE job = 'student' AND age = ( SELECT max( age ) FROM person WHERE job = 'student' )",
            "question": "What is the name of the oldest student?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = ( SELECT max( YEAR ) FROM PersonFriend WHERE name = 'Zach' )",
            "question": "Which friend of Zach has the longest-lasting friendship?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = ( SELECT max( YEAR ) FROM PersonFriend WHERE name = 'Zach' )",
            "question": "Who is the friend of Zach with longest year relationship?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE job = 'student' AND age = ( SELECT max( age ) FROM person WHERE job = 'student' )",
            "question": "Who is the oldest person whose job is student?",
            "ted": 0.023809523809523808
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM PersonFriend WHERE friend = 'Alice' AND YEAR = ( SELECT min( YEAR ) FROM PersonFriend WHERE friend = 'Alice' )",
            "question": "What are the names of all people who are friends with Alice for the shortest amount of time?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE gender = 'male' AND age = ( SELECT min( age ) FROM person WHERE gender = 'male' )",
            "question": "Who is the youngest male?",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM PersonFriend WHERE friend = 'Alice' AND YEAR = ( SELECT min( YEAR ) FROM PersonFriend WHERE friend = 'Alice' )",
            "question": "Find the name of persons who are friends with Alice for the shortest years.",
            "ted": 0.047619047619047616
        },
        {
            "db_id": "network_2",
            "query": "SELECT name FROM Person WHERE gender = 'male' AND age = ( SELECT min( age ) FROM person WHERE gender = 'male' )",
            "question": "What is the name of the youngest male?",
            "ted": 0.047619047619047616
        }
    ],
    "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'North America' GROUP BY T2.Language ORDER BY COUNT( * ) DESC LIMIT 1": [
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the airport that is the destination of the most number of routes that start in China?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = 'Marianne' GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which vocal type has the band mate with first name \"Marianne\" played the most?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE lastname = 'Heilo' GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the type of vocals that the band member with the last name \"Heilo\" played the most?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the busiest destination airport that runs most number of routes in China.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE lastname = 'Heilo' GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which vocal type has the band mate with last name \"Heilo\" played the most?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = 'Marianne' GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the vocal type of the band mate whose first name is \"Marianne\" played the most?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE stageposition = 'back' GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the last name of the musicians who has played back position the most?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE stageposition = 'back' GROUP BY lastname ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the last name of the musician that has been at the back position the most?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = 'White' GROUP BY T2.Winery ORDER BY count( * ) DESC LIMIT 3",
            "question": "Which 3 wineries produce the most wines made from white grapes?",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = 'Solveig' GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "What are the types of vocals that the band member with the first name \"Solveig\" played the most?",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = 'White' GROUP BY T2.Winery ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the top 3 wineries with the greatest number of wines made of white color grapes.",
            "ted": 0.0
        },
        {
            "db_id": "music_2",
            "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = 'Solveig' GROUP BY TYPE ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which vocal type has the band mate with first name \"Solveig\" played the most?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of the airport with the most number of routes that start in China?",
            "ted": 0.0
        },
        {
            "db_id": "flight_4",
            "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the busiest source airport that runs most number of routes in China.",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'bangla' GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "What are the top 3 artists with the largest number of songs in the language Bangla?",
            "ted": 0.0
        },
        {
            "db_id": "music_1",
            "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'bangla' GROUP BY T2.artist_name ORDER BY count( * ) DESC LIMIT 3",
            "question": "Find the top 3 artists who have the largest number of songs works whose language is Bangla.",
            "ted": 0.0
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING T2.year < 2010 ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the area of the appelation that produces the highest number of wines before the year of 2010?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the county where produces the most number of wines with score higher than 90.",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING T2.year < 2010 ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the area for the appelation which produced the most wines prior to 2010?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "wine_1",
            "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the county that produces the most wines scoring higher than 90?",
            "ted": 0.07142857142857142
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the enzyme that can interact with the most medicines as an activator?",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the name of department where has the largest number of professors with a Ph.D. degree?",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "college_1",
            "query": "SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count( * ) DESC LIMIT 1",
            "question": "Which department has the most professors with a Ph.D.?",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "medicine_enzyme_interaction",
            "query": "SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count( * ) DESC LIMIT 1",
            "question": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?",
            "ted": 0.08695652173913043
        },
        {
            "db_id": "behavior_monitoring",
            "query": "SELECT T1.teacher_id , T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.detention_type_code = 'AFTER' GROUP BY T1.teacher_id ORDER BY count( * ) DESC LIMIT 1",
            "question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?",
            "ted": 0.08695652173913043
        }
    ],
    "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Kiribati' ORDER BY Percentage DESC LIMIT 1": [
        {
            "db_id": "baseball_1",
            "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1",
            "question": "Which park did the most people attend in 2008?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "phone_1",
            "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1",
            "question": "List the name of the phone model launched in year 2002 and with the highest RAM size.",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1",
            "question": "Which park had most attendances in 2008?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "csu_1",
            "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty DESC LIMIT 1",
            "question": "Which campus has the most faculties in year 2003?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "csu_1",
            "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty DESC LIMIT 1",
            "question": "What campus has the most faculties in 2003?",
            "ted": 0.05555555555555555
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1",
            "question": "Find the team that attended the least number of home games in 1980.",
            "ted": 0.08333333333333333
        },
        {
            "db_id": "baseball_1",
            "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1",
            "question": "Which team had the least number of attendances in home games in 1980?",
            "ted": 0.08333333333333333
        }
    ]
}